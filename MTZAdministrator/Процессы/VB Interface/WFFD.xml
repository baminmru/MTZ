<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Описание функции процесса"/><AttributeHolder Name="Name" Value="WFFDGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Описание функции процесса&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Описание функции процесса)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;WFFD:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Описание функции процесса&quot; 
  end if
end if
if OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;WFFD:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Описание функции процесса&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;WFFD_SHORTCUT&quot; Then
    Set f = New frmWFFD_ShortCut_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;WFFD_RESULTS&quot; Then
    Set f = New frmWFFD_Results_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;WFFD_DOCSTOPS&quot; Then
    Set f = New frmWFFD_DOCSTOPS_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;WFFD_CUSTOMPARAM&quot; Then
    Set f = New frmWFFD_CustomParam_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;WFFD_DOER&quot; Then
    Set f = New frmWFFD_Doer_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;WFFD_COMMON&quot; Then
    Set f = New frmWFFD_common_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;WFFD_ATTR1&quot; Then
    Set f = New frmWFFD_ATTR1_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;WFFD_DOCS&quot; Then
    Set f = New frmWFFD_DOCS_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_ShortCut" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFolder"/><Properties Name="Caption" PropValue="Папка:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFolder"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Папка"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFolder"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Папка"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocName"/><Properties Name="Caption" PropValue="Название документа:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название документа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartMode"/><Properties Name="Caption" PropValue="Режим запуска:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStartMode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Режим запуска"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtFolder_Change()
  Changing

end sub
private sub cmdFolder_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Folder&quot;, id, brief) Then
          txtFolder.Tag = Left(id, 38)
          txtFolder = brief
        End If
end sub
private sub cmdFolder_MenuClick(ByVal sCaption As String)
          txtFolder.Tag = &quot;&quot;
          txtFolder = &quot;&quot;
End sub
private sub txtDocName_Change()
  Changing

end sub
private sub txtStartMode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtFolder.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtDocName.text)
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Folder Is Nothing Then
  txtFolder.Tag = item.Folder.id
  txtFolder = item.Folder.brief
else
  txtFolder.Tag = &quot;&quot; 
  txtFolder = &quot;&quot; 
End If
 LoadBtnPictures cmdFolder,cmdFolder.tag
  cmdFolder.RemoveAllMenu
txtDocName = item.DocName
txtStartMode = item.StartMode
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtFolder.Tag &lt;&gt; &quot;&quot; Then
  Set item.Folder = Item.Application.FindRowObject(&quot;Folder&quot;,txtFolder.Tag)
Else
  Set item.Folder = Nothing
End If
item.DocName = txtDocName
item.StartMode = txtStartMode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_Results" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Наименование:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Наименование"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblResultWeight"/><Properties Name="Caption" PropValue="Весовой коэффицент:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtResultWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Весовой коэффицент"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtResultWeight_Validate(cancel as boolean)
if txtResultWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtResultWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtResultWeight.text) &lt; -922337203685477.5808 or Val(txtResultWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtResultWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtResultWeight_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtName = item.Name
txtResultWeight = item.ResultWeight
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.ResultWeight = cdbl(txtResultWeight)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_DOCSTOPS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDocument"/><Properties Name="Caption" PropValue="Документ процеса:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessDocument"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Документ процеса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessDocument"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Документ процеса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocStateName"/><Properties Name="Caption" PropValue="Название состояния:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocStateName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название состояния"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtProcessDocument_Change()
  Changing

end sub
private sub cmdProcessDocument_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_Doc&quot;, id, brief) Then
          txtProcessDocument.Tag = Left(id, 38)
          txtProcessDocument = brief
        End If
end sub
private sub cmdProcessDocument_MenuClick(ByVal sCaption As String)
          txtProcessDocument.Tag = &quot;&quot;
          txtProcessDocument = &quot;&quot;
End sub
private sub txtDocStateName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtProcessDocument.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtDocStateName.text)
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.ProcessDocument Is Nothing Then
  txtProcessDocument.Tag = item.ProcessDocument.id
  txtProcessDocument = item.ProcessDocument.brief
else
  txtProcessDocument.Tag = &quot;&quot; 
  txtProcessDocument = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessDocument,cmdProcessDocument.tag
  cmdProcessDocument.RemoveAllMenu
txtDocStateName = item.DocStateName
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtProcessDocument.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessDocument = Item.Application.FindRowObject(&quot;WFDef_Doc&quot;,txtProcessDocument.Tag)
Else
  Set item.ProcessDocument = Nothing
End If
item.DocStateName = txtDocStateName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_CustomParam" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblParamName"/><Properties Name="Caption" PropValue="Имя параметра:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtParamName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Имя параметра"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Value"/><Properties Name="Caption" PropValue="Значение:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Value"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Значение"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtParamName_Change()
  Changing

end sub
private sub txtthe_Value_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtParamName.text)
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtParamName = item.ParamName
txtthe_Value = item.the_Value
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.ParamName = txtParamName
item.the_Value = txtthe_Value
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_Doer" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDoerGroup"/><Properties Name="Caption" PropValue="Группа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDoerGroup"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Группа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDoerGroup"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Группа"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDoerGroup_Change()
  Changing

end sub
private sub cmdDoerGroup_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Groups&quot;, id, brief) Then
          txtDoerGroup.Tag = Left(id, 38)
          txtDoerGroup = brief
        End If
end sub
private sub cmdDoerGroup_MenuClick(ByVal sCaption As String)
          txtDoerGroup.Tag = &quot;&quot;
          txtDoerGroup = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtDoerGroup.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.DoerGroup Is Nothing Then
  txtDoerGroup.Tag = item.DoerGroup.id
  txtDoerGroup = item.DoerGroup.brief
else
  txtDoerGroup.Tag = &quot;&quot; 
  txtDoerGroup = &quot;&quot; 
End If
 LoadBtnPictures cmdDoerGroup,cmdDoerGroup.tag
  cmdDoerGroup.RemoveAllMenu
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtDoerGroup.Tag &lt;&gt; &quot;&quot; Then
  Set item.DoerGroup = Item.Application.FindRowObject(&quot;Groups&quot;,txtDoerGroup.Tag)
Else
  Set item.DoerGroup = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_common" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStepType"/><Properties Name="Caption" PropValue="Тип шага:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStepType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип шага"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdStepType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип шага"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReuseStep"/><Properties Name="Caption" PropValue="Использовать незавершенный шаг:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReuseStep"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Использовать незавершенный шаг"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoCheckState"/><Properties Name="Caption" PropValue="Проверять состояние:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAutoCheckState"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Проверять состояние"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReStartInterval"/><Properties Name="Caption" PropValue="Интервал перезапуска (мин.):"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReStartInterval"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Интервал перезапуска (мин.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStateCeckInterval"/><Properties Name="Caption" PropValue="Инетрвал проверки состояния (мин.):"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStateCeckInterval"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Инетрвал проверки состояния (мин.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinPriority"/><Properties Name="Caption" PropValue="Минимальный приоритет:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtMinPriority"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальный приоритет"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMaxPriority"/><Properties Name="Caption" PropValue="Максимальный приоритет:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtMaxPriority"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Максимальный приоритет"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIncPriority"/><Properties Name="Caption" PropValue="Прирост приоритета:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtIncPriority"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Прирост приоритета"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGrowPriorityInterval"/><Properties Name="Caption" PropValue="Интервал роста приоритета (мин.):"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtGrowPriorityInterval"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Интервал роста приоритета (мин.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMaxPassNumber"/><Properties Name="Caption" PropValue="Максимальный номер прохода:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtMaxPassNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Максимальный номер прохода"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTaskDescription"/><Properties Name="Caption" PropValue="Описание задания:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTaskDescription"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Описание задания"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAttachment"/><Properties Name="Caption" PropValue="Вложение:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAttachment"/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="BorderStyle" PropValue="1"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAttachment"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="fileopen.ico"/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Вложение"/></ControlData><ControlData Name="Dialog" ControlIndex="0" PROGID="MSComDlg.CommonDialog"><Properties Name="Name" PropValue="Dialog"/><Properties Name="Top" PropValue="3645"/><Properties Name="Left" PropValue="3450"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWorkTime"/><Properties Name="Caption" PropValue="Срок исполнения (ч.):"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWorkTime"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Срок исполнения (ч.)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIntegrationData1"/><Properties Name="Caption" PropValue="Данные для интеграции 1:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtIntegrationData1"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="120"/><Properties Name="ToolTipText" PropValue="Данные для интеграции 1"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIntegrationData2"/><Properties Name="Caption" PropValue="Данные для интеграции 2:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtIntegrationData2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="120"/><Properties Name="ToolTipText" PropValue="Данные для интеграции 2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtStepType_Change()
  Changing

end sub
private sub cmdStepType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDic_func&quot;, id, brief) Then
          txtStepType.Tag = Left(id, 38)
          txtStepType = brief
        End If
end sub
private sub cmdStepType_MenuClick(ByVal sCaption As String)
          txtStepType.Tag = &quot;&quot;
          txtStepType = &quot;&quot;
End sub
private sub cmbReuseStep_Click()
  on error resume next
  Changing

end sub
private sub cmbAutoCheckState_Click()
  on error resume next
  Changing

end sub
private sub txtReStartInterval_Validate(cancel as boolean)
if txtReStartInterval.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtReStartInterval.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtReStartInterval.text) &lt;&gt;clng(Val(txtReStartInterval.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtReStartInterval_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtReStartInterval_Change()
  Changing

end sub
private sub txtStateCeckInterval_Validate(cancel as boolean)
if txtStateCeckInterval.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtStateCeckInterval.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtStateCeckInterval.text) &lt;&gt;clng(Val(txtStateCeckInterval.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtStateCeckInterval_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtStateCeckInterval_Change()
  Changing

end sub
private sub txtMinPriority_Validate(cancel as boolean)
if txtMinPriority.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMinPriority.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtMinPriority.text) &lt;&gt;clng(Val(txtMinPriority.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtMinPriority_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMinPriority_Change()
  Changing

end sub
private sub txtMaxPriority_Validate(cancel as boolean)
if txtMaxPriority.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMaxPriority.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtMaxPriority.text) &lt;&gt;clng(Val(txtMaxPriority.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtMaxPriority_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMaxPriority_Change()
  Changing

end sub
private sub txtIncPriority_Validate(cancel as boolean)
if txtIncPriority.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtIncPriority.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtIncPriority.text) &lt;&gt;clng(Val(txtIncPriority.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtIncPriority_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtIncPriority_Change()
  Changing

end sub
private sub txtGrowPriorityInterval_Validate(cancel as boolean)
if txtGrowPriorityInterval.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtGrowPriorityInterval.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtGrowPriorityInterval.text) &lt;&gt;clng(Val(txtGrowPriorityInterval.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtGrowPriorityInterval_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtGrowPriorityInterval_Change()
  Changing

end sub
private sub txtMaxPassNumber_Validate(cancel as boolean)
if txtMaxPassNumber.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMaxPassNumber.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtMaxPassNumber.text) &lt;&gt;clng(Val(txtMaxPassNumber.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtMaxPassNumber_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMaxPassNumber_Change()
  Changing

end sub
private sub txtTaskDescription_Change()
  Changing

end sub
Private Sub cmdAttachment_Click()
  on error resume next
  if item.Attachment_ext &lt;&gt;&quot;&quot; and not isnull(item.Attachment)  then
    cmdAttachment_MenuClick &quot;Открыть&quot;
  else
    cmdAttachment_MenuClick &quot;Выбрать&quot;
  End if
End Sub

Private Sub cmdAttachment_MenuClick(ByVal sCaption As String)
  If sCaption = &quot;Выбрать&quot; Then
   Dialog.Flags = cdlOFNFileMustExist + cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowOpen
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   txtAttachment = Dialog.FileName
   item.Attachment = FileToArray(Dialog.FileName)
   item.Attachment_ext = GetFileExtension2(Dialog.FileName)
   Changing

  End If
  If sCaption = &quot;Очистить&quot; Then
   txtAttachment = &quot;&quot; 
   item.Attachment = null
   item.Attachment_ext = &quot;&quot;
   Changing
  End If
  If sCaption = &quot;Открыть&quot; Then
    item.Application.manager.StoreTempFileData DoOpenFile( item.Attachment, item.Attachment_ext),item.partname,item.id
  End If
  If sCaption = &quot;Сохранить&quot; Then
   Dialog.Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist
   Dialog.Filter = &quot;(*.*)|*.*&quot;
   Dialog.DialogTitle = &quot;Файл&quot;
   Dialog.CancelError = True
   On Error Resume Next
   Dialog.ShowSave
   If (Err.Number &gt; 0) Then
    Err.Clear
    Exit Sub
   End If
   ArrayToFile Dialog.FileName, item.Attachment
  End If
End Sub
private sub txtWorkTime_Validate(cancel as boolean)
if txtWorkTime.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWorkTime.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  elseif Val(txtWorkTime.text) &lt; -922337203685477.5808 or Val(txtWorkTime.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
  end if
end if
end sub
Private Sub txtWorkTime_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWorkTime_Change()
  Changing

end sub
private sub txtIntegrationData1_Change()
  Changing

end sub
private sub txtIntegrationData2_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = txtStepType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbReuseStep.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbAutoCheckState.ListIndex &gt;=0)
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtName = item.Name
If Not item.StepType Is Nothing Then
  txtStepType.Tag = item.StepType.id
  txtStepType = item.StepType.brief
else
  txtStepType.Tag = &quot;&quot; 
  txtStepType = &quot;&quot; 
End If
 LoadBtnPictures cmdStepType,cmdStepType.tag
  cmdStepType.RemoveAllMenu
cmbReuseStep.Clear
cmbReuseStep.additem &quot;Да&quot;
cmbReuseStep.itemdata(cmbReuseStep.newindex)= -1
cmbReuseStep.additem &quot;Нет&quot;
cmbReuseStep.itemdata(cmbReuseStep.newindex)= 0
 For iii = 0 To cmbReuseStep.ListCount-1
  If Item.ReuseStep = cmbReuseStep.ItemData(iii) Then
   cmbReuseStep.ListIndex = iii
   Exit For
  End If
 Next
cmbAutoCheckState.Clear
cmbAutoCheckState.additem &quot;Да&quot;
cmbAutoCheckState.itemdata(cmbAutoCheckState.newindex)= -1
cmbAutoCheckState.additem &quot;Нет&quot;
cmbAutoCheckState.itemdata(cmbAutoCheckState.newindex)= 0
 For iii = 0 To cmbAutoCheckState.ListCount-1
  If Item.AutoCheckState = cmbAutoCheckState.ItemData(iii) Then
   cmbAutoCheckState.ListIndex = iii
   Exit For
  End If
 Next
txtReStartInterval = item.ReStartInterval
txtStateCeckInterval = item.StateCeckInterval
txtMinPriority = item.MinPriority
txtMaxPriority = item.MaxPriority
txtIncPriority = item.IncPriority
txtGrowPriorityInterval = item.GrowPriorityInterval
txtMaxPassNumber = item.MaxPassNumber
txtTaskDescription = item.TaskDescription
 if  lenb(item.Attachment)&gt;0 then 
   txtAttachment=&quot;Данные (&quot; &amp; item.Attachment_ext &amp; &quot;)&quot;
 else 
   txtAttachment=&quot;&quot;
 end if 
 LoadBtnPictures cmdAttachment,cmdAttachment.tag
 cmdAttachment.RemoveAllMenu
 cmdAttachment.AddMenu &quot;Выбрать&quot;
 cmdAttachment.AddMenu &quot;Сохранить&quot;
 cmdAttachment.AddMenu &quot;Открыть&quot;
 cmdAttachment.AddMenu &quot;Очистить&quot;
txtWorkTime = item.WorkTime
txtIntegrationData1 = item.IntegrationData1
txtIntegrationData2 = item.IntegrationData2
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
If txtStepType.Tag &lt;&gt; &quot;&quot; Then
  Set item.StepType = Item.Application.FindRowObject(&quot;WFDic_func&quot;,txtStepType.Tag)
Else
  Set item.StepType = Nothing
End If
 if cmbReuseStep.listindex&gt;=0 then
   item.ReuseStep = cmbReuseStep.itemdata(cmbReuseStep.listindex)
 end if
 if cmbAutoCheckState.listindex&gt;=0 then
   item.AutoCheckState = cmbAutoCheckState.itemdata(cmbAutoCheckState.listindex)
 end if
item.ReStartInterval = cdbl(txtReStartInterval)
item.StateCeckInterval = cdbl(txtStateCeckInterval)
item.MinPriority = cdbl(txtMinPriority)
item.MaxPriority = cdbl(txtMaxPriority)
item.IncPriority = cdbl(txtIncPriority)
item.GrowPriorityInterval = cdbl(txtGrowPriorityInterval)
item.MaxPassNumber = cdbl(txtMaxPassNumber)
item.TaskDescription = txtTaskDescription
 ' SEE cmdAttachment_CLICK
item.WorkTime = cdbl(txtWorkTime)
item.IntegrationData1 = txtIntegrationData1
item.IntegrationData2 = txtIntegrationData2
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_ATTR1" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblObjectType"/><Properties Name="Caption" PropValue="Тип документа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtObjectType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип документа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdObjectType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип документа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDocument"/><Properties Name="Caption" PropValue="Документ процеса:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessDocument"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Документ процеса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessDocument"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Документ процеса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSubProcDocument"/><Properties Name="Caption" PropValue="Название документа в подпроцессе:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSubProcDocument"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название документа в подпроцессе"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocumentPart"/><Properties Name="Caption" PropValue="Раздел документа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocumentPart"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Раздел документа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDocumentPart"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Раздел документа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartField"/><Properties Name="Caption" PropValue="Поле в разделе:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartField"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поле в разделе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPartField"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поле в разделе"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFolder"/><Properties Name="Caption" PropValue="Папка в каталоге:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFolder"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Папка в каталоге"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFolder"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Папка в каталоге"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessParameter"/><Properties Name="Caption" PropValue="Переменная 1:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessParameter"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Переменная 1"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessParameter"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Переменная 1"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessParameter2"/><Properties Name="Caption" PropValue="Переменная 2:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessParameter2"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Переменная 2"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessParameter2"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Переменная 2"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Value"/><Properties Name="Caption" PropValue="Значение:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Value"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Значение"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblValue2"/><Properties Name="Caption" PropValue="Значение2:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtValue2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Значение2"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPath"/><Properties Name="Caption" PropValue="Директория:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPath"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Директория"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPath2"/><Properties Name="Caption" PropValue="Директория для размещения:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPath2"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Директория для размещения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFlag"/><Properties Name="Caption" PropValue="Флаг:"/><Properties Name="Top" PropValue="3990"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbFlag"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4320"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Флаг"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFlag2"/><Properties Name="Caption" PropValue="Флаг 2:"/><Properties Name="Top" PropValue="4695"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbFlag2"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5025"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Флаг 2"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSubProcessType"/><Properties Name="Caption" PropValue="Тип подпроцесса:"/><Properties Name="Top" PropValue="5400"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSubProcessType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5730"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип подпроцесса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSubProcessType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5730"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип подпроцесса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessParameter3"/><Properties Name="Caption" PropValue="Переменная 3:"/><Properties Name="Top" PropValue="6105"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessParameter3"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="6435"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Переменная 3"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessParameter3"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6435"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Переменная 3"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessParameter4"/><Properties Name="Caption" PropValue="Переменная 4:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessParameter4"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Переменная 4"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessParameter4"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Переменная 4"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocState1"/><Properties Name="Caption" PropValue="Состояние 1:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocState1"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Состояние 1"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDocState1"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Состояние 1"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocState2"/><Properties Name="Caption" PropValue="Состояние 2:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocState2"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="6600"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Состояние 2"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDocState2"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="9150"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Состояние 2"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtObjectType_Change()
  Changing

end sub
private sub cmdObjectType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;OBJECTTYPE&quot;, id, brief) Then
          txtObjectType.Tag = Left(id, 38)
          txtObjectType = brief
        End If
end sub
private sub cmdObjectType_MenuClick(ByVal sCaption As String)
          txtObjectType.Tag = &quot;&quot;
          txtObjectType = &quot;&quot;
End sub
private sub txtProcessDocument_Change()
  Changing

end sub
private sub cmdProcessDocument_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_Doc&quot;, id, brief) Then
          txtProcessDocument.Tag = Left(id, 38)
          txtProcessDocument = brief
        End If
end sub
private sub cmdProcessDocument_MenuClick(ByVal sCaption As String)
          txtProcessDocument.Tag = &quot;&quot;
          txtProcessDocument = &quot;&quot;
End sub
private sub txtSubProcDocument_Change()
  Changing

end sub
private sub txtDocumentPart_Change()
  Changing

end sub
private sub cmdDocumentPart_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PART&quot;, id, brief) Then
          txtDocumentPart.Tag = Left(id, 38)
          txtDocumentPart = brief
        End If
end sub
private sub cmdDocumentPart_MenuClick(ByVal sCaption As String)
          txtDocumentPart.Tag = &quot;&quot;
          txtDocumentPart = &quot;&quot;
End sub
private sub txtPartField_Change()
  Changing

end sub
private sub cmdPartField_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;FIELD&quot;, id, brief) Then
          txtPartField.Tag = Left(id, 38)
          txtPartField = brief
        End If
end sub
private sub cmdPartField_MenuClick(ByVal sCaption As String)
          txtPartField.Tag = &quot;&quot;
          txtPartField = &quot;&quot;
End sub
private sub txtFolder_Change()
  Changing

end sub
private sub cmdFolder_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;Folder&quot;, id, brief) Then
          txtFolder.Tag = Left(id, 38)
          txtFolder = brief
        End If
end sub
private sub cmdFolder_MenuClick(ByVal sCaption As String)
          txtFolder.Tag = &quot;&quot;
          txtFolder = &quot;&quot;
End sub
private sub txtProcessParameter_Change()
  Changing

end sub
private sub cmdProcessParameter_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_param&quot;, id, brief) Then
          txtProcessParameter.Tag = Left(id, 38)
          txtProcessParameter = brief
        End If
end sub
private sub cmdProcessParameter_MenuClick(ByVal sCaption As String)
          txtProcessParameter.Tag = &quot;&quot;
          txtProcessParameter = &quot;&quot;
End sub
private sub txtProcessParameter2_Change()
  Changing

end sub
private sub cmdProcessParameter2_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_param&quot;, id, brief) Then
          txtProcessParameter2.Tag = Left(id, 38)
          txtProcessParameter2 = brief
        End If
end sub
private sub cmdProcessParameter2_MenuClick(ByVal sCaption As String)
          txtProcessParameter2.Tag = &quot;&quot;
          txtProcessParameter2 = &quot;&quot;
End sub
private sub txtthe_Value_Change()
  Changing

end sub
private sub txtValue2_Change()
  Changing

end sub
private sub txtPath_Change()
  Changing

end sub
private sub txtPath2_Change()
  Changing

end sub
private sub cmbFlag_Click()
  on error resume next
  Changing

end sub
private sub cmbFlag2_Click()
  on error resume next
  Changing

end sub
private sub txtSubProcessType_Change()
  Changing

end sub
private sub cmdSubProcessType_CLick()
  on error resume next
     If txtSubProcessType.Tag =&quot;&quot; then
       cmdSubProcessType_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSubProcessType_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSubProcessType_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSubProcessType.Tag = &quot;&quot;
          txtSubProcessType = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSubProcessType.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSubProcessType.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSubProcessType.tag)
    obj.show &quot;&quot;, inst,true
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;WFDef&quot;)
        If OK Then
          txtSubProcessType.Tag = left(ID,38)
          txtSubProcessType = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        id =Createguid2
        Item.Application.Manager.NewInstance id,&quot;WFDef&quot;,&quot;Определение процесса &quot; &amp; Now 
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,true
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSubProcessType.Tag = obj.ID
              txtSubProcessType = obj.brief
          else
              txtSubProcessType.Tag = &quot;&quot;
              txtSubProcessType = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtProcessParameter3_Change()
  Changing

end sub
private sub cmdProcessParameter3_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_param&quot;, id, brief) Then
          txtProcessParameter3.Tag = Left(id, 38)
          txtProcessParameter3 = brief
        End If
end sub
private sub cmdProcessParameter3_MenuClick(ByVal sCaption As String)
          txtProcessParameter3.Tag = &quot;&quot;
          txtProcessParameter3 = &quot;&quot;
End sub
private sub txtProcessParameter4_Change()
  Changing

end sub
private sub cmdProcessParameter4_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_param&quot;, id, brief) Then
          txtProcessParameter4.Tag = Left(id, 38)
          txtProcessParameter4 = brief
        End If
end sub
private sub cmdProcessParameter4_MenuClick(ByVal sCaption As String)
          txtProcessParameter4.Tag = &quot;&quot;
          txtProcessParameter4 = &quot;&quot;
End sub
private sub txtDocState1_Change()
  Changing

end sub
private sub cmdDocState1_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;OBJSTATUS&quot;, id, brief) Then
          txtDocState1.Tag = Left(id, 38)
          txtDocState1 = brief
        End If
end sub
private sub cmdDocState1_MenuClick(ByVal sCaption As String)
          txtDocState1.Tag = &quot;&quot;
          txtDocState1 = &quot;&quot;
End sub
private sub txtDocState2_Change()
  Changing

end sub
private sub cmdDocState2_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;OBJSTATUS&quot;, id, brief) Then
          txtDocState2.Tag = Left(id, 38)
          txtDocState2 = brief
        End If
end sub
private sub cmdDocState2_MenuClick(ByVal sCaption As String)
          txtDocState2.Tag = &quot;&quot;
          txtDocState2 = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.ObjectType Is Nothing Then
  txtObjectType.Tag = item.ObjectType.id
  txtObjectType = item.ObjectType.brief
else
  txtObjectType.Tag = &quot;&quot; 
  txtObjectType = &quot;&quot; 
End If
 LoadBtnPictures cmdObjectType,cmdObjectType.tag
  cmdObjectType.RemoveAllMenu
  cmdObjectType.AddMenu &quot;Очистить&quot; 
If Not item.ProcessDocument Is Nothing Then
  txtProcessDocument.Tag = item.ProcessDocument.id
  txtProcessDocument = item.ProcessDocument.brief
else
  txtProcessDocument.Tag = &quot;&quot; 
  txtProcessDocument = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessDocument,cmdProcessDocument.tag
  cmdProcessDocument.RemoveAllMenu
  cmdProcessDocument.AddMenu &quot;Очистить&quot; 
txtSubProcDocument = item.SubProcDocument
If Not item.DocumentPart Is Nothing Then
  txtDocumentPart.Tag = item.DocumentPart.id
  txtDocumentPart = item.DocumentPart.brief
else
  txtDocumentPart.Tag = &quot;&quot; 
  txtDocumentPart = &quot;&quot; 
End If
 LoadBtnPictures cmdDocumentPart,cmdDocumentPart.tag
  cmdDocumentPart.RemoveAllMenu
  cmdDocumentPart.AddMenu &quot;Очистить&quot; 
If Not item.PartField Is Nothing Then
  txtPartField.Tag = item.PartField.id
  txtPartField = item.PartField.brief
else
  txtPartField.Tag = &quot;&quot; 
  txtPartField = &quot;&quot; 
End If
 LoadBtnPictures cmdPartField,cmdPartField.tag
  cmdPartField.RemoveAllMenu
  cmdPartField.AddMenu &quot;Очистить&quot; 
If Not item.Folder Is Nothing Then
  txtFolder.Tag = item.Folder.id
  txtFolder = item.Folder.brief
else
  txtFolder.Tag = &quot;&quot; 
  txtFolder = &quot;&quot; 
End If
 LoadBtnPictures cmdFolder,cmdFolder.tag
  cmdFolder.RemoveAllMenu
  cmdFolder.AddMenu &quot;Очистить&quot; 
If Not item.ProcessParameter Is Nothing Then
  txtProcessParameter.Tag = item.ProcessParameter.id
  txtProcessParameter = item.ProcessParameter.brief
else
  txtProcessParameter.Tag = &quot;&quot; 
  txtProcessParameter = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessParameter,cmdProcessParameter.tag
  cmdProcessParameter.RemoveAllMenu
  cmdProcessParameter.AddMenu &quot;Очистить&quot; 
If Not item.ProcessParameter2 Is Nothing Then
  txtProcessParameter2.Tag = item.ProcessParameter2.id
  txtProcessParameter2 = item.ProcessParameter2.brief
else
  txtProcessParameter2.Tag = &quot;&quot; 
  txtProcessParameter2 = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessParameter2,cmdProcessParameter2.tag
  cmdProcessParameter2.RemoveAllMenu
  cmdProcessParameter2.AddMenu &quot;Очистить&quot; 
txtthe_Value = item.the_Value
txtValue2 = item.Value2
txtPath = item.Path
txtPath2 = item.Path2
cmbFlag.Clear
cmbFlag.additem &quot;Да&quot;
cmbFlag.itemdata(cmbFlag.newindex)= -1
cmbFlag.additem &quot;Нет&quot;
cmbFlag.itemdata(cmbFlag.newindex)= 0
 For iii = 0 To cmbFlag.ListCount-1
  If Item.Flag = cmbFlag.ItemData(iii) Then
   cmbFlag.ListIndex = iii
   Exit For
  End If
 Next
cmbFlag2.Clear
cmbFlag2.additem &quot;Да&quot;
cmbFlag2.itemdata(cmbFlag2.newindex)= -1
cmbFlag2.additem &quot;Нет&quot;
cmbFlag2.itemdata(cmbFlag2.newindex)= 0
 For iii = 0 To cmbFlag2.ListCount-1
  If Item.Flag2 = cmbFlag2.ItemData(iii) Then
   cmbFlag2.ListIndex = iii
   Exit For
  End If
 Next
If Not item.SubProcessType Is Nothing Then
  txtSubProcessType.Tag = item.SubProcessType.id
  txtSubProcessType = item.SubProcessType.brief
else
  txtSubProcessType.Tag = &quot;&quot; 
  txtSubProcessType = &quot;&quot; 
End If
 LoadBtnPictures cmdSubProcessType,cmdSubProcessType.tag
  cmdSubProcessType.RemoveAllMenu
  cmdSubProcessType.AddMenu &quot;Очистить&quot; 
  cmdSubProcessType.AddMenu &quot;Открыть&quot; 
  cmdSubProcessType.AddMenu &quot;Создать&quot; 
  cmdSubProcessType.AddMenu &quot;Выбрать&quot; 
If Not item.ProcessParameter3 Is Nothing Then
  txtProcessParameter3.Tag = item.ProcessParameter3.id
  txtProcessParameter3 = item.ProcessParameter3.brief
else
  txtProcessParameter3.Tag = &quot;&quot; 
  txtProcessParameter3 = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessParameter3,cmdProcessParameter3.tag
  cmdProcessParameter3.RemoveAllMenu
  cmdProcessParameter3.AddMenu &quot;Очистить&quot; 
If Not item.ProcessParameter4 Is Nothing Then
  txtProcessParameter4.Tag = item.ProcessParameter4.id
  txtProcessParameter4 = item.ProcessParameter4.brief
else
  txtProcessParameter4.Tag = &quot;&quot; 
  txtProcessParameter4 = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessParameter4,cmdProcessParameter4.tag
  cmdProcessParameter4.RemoveAllMenu
  cmdProcessParameter4.AddMenu &quot;Очистить&quot; 
If Not item.DocState1 Is Nothing Then
  txtDocState1.Tag = item.DocState1.id
  txtDocState1 = item.DocState1.brief
else
  txtDocState1.Tag = &quot;&quot; 
  txtDocState1 = &quot;&quot; 
End If
 LoadBtnPictures cmdDocState1,cmdDocState1.tag
  cmdDocState1.RemoveAllMenu
  cmdDocState1.AddMenu &quot;Очистить&quot; 
If Not item.DocState2 Is Nothing Then
  txtDocState2.Tag = item.DocState2.id
  txtDocState2 = item.DocState2.brief
else
  txtDocState2.Tag = &quot;&quot; 
  txtDocState2 = &quot;&quot; 
End If
 LoadBtnPictures cmdDocState2,cmdDocState2.tag
  cmdDocState2.RemoveAllMenu
  cmdDocState2.AddMenu &quot;Очистить&quot; 
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtObjectType.Tag &lt;&gt; &quot;&quot; Then
  Set item.ObjectType = Item.Application.FindRowObject(&quot;OBJECTTYPE&quot;,txtObjectType.Tag)
Else
  Set item.ObjectType = Nothing
End If
If txtProcessDocument.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessDocument = Item.Application.FindRowObject(&quot;WFDef_Doc&quot;,txtProcessDocument.Tag)
Else
  Set item.ProcessDocument = Nothing
End If
item.SubProcDocument = txtSubProcDocument
If txtDocumentPart.Tag &lt;&gt; &quot;&quot; Then
  Set item.DocumentPart = Item.Application.FindRowObject(&quot;PART&quot;,txtDocumentPart.Tag)
Else
  Set item.DocumentPart = Nothing
End If
If txtPartField.Tag &lt;&gt; &quot;&quot; Then
  Set item.PartField = Item.Application.FindRowObject(&quot;FIELD&quot;,txtPartField.Tag)
Else
  Set item.PartField = Nothing
End If
If txtFolder.Tag &lt;&gt; &quot;&quot; Then
  Set item.Folder = Item.Application.FindRowObject(&quot;Folder&quot;,txtFolder.Tag)
Else
  Set item.Folder = Nothing
End If
If txtProcessParameter.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessParameter = Item.Application.FindRowObject(&quot;WFDef_param&quot;,txtProcessParameter.Tag)
Else
  Set item.ProcessParameter = Nothing
End If
If txtProcessParameter2.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessParameter2 = Item.Application.FindRowObject(&quot;WFDef_param&quot;,txtProcessParameter2.Tag)
Else
  Set item.ProcessParameter2 = Nothing
End If
item.the_Value = txtthe_Value
item.Value2 = txtValue2
item.Path = txtPath
item.Path2 = txtPath2
 if cmbFlag.listindex&gt;=0 then
   item.Flag = cmbFlag.itemdata(cmbFlag.listindex)
 end if
 if cmbFlag2.listindex&gt;=0 then
   item.Flag2 = cmbFlag2.itemdata(cmbFlag2.listindex)
 end if
If txtSubProcessType.Tag &lt;&gt; &quot;&quot; Then
  Set item.SubProcessType = Item.Application.Manager.GetInstanceObject(txtSubProcessType.Tag)
Else
  Set item.SubProcessType = Nothing
End If
If txtProcessParameter3.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessParameter3 = Item.Application.FindRowObject(&quot;WFDef_param&quot;,txtProcessParameter3.Tag)
Else
  Set item.ProcessParameter3 = Nothing
End If
If txtProcessParameter4.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessParameter4 = Item.Application.FindRowObject(&quot;WFDef_param&quot;,txtProcessParameter4.Tag)
Else
  Set item.ProcessParameter4 = Nothing
End If
If txtDocState1.Tag &lt;&gt; &quot;&quot; Then
  Set item.DocState1 = Item.Application.FindRowObject(&quot;OBJSTATUS&quot;,txtDocState1.Tag)
Else
  Set item.DocState1 = Nothing
End If
If txtDocState2.Tag &lt;&gt; &quot;&quot; Then
  Set item.DocState2 = Item.Application.FindRowObject(&quot;OBJSTATUS&quot;,txtDocState2.Tag)
Else
  Set item.DocState2 = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFFD_DOCS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProcessDocument"/><Properties Name="Caption" PropValue="Документ процеса:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProcessDocument"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Документ процеса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProcessDocument"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Документ процеса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAllowCreate"/><Properties Name="Caption" PropValue="Ожидается создание:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAllowCreate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Ожидается создание"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAllowWrite"/><Properties Name="Caption" PropValue="Ожидается модификация:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAllowWrite"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Ожидается модификация"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocMode"/><Properties Name="Caption" PropValue="Режим открытия документа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocMode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="5"/><Properties Name="ToolTipText" PropValue="Режим открытия документа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtProcessDocument_Change()
  Changing

end sub
private sub cmdProcessDocument_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;WFDef_Doc&quot;, id, brief) Then
          txtProcessDocument.Tag = Left(id, 38)
          txtProcessDocument = brief
        End If
end sub
private sub cmdProcessDocument_MenuClick(ByVal sCaption As String)
          txtProcessDocument.Tag = &quot;&quot;
          txtProcessDocument = &quot;&quot;
End sub
private sub cmbAllowCreate_Click()
  on error resume next
  Changing

end sub
private sub cmbAllowWrite_Click()
  on error resume next
  Changing

end sub
private sub txtDocMode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtProcessDocument.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.ProcessDocument Is Nothing Then
  txtProcessDocument.Tag = item.ProcessDocument.id
  txtProcessDocument = item.ProcessDocument.brief
else
  txtProcessDocument.Tag = &quot;&quot; 
  txtProcessDocument = &quot;&quot; 
End If
 LoadBtnPictures cmdProcessDocument,cmdProcessDocument.tag
  cmdProcessDocument.RemoveAllMenu
cmbAllowCreate.Clear
cmbAllowCreate.additem &quot;Да&quot;
cmbAllowCreate.itemdata(cmbAllowCreate.newindex)= -1
cmbAllowCreate.additem &quot;Нет&quot;
cmbAllowCreate.itemdata(cmbAllowCreate.newindex)= 0
 For iii = 0 To cmbAllowCreate.ListCount-1
  If Item.AllowCreate = cmbAllowCreate.ItemData(iii) Then
   cmbAllowCreate.ListIndex = iii
   Exit For
  End If
 Next
cmbAllowWrite.Clear
cmbAllowWrite.additem &quot;Да&quot;
cmbAllowWrite.itemdata(cmbAllowWrite.newindex)= -1
cmbAllowWrite.additem &quot;Нет&quot;
cmbAllowWrite.itemdata(cmbAllowWrite.newindex)= 0
 For iii = 0 To cmbAllowWrite.ListCount-1
  If Item.AllowWrite = cmbAllowWrite.ItemData(iii) Then
   cmbAllowWrite.ListIndex = iii
   Exit For
  End If
 Next
txtDocMode = item.DocMode
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtProcessDocument.Tag &lt;&gt; &quot;&quot; Then
  Set item.ProcessDocument = Item.Application.FindRowObject(&quot;WFDef_Doc&quot;,txtProcessDocument.Tag)
Else
  Set item.ProcessDocument = Nothing
End If
 if cmbAllowCreate.listindex&gt;=0 then
   item.AllowCreate = cmbAllowCreate.itemdata(cmbAllowCreate.listindex)
 end if
 if cmbAllowWrite.listindex&gt;=0 then
   item.AllowWrite = cmbAllowWrite.itemdata(cmbAllowWrite.listindex)
 end if
item.DocMode = txtDocMode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_ShortCut_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_ShortCut"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Куда выставлять ярлыки"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Ярлыки"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_Results_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_Results"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Функция может закончится с некоторым результатом: Принять Оплатить и т.п. "/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Возможные результаты"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_DOCSTOPS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_DOCSTOPS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Раздел описывает следующую ситуацию: если документ процесса переведен в определенное состояние, то функция автоматически завершается с некоторым результатом"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Завершение по состоянию документа"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_CustomParam_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_CustomParam"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные параметры, зависящие от типа функции"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные параметры"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_Doer_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_Doer"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Исполнители данной функции"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Исполнители"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_common_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_common"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Шаг процесса"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Функция процесса"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_ATTR1_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_ATTR1"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные атрибуты для описания функции"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные атрибуты"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmWFFD_DOCS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="WFFDGUI.WFFD_DOCS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Документы. которые необходимо обработать в рамках шага"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/></ControlData><PropertyData Name="Caption" PropValue="Документы для шага"/><PropertyData Name="BorderStyle" PropValue="2"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 Panel.Height = cmdOK.Top -3 * screen.TwipsPerPixelY
end sub
sub form_load()
 dim x as single, y as single
 LoadIcon
 LoadFormSkin me
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin me
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  frm.panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  print #ff, frm.panel.PanelCustomisationString
  Close #ff
end sub

Private Sub LoadIcon()
  On Error Resume Next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Set Me.Icon = LoadPicture(s &amp; &quot;\card.ico&quot;)
End Sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_common_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_common" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlWFFD_common"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editWFFD_common" ControlIndex="0" PROGID="WFFDGUI.WFFD_common"><Properties Name="Name" PropValue="editWFFD_common"/></ControlData><ControlData Name="cmdWFFD_commonSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_commonSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdWFFD_commonRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_commonRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_commonCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_commonCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opWFFD_common_UpdateName_(RowItem as object)
with RowItem
Run_WFFuncName  RowItem:=RowItem
end with
end sub
Private Sub cmdWFFD_commonRef_Click()
  on error resume next
  Item.WFFD_common.Refresh
  cmdWFFD_commonAdd_Click
End Sub
Private Sub cmdWFFD_commonCfg_Click()
    on error resume next 
    editWFFD_common.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;WFFD_editWFFD_common_&quot; For Output As #ff
    print #ff, editWFFD_common.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdWFFD_commonAdd_Click()
  on error resume next
 dim u as object
 If Item.WFFD_common.Count = 0 Then
   set u=Item.WFFD_common.Add

 End If
 Set editWFFD_common.Item = Item.WFFD_common.Item(1)
 editWFFD_common.InitPanel
 cmdWFFD_commonSave.Enabled = True
End Sub
Private Sub cmdWFFD_commonDel_Click()
  on error resume next
  if  editWFFD_common.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editWFFD_common.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editWFFD_common.item.parent.Delete editWFFD_common.item.id
    cmdWFFD_commonSave.Enabled = false
    editWFFD_common.Enabled = false
    set editWFFD_common.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editWFFD_common_Changed()
 cmdWFFD_commonSave.Enabled = true
End Sub
Private Sub cmdWFFD_commonSave_Click()
  on error resume next
    if editWFFD_common.IsOK then
    editWFFD_common.Save
  on error goto bye
    editWFFD_common.item.Save
        opWFFD_common_UpdateName_ editWFFD_common.item
    cmdWFFD_commonSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editWFFD_common.item.REFRESH
  editWFFD_common.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_commonSave,cmdWFFD_commonSave.tag
  LoadBtnPictures cmdWFFD_commonRef,cmdWFFD_commonRef.tag
  LoadBtnPictures cmdWFFD_commonCfg,cmdWFFD_commonCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;WFFD_editWFFD_common_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editWFFD_common.PanelCustomisationString = buf
  cmdWFFD_commonAdd_click
end sub
private sub OnTabClick()

      editWFFD_common.Top = 40 * Screen.TwipsPerPixelX
      editWFFD_common.Left = 5 * Screen.TwipsPerPixelX
      editWFFD_common.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editWFFD_common.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editWFFD_common.Save
if editWFFD_common.item.Changed then
  editWFFD_common.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editWFFD_common.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_common.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_ShortCut_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_ShortCut" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlWFFD_ShortCut"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridWFFD_ShortCut" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridWFFD_ShortCut"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdWFFD_ShortCutAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ShortCutAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ShortCutEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ShortCutEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ShortCutDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ShortCutDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ShortCutRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ShortCutRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdWFFD_ShortCutPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ShortCutPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdWFFD_ShortCutFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ShortCutFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupWFFD_ShortCut" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Ярлыки"/><Properties Name="Name" PropValue="mnuPopupWFFD_ShortCut"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuWFFD_ShortCutAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_ShortCutEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_ShortCutDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_ShortCutOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutOpen"/></ControlData><ControlData Name="mnuWFFD_ShortCutRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutRef"/></ControlData><ControlData Name="mnuWFFD_ShortCutS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutS1"/></ControlData><ControlData Name="mnuWFFD_ShortCutBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuWFFD_ShortCutCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutCOPY"/></ControlData><ControlData Name="mnuWFFD_ShortCutCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutCUT"/></ControlData><ControlData Name="mnuWFFD_ShortCutPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutPASTE"/></ControlData><ControlData Name="mnuWFFD_ShortCutCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutCHANGE"/></ControlData><ControlData Name="mnuWFFD_ShortCutCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutCLEAN"/></ControlData></ControlData><ControlData Name="mnuWFFD_ShortCutPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutPrn"/></ControlData><ControlData Name="mnuWFFD_ShortCutCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutCfg"/></ControlData><ControlData Name="mnuWFFD_ShortCutFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuWFFD_ShortCutFind"/></ControlData></ControlData><ControlData Name="menuTimerWFFD_ShortCut" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerWFFD_ShortCut"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndWFFD_ShortCut as object
private menuActionWFFD_ShortCut as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdWFFD_ShortCutCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridWFFD_ShortCut,&quot;gridWFFD_ShortCut&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_ShortCutPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridWFFD_ShortCut,&quot;Ярлыки&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_ShortCutRef_Click()
  on error resume next
  item.WFFD_ShortCut.Refresh
  gridWFFD_ShortCut.itemCount = item.WFFD_ShortCut.count
  gridWFFD_ShortCut.Refetch
  gridWFFD_ShortCut.Refresh
End Sub
Private Sub cmdWFFD_ShortCutAcc_Click()
On Error Resume Next
If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
If gridWFFD_ShortCut.Row &gt; 0 Then
 If gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_ShortCut.RowBookmark(gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdWFFD_ShortCutEdit_Click()
  on error resume next
If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
If gridWFFD_ShortCut.Row &gt; 0 then
 If gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_ShortCut.RowBookmark(gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmWFFD_ShortCut_.Item = u
    again: frmWFFD_ShortCut_.NotFirstTime = False
    frmWFFD_ShortCut_.OnInit
    frmWFFD_ShortCut_.Show vbModal
    If frmWFFD_ShortCut_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridWFFD_ShortCut.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdWFFD_ShortCutDel_Click()
  on error resume next
  gridWFFD_ShortCut.Delete
End Sub
Private Sub cmdWFFD_ShortCutAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.WFFD_ShortCut.Add()

      Set frmWFFD_ShortCut_.Item = u
      again: frmWFFD_ShortCut_.NotFirstTime = False
      frmWFFD_ShortCut_.OnInit
      frmWFFD_ShortCut_.Show vbModal
      If frmWFFD_ShortCut_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridWFFD_ShortCut.ItemCount = Item.WFFD_ShortCut.Count
        gridWFFD_ShortCut.Refresh
        gridWFFD_ShortCut.RefreshGroups
        gridWFFD_ShortCut.Refreshsort
        gridWFFD_ShortCut.MoveToBookmark u.ID &amp; &quot;WFFD_ShortCut&quot;
      Else
        Item.WFFD_ShortCut.Delete u.ID
        Item.WFFD_ShortCut.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdWFFD_ShortCutFnd_Click()
  on error resume next
  fndWFFD_ShortCut.ShowForm
End Sub
Private Sub cmdWFFD_ShortCutRun_Click()
  on error resume next
  gridWFFD_ShortCut_DblClick
End Sub
Private Sub gridWFFD_ShortCut_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.WFFD_ShortCut.LoadRow gridWFFD_ShortCut, RowIndex, Bookmark, Values
End Sub
Private Sub gridWFFD_ShortCut_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;WFFD_ShortCut&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridWFFD_ShortCut_DblClick()
  cmdWFFD_ShortCutEdit_Click
End Sub
Private Sub gridWFFD_ShortCut_KeyPress(KeyAscii As Integer)
  If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndWFFD_ShortCut.FindOnPress KeyAscii
End Sub

Private Sub gridWFFD_ShortCut_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridWFFD_ShortCut.Row And LastRow &gt; 0 Then
  gridWFFD_ShortCut.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridWFFD_ShortCut.GetRowData(gridWFFD_ShortCut.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuWFFD_ShortCutPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.WFFD_ShortCut.Add()
    If GetFromBuffer(u) Then
      gridWFFD_ShortCut.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridWFFD_ShortCut_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdWFFD_ShortCutCfg_Click
        End If
    End If
end sub

private sub gridWFFD_ShortCut_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupWFFD_ShortCut
End If
end sub
private sub mnuWFFD_ShortCutAdd_click()
   menuActionWFFD_ShortCut =&quot;ADD&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutEdit_click()
   menuActionWFFD_ShortCut =&quot;EDIT&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutDelete_click()
   menuActionWFFD_ShortCut =&quot;DEL&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutOpen_click()
   menuActionWFFD_ShortCut =&quot;RUN&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutRef_click()
   menuActionWFFD_ShortCut =&quot;REF&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
  Private Sub mnuWFFD_ShortCutCOPY_Click()
    On Error Resume Next
    If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
    If gridWFFD_ShortCut.Row &gt; 0 Then
     If gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_ShortCut.RowBookmark(gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuWFFD_ShortCutCUT_Click()
    On Error Resume Next
    If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
    If gridWFFD_ShortCut.Row &gt; 0 Then
     If gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_ShortCut.RowBookmark(gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridWFFD_ShortCut.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuWFFD_ShortCutCHANGE_Click()
  On Error Resume Next
  If gridWFFD_ShortCut.ItemCount = 0 Then Exit Sub
  If gridWFFD_ShortCut.Row &gt; 0 Then
   If gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_ShortCut.RowBookmark(gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridWFFD_ShortCut.ItemCount = u.parent.Count
      gridWFFD_ShortCut.RefreshRowIndex gridWFFD_ShortCut.RowIndex(gridWFFD_ShortCut.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuWFFD_ShortCutCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuWFFD_ShortCutPrn_click()
   menuActionWFFD_ShortCut =&quot;PRN&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutCfg_click()
   menuActionWFFD_ShortCut =&quot;CFG&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutFind_click()
   menuActionWFFD_ShortCut =&quot;FND&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub mnuWFFD_ShortCutAcc_click()
   menuActionWFFD_ShortCut =&quot;ACC&quot;
   menuTimerWFFD_ShortCut.enabled = true
end sub
private sub menuTimerWFFD_ShortCut_timer()
   menuTimerWFFD_ShortCut.enabled = false
   if menuActionWFFD_ShortCut =&quot;ADD&quot; then cmdWFFD_ShortCutADD_CLick
   if menuActionWFFD_ShortCut =&quot;EDIT&quot; then cmdWFFD_ShortCutEDIT_CLick
   if menuActionWFFD_ShortCut =&quot;DEL&quot; then cmdWFFD_ShortCutDEL_CLick
   if menuActionWFFD_ShortCut =&quot;RUN&quot; then cmdWFFD_ShortCutRUN_CLick
   if menuActionWFFD_ShortCut =&quot;REF&quot; then cmdWFFD_ShortCutREF_CLick
   if menuActionWFFD_ShortCut =&quot;PRN&quot; then cmdWFFD_ShortCutPRN_CLick
   if menuActionWFFD_ShortCut =&quot;CFG&quot; then cmdWFFD_ShortCutCFG_CLick
   if menuActionWFFD_ShortCut =&quot;FND&quot; then cmdWFFD_ShortCutFND_CLick
   if menuActionWFFD_ShortCut =&quot;ACC&quot; then cmdWFFD_ShortCutACC_CLick
   menuActionWFFD_ShortCut =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_ShortCutAdd,cmdWFFD_ShortCutAdd.tag
  LoadBtnPictures cmdWFFD_ShortCutEdit,cmdWFFD_ShortCutEdit.tag
  LoadBtnPictures cmdWFFD_ShortCutDel,cmdWFFD_ShortCutDel.tag
  LoadBtnPictures cmdWFFD_ShortCutRef,cmdWFFD_ShortCutRef.tag
  LoadBtnPictures cmdWFFD_ShortCutPrn,cmdWFFD_ShortCutPrn.tag
  LoadBtnPictures cmdWFFD_ShortCutFnd,cmdWFFD_ShortCutFnd.tag
  item.WFFD_ShortCut.PrepareGrid gridWFFD_ShortCut
  LoadGridLayout gridWFFD_ShortCut
  Set fndWFFD_ShortCut = Nothing
  On Error Resume Next
  Set fndWFFD_ShortCut = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndWFFD_ShortCut.Init gridWFFD_ShortCut
end sub
private sub OnTabClick()

      gridWFFD_ShortCut.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_ShortCut.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_ShortCut.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_ShortCut.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridWFFD_ShortCut.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_ShortCut.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_ShortCut.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_ShortCut.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_ShortCut.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndWFFD_ShortCut = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_Doer_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_Doer" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlWFFD_Doer"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridWFFD_Doer" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridWFFD_Doer"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdWFFD_DoerAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DoerAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DoerEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DoerEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DoerDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DoerDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DoerRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DoerRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdWFFD_DoerPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DoerPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdWFFD_DoerFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DoerFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupWFFD_Doer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Исполнители"/><Properties Name="Name" PropValue="mnuPopupWFFD_Doer"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuWFFD_DoerAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuWFFD_DoerAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DoerEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuWFFD_DoerEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DoerDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuWFFD_DoerDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DoerOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuWFFD_DoerOpen"/></ControlData><ControlData Name="mnuWFFD_DoerRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuWFFD_DoerRef"/></ControlData><ControlData Name="mnuWFFD_DoerS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuWFFD_DoerS1"/></ControlData><ControlData Name="mnuWFFD_DoerBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuWFFD_DoerBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuWFFD_DoerCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuWFFD_DoerCOPY"/></ControlData><ControlData Name="mnuWFFD_DoerCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuWFFD_DoerCUT"/></ControlData><ControlData Name="mnuWFFD_DoerPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuWFFD_DoerPASTE"/></ControlData><ControlData Name="mnuWFFD_DoerCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuWFFD_DoerCHANGE"/></ControlData><ControlData Name="mnuWFFD_DoerCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuWFFD_DoerCLEAN"/></ControlData></ControlData><ControlData Name="mnuWFFD_DoerPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuWFFD_DoerPrn"/></ControlData><ControlData Name="mnuWFFD_DoerCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuWFFD_DoerCfg"/></ControlData><ControlData Name="mnuWFFD_DoerFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuWFFD_DoerFind"/></ControlData></ControlData><ControlData Name="menuTimerWFFD_Doer" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerWFFD_Doer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndWFFD_Doer as object
private menuActionWFFD_Doer as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdWFFD_DoerCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridWFFD_Doer,&quot;gridWFFD_Doer&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_DoerPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridWFFD_Doer,&quot;Исполнители&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_DoerRef_Click()
  on error resume next
  item.WFFD_Doer.Refresh
  gridWFFD_Doer.itemCount = item.WFFD_Doer.count
  gridWFFD_Doer.Refetch
  gridWFFD_Doer.Refresh
End Sub
Private Sub cmdWFFD_DoerAcc_Click()
On Error Resume Next
If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
If gridWFFD_Doer.Row &gt; 0 Then
 If gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_Doer.RowBookmark(gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdWFFD_DoerEdit_Click()
  on error resume next
If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
If gridWFFD_Doer.Row &gt; 0 then
 If gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_Doer.RowBookmark(gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmWFFD_Doer_.Item = u
    again: frmWFFD_Doer_.NotFirstTime = False
    frmWFFD_Doer_.OnInit
    frmWFFD_Doer_.Show vbModal
    If frmWFFD_Doer_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridWFFD_Doer.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdWFFD_DoerDel_Click()
  on error resume next
  gridWFFD_Doer.Delete
End Sub
Private Sub cmdWFFD_DoerAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.WFFD_Doer.Add()

      Set frmWFFD_Doer_.Item = u
      again: frmWFFD_Doer_.NotFirstTime = False
      frmWFFD_Doer_.OnInit
      frmWFFD_Doer_.Show vbModal
      If frmWFFD_Doer_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridWFFD_Doer.ItemCount = Item.WFFD_Doer.Count
        gridWFFD_Doer.Refresh
        gridWFFD_Doer.RefreshGroups
        gridWFFD_Doer.Refreshsort
        gridWFFD_Doer.MoveToBookmark u.ID &amp; &quot;WFFD_Doer&quot;
      Else
        Item.WFFD_Doer.Delete u.ID
        Item.WFFD_Doer.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdWFFD_DoerFnd_Click()
  on error resume next
  fndWFFD_Doer.ShowForm
End Sub
Private Sub cmdWFFD_DoerRun_Click()
  on error resume next
  gridWFFD_Doer_DblClick
End Sub
Private Sub gridWFFD_Doer_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.WFFD_Doer.LoadRow gridWFFD_Doer, RowIndex, Bookmark, Values
End Sub
Private Sub gridWFFD_Doer_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;WFFD_Doer&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridWFFD_Doer_DblClick()
  cmdWFFD_DoerEdit_Click
End Sub
Private Sub gridWFFD_Doer_KeyPress(KeyAscii As Integer)
  If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndWFFD_Doer.FindOnPress KeyAscii
End Sub

Private Sub gridWFFD_Doer_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridWFFD_Doer.Row And LastRow &gt; 0 Then
  gridWFFD_Doer.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridWFFD_Doer.GetRowData(gridWFFD_Doer.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuWFFD_DoerPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.WFFD_Doer.Add()
    If GetFromBuffer(u) Then
      gridWFFD_Doer.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridWFFD_Doer_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdWFFD_DoerCfg_Click
        End If
    End If
end sub

private sub gridWFFD_Doer_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupWFFD_Doer
End If
end sub
private sub mnuWFFD_DoerAdd_click()
   menuActionWFFD_Doer =&quot;ADD&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerEdit_click()
   menuActionWFFD_Doer =&quot;EDIT&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerDelete_click()
   menuActionWFFD_Doer =&quot;DEL&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerOpen_click()
   menuActionWFFD_Doer =&quot;RUN&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerRef_click()
   menuActionWFFD_Doer =&quot;REF&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
  Private Sub mnuWFFD_DoerCOPY_Click()
    On Error Resume Next
    If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
    If gridWFFD_Doer.Row &gt; 0 Then
     If gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_Doer.RowBookmark(gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuWFFD_DoerCUT_Click()
    On Error Resume Next
    If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
    If gridWFFD_Doer.Row &gt; 0 Then
     If gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_Doer.RowBookmark(gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridWFFD_Doer.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuWFFD_DoerCHANGE_Click()
  On Error Resume Next
  If gridWFFD_Doer.ItemCount = 0 Then Exit Sub
  If gridWFFD_Doer.Row &gt; 0 Then
   If gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_Doer.RowBookmark(gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridWFFD_Doer.ItemCount = u.parent.Count
      gridWFFD_Doer.RefreshRowIndex gridWFFD_Doer.RowIndex(gridWFFD_Doer.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuWFFD_DoerCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuWFFD_DoerPrn_click()
   menuActionWFFD_Doer =&quot;PRN&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerCfg_click()
   menuActionWFFD_Doer =&quot;CFG&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerFind_click()
   menuActionWFFD_Doer =&quot;FND&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub mnuWFFD_DoerAcc_click()
   menuActionWFFD_Doer =&quot;ACC&quot;
   menuTimerWFFD_Doer.enabled = true
end sub
private sub menuTimerWFFD_Doer_timer()
   menuTimerWFFD_Doer.enabled = false
   if menuActionWFFD_Doer =&quot;ADD&quot; then cmdWFFD_DoerADD_CLick
   if menuActionWFFD_Doer =&quot;EDIT&quot; then cmdWFFD_DoerEDIT_CLick
   if menuActionWFFD_Doer =&quot;DEL&quot; then cmdWFFD_DoerDEL_CLick
   if menuActionWFFD_Doer =&quot;RUN&quot; then cmdWFFD_DoerRUN_CLick
   if menuActionWFFD_Doer =&quot;REF&quot; then cmdWFFD_DoerREF_CLick
   if menuActionWFFD_Doer =&quot;PRN&quot; then cmdWFFD_DoerPRN_CLick
   if menuActionWFFD_Doer =&quot;CFG&quot; then cmdWFFD_DoerCFG_CLick
   if menuActionWFFD_Doer =&quot;FND&quot; then cmdWFFD_DoerFND_CLick
   if menuActionWFFD_Doer =&quot;ACC&quot; then cmdWFFD_DoerACC_CLick
   menuActionWFFD_Doer =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_DoerAdd,cmdWFFD_DoerAdd.tag
  LoadBtnPictures cmdWFFD_DoerEdit,cmdWFFD_DoerEdit.tag
  LoadBtnPictures cmdWFFD_DoerDel,cmdWFFD_DoerDel.tag
  LoadBtnPictures cmdWFFD_DoerRef,cmdWFFD_DoerRef.tag
  LoadBtnPictures cmdWFFD_DoerPrn,cmdWFFD_DoerPrn.tag
  LoadBtnPictures cmdWFFD_DoerFnd,cmdWFFD_DoerFnd.tag
  item.WFFD_Doer.PrepareGrid gridWFFD_Doer
  LoadGridLayout gridWFFD_Doer
  Set fndWFFD_Doer = Nothing
  On Error Resume Next
  Set fndWFFD_Doer = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndWFFD_Doer.Init gridWFFD_Doer
end sub
private sub OnTabClick()

      gridWFFD_Doer.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_Doer.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_Doer.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_Doer.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridWFFD_Doer.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_Doer.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_Doer.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_Doer.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_Doer.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndWFFD_Doer = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_Results_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_Results" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlWFFD_Results"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridWFFD_Results" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridWFFD_Results"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdWFFD_ResultsAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ResultsAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ResultsEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ResultsEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ResultsDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ResultsDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ResultsRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ResultsRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdWFFD_ResultsPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ResultsPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdWFFD_ResultsFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ResultsFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridWFFD_DOCSTOPS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridWFFD_DOCSTOPS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdWFFD_DOCSTOPSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSTOPSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DOCSTOPSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSTOPSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DOCSTOPSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSTOPSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DOCSTOPSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSTOPSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdWFFD_DOCSTOPSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSTOPSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdWFFD_DOCSTOPSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSTOPSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupWFFD_Results" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Возможные результаты"/><Properties Name="Name" PropValue="mnuPopupWFFD_Results"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuWFFD_ResultsAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuWFFD_ResultsAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_ResultsEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuWFFD_ResultsEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_ResultsDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuWFFD_ResultsDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_ResultsOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuWFFD_ResultsOpen"/></ControlData><ControlData Name="mnuWFFD_ResultsRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuWFFD_ResultsRef"/></ControlData><ControlData Name="mnuWFFD_ResultsS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuWFFD_ResultsS1"/></ControlData><ControlData Name="mnuWFFD_ResultsBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuWFFD_ResultsBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuWFFD_ResultsCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuWFFD_ResultsCOPY"/></ControlData><ControlData Name="mnuWFFD_ResultsCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuWFFD_ResultsCUT"/></ControlData><ControlData Name="mnuWFFD_ResultsPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuWFFD_ResultsPASTE"/></ControlData><ControlData Name="mnuWFFD_ResultsCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuWFFD_ResultsCHANGE"/></ControlData><ControlData Name="mnuWFFD_ResultsCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuWFFD_ResultsCLEAN"/></ControlData></ControlData><ControlData Name="mnuWFFD_ResultsPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuWFFD_ResultsPrn"/></ControlData><ControlData Name="mnuWFFD_ResultsCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuWFFD_ResultsCfg"/></ControlData><ControlData Name="mnuWFFD_ResultsFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuWFFD_ResultsFind"/></ControlData></ControlData><ControlData Name="menuTimerWFFD_Results" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerWFFD_Results"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupWFFD_DOCSTOPS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Завершение по состоянию документа"/><Properties Name="Name" PropValue="mnuPopupWFFD_DOCSTOPS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuWFFD_DOCSTOPSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSOpen"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSRef"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSS1"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuWFFD_DOCSTOPSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSCOPY"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSCUT"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSPASTE"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSCHANGE"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSCLEAN"/></ControlData></ControlData><ControlData Name="mnuWFFD_DOCSTOPSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSPrn"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSCfg"/></ControlData><ControlData Name="mnuWFFD_DOCSTOPSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuWFFD_DOCSTOPSFind"/></ControlData></ControlData><ControlData Name="menuTimerWFFD_DOCSTOPS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerWFFD_DOCSTOPS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndWFFD_Results as object
private menuActionWFFD_Results as string
private fndWFFD_DOCSTOPS as object
private menuActionWFFD_DOCSTOPS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlWFFD_Results_PositionChanged()
  pnlWFFD_Results.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridWFFD_Results_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdWFFD_ResultsCfg_Click
        End If
    End If
end sub

private sub gridWFFD_Results_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupWFFD_Results
End If
end sub
private sub mnuWFFD_ResultsAdd_click()
   menuActionWFFD_Results =&quot;ADD&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsEdit_click()
   menuActionWFFD_Results =&quot;EDIT&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsDelete_click()
   menuActionWFFD_Results =&quot;DEL&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsOpen_click()
   menuActionWFFD_Results =&quot;RUN&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsRef_click()
   menuActionWFFD_Results =&quot;REF&quot;
   menuTimerWFFD_Results.enabled = true
end sub
  Private Sub mnuWFFD_ResultsCOPY_Click()
    On Error Resume Next
    If gridWFFD_Results.ItemCount = 0 Then Exit Sub
    If gridWFFD_Results.Row &gt; 0 Then
     If gridWFFD_Results.RowIndex(gridWFFD_Results.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuWFFD_ResultsCUT_Click()
    On Error Resume Next
    If gridWFFD_Results.ItemCount = 0 Then Exit Sub
    If gridWFFD_Results.Row &gt; 0 Then
     If gridWFFD_Results.RowIndex(gridWFFD_Results.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridWFFD_Results.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuWFFD_ResultsCHANGE_Click()
  On Error Resume Next
  If gridWFFD_Results.ItemCount = 0 Then Exit Sub
  If gridWFFD_Results.Row &gt; 0 Then
   If gridWFFD_Results.RowIndex(gridWFFD_Results.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridWFFD_Results.ItemCount = u.parent.Count
      gridWFFD_Results.RefreshRowIndex gridWFFD_Results.RowIndex(gridWFFD_Results.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuWFFD_ResultsCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuWFFD_ResultsPrn_click()
   menuActionWFFD_Results =&quot;PRN&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsCfg_click()
   menuActionWFFD_Results =&quot;CFG&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsFind_click()
   menuActionWFFD_Results =&quot;FND&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub mnuWFFD_ResultsAcc_click()
   menuActionWFFD_Results =&quot;ACC&quot;
   menuTimerWFFD_Results.enabled = true
end sub
private sub menuTimerWFFD_Results_timer()
   menuTimerWFFD_Results.enabled = false
   if menuActionWFFD_Results =&quot;ADD&quot; then cmdWFFD_ResultsADD_CLick
   if menuActionWFFD_Results =&quot;EDIT&quot; then cmdWFFD_ResultsEDIT_CLick
   if menuActionWFFD_Results =&quot;DEL&quot; then cmdWFFD_ResultsDEL_CLick
   if menuActionWFFD_Results =&quot;RUN&quot; then cmdWFFD_ResultsRUN_CLick
   if menuActionWFFD_Results =&quot;REF&quot; then cmdWFFD_ResultsREF_CLick
   if menuActionWFFD_Results =&quot;PRN&quot; then cmdWFFD_ResultsPRN_CLick
   if menuActionWFFD_Results =&quot;CFG&quot; then cmdWFFD_ResultsCFG_CLick
   if menuActionWFFD_Results =&quot;FND&quot; then cmdWFFD_ResultsFND_CLick
   if menuActionWFFD_Results =&quot;ACC&quot; then cmdWFFD_ResultsACC_CLick
   menuActionWFFD_Results =&quot;&quot;
end sub
Private Sub cmdWFFD_ResultsCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridWFFD_Results,&quot;gridWFFD_Results&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_ResultsPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridWFFD_Results,&quot;Возможные результаты&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_ResultsRef_Click()
  on error resume next
  item.WFFD_Results.Refresh
  gridWFFD_Results.itemCount = item.WFFD_Results.count
  gridWFFD_Results.Refetch
  gridWFFD_Results.Refresh
End Sub
Private Sub cmdWFFD_ResultsAcc_Click()
On Error Resume Next
If gridWFFD_Results.ItemCount = 0 Then Exit Sub
If gridWFFD_Results.Row &gt; 0 Then
 If gridWFFD_Results.RowIndex(gridWFFD_Results.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdWFFD_ResultsEdit_Click()
  on error resume next
If gridWFFD_Results.ItemCount = 0 Then Exit Sub
If gridWFFD_Results.Row &gt; 0 then
 If gridWFFD_Results.RowIndex(gridWFFD_Results.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmWFFD_Results_.Item = u
    again: frmWFFD_Results_.NotFirstTime = False
    frmWFFD_Results_.OnInit
    frmWFFD_Results_.Show vbModal
    If frmWFFD_Results_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridWFFD_Results.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdWFFD_ResultsDel_Click()
  on error resume next
  gridWFFD_Results.Delete
End Sub
Private Sub cmdWFFD_ResultsAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.WFFD_Results.Add()

      Set frmWFFD_Results_.Item = u
      again: frmWFFD_Results_.NotFirstTime = False
      frmWFFD_Results_.OnInit
      frmWFFD_Results_.Show vbModal
      If frmWFFD_Results_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridWFFD_Results.ItemCount = Item.WFFD_Results.Count
        gridWFFD_Results.Refresh
        gridWFFD_Results.RefreshGroups
        gridWFFD_Results.Refreshsort
        gridWFFD_Results.MoveToBookmark u.ID &amp; &quot;WFFD_Results&quot;
      Else
        Item.WFFD_Results.Delete u.ID
        Item.WFFD_Results.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdWFFD_ResultsFnd_Click()
  on error resume next
  fndWFFD_Results.ShowForm
End Sub
Private Sub cmdWFFD_ResultsRun_Click()
  on error resume next
  gridWFFD_Results_DblClick
End Sub
Private Sub gridWFFD_Results_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.WFFD_Results.LoadRow gridWFFD_Results, RowIndex, Bookmark, Values
End Sub
Private Sub gridWFFD_Results_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridWFFD_Results.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridWFFD_Results_DblClick()
  cmdWFFD_ResultsEdit_Click
End Sub
Private Sub gridWFFD_Results_KeyPress(KeyAscii As Integer)
  If gridWFFD_Results.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndWFFD_Results.FindOnPress KeyAscii
End Sub

Private Sub pnlWFFD_Results_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridWFFD_Results.Left = Left
  gridWFFD_Results.Top = Top + 25 * Screen.TwipsPerPixelY
  gridWFFD_Results.Width = Width
  gridWFFD_Results.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdWFFD_ResultsAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_ResultsEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_ResultsDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_ResultsRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_ResultsPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_ResultsFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_ResultsAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdWFFD_ResultsEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdWFFD_ResultsDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdWFFD_ResultsRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdWFFD_ResultsPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdWFFD_ResultsFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuWFFD_ResultsPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.WFFD_Results.Add()
    If GetFromBuffer(u) Then
      gridWFFD_Results.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdWFFD_DOCSTOPSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridWFFD_DOCSTOPS,&quot;gridWFFD_DOCSTOPS&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_DOCSTOPSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridWFFD_DOCSTOPS,&quot;Завершение по состоянию документа&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_DOCSTOPSAcc_Click()
On Error Resume Next
If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
If gridWFFD_DOCSTOPS.Row &gt; 0 Then
 If gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_DOCSTOPS.RowBookmark(gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdWFFD_DOCSTOPSFnd_Click()
  on error resume next
  fndWFFD_DOCSTOPS.ShowForm
End Sub
Private Sub cmdWFFD_DOCSTOPSRun_Click()
  on error resume next
  gridWFFD_DOCSTOPS_DblClick
End Sub
Private Sub pnlWFFD_Results_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridWFFD_DOCSTOPS.Left = Left
  gridWFFD_DOCSTOPS.Top = Top + 25 * Screen.TwipsPerPixelY
  gridWFFD_DOCSTOPS.Width = Width
  gridWFFD_DOCSTOPS.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdWFFD_DOCSTOPSAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdWFFD_DOCSTOPSEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdWFFD_DOCSTOPSDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdWFFD_DOCSTOPSRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdWFFD_DOCSTOPSPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdWFFD_DOCSTOPSFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdWFFD_DOCSTOPSRef_Click()
  on error resume next
If gridWFFD_Results.ItemCount = 0 Then Exit Sub
If gridWFFD_Results.Row &gt; 0 Then
 If gridWFFD_Results.RowIndex ( gridWFFD_Results.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.WFFD_DOCSTOPS.refresh
   gridWFFD_DOCSTOPS.itemcount=gu.WFFD_DOCSTOPS.count
   gridWFFD_DOCSTOPS.refetch
   gridWFFD_DOCSTOPS.refresh
 else
  gridWFFD_DOCSTOPS.columns.clear
  gridWFFD_DOCSTOPS.itemcount=0
 End If
else
 gridWFFD_DOCSTOPS.columns.clear
 gridWFFD_DOCSTOPS.itemcount=0
End If
End Sub
Private Sub cmdWFFD_DOCSTOPSEdit_Click()
    If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridWFFD_DOCSTOPS.RowBookmark(gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmWFFD_DOCSTOPS_.Item = u
    again: frmWFFD_DOCSTOPS_.NotFirstTime = False
    frmWFFD_DOCSTOPS_.OnInit
    frmWFFD_DOCSTOPS_.Show vbModal
    If frmWFFD_DOCSTOPS_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridWFFD_DOCSTOPS.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdWFFD_DOCSTOPSDel_Click()
  on error resume next
  gridWFFD_DOCSTOPS.Delete
End Sub
Private Sub cmdWFFD_DOCSTOPSAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridWFFD_Results.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.WFFD_DOCSTOPS.Add()

      Set frmWFFD_DOCSTOPS_.Item = u
      again: frmWFFD_DOCSTOPS_.NotFirstTime = False
      frmWFFD_DOCSTOPS_.OnInit
      frmWFFD_DOCSTOPS_.Show vbModal
      If frmWFFD_DOCSTOPS_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridWFFD_DOCSTOPS.ItemCount = gu.WFFD_DOCSTOPS.Count
        gridWFFD_DOCSTOPS.Refresh
        gridWFFD_DOCSTOPS.RefreshGroups
        gridWFFD_DOCSTOPS.Refreshsort
        gridWFFD_DOCSTOPS.MoveToBookmark u.ID &amp; &quot;WFFD_DOCSTOPS&quot;
      Else
        gu.WFFD_DOCSTOPS.Delete u.ID
        gu.WFFD_DOCSTOPS.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridWFFD_Results_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridWFFD_Results.ItemCount = 0 Then 
  gridWFFD_DOCSTOPS.ItemCount=0
  Exit Sub
End If
If gridWFFD_Results.Row &gt; 0 Then
  If LastRow &lt;&gt; gridWFFD_Results.Row And LastRow &gt; 0 Then
    gridWFFD_Results.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridWFFD_Results.GetRowData(gridWFFD_Results.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridWFFD_Results.RowIndex ( gridWFFD_Results.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridWFFD_Results.Row or gridWFFD_DOCSTOPS.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.WFFD_DOCSTOPS.Preparegrid gridWFFD_DOCSTOPS
  gridWFFD_DOCSTOPS.ItemCount=0
    LoadGridLayout gridWFFD_DOCSTOPS
    Set fndWFFD_DOCSTOPS = Nothing
    Set fndWFFD_DOCSTOPS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndWFFD_DOCSTOPS.Init gridWFFD_DOCSTOPS
  gridWFFD_DOCSTOPS.ItemCount=gu.WFFD_DOCSTOPS.Count
  End If
 End If
End If
End Sub
Private Sub gridWFFD_DOCSTOPS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridWFFD_Results.ItemCount = 0 Then Exit Sub
    If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.WFFD_DOCSTOPS.LoadRow gridWFFD_DOCSTOPS, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridWFFD_DOCSTOPS_KeyPress(KeyAscii As Integer)
  If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndWFFD_DOCSTOPS.FindOnPress KeyAscii
End Sub

Private Sub gridWFFD_DOCSTOPS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridWFFD_DOCSTOPS.RowBookmark(gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridWFFD_DOCSTOPS_DblClick()
    cmdWFFD_DOCSTOPSEdit_click
End Sub
Private Sub gridWFFD_DOCSTOPS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
 If gridWFFD_DOCSTOPS.Row &gt; 0 Then
   If LastRow &lt;&gt; gridWFFD_DOCSTOPS.Row And LastRow &gt; 0 Then
     gridWFFD_DOCSTOPS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridWFFD_DOCSTOPS.GetRowData(gridWFFD_DOCSTOPS.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuWFFD_DOCSTOPSPASTE_Click()
On Error Resume Next
    If gridWFFD_Results.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridWFFD_Results.RowBookmark(gridWFFD_Results.RowIndex(gridWFFD_Results.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.WFFD_DOCSTOPS.Add()
    If GetFromBuffer(u) Then
      gridWFFD_DOCSTOPS.ItemCount = u.parent.Count
    ELSE
      GU.WFFD_DOCSTOPS.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridWFFD_DOCSTOPS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdWFFD_DOCSTOPSCfg_Click
        End If
    End If
end sub

private sub gridWFFD_DOCSTOPS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupWFFD_DOCSTOPS
End If
end sub
private sub mnuWFFD_DOCSTOPSAdd_click()
   menuActionWFFD_DOCSTOPS =&quot;ADD&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSEdit_click()
   menuActionWFFD_DOCSTOPS =&quot;EDIT&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSDelete_click()
   menuActionWFFD_DOCSTOPS =&quot;DEL&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSOpen_click()
   menuActionWFFD_DOCSTOPS =&quot;RUN&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSRef_click()
   menuActionWFFD_DOCSTOPS =&quot;REF&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
  Private Sub mnuWFFD_DOCSTOPSCOPY_Click()
    On Error Resume Next
    If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
    If gridWFFD_DOCSTOPS.Row &gt; 0 Then
     If gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_DOCSTOPS.RowBookmark(gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuWFFD_DOCSTOPSCUT_Click()
    On Error Resume Next
    If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
    If gridWFFD_DOCSTOPS.Row &gt; 0 Then
     If gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_DOCSTOPS.RowBookmark(gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridWFFD_DOCSTOPS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuWFFD_DOCSTOPSCHANGE_Click()
  On Error Resume Next
  If gridWFFD_DOCSTOPS.ItemCount = 0 Then Exit Sub
  If gridWFFD_DOCSTOPS.Row &gt; 0 Then
   If gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_DOCSTOPS.RowBookmark(gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridWFFD_DOCSTOPS.ItemCount = u.parent.Count
      gridWFFD_DOCSTOPS.RefreshRowIndex gridWFFD_DOCSTOPS.RowIndex(gridWFFD_DOCSTOPS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuWFFD_DOCSTOPSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuWFFD_DOCSTOPSPrn_click()
   menuActionWFFD_DOCSTOPS =&quot;PRN&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSCfg_click()
   menuActionWFFD_DOCSTOPS =&quot;CFG&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSFind_click()
   menuActionWFFD_DOCSTOPS =&quot;FND&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub mnuWFFD_DOCSTOPSAcc_click()
   menuActionWFFD_DOCSTOPS =&quot;ACC&quot;
   menuTimerWFFD_DOCSTOPS.enabled = true
end sub
private sub menuTimerWFFD_DOCSTOPS_timer()
   menuTimerWFFD_DOCSTOPS.enabled = false
   if menuActionWFFD_DOCSTOPS =&quot;ADD&quot; then cmdWFFD_DOCSTOPSADD_CLick
   if menuActionWFFD_DOCSTOPS =&quot;EDIT&quot; then cmdWFFD_DOCSTOPSEDIT_CLick
   if menuActionWFFD_DOCSTOPS =&quot;DEL&quot; then cmdWFFD_DOCSTOPSDEL_CLick
   if menuActionWFFD_DOCSTOPS =&quot;RUN&quot; then cmdWFFD_DOCSTOPSRUN_CLick
   if menuActionWFFD_DOCSTOPS =&quot;REF&quot; then cmdWFFD_DOCSTOPSREF_CLick
   if menuActionWFFD_DOCSTOPS =&quot;PRN&quot; then cmdWFFD_DOCSTOPSPRN_CLick
   if menuActionWFFD_DOCSTOPS =&quot;CFG&quot; then cmdWFFD_DOCSTOPSCFG_CLick
   if menuActionWFFD_DOCSTOPS =&quot;FND&quot; then cmdWFFD_DOCSTOPSFND_CLick
   if menuActionWFFD_DOCSTOPS =&quot;ACC&quot; then cmdWFFD_DOCSTOPSACC_CLick
   menuActionWFFD_DOCSTOPS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_ResultsAdd,cmdWFFD_ResultsAdd.tag
  LoadBtnPictures cmdWFFD_ResultsEdit,cmdWFFD_ResultsEdit.tag
  LoadBtnPictures cmdWFFD_ResultsDel,cmdWFFD_ResultsDel.tag
  LoadBtnPictures cmdWFFD_ResultsRef,cmdWFFD_ResultsRef.tag
  LoadBtnPictures cmdWFFD_ResultsPrn,cmdWFFD_ResultsPrn.tag
  LoadBtnPictures cmdWFFD_ResultsFnd,cmdWFFD_ResultsFnd.tag
  item.WFFD_Results.PrepareGrid gridWFFD_Results
  LoadGridLayout gridWFFD_Results
  Set fndWFFD_Results = Nothing
  On Error Resume Next
  Set fndWFFD_Results = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndWFFD_Results.Init gridWFFD_Results
  LoadBtnPictures cmdWFFD_DOCSTOPSAdd,cmdWFFD_DOCSTOPSAdd.tag
  LoadBtnPictures cmdWFFD_DOCSTOPSEdit,cmdWFFD_DOCSTOPSEdit.tag
  LoadBtnPictures cmdWFFD_DOCSTOPSDel,cmdWFFD_DOCSTOPSDel.tag
  LoadBtnPictures cmdWFFD_DOCSTOPSRef,cmdWFFD_DOCSTOPSRef.tag
  LoadBtnPictures cmdWFFD_DOCSTOPSPrn,cmdWFFD_DOCSTOPSPrn.tag
  LoadBtnPictures cmdWFFD_DOCSTOPSFnd,cmdWFFD_DOCSTOPSFnd.Tag
  gridWFFD_DOCSTOPS.Columns.Clear
  gridWFFD_DOCSTOPS.ItemCount=0
  cmdWFFD_DOCSTOPSRef_Click
end sub
private sub OnTabClick()

pnlWFFD_Results.RestorePosition
  gridWFFD_Results_RowColChange gridWFFD_Results.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_Results.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndWFFD_Results = nothing
  set fndWFFD_DOCSTOPS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_CustomParam_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_CustomParam" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlWFFD_CustomParam"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridWFFD_CustomParam" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridWFFD_CustomParam"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdWFFD_CustomParamAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_CustomParamAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_CustomParamEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_CustomParamEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_CustomParamDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_CustomParamDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_CustomParamRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_CustomParamRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdWFFD_CustomParamPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_CustomParamPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdWFFD_CustomParamFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_CustomParamFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupWFFD_CustomParam" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные параметры"/><Properties Name="Name" PropValue="mnuPopupWFFD_CustomParam"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuWFFD_CustomParamAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_CustomParamEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_CustomParamDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_CustomParamOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamOpen"/></ControlData><ControlData Name="mnuWFFD_CustomParamRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamRef"/></ControlData><ControlData Name="mnuWFFD_CustomParamS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamS1"/></ControlData><ControlData Name="mnuWFFD_CustomParamBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuWFFD_CustomParamCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamCOPY"/></ControlData><ControlData Name="mnuWFFD_CustomParamCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamCUT"/></ControlData><ControlData Name="mnuWFFD_CustomParamPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamPASTE"/></ControlData><ControlData Name="mnuWFFD_CustomParamCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamCHANGE"/></ControlData><ControlData Name="mnuWFFD_CustomParamCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamCLEAN"/></ControlData></ControlData><ControlData Name="mnuWFFD_CustomParamPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamPrn"/></ControlData><ControlData Name="mnuWFFD_CustomParamCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamCfg"/></ControlData><ControlData Name="mnuWFFD_CustomParamFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuWFFD_CustomParamFind"/></ControlData></ControlData><ControlData Name="menuTimerWFFD_CustomParam" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerWFFD_CustomParam"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndWFFD_CustomParam as object
private menuActionWFFD_CustomParam as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdWFFD_CustomParamCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridWFFD_CustomParam,&quot;gridWFFD_CustomParam&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_CustomParamPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridWFFD_CustomParam,&quot;Дополнительные параметры&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_CustomParamRef_Click()
  on error resume next
  item.WFFD_CustomParam.Refresh
  gridWFFD_CustomParam.itemCount = item.WFFD_CustomParam.count
  gridWFFD_CustomParam.Refetch
  gridWFFD_CustomParam.Refresh
End Sub
Private Sub cmdWFFD_CustomParamAcc_Click()
On Error Resume Next
If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
If gridWFFD_CustomParam.Row &gt; 0 Then
 If gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_CustomParam.RowBookmark(gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdWFFD_CustomParamEdit_Click()
  on error resume next
If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
If gridWFFD_CustomParam.Row &gt; 0 then
 If gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_CustomParam.RowBookmark(gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmWFFD_CustomParam_.Item = u
    again: frmWFFD_CustomParam_.NotFirstTime = False
    frmWFFD_CustomParam_.OnInit
    frmWFFD_CustomParam_.Show vbModal
    If frmWFFD_CustomParam_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridWFFD_CustomParam.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdWFFD_CustomParamDel_Click()
  on error resume next
  gridWFFD_CustomParam.Delete
End Sub
Private Sub cmdWFFD_CustomParamAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.WFFD_CustomParam.Add()

      Set frmWFFD_CustomParam_.Item = u
      again: frmWFFD_CustomParam_.NotFirstTime = False
      frmWFFD_CustomParam_.OnInit
      frmWFFD_CustomParam_.Show vbModal
      If frmWFFD_CustomParam_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridWFFD_CustomParam.ItemCount = Item.WFFD_CustomParam.Count
        gridWFFD_CustomParam.Refresh
        gridWFFD_CustomParam.RefreshGroups
        gridWFFD_CustomParam.Refreshsort
        gridWFFD_CustomParam.MoveToBookmark u.ID &amp; &quot;WFFD_CustomParam&quot;
      Else
        Item.WFFD_CustomParam.Delete u.ID
        Item.WFFD_CustomParam.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdWFFD_CustomParamFnd_Click()
  on error resume next
  fndWFFD_CustomParam.ShowForm
End Sub
Private Sub cmdWFFD_CustomParamRun_Click()
  on error resume next
  gridWFFD_CustomParam_DblClick
End Sub
Private Sub gridWFFD_CustomParam_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.WFFD_CustomParam.LoadRow gridWFFD_CustomParam, RowIndex, Bookmark, Values
End Sub
Private Sub gridWFFD_CustomParam_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;WFFD_CustomParam&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridWFFD_CustomParam_DblClick()
  cmdWFFD_CustomParamEdit_Click
End Sub
Private Sub gridWFFD_CustomParam_KeyPress(KeyAscii As Integer)
  If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndWFFD_CustomParam.FindOnPress KeyAscii
End Sub

Private Sub gridWFFD_CustomParam_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridWFFD_CustomParam.Row And LastRow &gt; 0 Then
  gridWFFD_CustomParam.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridWFFD_CustomParam.GetRowData(gridWFFD_CustomParam.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuWFFD_CustomParamPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.WFFD_CustomParam.Add()
    If GetFromBuffer(u) Then
      gridWFFD_CustomParam.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridWFFD_CustomParam_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdWFFD_CustomParamCfg_Click
        End If
    End If
end sub

private sub gridWFFD_CustomParam_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupWFFD_CustomParam
End If
end sub
private sub mnuWFFD_CustomParamAdd_click()
   menuActionWFFD_CustomParam =&quot;ADD&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamEdit_click()
   menuActionWFFD_CustomParam =&quot;EDIT&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamDelete_click()
   menuActionWFFD_CustomParam =&quot;DEL&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamOpen_click()
   menuActionWFFD_CustomParam =&quot;RUN&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamRef_click()
   menuActionWFFD_CustomParam =&quot;REF&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
  Private Sub mnuWFFD_CustomParamCOPY_Click()
    On Error Resume Next
    If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
    If gridWFFD_CustomParam.Row &gt; 0 Then
     If gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_CustomParam.RowBookmark(gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuWFFD_CustomParamCUT_Click()
    On Error Resume Next
    If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
    If gridWFFD_CustomParam.Row &gt; 0 Then
     If gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_CustomParam.RowBookmark(gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridWFFD_CustomParam.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuWFFD_CustomParamCHANGE_Click()
  On Error Resume Next
  If gridWFFD_CustomParam.ItemCount = 0 Then Exit Sub
  If gridWFFD_CustomParam.Row &gt; 0 Then
   If gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_CustomParam.RowBookmark(gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridWFFD_CustomParam.ItemCount = u.parent.Count
      gridWFFD_CustomParam.RefreshRowIndex gridWFFD_CustomParam.RowIndex(gridWFFD_CustomParam.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuWFFD_CustomParamCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuWFFD_CustomParamPrn_click()
   menuActionWFFD_CustomParam =&quot;PRN&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamCfg_click()
   menuActionWFFD_CustomParam =&quot;CFG&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamFind_click()
   menuActionWFFD_CustomParam =&quot;FND&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub mnuWFFD_CustomParamAcc_click()
   menuActionWFFD_CustomParam =&quot;ACC&quot;
   menuTimerWFFD_CustomParam.enabled = true
end sub
private sub menuTimerWFFD_CustomParam_timer()
   menuTimerWFFD_CustomParam.enabled = false
   if menuActionWFFD_CustomParam =&quot;ADD&quot; then cmdWFFD_CustomParamADD_CLick
   if menuActionWFFD_CustomParam =&quot;EDIT&quot; then cmdWFFD_CustomParamEDIT_CLick
   if menuActionWFFD_CustomParam =&quot;DEL&quot; then cmdWFFD_CustomParamDEL_CLick
   if menuActionWFFD_CustomParam =&quot;RUN&quot; then cmdWFFD_CustomParamRUN_CLick
   if menuActionWFFD_CustomParam =&quot;REF&quot; then cmdWFFD_CustomParamREF_CLick
   if menuActionWFFD_CustomParam =&quot;PRN&quot; then cmdWFFD_CustomParamPRN_CLick
   if menuActionWFFD_CustomParam =&quot;CFG&quot; then cmdWFFD_CustomParamCFG_CLick
   if menuActionWFFD_CustomParam =&quot;FND&quot; then cmdWFFD_CustomParamFND_CLick
   if menuActionWFFD_CustomParam =&quot;ACC&quot; then cmdWFFD_CustomParamACC_CLick
   menuActionWFFD_CustomParam =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_CustomParamAdd,cmdWFFD_CustomParamAdd.tag
  LoadBtnPictures cmdWFFD_CustomParamEdit,cmdWFFD_CustomParamEdit.tag
  LoadBtnPictures cmdWFFD_CustomParamDel,cmdWFFD_CustomParamDel.tag
  LoadBtnPictures cmdWFFD_CustomParamRef,cmdWFFD_CustomParamRef.tag
  LoadBtnPictures cmdWFFD_CustomParamPrn,cmdWFFD_CustomParamPrn.tag
  LoadBtnPictures cmdWFFD_CustomParamFnd,cmdWFFD_CustomParamFnd.tag
  item.WFFD_CustomParam.PrepareGrid gridWFFD_CustomParam
  LoadGridLayout gridWFFD_CustomParam
  Set fndWFFD_CustomParam = Nothing
  On Error Resume Next
  Set fndWFFD_CustomParam = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndWFFD_CustomParam.Init gridWFFD_CustomParam
end sub
private sub OnTabClick()

      gridWFFD_CustomParam.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_CustomParam.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_CustomParam.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_CustomParam.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridWFFD_CustomParam.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_CustomParam.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_CustomParam.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_CustomParam.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_CustomParam.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndWFFD_CustomParam = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_ATTR1_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_ATTR1" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlWFFD_ATTR1"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editWFFD_ATTR1" ControlIndex="0" PROGID="WFFDGUI.WFFD_ATTR1"><Properties Name="Name" PropValue="editWFFD_ATTR1"/></ControlData><ControlData Name="cmdWFFD_ATTR1Save" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ATTR1Save"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdWFFD_ATTR1Ref" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ATTR1Ref"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_ATTR1Cfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_ATTR1Cfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdWFFD_ATTR1Ref_Click()
  on error resume next
  Item.WFFD_ATTR1.Refresh
  cmdWFFD_ATTR1Add_Click
End Sub
Private Sub cmdWFFD_ATTR1Cfg_Click()
    on error resume next 
    editWFFD_ATTR1.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;WFFD_editWFFD_ATTR1_&quot; For Output As #ff
    print #ff, editWFFD_ATTR1.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdWFFD_ATTR1Add_Click()
  on error resume next
 dim u as object
 If Item.WFFD_ATTR1.Count = 0 Then
   set u=Item.WFFD_ATTR1.Add

 End If
 Set editWFFD_ATTR1.Item = Item.WFFD_ATTR1.Item(1)
 editWFFD_ATTR1.InitPanel
 cmdWFFD_ATTR1Save.Enabled = True
End Sub
Private Sub cmdWFFD_ATTR1Del_Click()
  on error resume next
  if  editWFFD_ATTR1.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editWFFD_ATTR1.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editWFFD_ATTR1.item.parent.Delete editWFFD_ATTR1.item.id
    cmdWFFD_ATTR1Save.Enabled = false
    editWFFD_ATTR1.Enabled = false
    set editWFFD_ATTR1.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editWFFD_ATTR1_Changed()
 cmdWFFD_ATTR1Save.Enabled = true
End Sub
Private Sub cmdWFFD_ATTR1Save_Click()
  on error resume next
    if editWFFD_ATTR1.IsOK then
    editWFFD_ATTR1.Save
  on error goto bye
    editWFFD_ATTR1.item.Save
    cmdWFFD_ATTR1Save.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  editWFFD_ATTR1.item.REFRESH
  editWFFD_ATTR1.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_ATTR1Save,cmdWFFD_ATTR1Save.tag
  LoadBtnPictures cmdWFFD_ATTR1Ref,cmdWFFD_ATTR1Ref.tag
  LoadBtnPictures cmdWFFD_ATTR1Cfg,cmdWFFD_ATTR1Cfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;WFFD_editWFFD_ATTR1_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editWFFD_ATTR1.PanelCustomisationString = buf
  cmdWFFD_ATTR1Add_click
end sub
private sub OnTabClick()

      editWFFD_ATTR1.Top = 40 * Screen.TwipsPerPixelX
      editWFFD_ATTR1.Left = 5 * Screen.TwipsPerPixelX
      editWFFD_ATTR1.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editWFFD_ATTR1.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editWFFD_ATTR1.Save
if editWFFD_ATTR1.item.Changed then
  editWFFD_ATTR1.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editWFFD_ATTR1.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_ATTR1.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnWFFD_DOCS_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlWFFD_DOCS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlWFFD_DOCS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridWFFD_DOCS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridWFFD_DOCS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdWFFD_DOCSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DOCSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DOCSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdWFFD_DOCSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdWFFD_DOCSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdWFFD_DOCSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdWFFD_DOCSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupWFFD_DOCS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Документы для шага"/><Properties Name="Name" PropValue="mnuPopupWFFD_DOCS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuWFFD_DOCSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DOCSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuWFFD_DOCSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DOCSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuWFFD_DOCSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuWFFD_DOCSOpen"/></ControlData><ControlData Name="mnuWFFD_DOCSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSRef"/></ControlData><ControlData Name="mnuWFFD_DOCSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuWFFD_DOCSS1"/></ControlData><ControlData Name="mnuWFFD_DOCSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuWFFD_DOCSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuWFFD_DOCSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSCOPY"/></ControlData><ControlData Name="mnuWFFD_DOCSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSCUT"/></ControlData><ControlData Name="mnuWFFD_DOCSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSPASTE"/></ControlData><ControlData Name="mnuWFFD_DOCSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSCHANGE"/></ControlData><ControlData Name="mnuWFFD_DOCSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSCLEAN"/></ControlData></ControlData><ControlData Name="mnuWFFD_DOCSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuWFFD_DOCSPrn"/></ControlData><ControlData Name="mnuWFFD_DOCSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuWFFD_DOCSCfg"/></ControlData><ControlData Name="mnuWFFD_DOCSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuWFFD_DOCSFind"/></ControlData></ControlData><ControlData Name="menuTimerWFFD_DOCS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerWFFD_DOCS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndWFFD_DOCS as object
private menuActionWFFD_DOCS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdWFFD_DOCSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridWFFD_DOCS,&quot;gridWFFD_DOCS&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_DOCSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridWFFD_DOCS,&quot;Документы для шага&quot;
Set jset = Nothing
End Sub

Private Sub cmdWFFD_DOCSRef_Click()
  on error resume next
  item.WFFD_DOCS.Refresh
  gridWFFD_DOCS.itemCount = item.WFFD_DOCS.count
  gridWFFD_DOCS.Refetch
  gridWFFD_DOCS.Refresh
End Sub
Private Sub cmdWFFD_DOCSAcc_Click()
On Error Resume Next
If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
If gridWFFD_DOCS.Row &gt; 0 Then
 If gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_DOCS.RowBookmark(gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdWFFD_DOCSEdit_Click()
  on error resume next
If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
If gridWFFD_DOCS.Row &gt; 0 then
 If gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_DOCS.RowBookmark(gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmWFFD_DOCS_.Item = u
    again: frmWFFD_DOCS_.NotFirstTime = False
    frmWFFD_DOCS_.OnInit
    frmWFFD_DOCS_.Show vbModal
    If frmWFFD_DOCS_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridWFFD_DOCS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdWFFD_DOCSDel_Click()
  on error resume next
  gridWFFD_DOCS.Delete
End Sub
Private Sub cmdWFFD_DOCSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.WFFD_DOCS.Add()

      Set frmWFFD_DOCS_.Item = u
      again: frmWFFD_DOCS_.NotFirstTime = False
      frmWFFD_DOCS_.OnInit
      frmWFFD_DOCS_.Show vbModal
      If frmWFFD_DOCS_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridWFFD_DOCS.ItemCount = Item.WFFD_DOCS.Count
        gridWFFD_DOCS.Refresh
        gridWFFD_DOCS.RefreshGroups
        gridWFFD_DOCS.Refreshsort
        gridWFFD_DOCS.MoveToBookmark u.ID &amp; &quot;WFFD_DOCS&quot;
      Else
        Item.WFFD_DOCS.Delete u.ID
        Item.WFFD_DOCS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdWFFD_DOCSFnd_Click()
  on error resume next
  fndWFFD_DOCS.ShowForm
End Sub
Private Sub cmdWFFD_DOCSRun_Click()
  on error resume next
  gridWFFD_DOCS_DblClick
End Sub
Private Sub gridWFFD_DOCS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.WFFD_DOCS.LoadRow gridWFFD_DOCS, RowIndex, Bookmark, Values
End Sub
Private Sub gridWFFD_DOCS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;WFFD_DOCS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridWFFD_DOCS_DblClick()
  cmdWFFD_DOCSEdit_Click
End Sub
Private Sub gridWFFD_DOCS_KeyPress(KeyAscii As Integer)
  If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndWFFD_DOCS.FindOnPress KeyAscii
End Sub

Private Sub gridWFFD_DOCS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridWFFD_DOCS.Row And LastRow &gt; 0 Then
  gridWFFD_DOCS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridWFFD_DOCS.GetRowData(gridWFFD_DOCS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuWFFD_DOCSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.WFFD_DOCS.Add()
    If GetFromBuffer(u) Then
      gridWFFD_DOCS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridWFFD_DOCS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdWFFD_DOCSCfg_Click
        End If
    End If
end sub

private sub gridWFFD_DOCS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupWFFD_DOCS
End If
end sub
private sub mnuWFFD_DOCSAdd_click()
   menuActionWFFD_DOCS =&quot;ADD&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSEdit_click()
   menuActionWFFD_DOCS =&quot;EDIT&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSDelete_click()
   menuActionWFFD_DOCS =&quot;DEL&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSOpen_click()
   menuActionWFFD_DOCS =&quot;RUN&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSRef_click()
   menuActionWFFD_DOCS =&quot;REF&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
  Private Sub mnuWFFD_DOCSCOPY_Click()
    On Error Resume Next
    If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
    If gridWFFD_DOCS.Row &gt; 0 Then
     If gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_DOCS.RowBookmark(gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuWFFD_DOCSCUT_Click()
    On Error Resume Next
    If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
    If gridWFFD_DOCS.Row &gt; 0 Then
     If gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridWFFD_DOCS.RowBookmark(gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridWFFD_DOCS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuWFFD_DOCSCHANGE_Click()
  On Error Resume Next
  If gridWFFD_DOCS.ItemCount = 0 Then Exit Sub
  If gridWFFD_DOCS.Row &gt; 0 Then
   If gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridWFFD_DOCS.RowBookmark(gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridWFFD_DOCS.ItemCount = u.parent.Count
      gridWFFD_DOCS.RefreshRowIndex gridWFFD_DOCS.RowIndex(gridWFFD_DOCS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuWFFD_DOCSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuWFFD_DOCSPrn_click()
   menuActionWFFD_DOCS =&quot;PRN&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSCfg_click()
   menuActionWFFD_DOCS =&quot;CFG&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSFind_click()
   menuActionWFFD_DOCS =&quot;FND&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub mnuWFFD_DOCSAcc_click()
   menuActionWFFD_DOCS =&quot;ACC&quot;
   menuTimerWFFD_DOCS.enabled = true
end sub
private sub menuTimerWFFD_DOCS_timer()
   menuTimerWFFD_DOCS.enabled = false
   if menuActionWFFD_DOCS =&quot;ADD&quot; then cmdWFFD_DOCSADD_CLick
   if menuActionWFFD_DOCS =&quot;EDIT&quot; then cmdWFFD_DOCSEDIT_CLick
   if menuActionWFFD_DOCS =&quot;DEL&quot; then cmdWFFD_DOCSDEL_CLick
   if menuActionWFFD_DOCS =&quot;RUN&quot; then cmdWFFD_DOCSRUN_CLick
   if menuActionWFFD_DOCS =&quot;REF&quot; then cmdWFFD_DOCSREF_CLick
   if menuActionWFFD_DOCS =&quot;PRN&quot; then cmdWFFD_DOCSPRN_CLick
   if menuActionWFFD_DOCS =&quot;CFG&quot; then cmdWFFD_DOCSCFG_CLick
   if menuActionWFFD_DOCS =&quot;FND&quot; then cmdWFFD_DOCSFND_CLick
   if menuActionWFFD_DOCS =&quot;ACC&quot; then cmdWFFD_DOCSACC_CLick
   menuActionWFFD_DOCS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdWFFD_DOCSAdd,cmdWFFD_DOCSAdd.tag
  LoadBtnPictures cmdWFFD_DOCSEdit,cmdWFFD_DOCSEdit.tag
  LoadBtnPictures cmdWFFD_DOCSDel,cmdWFFD_DOCSDel.tag
  LoadBtnPictures cmdWFFD_DOCSRef,cmdWFFD_DOCSRef.tag
  LoadBtnPictures cmdWFFD_DOCSPrn,cmdWFFD_DOCSPrn.tag
  LoadBtnPictures cmdWFFD_DOCSFnd,cmdWFFD_DOCSFnd.tag
  item.WFFD_DOCS.PrepareGrid gridWFFD_DOCS
  LoadGridLayout gridWFFD_DOCS
  Set fndWFFD_DOCS = Nothing
  On Error Resume Next
  Set fndWFFD_DOCS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndWFFD_DOCS.Init gridWFFD_DOCS
end sub
private sub OnTabClick()

      gridWFFD_DOCS.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_DOCS.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_DOCS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_DOCS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridWFFD_DOCS.Top = 40 * Screen.TwipsPerPixelX
      gridWFFD_DOCS.Left = 5 * Screen.TwipsPerPixelX
      gridWFFD_DOCS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridWFFD_DOCS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlWFFD_DOCS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndWFFD_DOCS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_common" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_common_"><Properties Name="Name" PropValue="pnlWFFD_common"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_ShortCut" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_ShortCut_"><Properties Name="Name" PropValue="pnlWFFD_ShortCut"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_Doer" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_Doer_"><Properties Name="Name" PropValue="pnlWFFD_Doer"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_Results" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_Results_"><Properties Name="Name" PropValue="pnlWFFD_Results"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_CustomParam" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_CustomParam_"><Properties Name="Name" PropValue="pnlWFFD_CustomParam"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_ATTR1" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_ATTR1_"><Properties Name="Name" PropValue="pnlWFFD_ATTR1"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlWFFD_DOCS" ControlIndex="0" PROGID="WFFDGUI.vpnWFFD_DOCS_"><Properties Name="Name" PropValue="pnlWFFD_DOCS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Описание функции процесса"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
private sub ts_click()
  on error resume next
  pnlWFFD_DOCS.Visible = False
  pnlWFFD_ATTR1.Visible = False
  pnlWFFD_CustomParam.Visible = False
  pnlWFFD_Results.Visible = False
  pnlWFFD_Doer.Visible = False
  pnlWFFD_ShortCut.Visible = False
  pnlWFFD_common.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;WFFD_common&quot;
     With pnlWFFD_common
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_common.OnClick item,parentform
     End With
   Case &quot;WFFD_ShortCut&quot;
     With pnlWFFD_ShortCut
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_ShortCut.OnClick item,parentform
     End With
   Case &quot;WFFD_Doer&quot;
     With pnlWFFD_Doer
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_Doer.OnClick item,parentform
     End With
   Case &quot;WFFD_Results&quot;
     With pnlWFFD_Results
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_Results.OnClick item,parentform
     End With
   Case &quot;WFFD_CustomParam&quot;
     With pnlWFFD_CustomParam
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_CustomParam.OnClick item,parentform
     End With
   Case &quot;WFFD_ATTR1&quot;
     With pnlWFFD_ATTR1
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_ATTR1.OnClick item,parentform
     End With
   Case &quot;WFFD_DOCS&quot;
     With pnlWFFD_DOCS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlWFFD_DOCS.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Функция процесса&quot;
ts.Tabs.Item(1).key = &quot;WFFD_common&quot;
pnlWFFD_common.OnInit item, parentForm
call ts.Tabs.Add(, &quot;WFFD_ShortCut&quot;, &quot;Ярлыки&quot;)
pnlWFFD_ShortCut.OnInit item, parentForm
call ts.Tabs.Add(, &quot;WFFD_Doer&quot;, &quot;Исполнители&quot;)
pnlWFFD_Doer.OnInit item, parentForm
call ts.Tabs.Add(, &quot;WFFD_Results&quot;, &quot;Возможные результаты&quot;)
pnlWFFD_Results.OnInit item, parentForm
call ts.Tabs.Add(, &quot;WFFD_CustomParam&quot;, &quot;Дополнительные параметры&quot;)
pnlWFFD_CustomParam.OnInit item, parentForm
call ts.Tabs.Add(, &quot;WFFD_ATTR1&quot;, &quot;Дополнительные атрибуты&quot;)
pnlWFFD_ATTR1.OnInit item, parentForm
call ts.Tabs.Add(, &quot;WFFD_DOCS&quot;, &quot;Документы для шага&quot;)
pnlWFFD_DOCS.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;WFFD&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlWFFD_common.CloseClass
 pnlWFFD_ShortCut.CloseClass
 pnlWFFD_Doer.CloseClass
 pnlWFFD_Results.CloseClass
 pnlWFFD_CustomParam.CloseClass
 pnlWFFD_ATTR1.CloseClass
 pnlWFFD_DOCS.CloseClass
End Sub
public sub OnSave()
 pnlWFFD_common.OnSave
 pnlWFFD_ShortCut.OnSave
 pnlWFFD_Doer.OnSave
 pnlWFFD_Results.OnSave
 pnlWFFD_CustomParam.OnSave
 pnlWFFD_ATTR1.OnSave
 pnlWFFD_DOCS.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlWFFD_common.IsChanged
m_IsChanged = m_IsChanged or pnlWFFD_ShortCut.IsChanged
m_IsChanged = m_IsChanged or pnlWFFD_Doer.IsChanged
m_IsChanged = m_IsChanged or pnlWFFD_Results.IsChanged
m_IsChanged = m_IsChanged or pnlWFFD_CustomParam.IsChanged
m_IsChanged = m_IsChanged or pnlWFFD_ATTR1.IsChanged
m_IsChanged = m_IsChanged or pnlWFFD_DOCS.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="WFFDGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Описание функции процесса"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin me
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            Else
                Cancel = -1
                Exit Sub
            End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          If p_col.Count &gt; 0 Then
            CheckIsOk = True
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                If Not rsfcheck Is Nothing Then
                  If Not rsfcheck.EOF Then
                    If rsfcheck!cnt &gt; 0 Then
                      CheckIsNew = False
                    End If
                  End If
                End If
                rsf.movenext
              wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;&quot; then

if Name=&quot;WFFD_common&quot; then 
 set FormByName = new frmWFFD_common_
 exit function
end if

if Name=&quot;WFFD_ShortCut&quot; then 
 set FormByName = new frmWFFD_ShortCut_
 exit function
end if

if Name=&quot;WFFD_Doer&quot; then 
 set FormByName = new frmWFFD_Doer_
 exit function
end if

if Name=&quot;WFFD_Results&quot; then 
 set FormByName = new frmWFFD_Results_
 exit function
end if

if Name=&quot;WFFD_DOCSTOPS&quot; then 
 set FormByName = new frmWFFD_DOCSTOPS_
 exit function
end if

if Name=&quot;WFFD_CustomParam&quot; then 
 set FormByName = new frmWFFD_CustomParam_
 exit function
end if

if Name=&quot;WFFD_ATTR1&quot; then 
 set FormByName = new frmWFFD_ATTR1_
 exit function
end if

if Name=&quot;WFFD_DOCS&quot; then 
 set FormByName = new frmWFFD_DOCS_
 exit function
end if

end if
end function
public sub LoadFromSkin( frm as form )
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; frm.name For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    frm.Tag = arr2(1)
  Case &quot;FormTop&quot;
    frm.Top = arr2(1)
  Case &quot;FormLeft&quot;
    frm.left = arr2(1)
  Case &quot;FormWidth&quot;
    frm.Width = arr2(1)
  Case &quot;FormHeight&quot;
    frm.Height = arr2(1)
  Case Else
    frm.Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s =&quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  set frm.icon = LoadPicture(s &amp; frm.tag)
end sub

public sub SaveToSkin( frm as form )
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;&quot;)
  If s = &quot;&quot; Then Exit Sub
  frm.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; frm.name
  Open s &amp; frm.name For output As #ff
  buf =  &quot;FormTag:&quot; &amp; frm.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; frm.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; frm.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; frm.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; frm.Height
  print #ff, buf
  Close #ff
end sub

Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
