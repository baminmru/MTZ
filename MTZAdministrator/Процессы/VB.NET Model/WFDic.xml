<?xml version="1.0"?>
<root><AttributeHolder Name="Name" Value="WFDic"/><AttributeHolder Name="ID" Value="{868B4096-8E17-489C-87AC-BBE258420BE3}"/><AttributeHolder Name="asmName" Value="WFDic"/><ModuleHolder ModuleName="WFDic" File="WFDic.vbproj"><BlockHolder BlockName="code" BlockCode="&lt;VisualStudioProject&gt;
    &lt;VisualBasic
        ProjectType = &quot;Local&quot;
        ProductVersion = &quot;7.10.3077&quot;
        SchemaVersion = &quot;2.0&quot;
        ProjectGuid = &quot;{C2699D43-9FD2-4A06-BC1A-3BF799423A08}&quot;
    &gt;
        &lt;Build&gt;
            &lt;Settings
        ApplicationIcon = &quot;&quot;
        AssemblyKeyContainerName = &quot;&quot;
        AssemblyName = &quot;WFDic&quot;
        AssemblyOriginatorKeyFile = &quot;&quot;
        AssemblyOriginatorKeyMode = &quot;None&quot;
        DefaultClientScript = &quot;JScript&quot;
        DefaultHTMLPageLayout = &quot;Grid&quot;
        DefaultTargetSchema = &quot;IE50&quot;
        DelaySign = &quot;false&quot;
        OutputType = &quot;Library&quot;
        RootNamespace = &quot;WFDic&quot;
        OptionCompare = &quot;Binary&quot;
        OptionExplicit = &quot;On&quot;
        OptionStrict = &quot;Off&quot;
        StartupObject = &quot;&quot;
      &gt;
                &lt;Config
                    Name = &quot;Debug&quot;
                    BaseAddress = &quot;285212672&quot;
                    ConfigurationOverrideFile = &quot;&quot;
                    DefineConstants = &quot;&quot;
                    DefineDebug = &quot;true&quot;
                    DefineTrace = &quot;true&quot;
                    DebugSymbols = &quot;true&quot;
                    IncrementalBuild = &quot;true&quot;
                    Optimize = &quot;false&quot;
                    OutputPath = &quot;bin\&quot;
                    RegisterForComInterop = &quot;false&quot;
                    RemoveIntegerChecks = &quot;false&quot;
                    TreatWarningsAsErrors = &quot;false&quot;
                    WarningLevel = &quot;1&quot;
                /&gt;
                &lt;Config
                    Name = &quot;Release&quot;
                    BaseAddress = &quot;285212672&quot;
                    ConfigurationOverrideFile = &quot;&quot;
                    DefineConstants = &quot;&quot;
                    DefineDebug = &quot;false&quot;
                    DefineTrace = &quot;true&quot;
                    DebugSymbols = &quot;false&quot;
                    IncrementalBuild = &quot;false&quot;
                    Optimize = &quot;true&quot;
                    OutputPath = &quot;bin\&quot;
                    RegisterForComInterop = &quot;false&quot;
                    RemoveIntegerChecks = &quot;false&quot;
                    TreatWarningsAsErrors = &quot;false&quot;
                    WarningLevel = &quot;1&quot;
                /&gt;
            &lt;/Settings&gt;
            &lt;References&gt;
                &lt;Reference
                    Name = &quot;System&quot;
                    AssemblyName = &quot;System&quot;
                /&gt;
                &lt;Reference
                    Name = &quot;System.Data&quot;
                    AssemblyName = &quot;System.Data&quot;
                /&gt;
                &lt;Reference
                    Name = &quot;System.XML&quot;
                    AssemblyName = &quot;System.Xml&quot;
                /&gt;
                &lt;Reference
                Name = &quot;MKSNManager&quot;
                AssemblyName = &quot;MKSNManager&quot;
                HintPath = &quot;C:\BAMI\MTZ.NET\MKSNMANAGER\bin\MKSNManager.dll&quot;
                /&gt;
            &lt;/References&gt;
      &lt;Imports&gt;
        &lt;Import Namespace = &quot;System&quot; /&gt;
        &lt;Import Namespace = &quot;System.Data&quot; /&gt;
        &lt;Import Namespace = &quot;System.Collections&quot; /&gt;
        &lt;Import Namespace = &quot;System.Xml&quot; /&gt;
      &lt;/Imports&gt;
        &lt;/Build&gt;
        &lt;Files&gt;
            &lt;Include&gt;
                &lt;File
                    RelPath = &quot;AssemblyInfo.vb&quot;
                    SubType = &quot;Code&quot;
                    BuildAction = &quot;Compile&quot;
                /&gt;
                &lt;File
                    RelPath = &quot;Application.vb&quot;
                    SubType = &quot;Code&quot;
                    BuildAction = &quot;Compile&quot;
                /&gt;

                &lt;File
                    RelPath = &quot;WFDic_func.vb&quot;
                    SubType = &quot;Code&quot;
                    BuildAction = &quot;Compile&quot;
                /&gt;
                &lt;File
                    RelPath = &quot;WFDic_func_col.vb&quot;
                    SubType = &quot;Code&quot;
                    BuildAction = &quot;Compile&quot;
                /&gt;

                &lt;File
                    RelPath = &quot;WFDic_presets.vb&quot;
                    SubType = &quot;Code&quot;
                    BuildAction = &quot;Compile&quot;
                /&gt;
                &lt;File
                    RelPath = &quot;WFDic_presets_col.vb&quot;
                    SubType = &quot;Code&quot;
                    BuildAction = &quot;Compile&quot;
                /&gt;

            &lt;/Include&gt;
        &lt;/Files&gt;
    &lt;/VisualBasic&gt;
&lt;/VisualStudioProject&gt;
"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="AssemblyInfo" File="AssemblyInfo.vb"><BlockHolder BlockName="code" BlockCode="
Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices
&lt;Assembly: AssemblyTitle(&quot;&quot;)&gt;
&lt;Assembly: AssemblyDescription(&quot;&quot;)&gt;
&lt;Assembly: AssemblyCompany(&quot;&quot;)&gt;
&lt;Assembly: AssemblyProduct(&quot;&quot;)&gt;
&lt;Assembly: AssemblyCopyright(&quot;&quot;)&gt;
&lt;Assembly: AssemblyTrademark(&quot;&quot;)&gt;
&lt;Assembly: CLSCompliant(True)&gt;
&lt;Assembly: Guid(&quot;2E85C396-938A-41A3-9D67-4756B6F74256&quot;)&gt;
&lt;Assembly: AssemblyVersion(&quot;1.0.*&quot;)&gt;
"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Application" File="Application.vb"><BlockHolder BlockName="code" BlockCode="
Option Explicit On

Imports System.xml
Imports MKSNManager

Namespace WFDic


public enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
public enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
public enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
public enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
public enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
end enum 
public enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
public enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
public enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
public enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
public enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
public enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
public enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
public enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
public enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
public enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
public enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_Kalendar_=5'Календарь
  FolderType_cls__=0' 
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
public enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
public enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
public enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
public enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
public enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
public enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
public enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
public enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
public enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
public enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
public enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
public enum enumPartType'PartType
  PartType_Kollekciy=1'Коллекция
  PartType_Rassirenie=3'Расширение
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
end enum 
public enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
public enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
public enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
public enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
public enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
public enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
public enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
public enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
public enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
public enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
public enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
public enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
public enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
public enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
public enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
public enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
public enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 

    Public Class Application
        Inherits MKSNManager.Document.Doc_Base


        Protected Overrides Function MyTypeName() As String
            MyTypeName = &quot;WFDic&quot;
        End Function

  Private m_WFDic_func As WFDic_func_col
        Public ReadOnly Property WFDic_func() As WFDic_func_col
            Get
                If m_WFDic_func Is Nothing Then
                    m_WFDic_func = New WFDic_func_col
                    m_WFDic_func.Application = Me
                    m_WFDic_func.Parent = Me
                    m_WFDic_func.Refresh()
                End If
                WFDic_func = m_WFDic_func
            End Get
        End Property

        Public Overrides Sub Dispose()
            WFDic_func.Dispose()
        End Sub

        Protected Overrides Function FindInCollections(ByVal Table As String, ByVal InstID As String) As MKSNManager.Document.DocRow_Base
        FindInCollections = Nothing
            dim mFindInCollections As MKSNManager.Document.DocRow_Base
            mFindInCollections = WFDic_func.FindObject(Table, InstID)
            if not mFindInCollections is nothing then return mFindInCollections
        End Function

        Protected Overrides Sub XMLLoadCollections(ByVal node As System.Xml.XmlNode, Optional ByVal LoadMode As Integer = 0)
            Dim e_list As XmlNodeList
            On Error Resume Next
            e_list = node.SelectNodes(&quot;WFDic_func_COL&quot;)
            WFDic_func.XMLLoad(e_list, LoadMode)
        End Sub

        Public Overrides Sub XMLSaveCollections(ByVal node As System.Xml.XmlElement, ByVal Xdom As System.Xml.XmlDocument)
            WFDic_func.XMLSave(node, Xdom)
        End Sub
Public Overrides Sub BatchUpdate()
  If Not Application.WorkOffline Then
    WFDic_func.BatchUpdate
  End If
End Sub
    End Class
End Namespace

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFDic_func" File="WFDic_func.vb"><BlockHolder BlockName="code" BlockCode="
Option Explicit On

Imports System
Imports System.IO
Imports MKSNManager
Imports System.xml
Imports System.Data
Imports System.Convert
Imports System.DateTime

Namespace WFDic
    Public Class WFDic_func
        Inherits MKSNManager.Document.DocRow_Base

            private m_StepClass  as enumWFStepClass
            private m_the_Comment  as STRING
            private m_ProgID  as String
            private m_RTMProgID  as String
            private m_IsMailStone  as enumBoolean
            private m_Name  as String
            private m_IntegrationData2  as String
            private m_EdtMode  as String
            private m_IconName  as String
            private m_IntegrationData1  as String
        private m_WFDic_presets As WFDic_presets_col

        Public Overrides Sub CleanFields()
            ' m_StepClass=   
            ' m_the_Comment=   
            ' m_ProgID=   
            ' m_RTMProgID=   
            ' m_IsMailStone=   
            ' m_Name=   
            ' m_IntegrationData2=   
            ' m_EdtMode=   
            ' m_IconName=   
            ' m_IntegrationData1=   
        End Sub
        Public Overrides Sub FillDataTable(ByRef DestDataTable As System.Data.DataTable)
            Dim dr As  DataRow
            dr = destdatatable.NewRow
            on error resume next
            dr(&quot;ID&quot;) =ID
            dr(&quot;Brief&quot;) =Brief
             select case StepClass
            case enumWFStepClass.WFStepClass_SimpleFunction
              dr (&quot;StepClass&quot;)  = &quot;SimpleFunction&quot;
              dr (&quot;StepClass_VAL&quot;)  = 0
            case enumWFStepClass.WFStepClass_StartFunction
              dr (&quot;StepClass&quot;)  = &quot;StartFunction&quot;
              dr (&quot;StepClass_VAL&quot;)  = 1
            case enumWFStepClass.WFStepClass_StopFunction
              dr (&quot;StepClass&quot;)  = &quot;StopFunction&quot;
              dr (&quot;StepClass_VAL&quot;)  = 2
            case enumWFStepClass.WFStepClass_PeriodicFunction
              dr (&quot;StepClass&quot;)  = &quot;PeriodicFunction&quot;
              dr (&quot;StepClass_VAL&quot;)  = 3
              end select 'StepClass
             dr(&quot;the_Comment&quot;) =the_Comment
             dr(&quot;ProgID&quot;) =ProgID
             dr(&quot;RTMProgID&quot;) =RTMProgID
             select case IsMailStone
            case enumBoolean.Boolean_Da
              dr (&quot;IsMailStone&quot;)  = &quot;Да&quot;
              dr (&quot;IsMailStone_VAL&quot;)  = -1
            case enumBoolean.Boolean_Net
              dr (&quot;IsMailStone&quot;)  = &quot;Нет&quot;
              dr (&quot;IsMailStone_VAL&quot;)  = 0
              end select 'IsMailStone
             dr(&quot;Name&quot;) =Name
             dr(&quot;IntegrationData2&quot;) =IntegrationData2
             dr(&quot;EdtMode&quot;) =EdtMode
             dr(&quot;IconName&quot;) =IconName
             dr(&quot;IntegrationData1&quot;) =IntegrationData1
            DestDataTable.Rows.Add (dr)
        End Sub

        Public Overrides Function FindInside(ByVal Table As String, ByVal RowID As String) As MKSNManager.Document.DocRow_Base
            dim mFindInside As MKSNManager.Document.DocRow_Base = Nothing
            mFindInside = WFDic_presets.FindObject(table,RowID)
            if not mFindInside is nothing then return mFindInside
            Return Nothing
        End Function

        Public Overrides Sub Pack(ByVal nv As MKSNManager.MKSN.NamedValues)
          nv.Add(&quot;StepClass&quot;, StepClass, dbtype.int16)
          nv.Add(&quot;the_Comment&quot;, the_Comment, dbtype.string)
          nv.Add(&quot;ProgID&quot;, ProgID, dbtype.string)
          nv.Add(&quot;RTMProgID&quot;, RTMProgID, dbtype.string)
          nv.Add(&quot;IsMailStone&quot;, IsMailStone, dbtype.int16)
          nv.Add(&quot;Name&quot;, Name, dbtype.string)
          nv.Add(&quot;IntegrationData2&quot;, IntegrationData2, dbtype.string)
          nv.Add(&quot;EdtMode&quot;, EdtMode, dbtype.string)
          nv.Add(&quot;IconName&quot;, IconName, dbtype.string)
          nv.Add(&quot;IntegrationData1&quot;, IntegrationData1, dbtype.string)
            nv.Add(PartName() &amp; &quot;id&quot;, ID, DbType.Guid)
        End Sub


        Public Overrides Sub Unpack(ByVal reader As System.Data.DataRow)
            on error resume next  
            If IsDBNull(reader.item(&quot;SecurityStyleID&quot;)) Then
                SecureStyleID = System.guid.Empty
            Else
                SecureStyleID = reader.item(&quot;SecurityStyleID&quot;)
            End If

            RowRetrived = True
            RetriveTime = Now
          m_StepClass=reader.item(&quot;StepClass&quot;)
          m_the_Comment=reader.item(&quot;the_Comment&quot;)
          m_ProgID=reader.item(&quot;ProgID&quot;)
          m_RTMProgID=reader.item(&quot;RTMProgID&quot;)
          m_IsMailStone=reader.item(&quot;IsMailStone&quot;)
          m_Name=reader.item(&quot;Name&quot;)
          m_IntegrationData2=reader.item(&quot;IntegrationData2&quot;)
          m_EdtMode=reader.item(&quot;EdtMode&quot;)
          m_IconName=reader.item(&quot;IconName&quot;)
          m_IntegrationData1=reader.item(&quot;IntegrationData1&quot;)
        End Sub
        Public Property StepClass() As enumWFStepClass
            Get
                LoadFromDatabase()
                StepClass = m_StepClass
                AccessTime = Now
            End Get
            Set(ByVal Value As enumWFStepClass )
                LoadFromDatabase()
                m_StepClass = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property the_Comment() As STRING
            Get
                LoadFromDatabase()
                the_Comment = m_the_Comment
                AccessTime = Now
            End Get
            Set(ByVal Value As STRING )
                LoadFromDatabase()
                m_the_Comment = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property ProgID() As String
            Get
                LoadFromDatabase()
                ProgID = m_ProgID
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_ProgID = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property RTMProgID() As String
            Get
                LoadFromDatabase()
                RTMProgID = m_RTMProgID
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_RTMProgID = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property IsMailStone() As enumBoolean
            Get
                LoadFromDatabase()
                IsMailStone = m_IsMailStone
                AccessTime = Now
            End Get
            Set(ByVal Value As enumBoolean )
                LoadFromDatabase()
                m_IsMailStone = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property Name() As String
            Get
                LoadFromDatabase()
                Name = m_Name
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_Name = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property IntegrationData2() As String
            Get
                LoadFromDatabase()
                IntegrationData2 = m_IntegrationData2
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_IntegrationData2 = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property EdtMode() As String
            Get
                LoadFromDatabase()
                EdtMode = m_EdtMode
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_EdtMode = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property IconName() As String
            Get
                LoadFromDatabase()
                IconName = m_IconName
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_IconName = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property IntegrationData1() As String
            Get
                LoadFromDatabase()
                IntegrationData1 = m_IntegrationData1
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_IntegrationData1 = Value
                ChangeTime = Now
            End Set
        End Property
        Public readonly Property WFDic_presets() As WFDic_presets_col
            Get
                if  m_WFDic_presets is nothing then
                  m_WFDic_presets = new WFDic_presets_col
                  m_WFDic_presets.Parent = me
                  m_WFDic_presets.Application = me.Application
                  m_WFDic_presets.Refresh
                end if
                WFDic_presets = m_WFDic_presets
                AccessTime = Now
            End Get
        End Property
        Protected Overrides sub XMLUnpack(ByVal node As System.Xml.XmlNode, Optional ByVal LoadMode As Integer = 0)
          Dim e_list As XmlNodeList
          on error resume next  
            StepClass = node.Attributes.GetNamedItem(&quot;StepClass&quot;).Value
            the_Comment = node.Attributes.GetNamedItem(&quot;the_Comment&quot;).Value
            ProgID = node.Attributes.GetNamedItem(&quot;ProgID&quot;).Value
            RTMProgID = node.Attributes.GetNamedItem(&quot;RTMProgID&quot;).Value
            IsMailStone = node.Attributes.GetNamedItem(&quot;IsMailStone&quot;).Value
            Name = node.Attributes.GetNamedItem(&quot;Name&quot;).Value
            IntegrationData2 = node.Attributes.GetNamedItem(&quot;IntegrationData2&quot;).Value
            EdtMode = node.Attributes.GetNamedItem(&quot;EdtMode&quot;).Value
            IconName = node.Attributes.GetNamedItem(&quot;IconName&quot;).Value
            IntegrationData1 = node.Attributes.GetNamedItem(&quot;IntegrationData1&quot;).Value
            e_list = node.SelectNodes(&quot;WFDic_presets_COL&quot;)
            WFDic_presets.XMLLoad(e_list,LoadMode)
             Changed = true
        End sub
        Public Overrides Sub Dispose()
            WFDic_presets.Dispose
        End Sub
        Protected Overrides sub XLMPack(ByVal node As System.Xml.XmlElement, ByVal Xdom As System.Xml.XmlDocument)
           on error resume next  
          node.SetAttribute(&quot;StepClass&quot;, StepClass)  
          node.SetAttribute(&quot;the_Comment&quot;, the_Comment)  
          node.SetAttribute(&quot;ProgID&quot;, ProgID)  
          node.SetAttribute(&quot;RTMProgID&quot;, RTMProgID)  
          node.SetAttribute(&quot;IsMailStone&quot;, IsMailStone)  
          node.SetAttribute(&quot;Name&quot;, Name)  
          node.SetAttribute(&quot;IntegrationData2&quot;, IntegrationData2)  
          node.SetAttribute(&quot;EdtMode&quot;, EdtMode)  
          node.SetAttribute(&quot;IconName&quot;, IconName)  
          node.SetAttribute(&quot;IntegrationData1&quot;, IntegrationData1)  
            WFDic_presets.XMLSave(node,xdom)
        End sub
Public Overrides Sub BatchUpdate()
If Not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
            WFDic_presets.BatchUpdate
End If
End Sub
    End Class
End Namespace

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFDic_presets" File="WFDic_presets.vb"><BlockHolder BlockName="code" BlockCode="
Option Explicit On

Imports System
Imports System.IO
Imports MKSNManager
Imports System.xml
Imports System.Data
Imports System.Convert
Imports System.DateTime

Namespace WFDic
    Public Class WFDic_presets
        Inherits MKSNManager.Document.DocRow_Base

            private m_Name  as String
            private m_the_Value  as String

        Public Overrides Sub CleanFields()
            ' m_Name=   
            ' m_the_Value=   
        End Sub
        Public Overrides Sub FillDataTable(ByRef DestDataTable As System.Data.DataTable)
            Dim dr As  DataRow
            dr = destdatatable.NewRow
            on error resume next
            dr(&quot;ID&quot;) =ID
            dr(&quot;Brief&quot;) =Brief
             dr(&quot;Name&quot;) =Name
             dr(&quot;the_Value&quot;) =the_Value
            DestDataTable.Rows.Add (dr)
        End Sub

        Public Overrides Function FindInside(ByVal Table As String, ByVal RowID As String) As MKSNManager.Document.DocRow_Base
            dim mFindInside As MKSNManager.Document.DocRow_Base = Nothing
            Return Nothing
        End Function

        Public Overrides Sub Pack(ByVal nv As MKSNManager.MKSN.NamedValues)
          nv.Add(&quot;Name&quot;, Name, dbtype.string)
          nv.Add(&quot;the_Value&quot;, the_Value, dbtype.string)
            nv.Add(PartName() &amp; &quot;id&quot;, ID, DbType.Guid)
        End Sub


        Public Overrides Sub Unpack(ByVal reader As System.Data.DataRow)
            on error resume next  
            If IsDBNull(reader.item(&quot;SecurityStyleID&quot;)) Then
                SecureStyleID = System.guid.Empty
            Else
                SecureStyleID = reader.item(&quot;SecurityStyleID&quot;)
            End If

            RowRetrived = True
            RetriveTime = Now
          m_Name=reader.item(&quot;Name&quot;)
          m_the_Value=reader.item(&quot;the_Value&quot;)
        End Sub
        Public Property Name() As String
            Get
                LoadFromDatabase()
                Name = m_Name
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_Name = Value
                ChangeTime = Now
            End Set
        End Property
        Public Property the_Value() As String
            Get
                LoadFromDatabase()
                the_Value = m_the_Value
                AccessTime = Now
            End Get
            Set(ByVal Value As String )
                LoadFromDatabase()
                m_the_Value = Value
                ChangeTime = Now
            End Set
        End Property
        Protected Overrides sub XMLUnpack(ByVal node As System.Xml.XmlNode, Optional ByVal LoadMode As Integer = 0)
          Dim e_list As XmlNodeList
          on error resume next  
            Name = node.Attributes.GetNamedItem(&quot;Name&quot;).Value
            the_Value = node.Attributes.GetNamedItem(&quot;the_Value&quot;).Value
             Changed = true
        End sub
        Public Overrides Sub Dispose()
        End Sub
        Protected Overrides sub XLMPack(ByVal node As System.Xml.XmlElement, ByVal Xdom As System.Xml.XmlDocument)
           on error resume next  
          node.SetAttribute(&quot;Name&quot;, Name)  
          node.SetAttribute(&quot;the_Value&quot;, the_Value)  
        End sub
Public Overrides Sub BatchUpdate()
If Not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End Sub
    End Class
End Namespace

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFDic_func_col" File="WFDic_func_col.vb"><BlockHolder BlockName="code" BlockCode="
Option Explicit On

Imports MKSNManager
Imports System
Imports System.xml
Imports System.Data

Namespace WFDic
    Public Class WFDic_func_col
        Inherits MKSNManager.Document.DocCollection_Base

        Public Overrides Function ChildPartName() As String
            ChildPartName = &quot;WFDic_func&quot;
        End Function

        Protected Overrides Function CreateDataTable() As System.Data.DataTable
            Dim dt As DataTable
            dt = New DataTable
            dt.Columns.Add(&quot;ID&quot;, GetType(System.guid))
            dt.Columns.Add(&quot;Brief&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;StepClass_VAL&quot; , Gettype(System.Int16))
            dt.Columns.Add(&quot;StepClass&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;the_Comment&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;ProgID&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;RTMProgID&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;IsMailStone_VAL&quot; , Gettype(System.Int16))
            dt.Columns.Add(&quot;IsMailStone&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;Name&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;IntegrationData2&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;EdtMode&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;IconName&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;IntegrationData1&quot;, Gettype(System.string))
            return dt
        End Function

        Protected Overrides Function NewItem() As MKSNManager.Document.DocRow_Base
            NewItem = New WFDic_func
        End Function
        Public Function GetItem( vIndex as object ) As WFDic.WFDic_func
            on error resume next
            GetItem = Convert.ChangeType(mybase.Item(vIndex), GetType(WFDic.WFDic_func))
        End Function
        Public Shadows Function Item( vIndex as object ) As WFDic.WFDic_func
            on error resume next
            return GetItem(vIndex)
        End Function
    End Class
End Namespace

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WFDic_presets_col" File="WFDic_presets_col.vb"><BlockHolder BlockName="code" BlockCode="
Option Explicit On

Imports MKSNManager
Imports System
Imports System.xml
Imports System.Data

Namespace WFDic
    Public Class WFDic_presets_col
        Inherits MKSNManager.Document.DocCollection_Base

        Public Overrides Function ChildPartName() As String
            ChildPartName = &quot;WFDic_presets&quot;
        End Function

        Protected Overrides Function CreateDataTable() As System.Data.DataTable
            Dim dt As DataTable
            dt = New DataTable
            dt.Columns.Add(&quot;ID&quot;, GetType(System.guid))
            dt.Columns.Add(&quot;Brief&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;Name&quot;, Gettype(System.string))
            dt.Columns.Add(&quot;the_Value&quot;, Gettype(System.string))
            return dt
        End Function

        Protected Overrides Function NewItem() As MKSNManager.Document.DocRow_Base
            NewItem = New WFDic_presets
        End Function
        Public Function GetItem( vIndex as object ) As WFDic.WFDic_presets
            on error resume next
            GetItem = Convert.ChangeType(mybase.Item(vIndex), GetType(WFDic.WFDic_presets))
        End Function
        Public Shadows Function Item( vIndex as object ) As WFDic.WFDic_presets
            on error resume next
            return GetItem(vIndex)
        End Function
    End Class
End Namespace

"><FormData Name=""/></BlockHolder></ModuleHolder></root>
