<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="dll"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221}"/><AttributeHolder Name="Name" Value="t_DATACURR"/><AttributeHolder Name="Description" Value="Данные"/><ModuleHolder ModuleName="Application" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="multiuse"/><BlockHolder BlockName="'description" BlockCode="'корневой интерфейс документа (Данные)
private m_Logger as MTZUtil.Logger
private m_MTZSession as MTZSession.Session
private m_Manager as MTZManager.Main
Private findCash As Collection
private m_ID as string
private m_SecureStyleID as string
private m_StatusID as string
private m_Name as string
private const m_TypeName as string=&quot;t_DATACURR&quot;
private m_WorkOffline as boolean
private m_AutoLoadPart as boolean


enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
enum enumPCB_FileType'Тип файла
  PCB_FileType_Proekt_PP=0'Проект ПП
  PCB_FileType_HZ=1'ХЗ
end enum 
enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
enum enumtypeFace'Физическое лицо \ Юрифическое лицо
  typeFace_FizLico=0'ФизЛицо
  typeFace_UrLico=1'ЮрЛицо
end enum 
enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Element_oformleniy=5'Элемент оформления
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
end enum 
enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
enum enumtypePackage'Тип отправления
  typePackage_Vse=-1'Все
  typePackage_Tovar=1'Товар
  typePackage_Dokumenti=0'Документы
end enum 
enum enumPCB_HoleType'Тип отверстия
  PCB_HoleType_Gluhoe=2'Глухое
  PCB_HoleType_Metalizirovannoe=0'Метализированное
  PCB_HoleType_Nemetallizirovannoe=1'Неметаллизированное
end enum 
enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
enum enumTypeSempling'Тип выборки
  TypeSempling_Klienti=-1'Клиенты
  TypeSempling_Adresati_operatorov=0'Адресаты операторов
  TypeSempling_Spisok_adresov_SPb=2'Список адресов СПб
  TypeSempling_Spisok_adresatov=1'Список адресатов
end enum 
enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
enum enumDeliveryOn'
  DeliveryOn_Gorod=4'Город
  DeliveryOn_Strana=1'Страна
  DeliveryOn_Megdunarodnay=0'Международная
  DeliveryOn_Strana2=2'Страна2
  DeliveryOn_Sub_ekt=3'Субъект
end enum 
enum enumtypeOperatorSystem'
  typeOperatorSystem_Menedger=2'Менеджер
  typeOperatorSystem_Procee=0'Прочее
  typeOperatorSystem_Operator=1'Оператор
end enum 
enum enumstateNomen'
  stateNomen_Pereadresaciy=6'Переадресация
  stateNomen_Oformlyetsy=0'Оформляется
  stateNomen_Dostavleno=4'Доставлено
  stateNomen_V_processe=3'В процессе
  stateNomen_Vozvrat=5'Возврат
  stateNomen_Prinyto=2'Принято
end enum 
enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_cls__=0'cls__
  FolderType_Kalendar_=5'Календарь
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
enum enummsgState'Состояние заявки
  msgState_Sostoynie_zayvki=0'Состояние заявки
  msgState_Soobseno_abonentu=1'Сообщено абоненту
  msgState_Abonent_ne_otvetil=2'Абонент не ответил
  msgState_Promegutocniy_otvet=3'Промежуточный ответ
end enum 
enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Na_istocnik_dannih=3'На источник данных
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
enum enumtypeOrder'
  typeOrder_Bezadresniy_zakaz=0'Безадресный заказ
  typeOrder_Adresniy_zakaz=1'Адресный заказ
end enum 
enum enummsgResult'Результат
  msgResult_Vipolneno=2'Выполнено
  msgResult_V_rabote=1'В работе
  msgResult_Rezul_tat=0'Результат
end enum 
enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
enum enumtypeDocOrder'Тип документов для печати заказчику
  typeDocOrder_Nalicniy_OPNPKO_PLS_kasDOTcekCLS=1'Наличный (ПКО + кас.чек)
  typeDocOrder_Nalicniy_OPNtovarniy_cek_PLS_kasDOTcekCLS=0'Наличный (товарный чек + кас.чек)
  typeDocOrder_Beznalicniy_rascet=3'Безналичный расчет
end enum 
enum enumPCB_LayerP'Представление поля
  PCB_LayerP_Negativ=2'Негатив
  PCB_LayerP_Ne_imeet_znaceniy=0'Не имеет значения
  PCB_LayerP_Pozitiv=1'Позитив
end enum 
enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
enum enumPartType'PartType
  PartType_Rassirenie=3'Расширение
  PartType_Kollekciy=1'Коллекция
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
  PartType_Rassirenie_s_dannimi=4'Расширение с данными
end enum 
enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
enum enumtypeClient'Тип заказчика
  typeClient_Razoviy=0'Разовый
end enum 
enum enumtypeNomen'Тип номенкатуры
  typeNomen_Listovki=2'Листовки
  typeNomen_Tovar=1'Товар
  typeNomen_GazetiCOMA_gurnaliCOMA_brosuri=4'Газеты, журналы, брошюры
  typeNomen_Pis_mo=3'Письмо
  typeNomen_Dokument=0'Документ
end enum 
enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
enum enumtypePersonPay'
  typePersonPay_Otpravitel_=0'Отправитель
  typePersonPay_Polucatel_=1'Получатель
end enum 
enum enumJournalLinkType'Для связи журналов друг с другом
  JournalLinkType_Ssilka_na_stroku=2'Ссылка на строку
  JournalLinkType_Ssilka_na_ob_ekt=1'Ссылка на объект
  JournalLinkType_Svyzka_InstanceID_OPNv_peredlah_ob_ektaCLS=3'Связка InstanceID (в передлах объекта)
  JournalLinkType_Svyzka_ParentStructRowID__OPNv_peredlah_ob_ektaCLS=4'Связка ParentStructRowID  (в передлах объекта)
  JournalLinkType_Net=0'Нет
end enum 
enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
enum enumtypePay'Сдельная \ Ставка
  typePay_Stavka=1'Ставка
  typePay_Sdel_nay=0'Сдельная
end enum 
enum enumPCB_TaskType'Тип задачи
  PCB_TaskType_Dostavka=4'Доставка
  PCB_TaskType_Izgotovlenie_PP=1'Изготовление ПП
  PCB_TaskType_Postavka_komplektuusih=2'Поставка комплектующих
  PCB_TaskType_Montag_PP=0'Монтаж ПП
  PCB_TaskType_Proektirovanie_PP=3'Проектирование ПП
end enum 
enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
enum enumtypeReceiv'
  typeReceiv_PTS=1'ПТС
  typeReceiv_SVS=0'СВС
end enum 
enum enumPCB_CustomerType'Статус заказчика
  PCB_CustomerType_Real_niy=1'Реальный
  PCB_CustomerType_Potencial_niy=0'Потенциальный
end enum 
enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
enum enumtypeRowCheque'Тип строки чека
  typeRowCheque_PO=1'ПО
  typeRowCheque_Procee=0'Прочее
  typeRowCheque_Prostoe_PO=4'Простое ПО
  typeRowCheque_dopDOTusluga_PO=2'доп.услуга ПО
  typeRowCheque_dopDOTusluga_zakaza=3'доп.услуга заказа
  typeRowCheque_Tovar=5'Товар
end enum 
enum enumPCB_clear'Тип задачи
  PCB_clear_Zadaca_1=1'Задача 1
  PCB_clear_Zadaca_2=0'Задача 2
end enum 
enum enumtypeTariff'
  typeTariff_Usluga=1'Услуга
  typeTariff_Dostavka=0'Доставка
end enum 
enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
enum enumtypeTRF'Тип тарифа СС
  typeTRF_Tarif_podrydcika=0'Тариф подрядчика
  typeTRF_Tarif_klienta=1'Тариф клиента
  typeTRF_Obsiy_tarif=-1'Общий тариф
end enum 
enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
enum enumtypeCourier'Договор \ ТрудКнижка
  typeCourier_Trudovay_knigka=1'Трудовая книжка
  typeCourier_Dogovor_podryda=0'Договор подряда
end enum 
enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 
private m_DC_HEADER as DC_HEADER_col
private m_DATACURR_M as DATACURR_M_col
private m_DATACURR_H as DATACURR_H_col
private m_DATACURR_D as DATACURR_D_col
private m_DATACURR_T as DATACURR_T_col
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="


'Название типа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TypeName
public property get TypeName() as string
  TypeName = m_TypeName
end property


'Отладочный компонент
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZUtil.Logger
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZUtil.Logger
' Set variable = me. Logger
public property get Logger() as MTZUtil.Logger
  if m_Logger is nothing then
    set m_Logger = new MTZUtil.Logger
    m_Logger.CreateLog TypeName &amp; &quot;_&quot; &amp; ID ,TypeName
  end if
  set Logger = m_Logger
end property


'Получить Название документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Name
public property get Name() as string
  Name = m_Name
end property


'Задать название документа
'Parameters:
'[IN][OUT]  n , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Name = value
public property Let Name(n as string)
  m_Name = n
end property


'Получить корневой объект системы - менеджер документов
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZManager.Main
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZManager.Main
' Set variable = me. Manager
public property get Manager() as MTZManager.Main
  set Manager = m_Manager
end property


'Задать менеджер документов
'Parameters:
'[IN][OUT]  m , тип параметра: MTZManager.Main  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Manager = value
public property Set Manager(m as MTZManager.Main)
  if not m_Manager is nothing then exit property
  set m_Manager = m
  Logger.Message &quot;Manager defined&quot;
end property


'Получить текущую сессию пользователя
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZSession.Session
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZSession.Session
' Set variable = me. MTZSession
public property get MTZSession() as MTZSession.Session
  set MTZSession = m_MTZSession
end property


'Задть текущую сессию пользователя
'Parameters:
'[IN][OUT]  m , тип параметра: MTZSession.Session  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. MTZSession = value
public property Set MTZSession(m as MTZSession.Session)
  if not m_MTZSession is nothing then exit property
  set m_MTZSession = m
  Logger.Message &quot;Session defined&quot;
  m_AutoLoadPart=true
end property


'Признак - работа без соединения с базой
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. WorkOffline
public property Get WorkOffline() as boolean
    WorkOffline = m_WorkOffline
end property


'Получить значение признака работы без соединения
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. WorkOffline = value
public property Let WorkOffline(v as boolean)
  if MTZSession is nothing then 
    m_WorkOffline = false
  else 
    m_WorkOffline = v
  end if 
end property


'Получить признак автоматической загрузки всеех полей
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. AutoLoadPart
public property Get AutoLoadPart() as boolean
    AutoLoadPart = m_AutoLoadPart
end property


'Признак загрузки всех полей (не только идентификатора)
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AutoLoadPart = value
public property Let AutoLoadPart(v as boolean)
    m_AutoLoadPart = v
end property


'Идентификатор документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  ID = m_ID
end property


'Задать идентификатор документа
'Parameters:
'[IN][OUT]  v , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
public property Let ID(v as string)
  m_ID=v
end property


'Родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = nothing
end property


'Корневой объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = me
end property


'Добавить в оптимизтор поиска строку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string, 
'[IN]   Item , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.AddToCash({параметры})
public Sub AddToCash( byval Key as string, byval Item as Object)
  on error resume next
  findCash.Add Item,Key
end sub


'Исключить из оптимизатора сторку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string  - ...
'See Also:
'Example:
'  call me.RemoveFromCash({параметры})
public Sub RemoveFromCash( byval Key as string)
  on error resume next
  findCash.Remove Key
end sub

'Задать идентификатор стиля защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
public property let SecureStyleID(byval newID as string)
  Secure newID
  GetStatus
end property

'Получить идентификатор стиля защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  GetStatus
  SecureStyleID = m_SecureStyleID
end property

'Задать идентификатор сосотяния документа
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. StatusID = value
public property let StatusID(byval newID as string)
    SetStatus newID
    GetStatus
end property

'Получить идентификатор состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusID
public property Get StatusID() as string
  GetStatus
  StatusID = m_StatusID
end property

'Получить название состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusName
public property Get StatusName() as string
  GetStatus
  StatusName=&quot;&quot;
end property

'Даные раздела Заголовок
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса DC_HEADER_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER_col
' Set variable = me. DC_HEADER (...параметры...)
public property Get DC_HEADER (optional byval Refresh as boolean = true) as DC_HEADER_col
 if m_DC_HEADER is nothing then
   set  m_DC_HEADER = new DC_HEADER_col
   set m_DC_HEADER.Parent = me
   set m_DC_HEADER.Application = me.Application
   if Refresh then m_DC_HEADER.Refresh
 end if
 set  DC_HEADER = m_DC_HEADER
end property

'Даные раздела Мгновенные значения
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса DATACURR_M_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M_col
' Set variable = me. DATACURR_M (...параметры...)
public property Get DATACURR_M (optional byval Refresh as boolean = true) as DATACURR_M_col
 if m_DATACURR_M is nothing then
   set  m_DATACURR_M = new DATACURR_M_col
   set m_DATACURR_M.Parent = me
   set m_DATACURR_M.Application = me.Application
   if Refresh then m_DATACURR_M.Refresh
 end if
 set  DATACURR_M = m_DATACURR_M
end property

'Даные раздела Часовые архивы
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса DATACURR_H_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H_col
' Set variable = me. DATACURR_H (...параметры...)
public property Get DATACURR_H (optional byval Refresh as boolean = true) as DATACURR_H_col
 if m_DATACURR_H is nothing then
   set  m_DATACURR_H = new DATACURR_H_col
   set m_DATACURR_H.Parent = me
   set m_DATACURR_H.Application = me.Application
   if Refresh then m_DATACURR_H.Refresh
 end if
 set  DATACURR_H = m_DATACURR_H
end property

'Даные раздела Суточный архив
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса DATACURR_D_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D_col
' Set variable = me. DATACURR_D (...параметры...)
public property Get DATACURR_D (optional byval Refresh as boolean = true) as DATACURR_D_col
 if m_DATACURR_D is nothing then
   set  m_DATACURR_D = new DATACURR_D_col
   set m_DATACURR_D.Parent = me
   set m_DATACURR_D.Application = me.Application
   if Refresh then m_DATACURR_D.Refresh
 end if
 set  DATACURR_D = m_DATACURR_D
end property

'Даные раздела Суммарные показатели
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса DATACURR_T_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T_col
' Set variable = me. DATACURR_T (...параметры...)
public property Get DATACURR_T (optional byval Refresh as boolean = true) as DATACURR_T_col
 if m_DATACURR_T is nothing then
   set  m_DATACURR_T = new DATACURR_T_col
   set m_DATACURR_T.Parent = me
   set m_DATACURR_T.Application = me.Application
   if Refresh then m_DATACURR_T.Refresh
 end if
 set  DATACURR_T = m_DATACURR_T
end property

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public sub CloseClass()
 on error resume next
 Set findCash = Nothing

  if not m_DC_HEADER is nothing then 
    m_DC_HEADER.CloseClass 
    set m_DC_HEADER = nothing 
  end if
  if not m_DATACURR_M is nothing then 
    m_DATACURR_M.CloseClass 
    set m_DATACURR_M = nothing 
  end if
  if not m_DATACURR_H is nothing then 
    m_DATACURR_H.CloseClass 
    set m_DATACURR_H = nothing 
  end if
  if not m_DATACURR_D is nothing then 
    m_DATACURR_D.CloseClass 
    set m_DATACURR_D = nothing 
  end if
  if not m_DATACURR_T is nothing then 
    m_DATACURR_T.CloseClass 
    set m_DATACURR_T = nothing 
  end if
  if not m_manager is nothing then
    set m_manager = nothing
  end if
  if not m_MTZSession is nothing then
    set m_MTZSession = nothing
  end if
  if not m_Logger is nothing then
    m_Logger.Message &quot;Application.CloseClass&quot; 
    set m_Logger = nothing
  end if
end sub

'Поиск  строки раздела по ключу и названию раздела во всех документах
'Parameters:
'[IN]   StrID , тип параметра: String, 
'[IN]   RowID , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as Object
' Set variable = me.FindRowObject(...параметры...)
Public Function FindRowObject(ByVal StrID As String, ByVal RowID As String) As Object
  Dim obj As Object
  Dim Rowobj As Object
  Dim i As Long
Dim m_FindObject As Object

If StrID = &quot;&quot; Then Exit Function
If RowID = &quot;&quot; Then Exit Function
If findCash Is Nothing Then
 Set findCash = New Collection
End If
On Error Resume Next
Set m_FindObject = findCash.Item(StrID &amp; RowID)
If Not m_FindObject Is Nothing Then
  If m_FindObject.Application Is Nothing Then
    Set m_FindObject = Nothing
    findCash.Remove StrID &amp; RowID
  Else
   Set FindRowObject = m_FindObject
   Exit Function
  End If
End If

  Dim rpl As RowParentList
  Set rpl = MTZSession.TheFinder.RowParents(StrID, RowID)
  If rpl.Count &gt; 0 Then

 If rpl.Item(1).RowID = ID Then
    Set Rowobj = Me
    For i = 2 To rpl.Count
     Set Rowobj = Rowobj.FindObject(rpl.Item(i).PartName, rpl.Item(i).RowID)
    Next

' reference from another object
 Else
   Set obj = Manager.GetInstanceObject(rpl.Item(1).RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindRowObject(StrID, RowID)
 End If

  Else
' use old search style
 Set Rowobj = FindObject(StrID, RowID)
 If Rowobj Is Nothing Then
   Set obj = Manager.FindInstanceByRow(StrID, RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindObject(StrID, RowID)
 End If
  End If
  If Rowobj Is Nothing Then Exit Function
  Set FindRowObject = Rowobj
  Set Rowobj = Nothing
  Set obj = Nothing
End Function


'Поиск строки только в текщем документе
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
  If findCash Is Nothing Then
  Set findCash = New Collection
 End If
 On Error Resume Next
 Set m_FindObject = findCash.item(StrID &amp; InstID)
 if  not m_FindObject is nothing then
   if  m_FindObject.application is nothing then
     set m_FindObject = nothing
     findCash.remove StrID &amp; InstID
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  DC_HEADER.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  DATACURR_M.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  DATACURR_H.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  DATACURR_D.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  DATACURR_T.FindObject(StrID,InstID)
 end if
 If findCash.item(StrID &amp; InstID) Is Nothing Then
   findCash.Add m_FindObject, StrID &amp; InstID
 End If
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function


'Оптимизировать объем занятой памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()

DC_HEADER.Compact
DATACURR_M.Compact
DATACURR_H.Compact
DATACURR_D.Compact
DATACURR_T.Compact
end sub

'Задать стиль защиты документа
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;INSTANCE&quot; ,ID,SecurityStyleID)
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Secure&quot;,err.description
end sub

'Распространить стиль защиты на все строки документа
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.Propagate &quot;INSTANCE&quot;, ID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Propagate&quot;,err.description
end sub

'Сохранить изменения (новое имя)
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save()
public sub Save()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.NewInstance ID, TypeName, Name
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Save&quot;,err.description
end sub

'Задать состояние
'Parameters:
'[IN]   StatusID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.SetStatus({параметры})
private sub SetStatus(byval StatusID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.SetStatus id,StatusID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub

'Получтиь актуальное состояние
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.GetStatus()
private sub GetStatus() 
if application.WorkOffline then exit sub
Dim rs as adodb.recordset
On Error goto bye
set rs =application.MTZSession.GetRow( &quot;INSTANCE&quot;, ID)
m_statusid=rs!status &amp; &quot;&quot; 
m_SecureStyleID = rs!SecurityStyleID &amp; &quot;&quot; 
exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
 on error resume next
  Dim anode As IXMLDOMElement
  Dim e_list As IXMLDOMNodeList
 on error resume next
  set anode = node.firstchild  
  if m_typename &lt;&gt; anode.Attributes.getNamedItem(&quot;TYPENAME&quot;).nodeValue then exit sub
  m_IsLocked=anode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  if LoadMode &lt;&gt;2 then 
    m_ID=anode.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    SetStatus anode.Attributes.getNamedItem(&quot;STATUSID&quot;).nodeValue
    Secure anode.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
    WorkOffline =anode.Attributes.getNamedItem(&quot;WorkOffline&quot;).nodevalue
    if workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  end if 
  m_Name=anode.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue
Set e_list = anode.selectNodes(&quot;DC_HEADER_COL&quot;)
  DC_HEADER.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;DATACURR_M_COL&quot;)
  DATACURR_M.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;DATACURR_H_COL&quot;)
  DATACURR_H.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;DATACURR_D_COL&quot;)
  DATACURR_D.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;DATACURR_T_COL&quot;)
  DATACURR_T.XMLLoad e_list, LoadMode
end sub



'Сохранить данные в XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
  dim anode as IXMLDOMElement
  set anode = xdom.CreateElement(&quot;APPLICATION&quot;)
  anode.setAttribute &quot;ID&quot;, m_ID
  anode.setAttribute &quot;TYPENAME&quot;, m_TypeName
  anode.setAttribute &quot;NAME&quot;, m_Name
  anode.setAttribute &quot;STATUSID&quot;, m_StatusID
  anode.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  anode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  anode.setAttribute &quot;WorkOffline&quot;, WorkOffline
  node.appendChild anode
  DC_HEADER.XMLSave anode,xdom
  DATACURR_M.XMLSave anode,xdom
  DATACURR_H.XMLSave anode,xdom
  DATACURR_D.XMLSave anode,xdom
  DATACURR_T.XMLSave anode,xdom
end sub


'Краткое название
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.Brief() 
public function Brief() as string
 Brief= Name 
end function

'Загрузка корня объекта в дерево
'Parameters:
'[IN][OUT]   tree , тип параметра: object, 
'[IN]   pkey , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;, 
'[IN][OUT]   optional CollectionName , тип параметра: string=&quot;&quot;   - ...
'See Also:
'Example:
'  call me.FillTree({параметры})
public sub FillTree( tree as object, byval pkey as string, byval mode as string, optional Mask as string =&quot;&quot;, optional CollectionName as string=&quot;&quot; )
 dim node as object,key as string
If CollectionName = &quot;&quot; Then
 key = createguid2() &amp; ID
 if pkey =&quot;&quot; then
   set node=tree.nodes.add(,0,key,Brief)
 else
   set node=tree.nodes.add(pkey,4,key,Brief)
 end if
 node.tag=&quot;object&quot;
else
 key=&quot;&quot; 
end if
  if mode = &quot;&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;DC_HEADER&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;DC_HEADER&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DC_HEADER&quot;,&quot;Заголовок&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;DC_HEADER&quot;,&quot;Заголовок&quot;)
    end if
       node.tag=&quot;DC_HEADER&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DC_HEADER&quot;,&quot;Заголовок&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;DC_HEADER&quot;,&quot;Заголовок&quot;)
    end if
    node.tag=&quot;DC_HEADER&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;DATACURR_M&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;DATACURR_M&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_M&quot;,&quot;Мгновенные значения&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;DATACURR_M&quot;,&quot;Мгновенные значения&quot;)
    end if
       node.tag=&quot;DATACURR_M&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_M&quot;,&quot;Мгновенные значения&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;DATACURR_M&quot;,&quot;Мгновенные значения&quot;)
    end if
    node.tag=&quot;DATACURR_M&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;DATACURR_H&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;DATACURR_H&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_H&quot;,&quot;Часовые архивы&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;DATACURR_H&quot;,&quot;Часовые архивы&quot;)
    end if
       node.tag=&quot;DATACURR_H&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_H&quot;,&quot;Часовые архивы&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;DATACURR_H&quot;,&quot;Часовые архивы&quot;)
    end if
    node.tag=&quot;DATACURR_H&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;DATACURR_D&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;DATACURR_D&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_D&quot;,&quot;Суточный архив&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;DATACURR_D&quot;,&quot;Суточный архив&quot;)
    end if
       node.tag=&quot;DATACURR_D&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_D&quot;,&quot;Суточный архив&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;DATACURR_D&quot;,&quot;Суточный архив&quot;)
    end if
    node.tag=&quot;DATACURR_D&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;DATACURR_T&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;DATACURR_T&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_T&quot;,&quot;Суммарные показатели&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;DATACURR_T&quot;,&quot;Суммарные показатели&quot;)
    end if
       node.tag=&quot;DATACURR_T&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;DATACURR_T&quot;,&quot;Суммарные показатели&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;DATACURR_T&quot;,&quot;Суммарные показатели&quot;)
    end if
    node.tag=&quot;DATACURR_T&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if

end sub


'Раскрытие объекта при выборе узла в дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string =&quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 id = mid(key,39,38)
 on error resume next
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if trim(struct)=&quot;&quot;  then 
   set item =manager.GetInstanceObject(id)
   if  item is nothing then exit sub
   If Not item Is Me Then
     item.Expand tree, Key, mode,mask
     Exit Sub
   End If
 else
    set item =FindRowObject(struct,id)
    if  item is nothing then exit sub
    call item.Expand(tree,key,mode,mask)
    exit sub
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 case &quot;DC_HEADER&quot; 
    item.DC_HEADER.refresh
    for i=1 to item.DC_HEADER.count
    nid =createguid2() &amp;  item.DC_HEADER.item(i).id  
    tree.nodes.add( key,4,nid,  item.DC_HEADER.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;DATACURR_M&quot; 
    item.DATACURR_M.refresh
    for i=1 to item.DATACURR_M.count
    nid =createguid2() &amp;  item.DATACURR_M.item(i).id  
    tree.nodes.add( key,4,nid,  item.DATACURR_M.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;DATACURR_H&quot; 
    item.DATACURR_H.refresh
    for i=1 to item.DATACURR_H.count
    nid =createguid2() &amp;  item.DATACURR_H.item(i).id  
    tree.nodes.add( key,4,nid,  item.DATACURR_H.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;DATACURR_D&quot; 
    item.DATACURR_D.refresh
    for i=1 to item.DATACURR_D.count
    nid =createguid2() &amp;  item.DATACURR_D.item(i).id  
    tree.nodes.add( key,4,nid,  item.DATACURR_D.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;DATACURR_T&quot; 
    item.DATACURR_T.refresh
    for i=1 to item.DATACURR_T.count
    nid =createguid2() &amp;  item.DATACURR_T.item(i).id  
    tree.nodes.add( key,4,nid,  item.DATACURR_T.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot;
end sub

'Получить дочерний раздел по имени
'Parameters:
'[IN][OUT]   Item , тип параметра: object, 
'[IN]   CollectionName , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ItemCollection(...параметры...)
public property Get ItemCollection( Item as object, byval CollectionName as string) as object
  set ItemCollection = CallByName(Item,CollectionName,vbGet)
end property

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
 ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, ID)
end function

'Массовое обновление строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
public sub BatchUpdate()
If not Application.WorkOffline Then
    DC_HEADER.BatchUpdate
    DATACURR_M.BatchUpdate
    DATACURR_H.BatchUpdate
    DATACURR_D.BatchUpdate
    DATACURR_T.BatchUpdate
End If
End sub

'Загрузка всех данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
public sub LoadAll()
dim prevAutoLoad as boolean
If not Application.WorkOffline Then
prevAutoLoad= Application.autoloadpart
Application.autoloadpart = true
    DC_HEADER.LoadAll
    DATACURR_M.LoadAll
    DATACURR_H.LoadAll
    DATACURR_D.LoadAll
    DATACURR_T.LoadAll
Application.autoloadpart = prevAutoLoad
End If
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DC_HEADER" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_ID_BD as object
Dim m_ID_BD_ID as string
Dim m_ID_BD_ID_BRIEF as string
private m_ID_DU as object
Dim m_ID_DU_ID as string
Dim m_ID_DU_ID_BRIEF as string
private m_QYear as long
private m_QMonth as long
private m_QDay as long
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;DC_HEADER&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DC_HEADER.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Устройство

'Устройство
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_BD(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_BD&quot;,ID_BD,newvalue
on error resume next
m_ID_BD_ID=&quot;&quot;
m_ID_BD_ID=newValue.id
'  set   m_ID_BD= newValue
end if
end property

'Устройство
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_BD
public property Get ID_BD() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_BD as object
if  m_ID_BD_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_BD=Application.FindRowObject(&quot;BDEVICES&quot;,m_ID_BD_ID)
  if tmp_ID_BD is nothing then
    m_ID_BD_ID_BRIEF = &quot;&quot; 
  else
    m_ID_BD_ID_BRIEF = tmp_ID_BD.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;BDEVICES&quot; &amp; m_ID_BD_ID, tmp_ID_BD
  set ID_BD=tmp_ID_BD
  exit property
end if
  '  set ID_BD = m_ID_BD
end property
' let 
'Подключенное устройство

'Подключенное устройство
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_DU(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_DU&quot;,ID_DU,newvalue
on error resume next
m_ID_DU_ID=&quot;&quot;
m_ID_DU_ID=newValue.id
'  set   m_ID_DU= newValue
end if
end property

'Подключенное устройство
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_DU
public property Get ID_DU() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_DU as object
if  m_ID_DU_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_DU=Application.FindRowObject(&quot;DEVUNITS&quot;,m_ID_DU_ID)
  if tmp_ID_DU is nothing then
    m_ID_DU_ID_BRIEF = &quot;&quot; 
  else
    m_ID_DU_ID_BRIEF = tmp_ID_DU.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;DEVUNITS&quot; &amp; m_ID_DU_ID, tmp_ID_DU
  set ID_DU=tmp_ID_DU
  exit property
end if
  '  set ID_DU = m_ID_DU
end property
' let 
'Год опроса

'Год опроса
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QYear(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QYear&quot;,QYear,newvalue

   m_QYear= newValue
end if
end property

'Год опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. QYear
public property Get QYear() as long
 LoadFromDatabase
 AccessTime=Now

   QYear = m_QYear
end property
' let 
'Месяц опроса

'Месяц опроса
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QMonth(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QMonth&quot;,QMonth,newvalue

   m_QMonth= newValue
end if
end property

'Месяц опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. QMonth
public property Get QMonth() as long
 LoadFromDatabase
 AccessTime=Now

   QMonth = m_QMonth
end property
' let 
'День опроса

'День опроса
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QDay(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QDay&quot;,QDay,newvalue

   m_QDay= newValue
end if
end property

'День опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. QDay
public property Get QDay() as long
 LoadFromDatabase
 AccessTime=Now

   QDay = m_QDay
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to BDEVICES
    if m_ID_BD_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_BD&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_BD&quot;,m_ID_BD_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to DEVUNITS
    if m_ID_DU_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_DU&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_DU&quot;,m_ID_DU_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;QYear&quot;,m_QYear)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;QMonth&quot;,m_QMonth)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;QDay&quot;,m_QDay)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  ID_BD is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_ID_BD_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; ID_BD.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_ID_BD_ID=nv.item( &quot;ID_BD&quot;).Value
  m_ID_DU_ID=nv.item( &quot;ID_DU&quot;).Value
m_QYear=nv.item( &quot;QYear&quot;).Value
m_QMonth=nv.item( &quot;QMonth&quot;).Value
m_QDay=nv.item( &quot;QDay&quot;).Value
else

  m_ID_BD_ID=nv.fields( &quot;ID_BD&quot;).Value
  m_ID_DU_ID=nv.fields( &quot;ID_DU&quot;).Value
m_QYear=nv.fields( &quot;QYear&quot;).Value
m_QMonth=nv.fields( &quot;QMonth&quot;).Value
m_QDay=nv.fields( &quot;QDay&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as DC_HEADER
   set o = new DC_HEADER
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;DC_HEADER.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;DC_HEADER.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;DC_HEADER&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;DC_HEADER.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;DC_HEADER&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;DC_HEADER.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_ID_BD_ID=&quot;&quot;
 set m_ID_BD= nothing
 m_ID_DU_ID=&quot;&quot;
 set m_ID_DU= nothing
 if not Application is nothing then Application.Logger.Message &quot;DC_HEADER.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set ID_BD=nothing
  m_ID_BD_ID=node.Attributes.getNamedItem(&quot;ID_BD&quot;).nodeValue
  m_ID_BD_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_BD_BRIEF&quot;).nodeValue
  set ID_DU=nothing
  m_ID_DU_ID=node.Attributes.getNamedItem(&quot;ID_DU&quot;).nodeValue
  m_ID_DU_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_DU_BRIEF&quot;).nodeValue
  QYear=node.Attributes.getNamedItem(&quot;QYEAR&quot;).nodeValue
  QMonth=node.Attributes.getNamedItem(&quot;QMONTH&quot;).nodeValue
  QDay=node.Attributes.getNamedItem(&quot;QDAY&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;ID_BD&quot;, m_ID_BD_ID
  if not (ID_BD is nothing) then 
    node.setAttribute &quot;ID_BD_BRIEF&quot;, ID_BD.BRIEF
  else
    node.setAttribute &quot;ID_BD_BRIEF&quot;, m_ID_BD_ID_BRIEF
  end if
  node.setAttribute &quot;ID_DU&quot;, m_ID_DU_ID
  if not (ID_DU is nothing) then 
    node.setAttribute &quot;ID_DU_BRIEF&quot;, ID_DU.BRIEF
  else
    node.setAttribute &quot;ID_DU_BRIEF&quot;, m_ID_DU_ID_BRIEF
  end if
  node.setAttribute &quot;QYEAR&quot;, QYear
  node.setAttribute &quot;QMONTH&quot;, QMonth
  node.setAttribute &quot;QDAY&quot;, QDay
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;DC_HEADER&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;DC_HEADER&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;DC_HEADER&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;DC_HEADER&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DC_HEADER_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;DC_HEADER&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DC_HEADER.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as  DC_HEADER
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  DC_HEADER
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  DC_HEADER
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  DC_HEADER
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as DC_HEADER
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as DC_HEADER
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as DC_HEADER
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as DC_HEADER
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as DC_HEADER
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as DC_HEADER
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DC_HEADER
'  ,или Nothing
'See Also:
'Example:
' dim variable as DC_HEADER
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as DC_HEADER
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  DC_HEADER
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;DC_HEADER.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As DC_HEADER
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As DC_HEADER
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!DC_HEADERID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as DC_HEADER
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;DC_HEADER_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;DC_HEADER&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as DC_HEADER
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;DC_HEADER&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Устройство&quot;, 0, 0, &quot;ID_BD&quot;).SortType =1
  YGrid.Columns.Add(&quot;Подключенное устройство&quot;, 0, 0, &quot;ID_DU&quot;).SortType =1
  YGrid.Columns.Add(&quot;Год опроса&quot;, 0, 0, &quot;QYear&quot;).SortType =2
  YGrid.Columns.Add(&quot;Месяц опроса&quot;, 0, 0, &quot;QMonth&quot;).SortType =2
  YGrid.Columns.Add(&quot;День опроса&quot;, 0, 0, &quot;QDay&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as DC_HEADER
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.ID_BD is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.ID_BD.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ID_DU is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.ID_DU.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.QYear, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.QMonth, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.QDay, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;DC_HEADER&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_M" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Текущие значения мгновенные
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_DCALL as DATE
private m_DCOUNTER as DATE
private m_Q1 as double
private m_Q2 as double
private m_T1 as double
private m_T2 as double
private m_DT12 as double
private m_T3 as double
private m_T4 as double
private m_T5 as double
private m_DT45 as double
private m_T6 as double
private m_V1 as double
private m_V2 as double
private m_DV12 as double
private m_V3 as double
private m_V4 as double
private m_V5 as double
private m_DV45 as double
private m_V6 as double
private m_M1 as double
private m_M2 as double
private m_DM12 as double
private m_M3 as double
private m_M4 as double
private m_M5 as double
private m_DM45 as double
private m_M6 as double
private m_P1 as double
private m_P2 as double
private m_P3 as double
private m_P4 as double
private m_P5 as double
private m_P6 as double
private m_G1 as double
private m_G2 as double
private m_G3 as double
private m_G4 as double
private m_G5 as double
private m_G6 as double
private m_TCOOL as double
private m_TCE1 as double
private m_TCE2 as double
private m_TSUM1 as double
private m_TSUM2 as double
private m_Q1H as double
private m_Q2H as double
private m_V1H as double
private m_V2H as double
private m_V4H as double
private m_V5H as double
private m_ERRTIME as double
private m_ERRTIMEH as double
private m_HC as String
private m_SP as double
private m_SP_TB1 as double
private m_SP_TB2 as double
private m_datetimeCOUNTER as DATE
private m_DG12 as double
private m_DG45 as double
private m_DP12 as double
private m_DP45 as double
private m_UNITSR as String
private m_Q3 as double
private m_Q4 as double
private m_PATM as double
private m_Q5 as double
private m_DQ12 as double
private m_DQ45 as double
private m_PXB as double
private m_DQ as double
private m_HC_1 as String
private m_HC_2 as String
private m_THOT as double
private m_DANS1 as double
private m_DANS2 as double
private m_DANS3 as double
private m_DANS4 as double
private m_DANS5 as double
private m_DANS6 as double
private m_CHECK_A as double
private m_OKTIME as double
private m_WORKTIME as double
private m_TAIR1 as double
private m_TAIR2 as double
private m_HC_CODE as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;DATACURR_M&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_M.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Дата опроса

'Дата опроса
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCALL(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCALL&quot;,DCALL,newvalue

   m_DCALL= newValue
end if
end property

'Дата опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCALL
public property Get DCALL() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCALL = m_DCALL
end property
' let 
'Дата счетчика

'Дата счетчика
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCOUNTER&quot;,DCOUNTER,newvalue

   m_DCOUNTER= newValue
end if
end property

'Дата счетчика
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCOUNTER
public property Get DCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCOUNTER = m_DCOUNTER
end property
' let 
'Тепловая энергия канал 1

'Тепловая энергия канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1&quot;,Q1,newvalue

   m_Q1= newValue
end if
end property

'Тепловая энергия канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1
public property Get Q1() as double
 LoadFromDatabase
 AccessTime=Now

   Q1 = m_Q1
end property
' let 
'Тепловая энергия канал 2

'Тепловая энергия канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2&quot;,Q2,newvalue

   m_Q2= newValue
end if
end property

'Тепловая энергия канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2
public property Get Q2() as double
 LoadFromDatabase
 AccessTime=Now

   Q2 = m_Q2
end property
' let 
'Температура по каналу 1

'Температура по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T1&quot;,T1,newvalue

   m_T1= newValue
end if
end property

'Температура по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T1
public property Get T1() as double
 LoadFromDatabase
 AccessTime=Now

   T1 = m_T1
end property
' let 
'Температура по каналу 2

'Температура по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T2&quot;,T2,newvalue

   m_T2= newValue
end if
end property

'Температура по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T2
public property Get T2() as double
 LoadFromDatabase
 AccessTime=Now

   T2 = m_T2
end property
' let 
'Разность Температур по каналу 1 и 2

'Разность Температур по каналу 1 и 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT12&quot;,DT12,newvalue

   m_DT12= newValue
end if
end property

'Разность Температур по каналу 1 и 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT12
public property Get DT12() as double
 LoadFromDatabase
 AccessTime=Now

   DT12 = m_DT12
end property
' let 
'Температура по каналу 3

'Температура по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T3&quot;,T3,newvalue

   m_T3= newValue
end if
end property

'Температура по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T3
public property Get T3() as double
 LoadFromDatabase
 AccessTime=Now

   T3 = m_T3
end property
' let 
'Температура по каналу 4

'Температура по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T4&quot;,T4,newvalue

   m_T4= newValue
end if
end property

'Температура по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T4
public property Get T4() as double
 LoadFromDatabase
 AccessTime=Now

   T4 = m_T4
end property
' let 
'Температура по каналу 5

'Температура по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T5&quot;,T5,newvalue

   m_T5= newValue
end if
end property

'Температура по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T5
public property Get T5() as double
 LoadFromDatabase
 AccessTime=Now

   T5 = m_T5
end property
' let 
'Разность Температур по каналу 4 и 5

'Разность Температур по каналу 4 и 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT45&quot;,DT45,newvalue

   m_DT45= newValue
end if
end property

'Разность Температур по каналу 4 и 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT45
public property Get DT45() as double
 LoadFromDatabase
 AccessTime=Now

   DT45 = m_DT45
end property
' let 
'Температура по каналу 6

'Температура по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T6&quot;,T6,newvalue

   m_T6= newValue
end if
end property

'Температура по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T6
public property Get T6() as double
 LoadFromDatabase
 AccessTime=Now

   T6 = m_T6
end property
' let 
'Объемный расход воды по каналу 1

'Объемный расход воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1&quot;,V1,newvalue

   m_V1= newValue
end if
end property

'Объемный расход воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1
public property Get V1() as double
 LoadFromDatabase
 AccessTime=Now

   V1 = m_V1
end property
' let 
'Объемный расход воды по каналу 2

'Объемный расход воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2&quot;,V2,newvalue

   m_V2= newValue
end if
end property

'Объемный расход воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2
public property Get V2() as double
 LoadFromDatabase
 AccessTime=Now

   V2 = m_V2
end property
' let 
'Разность объемов канал 1  (расход ГВС)

'Разность объемов канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV12&quot;,DV12,newvalue

   m_DV12= newValue
end if
end property

'Разность объемов канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV12
public property Get DV12() as double
 LoadFromDatabase
 AccessTime=Now

   DV12 = m_DV12
end property
' let 
'Объемный расход воды по каналу 3

'Объемный расход воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V3&quot;,V3,newvalue

   m_V3= newValue
end if
end property

'Объемный расход воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V3
public property Get V3() as double
 LoadFromDatabase
 AccessTime=Now

   V3 = m_V3
end property
' let 
'Объемный расход воды по каналу 4

'Объемный расход воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4&quot;,V4,newvalue

   m_V4= newValue
end if
end property

'Объемный расход воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4
public property Get V4() as double
 LoadFromDatabase
 AccessTime=Now

   V4 = m_V4
end property
' let 
'Объемный расход воды по каналу 5

'Объемный расход воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5&quot;,V5,newvalue

   m_V5= newValue
end if
end property

'Объемный расход воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5
public property Get V5() as double
 LoadFromDatabase
 AccessTime=Now

   V5 = m_V5
end property
' let 
'Разность объемов канал 2

'Разность объемов канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV45&quot;,DV45,newvalue

   m_DV45= newValue
end if
end property

'Разность объемов канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV45
public property Get DV45() as double
 LoadFromDatabase
 AccessTime=Now

   DV45 = m_DV45
end property
' let 
'Объемный расход воды по каналу 6

'Объемный расход воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V6&quot;,V6,newvalue

   m_V6= newValue
end if
end property

'Объемный расход воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V6
public property Get V6() as double
 LoadFromDatabase
 AccessTime=Now

   V6 = m_V6
end property
' let 
'Масса воды по каналу 1

'Масса воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M1&quot;,M1,newvalue

   m_M1= newValue
end if
end property

'Масса воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M1
public property Get M1() as double
 LoadFromDatabase
 AccessTime=Now

   M1 = m_M1
end property
' let 
'Масса воды по каналу 2

'Масса воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M2&quot;,M2,newvalue

   m_M2= newValue
end if
end property

'Масса воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M2
public property Get M2() as double
 LoadFromDatabase
 AccessTime=Now

   M2 = m_M2
end property
' let 
'Разность масс канал 1  (расход ГВС)

'Разность масс канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM12&quot;,DM12,newvalue

   m_DM12= newValue
end if
end property

'Разность масс канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM12
public property Get DM12() as double
 LoadFromDatabase
 AccessTime=Now

   DM12 = m_DM12
end property
' let 
'Масса воды по каналу 3

'Масса воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M3&quot;,M3,newvalue

   m_M3= newValue
end if
end property

'Масса воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M3
public property Get M3() as double
 LoadFromDatabase
 AccessTime=Now

   M3 = m_M3
end property
' let 
'Масса воды по каналу 4

'Масса воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M4&quot;,M4,newvalue

   m_M4= newValue
end if
end property

'Масса воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M4
public property Get M4() as double
 LoadFromDatabase
 AccessTime=Now

   M4 = m_M4
end property
' let 
'Масса воды по каналу 5

'Масса воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M5&quot;,M5,newvalue

   m_M5= newValue
end if
end property

'Масса воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M5
public property Get M5() as double
 LoadFromDatabase
 AccessTime=Now

   M5 = m_M5
end property
' let 
'Разность масс канал 2

'Разность масс канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM45&quot;,DM45,newvalue

   m_DM45= newValue
end if
end property

'Разность масс канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM45
public property Get DM45() as double
 LoadFromDatabase
 AccessTime=Now

   DM45 = m_DM45
end property
' let 
'Масса воды по каналу 6

'Масса воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M6&quot;,M6,newvalue

   m_M6= newValue
end if
end property

'Масса воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M6
public property Get M6() as double
 LoadFromDatabase
 AccessTime=Now

   M6 = m_M6
end property
' let 
'Давление в трубопроводе 1

'Давление в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P1&quot;,P1,newvalue

   m_P1= newValue
end if
end property

'Давление в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P1
public property Get P1() as double
 LoadFromDatabase
 AccessTime=Now

   P1 = m_P1
end property
' let 
'Давление в трубопроводе 2

'Давление в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P2&quot;,P2,newvalue

   m_P2= newValue
end if
end property

'Давление в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P2
public property Get P2() as double
 LoadFromDatabase
 AccessTime=Now

   P2 = m_P2
end property
' let 
'Давление в трубопроводе 3

'Давление в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P3&quot;,P3,newvalue

   m_P3= newValue
end if
end property

'Давление в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P3
public property Get P3() as double
 LoadFromDatabase
 AccessTime=Now

   P3 = m_P3
end property
' let 
'Давление в трубопроводе 4

'Давление в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P4&quot;,P4,newvalue

   m_P4= newValue
end if
end property

'Давление в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P4
public property Get P4() as double
 LoadFromDatabase
 AccessTime=Now

   P4 = m_P4
end property
' let 
'Давление в трубопроводе 5

'Давление в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P5&quot;,P5,newvalue

   m_P5= newValue
end if
end property

'Давление в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P5
public property Get P5() as double
 LoadFromDatabase
 AccessTime=Now

   P5 = m_P5
end property
' let 
'Давление в трубопроводе 6

'Давление в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P6&quot;,P6,newvalue

   m_P6= newValue
end if
end property

'Давление в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P6
public property Get P6() as double
 LoadFromDatabase
 AccessTime=Now

   P6 = m_P6
end property
' let 
'Текущее значение расхода в трубопроводе 1

'Текущее значение расхода в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G1&quot;,G1,newvalue

   m_G1= newValue
end if
end property

'Текущее значение расхода в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G1
public property Get G1() as double
 LoadFromDatabase
 AccessTime=Now

   G1 = m_G1
end property
' let 
'Текущее значение расхода в трубопроводе 2

'Текущее значение расхода в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G2&quot;,G2,newvalue

   m_G2= newValue
end if
end property

'Текущее значение расхода в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G2
public property Get G2() as double
 LoadFromDatabase
 AccessTime=Now

   G2 = m_G2
end property
' let 
'Текущее значение расхода в трубопроводе 3

'Текущее значение расхода в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G3&quot;,G3,newvalue

   m_G3= newValue
end if
end property

'Текущее значение расхода в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G3
public property Get G3() as double
 LoadFromDatabase
 AccessTime=Now

   G3 = m_G3
end property
' let 
'Текущее значение расхода в трубопроводе 4

'Текущее значение расхода в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G4&quot;,G4,newvalue

   m_G4= newValue
end if
end property

'Текущее значение расхода в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G4
public property Get G4() as double
 LoadFromDatabase
 AccessTime=Now

   G4 = m_G4
end property
' let 
'Текущее значение расхода в трубопроводе 5

'Текущее значение расхода в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G5&quot;,G5,newvalue

   m_G5= newValue
end if
end property

'Текущее значение расхода в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G5
public property Get G5() as double
 LoadFromDatabase
 AccessTime=Now

   G5 = m_G5
end property
' let 
'Текущее значение расхода в трубопроводе 6

'Текущее значение расхода в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G6&quot;,G6,newvalue

   m_G6= newValue
end if
end property

'Текущее значение расхода в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G6
public property Get G6() as double
 LoadFromDatabase
 AccessTime=Now

   G6 = m_G6
end property
' let 
'Температура холодной воды

'Температура холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCOOL(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCOOL&quot;,TCOOL,newvalue

   m_TCOOL= newValue
end if
end property

'Температура холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCOOL
public property Get TCOOL() as double
 LoadFromDatabase
 AccessTime=Now

   TCOOL = m_TCOOL
end property
' let 
'Температура холодного конца канал 1

'Температура холодного конца канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE1&quot;,TCE1,newvalue

   m_TCE1= newValue
end if
end property

'Температура холодного конца канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE1
public property Get TCE1() as double
 LoadFromDatabase
 AccessTime=Now

   TCE1 = m_TCE1
end property
' let 
'Температура холодного конца канал 2

'Температура холодного конца канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE2&quot;,TCE2,newvalue

   m_TCE2= newValue
end if
end property

'Температура холодного конца канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE2
public property Get TCE2() as double
 LoadFromDatabase
 AccessTime=Now

   TCE2 = m_TCE2
end property
' let 
'Тотальное время счета TB1

'Тотальное время счета TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM1&quot;,TSUM1,newvalue

   m_TSUM1= newValue
end if
end property

'Тотальное время счета TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM1
public property Get TSUM1() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM1 = m_TSUM1
end property
' let 
'Тотальное время счета TB2

'Тотальное время счета TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM2&quot;,TSUM2,newvalue

   m_TSUM2= newValue
end if
end property

'Тотальное время счета TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM2
public property Get TSUM2() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM2 = m_TSUM2
end property
' let 
'Тепловая энергия канал 1 нарастающим итогом

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1H&quot;,Q1H,newvalue

   m_Q1H= newValue
end if
end property

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1H
public property Get Q1H() as double
 LoadFromDatabase
 AccessTime=Now

   Q1H = m_Q1H
end property
' let 
'Тепловая энергия канал 2 нарастающим итогом

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2H&quot;,Q2H,newvalue

   m_Q2H= newValue
end if
end property

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2H
public property Get Q2H() as double
 LoadFromDatabase
 AccessTime=Now

   Q2H = m_Q2H
end property
' let 
'Объемный расход воды по каналу 1  нарастающим итогом

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1H&quot;,V1H,newvalue

   m_V1H= newValue
end if
end property

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1H
public property Get V1H() as double
 LoadFromDatabase
 AccessTime=Now

   V1H = m_V1H
end property
' let 
'Объемный расход воды по каналу 2  нарастающим итогом

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2H&quot;,V2H,newvalue

   m_V2H= newValue
end if
end property

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2H
public property Get V2H() as double
 LoadFromDatabase
 AccessTime=Now

   V2H = m_V2H
end property
' let 
'Объемный расход воды по каналу 4  нарастающим итогом

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4H&quot;,V4H,newvalue

   m_V4H= newValue
end if
end property

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4H
public property Get V4H() as double
 LoadFromDatabase
 AccessTime=Now

   V4H = m_V4H
end property
' let 
'Объемный расход воды по каналу 5  нарастающим итогом

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5H&quot;,V5H,newvalue

   m_V5H= newValue
end if
end property

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5H
public property Get V5H() as double
 LoadFromDatabase
 AccessTime=Now

   V5H = m_V5H
end property
' let 
'Время аварии

'Время аварии
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIME&quot;,ERRTIME,newvalue

   m_ERRTIME= newValue
end if
end property

'Время аварии
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIME
public property Get ERRTIME() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIME = m_ERRTIME
end property
' let 
'Время аварии нарастающим итогом

'Время аварии нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIMEH(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIMEH&quot;,ERRTIMEH,newvalue

   m_ERRTIMEH= newValue
end if
end property

'Время аварии нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIMEH
public property Get ERRTIMEH() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIMEH = m_ERRTIMEH
end property
' let 
'Нештатные ситуации общ

'Нештатные ситуации общ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC&quot;,HC,newvalue

   m_HC= newValue
end if
end property

'Нештатные ситуации общ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC
public property Get HC() as String
 LoadFromDatabase
 AccessTime=Now

   HC = m_HC
end property
' let 
'Схема потребления

'Схема потребления
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP&quot;,SP,newvalue

   m_SP= newValue
end if
end property

'Схема потребления
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP
public property Get SP() as double
 LoadFromDatabase
 AccessTime=Now

   SP = m_SP
end property
' let 
'Схема потребления TB1

'Схема потребления TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB1&quot;,SP_TB1,newvalue

   m_SP_TB1= newValue
end if
end property

'Схема потребления TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB1
public property Get SP_TB1() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB1 = m_SP_TB1
end property
' let 
'Схема потребления TB2

'Схема потребления TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB2&quot;,SP_TB2,newvalue

   m_SP_TB2= newValue
end if
end property

'Схема потребления TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB2
public property Get SP_TB2() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB2 = m_SP_TB2
end property
' let 
'datetimeCOUNTER

'datetimeCOUNTER
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let datetimeCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;datetimeCOUNTER&quot;,datetimeCOUNTER,newvalue

   m_datetimeCOUNTER= newValue
end if
end property

'datetimeCOUNTER
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. datetimeCOUNTER
public property Get datetimeCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   datetimeCOUNTER = m_datetimeCOUNTER
end property
' let 
'G1-G2

'G1-G2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG12&quot;,DG12,newvalue

   m_DG12= newValue
end if
end property

'G1-G2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG12
public property Get DG12() as double
 LoadFromDatabase
 AccessTime=Now

   DG12 = m_DG12
end property
' let 
'G4-G5

'G4-G5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG45&quot;,DG45,newvalue

   m_DG45= newValue
end if
end property

'G4-G5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG45
public property Get DG45() as double
 LoadFromDatabase
 AccessTime=Now

   DG45 = m_DG45
end property
' let 
'P1-P2

'P1-P2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP12&quot;,DP12,newvalue

   m_DP12= newValue
end if
end property

'P1-P2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP12
public property Get DP12() as double
 LoadFromDatabase
 AccessTime=Now

   DP12 = m_DP12
end property
' let 
'P4-P5

'P4-P5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP45&quot;,DP45,newvalue

   m_DP45= newValue
end if
end property

'P4-P5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP45
public property Get DP45() as double
 LoadFromDatabase
 AccessTime=Now

   DP45 = m_DP45
end property
' let 
'Единицы измерения расхода

'Единицы измерения расхода
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UNITSR(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UNITSR&quot;,UNITSR,newvalue

   m_UNITSR= newValue
end if
end property

'Единицы измерения расхода
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. UNITSR
public property Get UNITSR() as String
 LoadFromDatabase
 AccessTime=Now

   UNITSR = m_UNITSR
end property
' let 
'Тепловая энергия канал 3

'Тепловая энергия канал 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q3&quot;,Q3,newvalue

   m_Q3= newValue
end if
end property

'Тепловая энергия канал 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q3
public property Get Q3() as double
 LoadFromDatabase
 AccessTime=Now

   Q3 = m_Q3
end property
' let 
'Тепловая энергия канал 4

'Тепловая энергия канал 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q4&quot;,Q4,newvalue

   m_Q4= newValue
end if
end property

'Тепловая энергия канал 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q4
public property Get Q4() as double
 LoadFromDatabase
 AccessTime=Now

   Q4 = m_Q4
end property
' let 
'Атмосферное давление

'Атмосферное давление
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PATM(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PATM&quot;,PATM,newvalue

   m_PATM= newValue
end if
end property

'Атмосферное давление
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PATM
public property Get PATM() as double
 LoadFromDatabase
 AccessTime=Now

   PATM = m_PATM
end property
' let 
'Тепловая энергия канал 5

'Тепловая энергия канал 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q5&quot;,Q5,newvalue

   m_Q5= newValue
end if
end property

'Тепловая энергия канал 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q5
public property Get Q5() as double
 LoadFromDatabase
 AccessTime=Now

   Q5 = m_Q5
end property
' let 
'Тепловая энергия потребитель 1

'Тепловая энергия потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ12&quot;,DQ12,newvalue

   m_DQ12= newValue
end if
end property

'Тепловая энергия потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ12
public property Get DQ12() as double
 LoadFromDatabase
 AccessTime=Now

   DQ12 = m_DQ12
end property
' let 
'Тепловая энергия потребитель 2

'Тепловая энергия потребитель 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ45&quot;,DQ45,newvalue

   m_DQ45= newValue
end if
end property

'Тепловая энергия потребитель 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ45
public property Get DQ45() as double
 LoadFromDatabase
 AccessTime=Now

   DQ45 = m_DQ45
end property
' let 
'Давление холодной воды

'Давление холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PXB(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PXB&quot;,PXB,newvalue

   m_PXB= newValue
end if
end property

'Давление холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PXB
public property Get PXB() as double
 LoadFromDatabase
 AccessTime=Now

   PXB = m_PXB
end property
' let 
'Расход энергии потребитель 1

'Расход энергии потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ&quot;,DQ,newvalue

   m_DQ= newValue
end if
end property

'Расход энергии потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ
public property Get DQ() as double
 LoadFromDatabase
 AccessTime=Now

   DQ = m_DQ
end property
' let 
'Нештатная ситуация 1 (ТВ1 или внешняя)

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_1&quot;,HC_1,newvalue

   m_HC_1= newValue
end if
end property

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_1
public property Get HC_1() as String
 LoadFromDatabase
 AccessTime=Now

   HC_1 = m_HC_1
end property
' let 
'Нештатная ситуация 2 (ТВ2 или внутренняя)

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_2&quot;,HC_2,newvalue

   m_HC_2= newValue
end if
end property

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_2
public property Get HC_2() as String
 LoadFromDatabase
 AccessTime=Now

   HC_2 = m_HC_2
end property
' let 
'Температура горячей воды

'Температура горячей воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let THOT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;THOT&quot;,THOT,newvalue

   m_THOT= newValue
end if
end property

'Температура горячей воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. THOT
public property Get THOT() as double
 LoadFromDatabase
 AccessTime=Now

   THOT = m_THOT
end property
' let 
'DANS1

'DANS1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS1&quot;,DANS1,newvalue

   m_DANS1= newValue
end if
end property

'DANS1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS1
public property Get DANS1() as double
 LoadFromDatabase
 AccessTime=Now

   DANS1 = m_DANS1
end property
' let 
'DANS2

'DANS2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS2&quot;,DANS2,newvalue

   m_DANS2= newValue
end if
end property

'DANS2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS2
public property Get DANS2() as double
 LoadFromDatabase
 AccessTime=Now

   DANS2 = m_DANS2
end property
' let 
'DANS3

'DANS3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS3&quot;,DANS3,newvalue

   m_DANS3= newValue
end if
end property

'DANS3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS3
public property Get DANS3() as double
 LoadFromDatabase
 AccessTime=Now

   DANS3 = m_DANS3
end property
' let 
'DANS4

'DANS4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS4&quot;,DANS4,newvalue

   m_DANS4= newValue
end if
end property

'DANS4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS4
public property Get DANS4() as double
 LoadFromDatabase
 AccessTime=Now

   DANS4 = m_DANS4
end property
' let 
'DANS5

'DANS5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS5&quot;,DANS5,newvalue

   m_DANS5= newValue
end if
end property

'DANS5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS5
public property Get DANS5() as double
 LoadFromDatabase
 AccessTime=Now

   DANS5 = m_DANS5
end property
' let 
'DANS6

'DANS6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS6&quot;,DANS6,newvalue

   m_DANS6= newValue
end if
end property

'DANS6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS6
public property Get DANS6() as double
 LoadFromDatabase
 AccessTime=Now

   DANS6 = m_DANS6
end property
' let 
'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHECK_A(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHECK_A&quot;,CHECK_A,newvalue

   m_CHECK_A= newValue
end if
end property

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CHECK_A
public property Get CHECK_A() as double
 LoadFromDatabase
 AccessTime=Now

   CHECK_A = m_CHECK_A
end property
' let 
'Время безошиб.работы

'Время безошиб.работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OKTIME&quot;,OKTIME,newvalue

   m_OKTIME= newValue
end if
end property

'Время безошиб.работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. OKTIME
public property Get OKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   OKTIME = m_OKTIME
end property
' let 
'Время работы

'Время работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WORKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WORKTIME&quot;,WORKTIME,newvalue

   m_WORKTIME= newValue
end if
end property

'Время работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WORKTIME
public property Get WORKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   WORKTIME = m_WORKTIME
end property
' let 
'Температура воздуха канал 1

'Температура воздуха канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR1&quot;,TAIR1,newvalue

   m_TAIR1= newValue
end if
end property

'Температура воздуха канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR1
public property Get TAIR1() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR1 = m_TAIR1
end property
' let 
'Температура воздуха канал 2

'Температура воздуха канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR2&quot;,TAIR2,newvalue

   m_TAIR2= newValue
end if
end property

'Температура воздуха канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR2
public property Get TAIR2() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR2 = m_TAIR2
end property
' let 
'Код нештатной ситуации тепловычислителя

'Код нештатной ситуации тепловычислителя
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_CODE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_CODE&quot;,HC_CODE,newvalue

   m_HC_CODE= newValue
end if
end property

'Код нештатной ситуации тепловычислителя
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_CODE
public property Get HC_CODE() as String
 LoadFromDatabase
 AccessTime=Now

   HC_CODE = m_HC_CODE
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;DCALL&quot;,m_DCALL)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DCOUNTER&quot;,m_DCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;Q1&quot;,m_Q1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2&quot;,m_Q2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T1&quot;,m_T1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T2&quot;,m_T2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT12&quot;,m_DT12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T3&quot;,m_T3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T4&quot;,m_T4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T5&quot;,m_T5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT45&quot;,m_DT45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T6&quot;,m_T6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1&quot;,m_V1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2&quot;,m_V2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV12&quot;,m_DV12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V3&quot;,m_V3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4&quot;,m_V4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5&quot;,m_V5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV45&quot;,m_DV45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V6&quot;,m_V6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M1&quot;,m_M1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M2&quot;,m_M2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM12&quot;,m_DM12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M3&quot;,m_M3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M4&quot;,m_M4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M5&quot;,m_M5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM45&quot;,m_DM45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M6&quot;,m_M6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P1&quot;,m_P1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P2&quot;,m_P2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P3&quot;,m_P3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P4&quot;,m_P4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P5&quot;,m_P5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P6&quot;,m_P6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G1&quot;,m_G1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G2&quot;,m_G2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G3&quot;,m_G3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G4&quot;,m_G4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G5&quot;,m_G5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G6&quot;,m_G6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCOOL&quot;,m_TCOOL)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE1&quot;,m_TCE1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE2&quot;,m_TCE2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM1&quot;,m_TSUM1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM2&quot;,m_TSUM2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q1H&quot;,m_Q1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2H&quot;,m_Q2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1H&quot;,m_V1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2H&quot;,m_V2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4H&quot;,m_V4H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5H&quot;,m_V5H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIME&quot;,m_ERRTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIMEH&quot;,m_ERRTIMEH)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC&quot;,m_HC)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;SP&quot;,m_SP)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB1&quot;,m_SP_TB1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB2&quot;,m_SP_TB2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;datetimeCOUNTER&quot;,m_datetimeCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DG12&quot;,m_DG12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DG45&quot;,m_DG45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP12&quot;,m_DP12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP45&quot;,m_DP45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;UNITSR&quot;,m_UNITSR)
nvi.ValueSize = 24
  set nvi=nv.Add( &quot;Q3&quot;,m_Q3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q4&quot;,m_Q4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PATM&quot;,m_PATM)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q5&quot;,m_Q5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ12&quot;,m_DQ12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ45&quot;,m_DQ45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PXB&quot;,m_PXB)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ&quot;,m_DQ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_1&quot;,m_HC_1)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;HC_2&quot;,m_HC_2)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;THOT&quot;,m_THOT)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS1&quot;,m_DANS1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS2&quot;,m_DANS2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS3&quot;,m_DANS3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS4&quot;,m_DANS4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS5&quot;,m_DANS5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS6&quot;,m_DANS6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;CHECK_A&quot;,m_CHECK_A)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;OKTIME&quot;,m_OKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WORKTIME&quot;,m_WORKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR1&quot;,m_TAIR1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR2&quot;,m_TAIR2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_CODE&quot;,m_HC_CODE)
nvi.ValueSize = 360
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; DCALL &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_DCALL=nv.item( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.item( &quot;DCOUNTER&quot;).Value
m_Q1=nv.item( &quot;Q1&quot;).Value
m_Q2=nv.item( &quot;Q2&quot;).Value
m_T1=nv.item( &quot;T1&quot;).Value
m_T2=nv.item( &quot;T2&quot;).Value
m_DT12=nv.item( &quot;DT12&quot;).Value
m_T3=nv.item( &quot;T3&quot;).Value
m_T4=nv.item( &quot;T4&quot;).Value
m_T5=nv.item( &quot;T5&quot;).Value
m_DT45=nv.item( &quot;DT45&quot;).Value
m_T6=nv.item( &quot;T6&quot;).Value
m_V1=nv.item( &quot;V1&quot;).Value
m_V2=nv.item( &quot;V2&quot;).Value
m_DV12=nv.item( &quot;DV12&quot;).Value
m_V3=nv.item( &quot;V3&quot;).Value
m_V4=nv.item( &quot;V4&quot;).Value
m_V5=nv.item( &quot;V5&quot;).Value
m_DV45=nv.item( &quot;DV45&quot;).Value
m_V6=nv.item( &quot;V6&quot;).Value
m_M1=nv.item( &quot;M1&quot;).Value
m_M2=nv.item( &quot;M2&quot;).Value
m_DM12=nv.item( &quot;DM12&quot;).Value
m_M3=nv.item( &quot;M3&quot;).Value
m_M4=nv.item( &quot;M4&quot;).Value
m_M5=nv.item( &quot;M5&quot;).Value
m_DM45=nv.item( &quot;DM45&quot;).Value
m_M6=nv.item( &quot;M6&quot;).Value
m_P1=nv.item( &quot;P1&quot;).Value
m_P2=nv.item( &quot;P2&quot;).Value
m_P3=nv.item( &quot;P3&quot;).Value
m_P4=nv.item( &quot;P4&quot;).Value
m_P5=nv.item( &quot;P5&quot;).Value
m_P6=nv.item( &quot;P6&quot;).Value
m_G1=nv.item( &quot;G1&quot;).Value
m_G2=nv.item( &quot;G2&quot;).Value
m_G3=nv.item( &quot;G3&quot;).Value
m_G4=nv.item( &quot;G4&quot;).Value
m_G5=nv.item( &quot;G5&quot;).Value
m_G6=nv.item( &quot;G6&quot;).Value
m_TCOOL=nv.item( &quot;TCOOL&quot;).Value
m_TCE1=nv.item( &quot;TCE1&quot;).Value
m_TCE2=nv.item( &quot;TCE2&quot;).Value
m_TSUM1=nv.item( &quot;TSUM1&quot;).Value
m_TSUM2=nv.item( &quot;TSUM2&quot;).Value
m_Q1H=nv.item( &quot;Q1H&quot;).Value
m_Q2H=nv.item( &quot;Q2H&quot;).Value
m_V1H=nv.item( &quot;V1H&quot;).Value
m_V2H=nv.item( &quot;V2H&quot;).Value
m_V4H=nv.item( &quot;V4H&quot;).Value
m_V5H=nv.item( &quot;V5H&quot;).Value
m_ERRTIME=nv.item( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.item( &quot;ERRTIMEH&quot;).Value
m_HC=nv.item( &quot;HC&quot;).Value
m_SP=nv.item( &quot;SP&quot;).Value
m_SP_TB1=nv.item( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.item( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.item( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.item( &quot;DG12&quot;).Value
m_DG45=nv.item( &quot;DG45&quot;).Value
m_DP12=nv.item( &quot;DP12&quot;).Value
m_DP45=nv.item( &quot;DP45&quot;).Value
m_UNITSR=nv.item( &quot;UNITSR&quot;).Value
m_Q3=nv.item( &quot;Q3&quot;).Value
m_Q4=nv.item( &quot;Q4&quot;).Value
m_PATM=nv.item( &quot;PATM&quot;).Value
m_Q5=nv.item( &quot;Q5&quot;).Value
m_DQ12=nv.item( &quot;DQ12&quot;).Value
m_DQ45=nv.item( &quot;DQ45&quot;).Value
m_PXB=nv.item( &quot;PXB&quot;).Value
m_DQ=nv.item( &quot;DQ&quot;).Value
m_HC_1=nv.item( &quot;HC_1&quot;).Value
m_HC_2=nv.item( &quot;HC_2&quot;).Value
m_THOT=nv.item( &quot;THOT&quot;).Value
m_DANS1=nv.item( &quot;DANS1&quot;).Value
m_DANS2=nv.item( &quot;DANS2&quot;).Value
m_DANS3=nv.item( &quot;DANS3&quot;).Value
m_DANS4=nv.item( &quot;DANS4&quot;).Value
m_DANS5=nv.item( &quot;DANS5&quot;).Value
m_DANS6=nv.item( &quot;DANS6&quot;).Value
m_CHECK_A=nv.item( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.item( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.item( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.item( &quot;TAIR1&quot;).Value
m_TAIR2=nv.item( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.item( &quot;HC_CODE&quot;).Value
else

m_DCALL=nv.fields( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.fields( &quot;DCOUNTER&quot;).Value
m_Q1=nv.fields( &quot;Q1&quot;).Value
m_Q2=nv.fields( &quot;Q2&quot;).Value
m_T1=nv.fields( &quot;T1&quot;).Value
m_T2=nv.fields( &quot;T2&quot;).Value
m_DT12=nv.fields( &quot;DT12&quot;).Value
m_T3=nv.fields( &quot;T3&quot;).Value
m_T4=nv.fields( &quot;T4&quot;).Value
m_T5=nv.fields( &quot;T5&quot;).Value
m_DT45=nv.fields( &quot;DT45&quot;).Value
m_T6=nv.fields( &quot;T6&quot;).Value
m_V1=nv.fields( &quot;V1&quot;).Value
m_V2=nv.fields( &quot;V2&quot;).Value
m_DV12=nv.fields( &quot;DV12&quot;).Value
m_V3=nv.fields( &quot;V3&quot;).Value
m_V4=nv.fields( &quot;V4&quot;).Value
m_V5=nv.fields( &quot;V5&quot;).Value
m_DV45=nv.fields( &quot;DV45&quot;).Value
m_V6=nv.fields( &quot;V6&quot;).Value
m_M1=nv.fields( &quot;M1&quot;).Value
m_M2=nv.fields( &quot;M2&quot;).Value
m_DM12=nv.fields( &quot;DM12&quot;).Value
m_M3=nv.fields( &quot;M3&quot;).Value
m_M4=nv.fields( &quot;M4&quot;).Value
m_M5=nv.fields( &quot;M5&quot;).Value
m_DM45=nv.fields( &quot;DM45&quot;).Value
m_M6=nv.fields( &quot;M6&quot;).Value
m_P1=nv.fields( &quot;P1&quot;).Value
m_P2=nv.fields( &quot;P2&quot;).Value
m_P3=nv.fields( &quot;P3&quot;).Value
m_P4=nv.fields( &quot;P4&quot;).Value
m_P5=nv.fields( &quot;P5&quot;).Value
m_P6=nv.fields( &quot;P6&quot;).Value
m_G1=nv.fields( &quot;G1&quot;).Value
m_G2=nv.fields( &quot;G2&quot;).Value
m_G3=nv.fields( &quot;G3&quot;).Value
m_G4=nv.fields( &quot;G4&quot;).Value
m_G5=nv.fields( &quot;G5&quot;).Value
m_G6=nv.fields( &quot;G6&quot;).Value
m_TCOOL=nv.fields( &quot;TCOOL&quot;).Value
m_TCE1=nv.fields( &quot;TCE1&quot;).Value
m_TCE2=nv.fields( &quot;TCE2&quot;).Value
m_TSUM1=nv.fields( &quot;TSUM1&quot;).Value
m_TSUM2=nv.fields( &quot;TSUM2&quot;).Value
m_Q1H=nv.fields( &quot;Q1H&quot;).Value
m_Q2H=nv.fields( &quot;Q2H&quot;).Value
m_V1H=nv.fields( &quot;V1H&quot;).Value
m_V2H=nv.fields( &quot;V2H&quot;).Value
m_V4H=nv.fields( &quot;V4H&quot;).Value
m_V5H=nv.fields( &quot;V5H&quot;).Value
m_ERRTIME=nv.fields( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.fields( &quot;ERRTIMEH&quot;).Value
m_HC=nv.fields( &quot;HC&quot;).Value
m_SP=nv.fields( &quot;SP&quot;).Value
m_SP_TB1=nv.fields( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.fields( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.fields( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.fields( &quot;DG12&quot;).Value
m_DG45=nv.fields( &quot;DG45&quot;).Value
m_DP12=nv.fields( &quot;DP12&quot;).Value
m_DP45=nv.fields( &quot;DP45&quot;).Value
m_UNITSR=nv.fields( &quot;UNITSR&quot;).Value
m_Q3=nv.fields( &quot;Q3&quot;).Value
m_Q4=nv.fields( &quot;Q4&quot;).Value
m_PATM=nv.fields( &quot;PATM&quot;).Value
m_Q5=nv.fields( &quot;Q5&quot;).Value
m_DQ12=nv.fields( &quot;DQ12&quot;).Value
m_DQ45=nv.fields( &quot;DQ45&quot;).Value
m_PXB=nv.fields( &quot;PXB&quot;).Value
m_DQ=nv.fields( &quot;DQ&quot;).Value
m_HC_1=nv.fields( &quot;HC_1&quot;).Value
m_HC_2=nv.fields( &quot;HC_2&quot;).Value
m_THOT=nv.fields( &quot;THOT&quot;).Value
m_DANS1=nv.fields( &quot;DANS1&quot;).Value
m_DANS2=nv.fields( &quot;DANS2&quot;).Value
m_DANS3=nv.fields( &quot;DANS3&quot;).Value
m_DANS4=nv.fields( &quot;DANS4&quot;).Value
m_DANS5=nv.fields( &quot;DANS5&quot;).Value
m_DANS6=nv.fields( &quot;DANS6&quot;).Value
m_CHECK_A=nv.fields( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.fields( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.fields( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.fields( &quot;TAIR1&quot;).Value
m_TAIR2=nv.fields( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.fields( &quot;HC_CODE&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as DATACURR_M
   set o = new DATACURR_M
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;DATACURR_M.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;DATACURR_M.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;DATACURR_M&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;DATACURR_M.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;DATACURR_M&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;DATACURR_M.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;DATACURR_M.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  DCALL=node.Attributes.getNamedItem(&quot;DCALL&quot;).nodeValue
  DCOUNTER=node.Attributes.getNamedItem(&quot;DCOUNTER&quot;).nodeValue
  Q1=val(Replace(node.Attributes.getNamedItem(&quot;Q1&quot;).nodeValue,vbLf,vbcrlf))
  Q2=val(Replace(node.Attributes.getNamedItem(&quot;Q2&quot;).nodeValue,vbLf,vbcrlf))
  T1=val(Replace(node.Attributes.getNamedItem(&quot;T1&quot;).nodeValue,vbLf,vbcrlf))
  T2=val(Replace(node.Attributes.getNamedItem(&quot;T2&quot;).nodeValue,vbLf,vbcrlf))
  DT12=val(Replace(node.Attributes.getNamedItem(&quot;DT12&quot;).nodeValue,vbLf,vbcrlf))
  T3=val(Replace(node.Attributes.getNamedItem(&quot;T3&quot;).nodeValue,vbLf,vbcrlf))
  T4=val(Replace(node.Attributes.getNamedItem(&quot;T4&quot;).nodeValue,vbLf,vbcrlf))
  T5=val(Replace(node.Attributes.getNamedItem(&quot;T5&quot;).nodeValue,vbLf,vbcrlf))
  DT45=val(Replace(node.Attributes.getNamedItem(&quot;DT45&quot;).nodeValue,vbLf,vbcrlf))
  T6=val(Replace(node.Attributes.getNamedItem(&quot;T6&quot;).nodeValue,vbLf,vbcrlf))
  V1=val(Replace(node.Attributes.getNamedItem(&quot;V1&quot;).nodeValue,vbLf,vbcrlf))
  V2=val(Replace(node.Attributes.getNamedItem(&quot;V2&quot;).nodeValue,vbLf,vbcrlf))
  DV12=val(Replace(node.Attributes.getNamedItem(&quot;DV12&quot;).nodeValue,vbLf,vbcrlf))
  V3=val(Replace(node.Attributes.getNamedItem(&quot;V3&quot;).nodeValue,vbLf,vbcrlf))
  V4=val(Replace(node.Attributes.getNamedItem(&quot;V4&quot;).nodeValue,vbLf,vbcrlf))
  V5=val(Replace(node.Attributes.getNamedItem(&quot;V5&quot;).nodeValue,vbLf,vbcrlf))
  DV45=val(Replace(node.Attributes.getNamedItem(&quot;DV45&quot;).nodeValue,vbLf,vbcrlf))
  V6=val(Replace(node.Attributes.getNamedItem(&quot;V6&quot;).nodeValue,vbLf,vbcrlf))
  M1=val(Replace(node.Attributes.getNamedItem(&quot;M1&quot;).nodeValue,vbLf,vbcrlf))
  M2=val(Replace(node.Attributes.getNamedItem(&quot;M2&quot;).nodeValue,vbLf,vbcrlf))
  DM12=val(Replace(node.Attributes.getNamedItem(&quot;DM12&quot;).nodeValue,vbLf,vbcrlf))
  M3=val(Replace(node.Attributes.getNamedItem(&quot;M3&quot;).nodeValue,vbLf,vbcrlf))
  M4=val(Replace(node.Attributes.getNamedItem(&quot;M4&quot;).nodeValue,vbLf,vbcrlf))
  M5=val(Replace(node.Attributes.getNamedItem(&quot;M5&quot;).nodeValue,vbLf,vbcrlf))
  DM45=val(Replace(node.Attributes.getNamedItem(&quot;DM45&quot;).nodeValue,vbLf,vbcrlf))
  M6=val(Replace(node.Attributes.getNamedItem(&quot;M6&quot;).nodeValue,vbLf,vbcrlf))
  P1=val(Replace(node.Attributes.getNamedItem(&quot;P1&quot;).nodeValue,vbLf,vbcrlf))
  P2=val(Replace(node.Attributes.getNamedItem(&quot;P2&quot;).nodeValue,vbLf,vbcrlf))
  P3=val(Replace(node.Attributes.getNamedItem(&quot;P3&quot;).nodeValue,vbLf,vbcrlf))
  P4=val(Replace(node.Attributes.getNamedItem(&quot;P4&quot;).nodeValue,vbLf,vbcrlf))
  P5=val(Replace(node.Attributes.getNamedItem(&quot;P5&quot;).nodeValue,vbLf,vbcrlf))
  P6=val(Replace(node.Attributes.getNamedItem(&quot;P6&quot;).nodeValue,vbLf,vbcrlf))
  G1=val(Replace(node.Attributes.getNamedItem(&quot;G1&quot;).nodeValue,vbLf,vbcrlf))
  G2=val(Replace(node.Attributes.getNamedItem(&quot;G2&quot;).nodeValue,vbLf,vbcrlf))
  G3=val(Replace(node.Attributes.getNamedItem(&quot;G3&quot;).nodeValue,vbLf,vbcrlf))
  G4=val(Replace(node.Attributes.getNamedItem(&quot;G4&quot;).nodeValue,vbLf,vbcrlf))
  G5=val(Replace(node.Attributes.getNamedItem(&quot;G5&quot;).nodeValue,vbLf,vbcrlf))
  G6=val(Replace(node.Attributes.getNamedItem(&quot;G6&quot;).nodeValue,vbLf,vbcrlf))
  TCOOL=val(Replace(node.Attributes.getNamedItem(&quot;TCOOL&quot;).nodeValue,vbLf,vbcrlf))
  TCE1=val(Replace(node.Attributes.getNamedItem(&quot;TCE1&quot;).nodeValue,vbLf,vbcrlf))
  TCE2=val(Replace(node.Attributes.getNamedItem(&quot;TCE2&quot;).nodeValue,vbLf,vbcrlf))
  TSUM1=val(Replace(node.Attributes.getNamedItem(&quot;TSUM1&quot;).nodeValue,vbLf,vbcrlf))
  TSUM2=val(Replace(node.Attributes.getNamedItem(&quot;TSUM2&quot;).nodeValue,vbLf,vbcrlf))
  Q1H=val(Replace(node.Attributes.getNamedItem(&quot;Q1H&quot;).nodeValue,vbLf,vbcrlf))
  Q2H=val(Replace(node.Attributes.getNamedItem(&quot;Q2H&quot;).nodeValue,vbLf,vbcrlf))
  V1H=val(Replace(node.Attributes.getNamedItem(&quot;V1H&quot;).nodeValue,vbLf,vbcrlf))
  V2H=val(Replace(node.Attributes.getNamedItem(&quot;V2H&quot;).nodeValue,vbLf,vbcrlf))
  V4H=val(Replace(node.Attributes.getNamedItem(&quot;V4H&quot;).nodeValue,vbLf,vbcrlf))
  V5H=val(Replace(node.Attributes.getNamedItem(&quot;V5H&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIME=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIME&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIMEH=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIMEH&quot;).nodeValue,vbLf,vbcrlf))
  HC=Replace(node.Attributes.getNamedItem(&quot;HC&quot;).nodeValue,vbLf,vbcrlf)
  SP=val(Replace(node.Attributes.getNamedItem(&quot;SP&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB1=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB1&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB2=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB2&quot;).nodeValue,vbLf,vbcrlf))
  datetimeCOUNTER=node.Attributes.getNamedItem(&quot;DATETIMECOUNTER&quot;).nodeValue
  DG12=val(Replace(node.Attributes.getNamedItem(&quot;DG12&quot;).nodeValue,vbLf,vbcrlf))
  DG45=val(Replace(node.Attributes.getNamedItem(&quot;DG45&quot;).nodeValue,vbLf,vbcrlf))
  DP12=val(Replace(node.Attributes.getNamedItem(&quot;DP12&quot;).nodeValue,vbLf,vbcrlf))
  DP45=val(Replace(node.Attributes.getNamedItem(&quot;DP45&quot;).nodeValue,vbLf,vbcrlf))
  UNITSR=Replace(node.Attributes.getNamedItem(&quot;UNITSR&quot;).nodeValue,vbLf,vbcrlf)
  Q3=val(Replace(node.Attributes.getNamedItem(&quot;Q3&quot;).nodeValue,vbLf,vbcrlf))
  Q4=val(Replace(node.Attributes.getNamedItem(&quot;Q4&quot;).nodeValue,vbLf,vbcrlf))
  PATM=val(Replace(node.Attributes.getNamedItem(&quot;PATM&quot;).nodeValue,vbLf,vbcrlf))
  Q5=val(Replace(node.Attributes.getNamedItem(&quot;Q5&quot;).nodeValue,vbLf,vbcrlf))
  DQ12=val(Replace(node.Attributes.getNamedItem(&quot;DQ12&quot;).nodeValue,vbLf,vbcrlf))
  DQ45=val(Replace(node.Attributes.getNamedItem(&quot;DQ45&quot;).nodeValue,vbLf,vbcrlf))
  PXB=val(Replace(node.Attributes.getNamedItem(&quot;PXB&quot;).nodeValue,vbLf,vbcrlf))
  DQ=val(Replace(node.Attributes.getNamedItem(&quot;DQ&quot;).nodeValue,vbLf,vbcrlf))
  HC_1=Replace(node.Attributes.getNamedItem(&quot;HC_1&quot;).nodeValue,vbLf,vbcrlf)
  HC_2=Replace(node.Attributes.getNamedItem(&quot;HC_2&quot;).nodeValue,vbLf,vbcrlf)
  THOT=val(Replace(node.Attributes.getNamedItem(&quot;THOT&quot;).nodeValue,vbLf,vbcrlf))
  DANS1=val(Replace(node.Attributes.getNamedItem(&quot;DANS1&quot;).nodeValue,vbLf,vbcrlf))
  DANS2=val(Replace(node.Attributes.getNamedItem(&quot;DANS2&quot;).nodeValue,vbLf,vbcrlf))
  DANS3=val(Replace(node.Attributes.getNamedItem(&quot;DANS3&quot;).nodeValue,vbLf,vbcrlf))
  DANS4=val(Replace(node.Attributes.getNamedItem(&quot;DANS4&quot;).nodeValue,vbLf,vbcrlf))
  DANS5=val(Replace(node.Attributes.getNamedItem(&quot;DANS5&quot;).nodeValue,vbLf,vbcrlf))
  DANS6=val(Replace(node.Attributes.getNamedItem(&quot;DANS6&quot;).nodeValue,vbLf,vbcrlf))
  CHECK_A=val(Replace(node.Attributes.getNamedItem(&quot;CHECK_A&quot;).nodeValue,vbLf,vbcrlf))
  OKTIME=val(Replace(node.Attributes.getNamedItem(&quot;OKTIME&quot;).nodeValue,vbLf,vbcrlf))
  WORKTIME=val(Replace(node.Attributes.getNamedItem(&quot;WORKTIME&quot;).nodeValue,vbLf,vbcrlf))
  TAIR1=val(Replace(node.Attributes.getNamedItem(&quot;TAIR1&quot;).nodeValue,vbLf,vbcrlf))
  TAIR2=val(Replace(node.Attributes.getNamedItem(&quot;TAIR2&quot;).nodeValue,vbLf,vbcrlf))
  HC_CODE=Replace(node.Attributes.getNamedItem(&quot;HC_CODE&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;DCALL&quot;, Cdbl(DCALL)
  node.setAttribute &quot;DCOUNTER&quot;, Cdbl(DCOUNTER)
  node.setAttribute &quot;Q1&quot;, replace(cstr(Q1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2&quot;, replace(cstr(Q2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T1&quot;, replace(cstr(T1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T2&quot;, replace(cstr(T2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT12&quot;, replace(cstr(DT12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T3&quot;, replace(cstr(T3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T4&quot;, replace(cstr(T4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T5&quot;, replace(cstr(T5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT45&quot;, replace(cstr(DT45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T6&quot;, replace(cstr(T6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1&quot;, replace(cstr(V1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2&quot;, replace(cstr(V2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV12&quot;, replace(cstr(DV12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V3&quot;, replace(cstr(V3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4&quot;, replace(cstr(V4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5&quot;, replace(cstr(V5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV45&quot;, replace(cstr(DV45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V6&quot;, replace(cstr(V6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M1&quot;, replace(cstr(M1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M2&quot;, replace(cstr(M2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM12&quot;, replace(cstr(DM12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M3&quot;, replace(cstr(M3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M4&quot;, replace(cstr(M4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M5&quot;, replace(cstr(M5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM45&quot;, replace(cstr(DM45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M6&quot;, replace(cstr(M6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P1&quot;, replace(cstr(P1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P2&quot;, replace(cstr(P2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P3&quot;, replace(cstr(P3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P4&quot;, replace(cstr(P4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P5&quot;, replace(cstr(P5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P6&quot;, replace(cstr(P6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G1&quot;, replace(cstr(G1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G2&quot;, replace(cstr(G2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G3&quot;, replace(cstr(G3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G4&quot;, replace(cstr(G4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G5&quot;, replace(cstr(G5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G6&quot;, replace(cstr(G6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCOOL&quot;, replace(cstr(TCOOL),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE1&quot;, replace(cstr(TCE1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE2&quot;, replace(cstr(TCE2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM1&quot;, replace(cstr(TSUM1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM2&quot;, replace(cstr(TSUM2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q1H&quot;, replace(cstr(Q1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2H&quot;, replace(cstr(Q2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1H&quot;, replace(cstr(V1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2H&quot;, replace(cstr(V2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4H&quot;, replace(cstr(V4H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5H&quot;, replace(cstr(V5H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIME&quot;, replace(cstr(ERRTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIMEH&quot;, replace(cstr(ERRTIMEH),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC&quot;, HC
  node.setAttribute &quot;SP&quot;, replace(cstr(SP),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB1&quot;, replace(cstr(SP_TB1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB2&quot;, replace(cstr(SP_TB2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DATETIMECOUNTER&quot;, Cdbl(datetimeCOUNTER)
  node.setAttribute &quot;DG12&quot;, replace(cstr(DG12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DG45&quot;, replace(cstr(DG45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP12&quot;, replace(cstr(DP12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP45&quot;, replace(cstr(DP45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;UNITSR&quot;, UNITSR
  node.setAttribute &quot;Q3&quot;, replace(cstr(Q3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q4&quot;, replace(cstr(Q4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PATM&quot;, replace(cstr(PATM),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q5&quot;, replace(cstr(Q5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ12&quot;, replace(cstr(DQ12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ45&quot;, replace(cstr(DQ45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PXB&quot;, replace(cstr(PXB),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ&quot;, replace(cstr(DQ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_1&quot;, HC_1
  node.setAttribute &quot;HC_2&quot;, HC_2
  node.setAttribute &quot;THOT&quot;, replace(cstr(THOT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS1&quot;, replace(cstr(DANS1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS2&quot;, replace(cstr(DANS2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS3&quot;, replace(cstr(DANS3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS4&quot;, replace(cstr(DANS4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS5&quot;, replace(cstr(DANS5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS6&quot;, replace(cstr(DANS6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;CHECK_A&quot;, replace(cstr(CHECK_A),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;OKTIME&quot;, replace(cstr(OKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WORKTIME&quot;, replace(cstr(WORKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR1&quot;, replace(cstr(TAIR1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR2&quot;, replace(cstr(TAIR2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_CODE&quot;, HC_CODE
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;DATACURR_M&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;DATACURR_M&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;DATACURR_M&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;DATACURR_M&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_M_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Текущие значения мгновенные
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;DATACURR_M&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_M.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as  DATACURR_M
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  DATACURR_M
 dim LID as  string
 dim o as  DATACURR_M
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  DATACURR_M
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as DATACURR_M
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as DATACURR_M
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as DATACURR_M
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as DATACURR_M
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as DATACURR_M
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as DATACURR_M
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_M
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_M
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as DATACURR_M
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  DATACURR_M
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;DATACURR_M.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As DATACURR_M
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As DATACURR_M
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!DATACURR_MID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as DATACURR_M
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;DATACURR_M_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;DATACURR_M&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as DATACURR_M
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;DATACURR_M&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Дата опроса&quot;, 0, 0, &quot;DCALL&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата счетчика&quot;, 0, 0, &quot;DCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1&quot;, 0, 0, &quot;Q1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2&quot;, 0, 0, &quot;Q2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 1&quot;, 0, 0, &quot;T1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 2&quot;, 0, 0, &quot;T2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 1 и 2&quot;, 0, 0, &quot;DT12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 3&quot;, 0, 0, &quot;T3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 4&quot;, 0, 0, &quot;T4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 5&quot;, 0, 0, &quot;T5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 4 и 5&quot;, 0, 0, &quot;DT45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 6&quot;, 0, 0, &quot;T6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1&quot;, 0, 0, &quot;V1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2&quot;, 0, 0, &quot;V2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 1 (расход ГВС)&quot;, 0, 0, &quot;DV12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 3&quot;, 0, 0, &quot;V3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4&quot;, 0, 0, &quot;V4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5&quot;, 0, 0, &quot;V5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 2&quot;, 0, 0, &quot;DV45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 6&quot;, 0, 0, &quot;V6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 1&quot;, 0, 0, &quot;M1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 2&quot;, 0, 0, &quot;M2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 1 (расход ГВС)&quot;, 0, 0, &quot;DM12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 3&quot;, 0, 0, &quot;M3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 4&quot;, 0, 0, &quot;M4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 5&quot;, 0, 0, &quot;M5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 2&quot;, 0, 0, &quot;DM45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 6&quot;, 0, 0, &quot;M6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 1&quot;, 0, 0, &quot;P1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 2&quot;, 0, 0, &quot;P2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 3&quot;, 0, 0, &quot;P3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 4&quot;, 0, 0, &quot;P4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 5&quot;, 0, 0, &quot;P5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 6&quot;, 0, 0, &quot;P6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 1&quot;, 0, 0, &quot;G1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 2&quot;, 0, 0, &quot;G2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 3&quot;, 0, 0, &quot;G3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 4&quot;, 0, 0, &quot;G4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 5&quot;, 0, 0, &quot;G5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 6&quot;, 0, 0, &quot;G6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодной воды&quot;, 0, 0, &quot;TCOOL&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 1&quot;, 0, 0, &quot;TCE1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 2&quot;, 0, 0, &quot;TCE2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB1&quot;, 0, 0, &quot;TSUM1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB2&quot;, 0, 0, &quot;TSUM2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1 нарастающим итогом&quot;, 0, 0, &quot;Q1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2 нарастающим итогом&quot;, 0, 0, &quot;Q2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1 нарастающим итогом&quot;, 0, 0, &quot;V1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2 нарастающим итогом&quot;, 0, 0, &quot;V2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4 нарастающим итогом&quot;, 0, 0, &quot;V4H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5 нарастающим итогом&quot;, 0, 0, &quot;V5H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии&quot;, 0, 0, &quot;ERRTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии нарастающим итогом&quot;, 0, 0, &quot;ERRTIMEH&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатные ситуации общ&quot;, 0, 0, &quot;HC&quot;).SortType =1
  YGrid.Columns.Add(&quot;Схема потребления&quot;, 0, 0, &quot;SP&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB1&quot;, 0, 0, &quot;SP_TB1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB2&quot;, 0, 0, &quot;SP_TB2&quot;).SortType =2
  YGrid.Columns.Add(&quot;datetimeCOUNTER&quot;, 0, 0, &quot;datetimeCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;G1-G2&quot;, 0, 0, &quot;DG12&quot;).SortType =2
  YGrid.Columns.Add(&quot;G4-G5&quot;, 0, 0, &quot;DG45&quot;).SortType =2
  YGrid.Columns.Add(&quot;P1-P2&quot;, 0, 0, &quot;DP12&quot;).SortType =2
  YGrid.Columns.Add(&quot;P4-P5&quot;, 0, 0, &quot;DP45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Единицы измерения расхода&quot;, 0, 0, &quot;UNITSR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тепловая энергия канал 3&quot;, 0, 0, &quot;Q3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 4&quot;, 0, 0, &quot;Q4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Атмосферное давление&quot;, 0, 0, &quot;PATM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 5&quot;, 0, 0, &quot;Q5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 1&quot;, 0, 0, &quot;DQ12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 2&quot;, 0, 0, &quot;DQ45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление холодной воды&quot;, 0, 0, &quot;PXB&quot;).SortType =2
  YGrid.Columns.Add(&quot;Расход энергии потребитель 1&quot;, 0, 0, &quot;DQ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатная ситуация 1 (ТВ1 или внешняя)&quot;, 0, 0, &quot;HC_1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Нештатная ситуация 2 (ТВ2 или внутренняя)&quot;, 0, 0, &quot;HC_2&quot;).SortType =1
  YGrid.Columns.Add(&quot;Температура горячей воды&quot;, 0, 0, &quot;THOT&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS1&quot;, 0, 0, &quot;DANS1&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS2&quot;, 0, 0, &quot;DANS2&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS3&quot;, 0, 0, &quot;DANS3&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS4&quot;, 0, 0, &quot;DANS4&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS5&quot;, 0, 0, &quot;DANS5&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS6&quot;, 0, 0, &quot;DANS6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Проверка архивных данных на НС (0 - не производилась, 1 - произведена)&quot;, 0, 0, &quot;CHECK_A&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время безошиб.работы&quot;, 0, 0, &quot;OKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время работы&quot;, 0, 0, &quot;WORKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 1&quot;, 0, 0, &quot;TAIR1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 2&quot;, 0, 0, &quot;TAIR2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Код нештатной ситуации тепловычислителя&quot;, 0, 0, &quot;HC_CODE&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as DATACURR_M
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.DCALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.DCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Q1, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Q2, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.T1, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.T2, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.DT12, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.T3, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.T4, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.T5, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.DT45, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.T6, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.V1, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.V2, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.DV12, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.V3, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.V4, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.V5, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.DV45, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.V6, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.M1, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.M2, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.DM12, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.M3, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.M4, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.M5, vbCrLf, &quot; &quot;), 255)
    Values.Value(27) = Left(Replace(obj.DM45, vbCrLf, &quot; &quot;), 255)
    Values.Value(28) = Left(Replace(obj.M6, vbCrLf, &quot; &quot;), 255)
    Values.Value(29) = Left(Replace(obj.P1, vbCrLf, &quot; &quot;), 255)
    Values.Value(30) = Left(Replace(obj.P2, vbCrLf, &quot; &quot;), 255)
    Values.Value(31) = Left(Replace(obj.P3, vbCrLf, &quot; &quot;), 255)
    Values.Value(32) = Left(Replace(obj.P4, vbCrLf, &quot; &quot;), 255)
    Values.Value(33) = Left(Replace(obj.P5, vbCrLf, &quot; &quot;), 255)
    Values.Value(34) = Left(Replace(obj.P6, vbCrLf, &quot; &quot;), 255)
    Values.Value(35) = Left(Replace(obj.G1, vbCrLf, &quot; &quot;), 255)
    Values.Value(36) = Left(Replace(obj.G2, vbCrLf, &quot; &quot;), 255)
    Values.Value(37) = Left(Replace(obj.G3, vbCrLf, &quot; &quot;), 255)
    Values.Value(38) = Left(Replace(obj.G4, vbCrLf, &quot; &quot;), 255)
    Values.Value(39) = Left(Replace(obj.G5, vbCrLf, &quot; &quot;), 255)
    Values.Value(40) = Left(Replace(obj.G6, vbCrLf, &quot; &quot;), 255)
    Values.Value(41) = Left(Replace(obj.TCOOL, vbCrLf, &quot; &quot;), 255)
    Values.Value(42) = Left(Replace(obj.TCE1, vbCrLf, &quot; &quot;), 255)
    Values.Value(43) = Left(Replace(obj.TCE2, vbCrLf, &quot; &quot;), 255)
    Values.Value(44) = Left(Replace(obj.TSUM1, vbCrLf, &quot; &quot;), 255)
    Values.Value(45) = Left(Replace(obj.TSUM2, vbCrLf, &quot; &quot;), 255)
    Values.Value(46) = Left(Replace(obj.Q1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(47) = Left(Replace(obj.Q2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(48) = Left(Replace(obj.V1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(49) = Left(Replace(obj.V2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(50) = Left(Replace(obj.V4H, vbCrLf, &quot; &quot;), 255)
    Values.Value(51) = Left(Replace(obj.V5H, vbCrLf, &quot; &quot;), 255)
    Values.Value(52) = Left(Replace(obj.ERRTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(53) = Left(Replace(obj.ERRTIMEH, vbCrLf, &quot; &quot;), 255)
    Values.Value(54) = Left(Replace(obj.HC, vbCrLf, &quot; &quot;), 255)
    Values.Value(55) = Left(Replace(obj.SP, vbCrLf, &quot; &quot;), 255)
    Values.Value(56) = Left(Replace(obj.SP_TB1, vbCrLf, &quot; &quot;), 255)
    Values.Value(57) = Left(Replace(obj.SP_TB2, vbCrLf, &quot; &quot;), 255)
    Values.Value(58) = Left(Replace(obj.datetimeCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(59) = Left(Replace(obj.DG12, vbCrLf, &quot; &quot;), 255)
    Values.Value(60) = Left(Replace(obj.DG45, vbCrLf, &quot; &quot;), 255)
    Values.Value(61) = Left(Replace(obj.DP12, vbCrLf, &quot; &quot;), 255)
    Values.Value(62) = Left(Replace(obj.DP45, vbCrLf, &quot; &quot;), 255)
    Values.Value(63) = Left(Replace(obj.UNITSR, vbCrLf, &quot; &quot;), 255)
    Values.Value(64) = Left(Replace(obj.Q3, vbCrLf, &quot; &quot;), 255)
    Values.Value(65) = Left(Replace(obj.Q4, vbCrLf, &quot; &quot;), 255)
    Values.Value(66) = Left(Replace(obj.PATM, vbCrLf, &quot; &quot;), 255)
    Values.Value(67) = Left(Replace(obj.Q5, vbCrLf, &quot; &quot;), 255)
    Values.Value(68) = Left(Replace(obj.DQ12, vbCrLf, &quot; &quot;), 255)
    Values.Value(69) = Left(Replace(obj.DQ45, vbCrLf, &quot; &quot;), 255)
    Values.Value(70) = Left(Replace(obj.PXB, vbCrLf, &quot; &quot;), 255)
    Values.Value(71) = Left(Replace(obj.DQ, vbCrLf, &quot; &quot;), 255)
    Values.Value(72) = Left(Replace(obj.HC_1, vbCrLf, &quot; &quot;), 255)
    Values.Value(73) = Left(Replace(obj.HC_2, vbCrLf, &quot; &quot;), 255)
    Values.Value(74) = Left(Replace(obj.THOT, vbCrLf, &quot; &quot;), 255)
    Values.Value(75) = Left(Replace(obj.DANS1, vbCrLf, &quot; &quot;), 255)
    Values.Value(76) = Left(Replace(obj.DANS2, vbCrLf, &quot; &quot;), 255)
    Values.Value(77) = Left(Replace(obj.DANS3, vbCrLf, &quot; &quot;), 255)
    Values.Value(78) = Left(Replace(obj.DANS4, vbCrLf, &quot; &quot;), 255)
    Values.Value(79) = Left(Replace(obj.DANS5, vbCrLf, &quot; &quot;), 255)
    Values.Value(80) = Left(Replace(obj.DANS6, vbCrLf, &quot; &quot;), 255)
    Values.Value(81) = Left(Replace(obj.CHECK_A, vbCrLf, &quot; &quot;), 255)
    Values.Value(82) = Left(Replace(obj.OKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(83) = Left(Replace(obj.WORKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(84) = Left(Replace(obj.TAIR1, vbCrLf, &quot; &quot;), 255)
    Values.Value(85) = Left(Replace(obj.TAIR2, vbCrLf, &quot; &quot;), 255)
    Values.Value(86) = Left(Replace(obj.HC_CODE, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;DATACURR_M&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_H" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Часовые архивы
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_DCALL as DATE
private m_DCOUNTER as DATE
private m_Q1 as double
private m_Q2 as double
private m_T1 as double
private m_T2 as double
private m_DT12 as double
private m_T3 as double
private m_T4 as double
private m_T5 as double
private m_DT45 as double
private m_T6 as double
private m_V1 as double
private m_V2 as double
private m_DV12 as double
private m_V3 as double
private m_V4 as double
private m_V5 as double
private m_DV45 as double
private m_V6 as double
private m_M1 as double
private m_M2 as double
private m_DM12 as double
private m_M3 as double
private m_M4 as double
private m_M5 as double
private m_DM45 as double
private m_M6 as double
private m_P1 as double
private m_P2 as double
private m_P3 as double
private m_P4 as double
private m_P5 as double
private m_P6 as double
private m_G1 as double
private m_G2 as double
private m_G3 as double
private m_G4 as double
private m_G5 as double
private m_G6 as double
private m_TCOOL as double
private m_TCE1 as double
private m_TCE2 as double
private m_TSUM1 as double
private m_TSUM2 as double
private m_Q1H as double
private m_Q2H as double
private m_V1H as double
private m_V2H as double
private m_V4H as double
private m_V5H as double
private m_ERRTIME as double
private m_ERRTIMEH as double
private m_HC as String
private m_SP as double
private m_SP_TB1 as double
private m_SP_TB2 as double
private m_datetimeCOUNTER as DATE
private m_DG12 as double
private m_DG45 as double
private m_DP12 as double
private m_DP45 as double
private m_UNITSR as String
private m_Q3 as double
private m_Q4 as double
private m_PATM as double
private m_Q5 as double
private m_DQ12 as double
private m_DQ45 as double
private m_PXB as double
private m_DQ as double
private m_HC_1 as String
private m_HC_2 as String
private m_THOT as double
private m_DANS1 as double
private m_DANS2 as double
private m_DANS3 as double
private m_DANS4 as double
private m_DANS5 as double
private m_DANS6 as double
private m_CHECK_A as double
private m_OKTIME as double
private m_WORKTIME as double
private m_TAIR1 as double
private m_TAIR2 as double
private m_HC_CODE as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;DATACURR_H&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_H.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Дата опроса

'Дата опроса
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCALL(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCALL&quot;,DCALL,newvalue

   m_DCALL= newValue
end if
end property

'Дата опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCALL
public property Get DCALL() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCALL = m_DCALL
end property
' let 
'Дата счетчика

'Дата счетчика
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCOUNTER&quot;,DCOUNTER,newvalue

   m_DCOUNTER= newValue
end if
end property

'Дата счетчика
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCOUNTER
public property Get DCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCOUNTER = m_DCOUNTER
end property
' let 
'Тепловая энергия канал 1

'Тепловая энергия канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1&quot;,Q1,newvalue

   m_Q1= newValue
end if
end property

'Тепловая энергия канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1
public property Get Q1() as double
 LoadFromDatabase
 AccessTime=Now

   Q1 = m_Q1
end property
' let 
'Тепловая энергия канал 2

'Тепловая энергия канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2&quot;,Q2,newvalue

   m_Q2= newValue
end if
end property

'Тепловая энергия канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2
public property Get Q2() as double
 LoadFromDatabase
 AccessTime=Now

   Q2 = m_Q2
end property
' let 
'Температура по каналу 1

'Температура по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T1&quot;,T1,newvalue

   m_T1= newValue
end if
end property

'Температура по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T1
public property Get T1() as double
 LoadFromDatabase
 AccessTime=Now

   T1 = m_T1
end property
' let 
'Температура по каналу 2

'Температура по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T2&quot;,T2,newvalue

   m_T2= newValue
end if
end property

'Температура по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T2
public property Get T2() as double
 LoadFromDatabase
 AccessTime=Now

   T2 = m_T2
end property
' let 
'Разность Температур по каналу 1 и 2

'Разность Температур по каналу 1 и 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT12&quot;,DT12,newvalue

   m_DT12= newValue
end if
end property

'Разность Температур по каналу 1 и 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT12
public property Get DT12() as double
 LoadFromDatabase
 AccessTime=Now

   DT12 = m_DT12
end property
' let 
'Температура по каналу 3

'Температура по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T3&quot;,T3,newvalue

   m_T3= newValue
end if
end property

'Температура по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T3
public property Get T3() as double
 LoadFromDatabase
 AccessTime=Now

   T3 = m_T3
end property
' let 
'Температура по каналу 4

'Температура по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T4&quot;,T4,newvalue

   m_T4= newValue
end if
end property

'Температура по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T4
public property Get T4() as double
 LoadFromDatabase
 AccessTime=Now

   T4 = m_T4
end property
' let 
'Температура по каналу 5

'Температура по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T5&quot;,T5,newvalue

   m_T5= newValue
end if
end property

'Температура по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T5
public property Get T5() as double
 LoadFromDatabase
 AccessTime=Now

   T5 = m_T5
end property
' let 
'Разность Температур по каналу 4 и 5

'Разность Температур по каналу 4 и 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT45&quot;,DT45,newvalue

   m_DT45= newValue
end if
end property

'Разность Температур по каналу 4 и 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT45
public property Get DT45() as double
 LoadFromDatabase
 AccessTime=Now

   DT45 = m_DT45
end property
' let 
'Температура по каналу 6

'Температура по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T6&quot;,T6,newvalue

   m_T6= newValue
end if
end property

'Температура по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T6
public property Get T6() as double
 LoadFromDatabase
 AccessTime=Now

   T6 = m_T6
end property
' let 
'Объемный расход воды по каналу 1

'Объемный расход воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1&quot;,V1,newvalue

   m_V1= newValue
end if
end property

'Объемный расход воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1
public property Get V1() as double
 LoadFromDatabase
 AccessTime=Now

   V1 = m_V1
end property
' let 
'Объемный расход воды по каналу 2

'Объемный расход воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2&quot;,V2,newvalue

   m_V2= newValue
end if
end property

'Объемный расход воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2
public property Get V2() as double
 LoadFromDatabase
 AccessTime=Now

   V2 = m_V2
end property
' let 
'Разность объемов канал 1  (расход ГВС)

'Разность объемов канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV12&quot;,DV12,newvalue

   m_DV12= newValue
end if
end property

'Разность объемов канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV12
public property Get DV12() as double
 LoadFromDatabase
 AccessTime=Now

   DV12 = m_DV12
end property
' let 
'Объемный расход воды по каналу 3

'Объемный расход воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V3&quot;,V3,newvalue

   m_V3= newValue
end if
end property

'Объемный расход воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V3
public property Get V3() as double
 LoadFromDatabase
 AccessTime=Now

   V3 = m_V3
end property
' let 
'Объемный расход воды по каналу 4

'Объемный расход воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4&quot;,V4,newvalue

   m_V4= newValue
end if
end property

'Объемный расход воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4
public property Get V4() as double
 LoadFromDatabase
 AccessTime=Now

   V4 = m_V4
end property
' let 
'Объемный расход воды по каналу 5

'Объемный расход воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5&quot;,V5,newvalue

   m_V5= newValue
end if
end property

'Объемный расход воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5
public property Get V5() as double
 LoadFromDatabase
 AccessTime=Now

   V5 = m_V5
end property
' let 
'Разность объемов канал 2

'Разность объемов канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV45&quot;,DV45,newvalue

   m_DV45= newValue
end if
end property

'Разность объемов канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV45
public property Get DV45() as double
 LoadFromDatabase
 AccessTime=Now

   DV45 = m_DV45
end property
' let 
'Объемный расход воды по каналу 6

'Объемный расход воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V6&quot;,V6,newvalue

   m_V6= newValue
end if
end property

'Объемный расход воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V6
public property Get V6() as double
 LoadFromDatabase
 AccessTime=Now

   V6 = m_V6
end property
' let 
'Масса воды по каналу 1

'Масса воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M1&quot;,M1,newvalue

   m_M1= newValue
end if
end property

'Масса воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M1
public property Get M1() as double
 LoadFromDatabase
 AccessTime=Now

   M1 = m_M1
end property
' let 
'Масса воды по каналу 2

'Масса воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M2&quot;,M2,newvalue

   m_M2= newValue
end if
end property

'Масса воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M2
public property Get M2() as double
 LoadFromDatabase
 AccessTime=Now

   M2 = m_M2
end property
' let 
'Разность масс канал 1  (расход ГВС)

'Разность масс канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM12&quot;,DM12,newvalue

   m_DM12= newValue
end if
end property

'Разность масс канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM12
public property Get DM12() as double
 LoadFromDatabase
 AccessTime=Now

   DM12 = m_DM12
end property
' let 
'Масса воды по каналу 3

'Масса воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M3&quot;,M3,newvalue

   m_M3= newValue
end if
end property

'Масса воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M3
public property Get M3() as double
 LoadFromDatabase
 AccessTime=Now

   M3 = m_M3
end property
' let 
'Масса воды по каналу 4

'Масса воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M4&quot;,M4,newvalue

   m_M4= newValue
end if
end property

'Масса воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M4
public property Get M4() as double
 LoadFromDatabase
 AccessTime=Now

   M4 = m_M4
end property
' let 
'Масса воды по каналу 5

'Масса воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M5&quot;,M5,newvalue

   m_M5= newValue
end if
end property

'Масса воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M5
public property Get M5() as double
 LoadFromDatabase
 AccessTime=Now

   M5 = m_M5
end property
' let 
'Разность масс канал 2

'Разность масс канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM45&quot;,DM45,newvalue

   m_DM45= newValue
end if
end property

'Разность масс канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM45
public property Get DM45() as double
 LoadFromDatabase
 AccessTime=Now

   DM45 = m_DM45
end property
' let 
'Масса воды по каналу 6

'Масса воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M6&quot;,M6,newvalue

   m_M6= newValue
end if
end property

'Масса воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M6
public property Get M6() as double
 LoadFromDatabase
 AccessTime=Now

   M6 = m_M6
end property
' let 
'Давление в трубопроводе 1

'Давление в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P1&quot;,P1,newvalue

   m_P1= newValue
end if
end property

'Давление в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P1
public property Get P1() as double
 LoadFromDatabase
 AccessTime=Now

   P1 = m_P1
end property
' let 
'Давление в трубопроводе 2

'Давление в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P2&quot;,P2,newvalue

   m_P2= newValue
end if
end property

'Давление в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P2
public property Get P2() as double
 LoadFromDatabase
 AccessTime=Now

   P2 = m_P2
end property
' let 
'Давление в трубопроводе 3

'Давление в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P3&quot;,P3,newvalue

   m_P3= newValue
end if
end property

'Давление в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P3
public property Get P3() as double
 LoadFromDatabase
 AccessTime=Now

   P3 = m_P3
end property
' let 
'Давление в трубопроводе 4

'Давление в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P4&quot;,P4,newvalue

   m_P4= newValue
end if
end property

'Давление в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P4
public property Get P4() as double
 LoadFromDatabase
 AccessTime=Now

   P4 = m_P4
end property
' let 
'Давление в трубопроводе 5

'Давление в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P5&quot;,P5,newvalue

   m_P5= newValue
end if
end property

'Давление в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P5
public property Get P5() as double
 LoadFromDatabase
 AccessTime=Now

   P5 = m_P5
end property
' let 
'Давление в трубопроводе 6

'Давление в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P6&quot;,P6,newvalue

   m_P6= newValue
end if
end property

'Давление в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P6
public property Get P6() as double
 LoadFromDatabase
 AccessTime=Now

   P6 = m_P6
end property
' let 
'Текущее значение расхода в трубопроводе 1

'Текущее значение расхода в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G1&quot;,G1,newvalue

   m_G1= newValue
end if
end property

'Текущее значение расхода в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G1
public property Get G1() as double
 LoadFromDatabase
 AccessTime=Now

   G1 = m_G1
end property
' let 
'Текущее значение расхода в трубопроводе 2

'Текущее значение расхода в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G2&quot;,G2,newvalue

   m_G2= newValue
end if
end property

'Текущее значение расхода в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G2
public property Get G2() as double
 LoadFromDatabase
 AccessTime=Now

   G2 = m_G2
end property
' let 
'Текущее значение расхода в трубопроводе 3

'Текущее значение расхода в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G3&quot;,G3,newvalue

   m_G3= newValue
end if
end property

'Текущее значение расхода в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G3
public property Get G3() as double
 LoadFromDatabase
 AccessTime=Now

   G3 = m_G3
end property
' let 
'Текущее значение расхода в трубопроводе 4

'Текущее значение расхода в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G4&quot;,G4,newvalue

   m_G4= newValue
end if
end property

'Текущее значение расхода в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G4
public property Get G4() as double
 LoadFromDatabase
 AccessTime=Now

   G4 = m_G4
end property
' let 
'Текущее значение расхода в трубопроводе 5

'Текущее значение расхода в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G5&quot;,G5,newvalue

   m_G5= newValue
end if
end property

'Текущее значение расхода в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G5
public property Get G5() as double
 LoadFromDatabase
 AccessTime=Now

   G5 = m_G5
end property
' let 
'Текущее значение расхода в трубопроводе 6

'Текущее значение расхода в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G6&quot;,G6,newvalue

   m_G6= newValue
end if
end property

'Текущее значение расхода в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G6
public property Get G6() as double
 LoadFromDatabase
 AccessTime=Now

   G6 = m_G6
end property
' let 
'Температура холодной воды

'Температура холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCOOL(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCOOL&quot;,TCOOL,newvalue

   m_TCOOL= newValue
end if
end property

'Температура холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCOOL
public property Get TCOOL() as double
 LoadFromDatabase
 AccessTime=Now

   TCOOL = m_TCOOL
end property
' let 
'Температура холодного конца канал 1

'Температура холодного конца канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE1&quot;,TCE1,newvalue

   m_TCE1= newValue
end if
end property

'Температура холодного конца канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE1
public property Get TCE1() as double
 LoadFromDatabase
 AccessTime=Now

   TCE1 = m_TCE1
end property
' let 
'Температура холодного конца канал 2

'Температура холодного конца канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE2&quot;,TCE2,newvalue

   m_TCE2= newValue
end if
end property

'Температура холодного конца канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE2
public property Get TCE2() as double
 LoadFromDatabase
 AccessTime=Now

   TCE2 = m_TCE2
end property
' let 
'Тотальное время счета TB1

'Тотальное время счета TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM1&quot;,TSUM1,newvalue

   m_TSUM1= newValue
end if
end property

'Тотальное время счета TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM1
public property Get TSUM1() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM1 = m_TSUM1
end property
' let 
'Тотальное время счета TB2

'Тотальное время счета TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM2&quot;,TSUM2,newvalue

   m_TSUM2= newValue
end if
end property

'Тотальное время счета TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM2
public property Get TSUM2() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM2 = m_TSUM2
end property
' let 
'Тепловая энергия канал 1 нарастающим итогом

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1H&quot;,Q1H,newvalue

   m_Q1H= newValue
end if
end property

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1H
public property Get Q1H() as double
 LoadFromDatabase
 AccessTime=Now

   Q1H = m_Q1H
end property
' let 
'Тепловая энергия канал 2 нарастающим итогом

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2H&quot;,Q2H,newvalue

   m_Q2H= newValue
end if
end property

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2H
public property Get Q2H() as double
 LoadFromDatabase
 AccessTime=Now

   Q2H = m_Q2H
end property
' let 
'Объемный расход воды по каналу 1  нарастающим итогом

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1H&quot;,V1H,newvalue

   m_V1H= newValue
end if
end property

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1H
public property Get V1H() as double
 LoadFromDatabase
 AccessTime=Now

   V1H = m_V1H
end property
' let 
'Объемный расход воды по каналу 2  нарастающим итогом

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2H&quot;,V2H,newvalue

   m_V2H= newValue
end if
end property

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2H
public property Get V2H() as double
 LoadFromDatabase
 AccessTime=Now

   V2H = m_V2H
end property
' let 
'Объемный расход воды по каналу 4  нарастающим итогом

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4H&quot;,V4H,newvalue

   m_V4H= newValue
end if
end property

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4H
public property Get V4H() as double
 LoadFromDatabase
 AccessTime=Now

   V4H = m_V4H
end property
' let 
'Объемный расход воды по каналу 5  нарастающим итогом

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5H&quot;,V5H,newvalue

   m_V5H= newValue
end if
end property

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5H
public property Get V5H() as double
 LoadFromDatabase
 AccessTime=Now

   V5H = m_V5H
end property
' let 
'Время аварии

'Время аварии
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIME&quot;,ERRTIME,newvalue

   m_ERRTIME= newValue
end if
end property

'Время аварии
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIME
public property Get ERRTIME() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIME = m_ERRTIME
end property
' let 
'Время аварии нарастающим итогом

'Время аварии нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIMEH(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIMEH&quot;,ERRTIMEH,newvalue

   m_ERRTIMEH= newValue
end if
end property

'Время аварии нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIMEH
public property Get ERRTIMEH() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIMEH = m_ERRTIMEH
end property
' let 
'Нештатные ситуации общ

'Нештатные ситуации общ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC&quot;,HC,newvalue

   m_HC= newValue
end if
end property

'Нештатные ситуации общ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC
public property Get HC() as String
 LoadFromDatabase
 AccessTime=Now

   HC = m_HC
end property
' let 
'Схема потребления

'Схема потребления
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP&quot;,SP,newvalue

   m_SP= newValue
end if
end property

'Схема потребления
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP
public property Get SP() as double
 LoadFromDatabase
 AccessTime=Now

   SP = m_SP
end property
' let 
'Схема потребления TB1

'Схема потребления TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB1&quot;,SP_TB1,newvalue

   m_SP_TB1= newValue
end if
end property

'Схема потребления TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB1
public property Get SP_TB1() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB1 = m_SP_TB1
end property
' let 
'Схема потребления TB2

'Схема потребления TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB2&quot;,SP_TB2,newvalue

   m_SP_TB2= newValue
end if
end property

'Схема потребления TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB2
public property Get SP_TB2() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB2 = m_SP_TB2
end property
' let 
'datetimeCOUNTER

'datetimeCOUNTER
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let datetimeCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;datetimeCOUNTER&quot;,datetimeCOUNTER,newvalue

   m_datetimeCOUNTER= newValue
end if
end property

'datetimeCOUNTER
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. datetimeCOUNTER
public property Get datetimeCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   datetimeCOUNTER = m_datetimeCOUNTER
end property
' let 
'G1-G2

'G1-G2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG12&quot;,DG12,newvalue

   m_DG12= newValue
end if
end property

'G1-G2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG12
public property Get DG12() as double
 LoadFromDatabase
 AccessTime=Now

   DG12 = m_DG12
end property
' let 
'G4-G5

'G4-G5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG45&quot;,DG45,newvalue

   m_DG45= newValue
end if
end property

'G4-G5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG45
public property Get DG45() as double
 LoadFromDatabase
 AccessTime=Now

   DG45 = m_DG45
end property
' let 
'P1-P2

'P1-P2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP12&quot;,DP12,newvalue

   m_DP12= newValue
end if
end property

'P1-P2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP12
public property Get DP12() as double
 LoadFromDatabase
 AccessTime=Now

   DP12 = m_DP12
end property
' let 
'P4-P5

'P4-P5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP45&quot;,DP45,newvalue

   m_DP45= newValue
end if
end property

'P4-P5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP45
public property Get DP45() as double
 LoadFromDatabase
 AccessTime=Now

   DP45 = m_DP45
end property
' let 
'Единицы измерения расхода

'Единицы измерения расхода
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UNITSR(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UNITSR&quot;,UNITSR,newvalue

   m_UNITSR= newValue
end if
end property

'Единицы измерения расхода
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. UNITSR
public property Get UNITSR() as String
 LoadFromDatabase
 AccessTime=Now

   UNITSR = m_UNITSR
end property
' let 
'Тепловая энергия канал 3

'Тепловая энергия канал 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q3&quot;,Q3,newvalue

   m_Q3= newValue
end if
end property

'Тепловая энергия канал 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q3
public property Get Q3() as double
 LoadFromDatabase
 AccessTime=Now

   Q3 = m_Q3
end property
' let 
'Тепловая энергия канал 4

'Тепловая энергия канал 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q4&quot;,Q4,newvalue

   m_Q4= newValue
end if
end property

'Тепловая энергия канал 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q4
public property Get Q4() as double
 LoadFromDatabase
 AccessTime=Now

   Q4 = m_Q4
end property
' let 
'Атмосферное давление

'Атмосферное давление
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PATM(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PATM&quot;,PATM,newvalue

   m_PATM= newValue
end if
end property

'Атмосферное давление
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PATM
public property Get PATM() as double
 LoadFromDatabase
 AccessTime=Now

   PATM = m_PATM
end property
' let 
'Тепловая энергия канал 5

'Тепловая энергия канал 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q5&quot;,Q5,newvalue

   m_Q5= newValue
end if
end property

'Тепловая энергия канал 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q5
public property Get Q5() as double
 LoadFromDatabase
 AccessTime=Now

   Q5 = m_Q5
end property
' let 
'Тепловая энергия потребитель 1

'Тепловая энергия потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ12&quot;,DQ12,newvalue

   m_DQ12= newValue
end if
end property

'Тепловая энергия потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ12
public property Get DQ12() as double
 LoadFromDatabase
 AccessTime=Now

   DQ12 = m_DQ12
end property
' let 
'Тепловая энергия потребитель 2

'Тепловая энергия потребитель 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ45&quot;,DQ45,newvalue

   m_DQ45= newValue
end if
end property

'Тепловая энергия потребитель 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ45
public property Get DQ45() as double
 LoadFromDatabase
 AccessTime=Now

   DQ45 = m_DQ45
end property
' let 
'Давление холодной воды

'Давление холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PXB(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PXB&quot;,PXB,newvalue

   m_PXB= newValue
end if
end property

'Давление холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PXB
public property Get PXB() as double
 LoadFromDatabase
 AccessTime=Now

   PXB = m_PXB
end property
' let 
'Расход энергии потребитель 1

'Расход энергии потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ&quot;,DQ,newvalue

   m_DQ= newValue
end if
end property

'Расход энергии потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ
public property Get DQ() as double
 LoadFromDatabase
 AccessTime=Now

   DQ = m_DQ
end property
' let 
'Нештатная ситуация 1 (ТВ1 или внешняя)

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_1&quot;,HC_1,newvalue

   m_HC_1= newValue
end if
end property

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_1
public property Get HC_1() as String
 LoadFromDatabase
 AccessTime=Now

   HC_1 = m_HC_1
end property
' let 
'Нештатная ситуация 2 (ТВ2 или внутренняя)

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_2&quot;,HC_2,newvalue

   m_HC_2= newValue
end if
end property

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_2
public property Get HC_2() as String
 LoadFromDatabase
 AccessTime=Now

   HC_2 = m_HC_2
end property
' let 
'Температура горячей воды

'Температура горячей воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let THOT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;THOT&quot;,THOT,newvalue

   m_THOT= newValue
end if
end property

'Температура горячей воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. THOT
public property Get THOT() as double
 LoadFromDatabase
 AccessTime=Now

   THOT = m_THOT
end property
' let 
'DANS1

'DANS1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS1&quot;,DANS1,newvalue

   m_DANS1= newValue
end if
end property

'DANS1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS1
public property Get DANS1() as double
 LoadFromDatabase
 AccessTime=Now

   DANS1 = m_DANS1
end property
' let 
'DANS2

'DANS2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS2&quot;,DANS2,newvalue

   m_DANS2= newValue
end if
end property

'DANS2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS2
public property Get DANS2() as double
 LoadFromDatabase
 AccessTime=Now

   DANS2 = m_DANS2
end property
' let 
'DANS3

'DANS3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS3&quot;,DANS3,newvalue

   m_DANS3= newValue
end if
end property

'DANS3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS3
public property Get DANS3() as double
 LoadFromDatabase
 AccessTime=Now

   DANS3 = m_DANS3
end property
' let 
'DANS4

'DANS4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS4&quot;,DANS4,newvalue

   m_DANS4= newValue
end if
end property

'DANS4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS4
public property Get DANS4() as double
 LoadFromDatabase
 AccessTime=Now

   DANS4 = m_DANS4
end property
' let 
'DANS5

'DANS5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS5&quot;,DANS5,newvalue

   m_DANS5= newValue
end if
end property

'DANS5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS5
public property Get DANS5() as double
 LoadFromDatabase
 AccessTime=Now

   DANS5 = m_DANS5
end property
' let 
'DANS6

'DANS6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS6&quot;,DANS6,newvalue

   m_DANS6= newValue
end if
end property

'DANS6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS6
public property Get DANS6() as double
 LoadFromDatabase
 AccessTime=Now

   DANS6 = m_DANS6
end property
' let 
'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHECK_A(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHECK_A&quot;,CHECK_A,newvalue

   m_CHECK_A= newValue
end if
end property

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CHECK_A
public property Get CHECK_A() as double
 LoadFromDatabase
 AccessTime=Now

   CHECK_A = m_CHECK_A
end property
' let 
'Время безошиб.работы

'Время безошиб.работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OKTIME&quot;,OKTIME,newvalue

   m_OKTIME= newValue
end if
end property

'Время безошиб.работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. OKTIME
public property Get OKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   OKTIME = m_OKTIME
end property
' let 
'Время работы

'Время работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WORKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WORKTIME&quot;,WORKTIME,newvalue

   m_WORKTIME= newValue
end if
end property

'Время работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WORKTIME
public property Get WORKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   WORKTIME = m_WORKTIME
end property
' let 
'Температура воздуха канал 1

'Температура воздуха канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR1&quot;,TAIR1,newvalue

   m_TAIR1= newValue
end if
end property

'Температура воздуха канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR1
public property Get TAIR1() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR1 = m_TAIR1
end property
' let 
'Температура воздуха канал 2

'Температура воздуха канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR2&quot;,TAIR2,newvalue

   m_TAIR2= newValue
end if
end property

'Температура воздуха канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR2
public property Get TAIR2() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR2 = m_TAIR2
end property
' let 
'Код нештатной ситуации тепловычислителя

'Код нештатной ситуации тепловычислителя
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_CODE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_CODE&quot;,HC_CODE,newvalue

   m_HC_CODE= newValue
end if
end property

'Код нештатной ситуации тепловычислителя
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_CODE
public property Get HC_CODE() as String
 LoadFromDatabase
 AccessTime=Now

   HC_CODE = m_HC_CODE
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;DCALL&quot;,m_DCALL)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DCOUNTER&quot;,m_DCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;Q1&quot;,m_Q1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2&quot;,m_Q2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T1&quot;,m_T1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T2&quot;,m_T2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT12&quot;,m_DT12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T3&quot;,m_T3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T4&quot;,m_T4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T5&quot;,m_T5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT45&quot;,m_DT45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T6&quot;,m_T6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1&quot;,m_V1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2&quot;,m_V2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV12&quot;,m_DV12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V3&quot;,m_V3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4&quot;,m_V4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5&quot;,m_V5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV45&quot;,m_DV45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V6&quot;,m_V6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M1&quot;,m_M1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M2&quot;,m_M2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM12&quot;,m_DM12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M3&quot;,m_M3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M4&quot;,m_M4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M5&quot;,m_M5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM45&quot;,m_DM45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M6&quot;,m_M6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P1&quot;,m_P1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P2&quot;,m_P2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P3&quot;,m_P3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P4&quot;,m_P4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P5&quot;,m_P5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P6&quot;,m_P6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G1&quot;,m_G1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G2&quot;,m_G2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G3&quot;,m_G3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G4&quot;,m_G4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G5&quot;,m_G5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G6&quot;,m_G6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCOOL&quot;,m_TCOOL)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE1&quot;,m_TCE1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE2&quot;,m_TCE2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM1&quot;,m_TSUM1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM2&quot;,m_TSUM2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q1H&quot;,m_Q1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2H&quot;,m_Q2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1H&quot;,m_V1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2H&quot;,m_V2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4H&quot;,m_V4H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5H&quot;,m_V5H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIME&quot;,m_ERRTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIMEH&quot;,m_ERRTIMEH)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC&quot;,m_HC)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;SP&quot;,m_SP)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB1&quot;,m_SP_TB1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB2&quot;,m_SP_TB2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;datetimeCOUNTER&quot;,m_datetimeCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DG12&quot;,m_DG12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DG45&quot;,m_DG45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP12&quot;,m_DP12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP45&quot;,m_DP45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;UNITSR&quot;,m_UNITSR)
nvi.ValueSize = 24
  set nvi=nv.Add( &quot;Q3&quot;,m_Q3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q4&quot;,m_Q4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PATM&quot;,m_PATM)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q5&quot;,m_Q5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ12&quot;,m_DQ12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ45&quot;,m_DQ45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PXB&quot;,m_PXB)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ&quot;,m_DQ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_1&quot;,m_HC_1)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;HC_2&quot;,m_HC_2)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;THOT&quot;,m_THOT)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS1&quot;,m_DANS1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS2&quot;,m_DANS2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS3&quot;,m_DANS3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS4&quot;,m_DANS4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS5&quot;,m_DANS5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS6&quot;,m_DANS6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;CHECK_A&quot;,m_CHECK_A)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;OKTIME&quot;,m_OKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WORKTIME&quot;,m_WORKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR1&quot;,m_TAIR1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR2&quot;,m_TAIR2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_CODE&quot;,m_HC_CODE)
nvi.ValueSize = 360
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; DCALL &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_DCALL=nv.item( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.item( &quot;DCOUNTER&quot;).Value
m_Q1=nv.item( &quot;Q1&quot;).Value
m_Q2=nv.item( &quot;Q2&quot;).Value
m_T1=nv.item( &quot;T1&quot;).Value
m_T2=nv.item( &quot;T2&quot;).Value
m_DT12=nv.item( &quot;DT12&quot;).Value
m_T3=nv.item( &quot;T3&quot;).Value
m_T4=nv.item( &quot;T4&quot;).Value
m_T5=nv.item( &quot;T5&quot;).Value
m_DT45=nv.item( &quot;DT45&quot;).Value
m_T6=nv.item( &quot;T6&quot;).Value
m_V1=nv.item( &quot;V1&quot;).Value
m_V2=nv.item( &quot;V2&quot;).Value
m_DV12=nv.item( &quot;DV12&quot;).Value
m_V3=nv.item( &quot;V3&quot;).Value
m_V4=nv.item( &quot;V4&quot;).Value
m_V5=nv.item( &quot;V5&quot;).Value
m_DV45=nv.item( &quot;DV45&quot;).Value
m_V6=nv.item( &quot;V6&quot;).Value
m_M1=nv.item( &quot;M1&quot;).Value
m_M2=nv.item( &quot;M2&quot;).Value
m_DM12=nv.item( &quot;DM12&quot;).Value
m_M3=nv.item( &quot;M3&quot;).Value
m_M4=nv.item( &quot;M4&quot;).Value
m_M5=nv.item( &quot;M5&quot;).Value
m_DM45=nv.item( &quot;DM45&quot;).Value
m_M6=nv.item( &quot;M6&quot;).Value
m_P1=nv.item( &quot;P1&quot;).Value
m_P2=nv.item( &quot;P2&quot;).Value
m_P3=nv.item( &quot;P3&quot;).Value
m_P4=nv.item( &quot;P4&quot;).Value
m_P5=nv.item( &quot;P5&quot;).Value
m_P6=nv.item( &quot;P6&quot;).Value
m_G1=nv.item( &quot;G1&quot;).Value
m_G2=nv.item( &quot;G2&quot;).Value
m_G3=nv.item( &quot;G3&quot;).Value
m_G4=nv.item( &quot;G4&quot;).Value
m_G5=nv.item( &quot;G5&quot;).Value
m_G6=nv.item( &quot;G6&quot;).Value
m_TCOOL=nv.item( &quot;TCOOL&quot;).Value
m_TCE1=nv.item( &quot;TCE1&quot;).Value
m_TCE2=nv.item( &quot;TCE2&quot;).Value
m_TSUM1=nv.item( &quot;TSUM1&quot;).Value
m_TSUM2=nv.item( &quot;TSUM2&quot;).Value
m_Q1H=nv.item( &quot;Q1H&quot;).Value
m_Q2H=nv.item( &quot;Q2H&quot;).Value
m_V1H=nv.item( &quot;V1H&quot;).Value
m_V2H=nv.item( &quot;V2H&quot;).Value
m_V4H=nv.item( &quot;V4H&quot;).Value
m_V5H=nv.item( &quot;V5H&quot;).Value
m_ERRTIME=nv.item( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.item( &quot;ERRTIMEH&quot;).Value
m_HC=nv.item( &quot;HC&quot;).Value
m_SP=nv.item( &quot;SP&quot;).Value
m_SP_TB1=nv.item( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.item( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.item( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.item( &quot;DG12&quot;).Value
m_DG45=nv.item( &quot;DG45&quot;).Value
m_DP12=nv.item( &quot;DP12&quot;).Value
m_DP45=nv.item( &quot;DP45&quot;).Value
m_UNITSR=nv.item( &quot;UNITSR&quot;).Value
m_Q3=nv.item( &quot;Q3&quot;).Value
m_Q4=nv.item( &quot;Q4&quot;).Value
m_PATM=nv.item( &quot;PATM&quot;).Value
m_Q5=nv.item( &quot;Q5&quot;).Value
m_DQ12=nv.item( &quot;DQ12&quot;).Value
m_DQ45=nv.item( &quot;DQ45&quot;).Value
m_PXB=nv.item( &quot;PXB&quot;).Value
m_DQ=nv.item( &quot;DQ&quot;).Value
m_HC_1=nv.item( &quot;HC_1&quot;).Value
m_HC_2=nv.item( &quot;HC_2&quot;).Value
m_THOT=nv.item( &quot;THOT&quot;).Value
m_DANS1=nv.item( &quot;DANS1&quot;).Value
m_DANS2=nv.item( &quot;DANS2&quot;).Value
m_DANS3=nv.item( &quot;DANS3&quot;).Value
m_DANS4=nv.item( &quot;DANS4&quot;).Value
m_DANS5=nv.item( &quot;DANS5&quot;).Value
m_DANS6=nv.item( &quot;DANS6&quot;).Value
m_CHECK_A=nv.item( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.item( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.item( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.item( &quot;TAIR1&quot;).Value
m_TAIR2=nv.item( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.item( &quot;HC_CODE&quot;).Value
else

m_DCALL=nv.fields( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.fields( &quot;DCOUNTER&quot;).Value
m_Q1=nv.fields( &quot;Q1&quot;).Value
m_Q2=nv.fields( &quot;Q2&quot;).Value
m_T1=nv.fields( &quot;T1&quot;).Value
m_T2=nv.fields( &quot;T2&quot;).Value
m_DT12=nv.fields( &quot;DT12&quot;).Value
m_T3=nv.fields( &quot;T3&quot;).Value
m_T4=nv.fields( &quot;T4&quot;).Value
m_T5=nv.fields( &quot;T5&quot;).Value
m_DT45=nv.fields( &quot;DT45&quot;).Value
m_T6=nv.fields( &quot;T6&quot;).Value
m_V1=nv.fields( &quot;V1&quot;).Value
m_V2=nv.fields( &quot;V2&quot;).Value
m_DV12=nv.fields( &quot;DV12&quot;).Value
m_V3=nv.fields( &quot;V3&quot;).Value
m_V4=nv.fields( &quot;V4&quot;).Value
m_V5=nv.fields( &quot;V5&quot;).Value
m_DV45=nv.fields( &quot;DV45&quot;).Value
m_V6=nv.fields( &quot;V6&quot;).Value
m_M1=nv.fields( &quot;M1&quot;).Value
m_M2=nv.fields( &quot;M2&quot;).Value
m_DM12=nv.fields( &quot;DM12&quot;).Value
m_M3=nv.fields( &quot;M3&quot;).Value
m_M4=nv.fields( &quot;M4&quot;).Value
m_M5=nv.fields( &quot;M5&quot;).Value
m_DM45=nv.fields( &quot;DM45&quot;).Value
m_M6=nv.fields( &quot;M6&quot;).Value
m_P1=nv.fields( &quot;P1&quot;).Value
m_P2=nv.fields( &quot;P2&quot;).Value
m_P3=nv.fields( &quot;P3&quot;).Value
m_P4=nv.fields( &quot;P4&quot;).Value
m_P5=nv.fields( &quot;P5&quot;).Value
m_P6=nv.fields( &quot;P6&quot;).Value
m_G1=nv.fields( &quot;G1&quot;).Value
m_G2=nv.fields( &quot;G2&quot;).Value
m_G3=nv.fields( &quot;G3&quot;).Value
m_G4=nv.fields( &quot;G4&quot;).Value
m_G5=nv.fields( &quot;G5&quot;).Value
m_G6=nv.fields( &quot;G6&quot;).Value
m_TCOOL=nv.fields( &quot;TCOOL&quot;).Value
m_TCE1=nv.fields( &quot;TCE1&quot;).Value
m_TCE2=nv.fields( &quot;TCE2&quot;).Value
m_TSUM1=nv.fields( &quot;TSUM1&quot;).Value
m_TSUM2=nv.fields( &quot;TSUM2&quot;).Value
m_Q1H=nv.fields( &quot;Q1H&quot;).Value
m_Q2H=nv.fields( &quot;Q2H&quot;).Value
m_V1H=nv.fields( &quot;V1H&quot;).Value
m_V2H=nv.fields( &quot;V2H&quot;).Value
m_V4H=nv.fields( &quot;V4H&quot;).Value
m_V5H=nv.fields( &quot;V5H&quot;).Value
m_ERRTIME=nv.fields( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.fields( &quot;ERRTIMEH&quot;).Value
m_HC=nv.fields( &quot;HC&quot;).Value
m_SP=nv.fields( &quot;SP&quot;).Value
m_SP_TB1=nv.fields( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.fields( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.fields( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.fields( &quot;DG12&quot;).Value
m_DG45=nv.fields( &quot;DG45&quot;).Value
m_DP12=nv.fields( &quot;DP12&quot;).Value
m_DP45=nv.fields( &quot;DP45&quot;).Value
m_UNITSR=nv.fields( &quot;UNITSR&quot;).Value
m_Q3=nv.fields( &quot;Q3&quot;).Value
m_Q4=nv.fields( &quot;Q4&quot;).Value
m_PATM=nv.fields( &quot;PATM&quot;).Value
m_Q5=nv.fields( &quot;Q5&quot;).Value
m_DQ12=nv.fields( &quot;DQ12&quot;).Value
m_DQ45=nv.fields( &quot;DQ45&quot;).Value
m_PXB=nv.fields( &quot;PXB&quot;).Value
m_DQ=nv.fields( &quot;DQ&quot;).Value
m_HC_1=nv.fields( &quot;HC_1&quot;).Value
m_HC_2=nv.fields( &quot;HC_2&quot;).Value
m_THOT=nv.fields( &quot;THOT&quot;).Value
m_DANS1=nv.fields( &quot;DANS1&quot;).Value
m_DANS2=nv.fields( &quot;DANS2&quot;).Value
m_DANS3=nv.fields( &quot;DANS3&quot;).Value
m_DANS4=nv.fields( &quot;DANS4&quot;).Value
m_DANS5=nv.fields( &quot;DANS5&quot;).Value
m_DANS6=nv.fields( &quot;DANS6&quot;).Value
m_CHECK_A=nv.fields( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.fields( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.fields( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.fields( &quot;TAIR1&quot;).Value
m_TAIR2=nv.fields( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.fields( &quot;HC_CODE&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as DATACURR_H
   set o = new DATACURR_H
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;DATACURR_H.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;DATACURR_H.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;DATACURR_H&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;DATACURR_H.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;DATACURR_H&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;DATACURR_H.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;DATACURR_H.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  DCALL=node.Attributes.getNamedItem(&quot;DCALL&quot;).nodeValue
  DCOUNTER=node.Attributes.getNamedItem(&quot;DCOUNTER&quot;).nodeValue
  Q1=val(Replace(node.Attributes.getNamedItem(&quot;Q1&quot;).nodeValue,vbLf,vbcrlf))
  Q2=val(Replace(node.Attributes.getNamedItem(&quot;Q2&quot;).nodeValue,vbLf,vbcrlf))
  T1=val(Replace(node.Attributes.getNamedItem(&quot;T1&quot;).nodeValue,vbLf,vbcrlf))
  T2=val(Replace(node.Attributes.getNamedItem(&quot;T2&quot;).nodeValue,vbLf,vbcrlf))
  DT12=val(Replace(node.Attributes.getNamedItem(&quot;DT12&quot;).nodeValue,vbLf,vbcrlf))
  T3=val(Replace(node.Attributes.getNamedItem(&quot;T3&quot;).nodeValue,vbLf,vbcrlf))
  T4=val(Replace(node.Attributes.getNamedItem(&quot;T4&quot;).nodeValue,vbLf,vbcrlf))
  T5=val(Replace(node.Attributes.getNamedItem(&quot;T5&quot;).nodeValue,vbLf,vbcrlf))
  DT45=val(Replace(node.Attributes.getNamedItem(&quot;DT45&quot;).nodeValue,vbLf,vbcrlf))
  T6=val(Replace(node.Attributes.getNamedItem(&quot;T6&quot;).nodeValue,vbLf,vbcrlf))
  V1=val(Replace(node.Attributes.getNamedItem(&quot;V1&quot;).nodeValue,vbLf,vbcrlf))
  V2=val(Replace(node.Attributes.getNamedItem(&quot;V2&quot;).nodeValue,vbLf,vbcrlf))
  DV12=val(Replace(node.Attributes.getNamedItem(&quot;DV12&quot;).nodeValue,vbLf,vbcrlf))
  V3=val(Replace(node.Attributes.getNamedItem(&quot;V3&quot;).nodeValue,vbLf,vbcrlf))
  V4=val(Replace(node.Attributes.getNamedItem(&quot;V4&quot;).nodeValue,vbLf,vbcrlf))
  V5=val(Replace(node.Attributes.getNamedItem(&quot;V5&quot;).nodeValue,vbLf,vbcrlf))
  DV45=val(Replace(node.Attributes.getNamedItem(&quot;DV45&quot;).nodeValue,vbLf,vbcrlf))
  V6=val(Replace(node.Attributes.getNamedItem(&quot;V6&quot;).nodeValue,vbLf,vbcrlf))
  M1=val(Replace(node.Attributes.getNamedItem(&quot;M1&quot;).nodeValue,vbLf,vbcrlf))
  M2=val(Replace(node.Attributes.getNamedItem(&quot;M2&quot;).nodeValue,vbLf,vbcrlf))
  DM12=val(Replace(node.Attributes.getNamedItem(&quot;DM12&quot;).nodeValue,vbLf,vbcrlf))
  M3=val(Replace(node.Attributes.getNamedItem(&quot;M3&quot;).nodeValue,vbLf,vbcrlf))
  M4=val(Replace(node.Attributes.getNamedItem(&quot;M4&quot;).nodeValue,vbLf,vbcrlf))
  M5=val(Replace(node.Attributes.getNamedItem(&quot;M5&quot;).nodeValue,vbLf,vbcrlf))
  DM45=val(Replace(node.Attributes.getNamedItem(&quot;DM45&quot;).nodeValue,vbLf,vbcrlf))
  M6=val(Replace(node.Attributes.getNamedItem(&quot;M6&quot;).nodeValue,vbLf,vbcrlf))
  P1=val(Replace(node.Attributes.getNamedItem(&quot;P1&quot;).nodeValue,vbLf,vbcrlf))
  P2=val(Replace(node.Attributes.getNamedItem(&quot;P2&quot;).nodeValue,vbLf,vbcrlf))
  P3=val(Replace(node.Attributes.getNamedItem(&quot;P3&quot;).nodeValue,vbLf,vbcrlf))
  P4=val(Replace(node.Attributes.getNamedItem(&quot;P4&quot;).nodeValue,vbLf,vbcrlf))
  P5=val(Replace(node.Attributes.getNamedItem(&quot;P5&quot;).nodeValue,vbLf,vbcrlf))
  P6=val(Replace(node.Attributes.getNamedItem(&quot;P6&quot;).nodeValue,vbLf,vbcrlf))
  G1=val(Replace(node.Attributes.getNamedItem(&quot;G1&quot;).nodeValue,vbLf,vbcrlf))
  G2=val(Replace(node.Attributes.getNamedItem(&quot;G2&quot;).nodeValue,vbLf,vbcrlf))
  G3=val(Replace(node.Attributes.getNamedItem(&quot;G3&quot;).nodeValue,vbLf,vbcrlf))
  G4=val(Replace(node.Attributes.getNamedItem(&quot;G4&quot;).nodeValue,vbLf,vbcrlf))
  G5=val(Replace(node.Attributes.getNamedItem(&quot;G5&quot;).nodeValue,vbLf,vbcrlf))
  G6=val(Replace(node.Attributes.getNamedItem(&quot;G6&quot;).nodeValue,vbLf,vbcrlf))
  TCOOL=val(Replace(node.Attributes.getNamedItem(&quot;TCOOL&quot;).nodeValue,vbLf,vbcrlf))
  TCE1=val(Replace(node.Attributes.getNamedItem(&quot;TCE1&quot;).nodeValue,vbLf,vbcrlf))
  TCE2=val(Replace(node.Attributes.getNamedItem(&quot;TCE2&quot;).nodeValue,vbLf,vbcrlf))
  TSUM1=val(Replace(node.Attributes.getNamedItem(&quot;TSUM1&quot;).nodeValue,vbLf,vbcrlf))
  TSUM2=val(Replace(node.Attributes.getNamedItem(&quot;TSUM2&quot;).nodeValue,vbLf,vbcrlf))
  Q1H=val(Replace(node.Attributes.getNamedItem(&quot;Q1H&quot;).nodeValue,vbLf,vbcrlf))
  Q2H=val(Replace(node.Attributes.getNamedItem(&quot;Q2H&quot;).nodeValue,vbLf,vbcrlf))
  V1H=val(Replace(node.Attributes.getNamedItem(&quot;V1H&quot;).nodeValue,vbLf,vbcrlf))
  V2H=val(Replace(node.Attributes.getNamedItem(&quot;V2H&quot;).nodeValue,vbLf,vbcrlf))
  V4H=val(Replace(node.Attributes.getNamedItem(&quot;V4H&quot;).nodeValue,vbLf,vbcrlf))
  V5H=val(Replace(node.Attributes.getNamedItem(&quot;V5H&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIME=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIME&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIMEH=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIMEH&quot;).nodeValue,vbLf,vbcrlf))
  HC=Replace(node.Attributes.getNamedItem(&quot;HC&quot;).nodeValue,vbLf,vbcrlf)
  SP=val(Replace(node.Attributes.getNamedItem(&quot;SP&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB1=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB1&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB2=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB2&quot;).nodeValue,vbLf,vbcrlf))
  datetimeCOUNTER=node.Attributes.getNamedItem(&quot;DATETIMECOUNTER&quot;).nodeValue
  DG12=val(Replace(node.Attributes.getNamedItem(&quot;DG12&quot;).nodeValue,vbLf,vbcrlf))
  DG45=val(Replace(node.Attributes.getNamedItem(&quot;DG45&quot;).nodeValue,vbLf,vbcrlf))
  DP12=val(Replace(node.Attributes.getNamedItem(&quot;DP12&quot;).nodeValue,vbLf,vbcrlf))
  DP45=val(Replace(node.Attributes.getNamedItem(&quot;DP45&quot;).nodeValue,vbLf,vbcrlf))
  UNITSR=Replace(node.Attributes.getNamedItem(&quot;UNITSR&quot;).nodeValue,vbLf,vbcrlf)
  Q3=val(Replace(node.Attributes.getNamedItem(&quot;Q3&quot;).nodeValue,vbLf,vbcrlf))
  Q4=val(Replace(node.Attributes.getNamedItem(&quot;Q4&quot;).nodeValue,vbLf,vbcrlf))
  PATM=val(Replace(node.Attributes.getNamedItem(&quot;PATM&quot;).nodeValue,vbLf,vbcrlf))
  Q5=val(Replace(node.Attributes.getNamedItem(&quot;Q5&quot;).nodeValue,vbLf,vbcrlf))
  DQ12=val(Replace(node.Attributes.getNamedItem(&quot;DQ12&quot;).nodeValue,vbLf,vbcrlf))
  DQ45=val(Replace(node.Attributes.getNamedItem(&quot;DQ45&quot;).nodeValue,vbLf,vbcrlf))
  PXB=val(Replace(node.Attributes.getNamedItem(&quot;PXB&quot;).nodeValue,vbLf,vbcrlf))
  DQ=val(Replace(node.Attributes.getNamedItem(&quot;DQ&quot;).nodeValue,vbLf,vbcrlf))
  HC_1=Replace(node.Attributes.getNamedItem(&quot;HC_1&quot;).nodeValue,vbLf,vbcrlf)
  HC_2=Replace(node.Attributes.getNamedItem(&quot;HC_2&quot;).nodeValue,vbLf,vbcrlf)
  THOT=val(Replace(node.Attributes.getNamedItem(&quot;THOT&quot;).nodeValue,vbLf,vbcrlf))
  DANS1=val(Replace(node.Attributes.getNamedItem(&quot;DANS1&quot;).nodeValue,vbLf,vbcrlf))
  DANS2=val(Replace(node.Attributes.getNamedItem(&quot;DANS2&quot;).nodeValue,vbLf,vbcrlf))
  DANS3=val(Replace(node.Attributes.getNamedItem(&quot;DANS3&quot;).nodeValue,vbLf,vbcrlf))
  DANS4=val(Replace(node.Attributes.getNamedItem(&quot;DANS4&quot;).nodeValue,vbLf,vbcrlf))
  DANS5=val(Replace(node.Attributes.getNamedItem(&quot;DANS5&quot;).nodeValue,vbLf,vbcrlf))
  DANS6=val(Replace(node.Attributes.getNamedItem(&quot;DANS6&quot;).nodeValue,vbLf,vbcrlf))
  CHECK_A=val(Replace(node.Attributes.getNamedItem(&quot;CHECK_A&quot;).nodeValue,vbLf,vbcrlf))
  OKTIME=val(Replace(node.Attributes.getNamedItem(&quot;OKTIME&quot;).nodeValue,vbLf,vbcrlf))
  WORKTIME=val(Replace(node.Attributes.getNamedItem(&quot;WORKTIME&quot;).nodeValue,vbLf,vbcrlf))
  TAIR1=val(Replace(node.Attributes.getNamedItem(&quot;TAIR1&quot;).nodeValue,vbLf,vbcrlf))
  TAIR2=val(Replace(node.Attributes.getNamedItem(&quot;TAIR2&quot;).nodeValue,vbLf,vbcrlf))
  HC_CODE=Replace(node.Attributes.getNamedItem(&quot;HC_CODE&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;DCALL&quot;, Cdbl(DCALL)
  node.setAttribute &quot;DCOUNTER&quot;, Cdbl(DCOUNTER)
  node.setAttribute &quot;Q1&quot;, replace(cstr(Q1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2&quot;, replace(cstr(Q2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T1&quot;, replace(cstr(T1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T2&quot;, replace(cstr(T2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT12&quot;, replace(cstr(DT12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T3&quot;, replace(cstr(T3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T4&quot;, replace(cstr(T4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T5&quot;, replace(cstr(T5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT45&quot;, replace(cstr(DT45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T6&quot;, replace(cstr(T6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1&quot;, replace(cstr(V1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2&quot;, replace(cstr(V2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV12&quot;, replace(cstr(DV12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V3&quot;, replace(cstr(V3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4&quot;, replace(cstr(V4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5&quot;, replace(cstr(V5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV45&quot;, replace(cstr(DV45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V6&quot;, replace(cstr(V6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M1&quot;, replace(cstr(M1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M2&quot;, replace(cstr(M2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM12&quot;, replace(cstr(DM12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M3&quot;, replace(cstr(M3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M4&quot;, replace(cstr(M4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M5&quot;, replace(cstr(M5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM45&quot;, replace(cstr(DM45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M6&quot;, replace(cstr(M6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P1&quot;, replace(cstr(P1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P2&quot;, replace(cstr(P2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P3&quot;, replace(cstr(P3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P4&quot;, replace(cstr(P4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P5&quot;, replace(cstr(P5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P6&quot;, replace(cstr(P6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G1&quot;, replace(cstr(G1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G2&quot;, replace(cstr(G2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G3&quot;, replace(cstr(G3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G4&quot;, replace(cstr(G4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G5&quot;, replace(cstr(G5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G6&quot;, replace(cstr(G6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCOOL&quot;, replace(cstr(TCOOL),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE1&quot;, replace(cstr(TCE1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE2&quot;, replace(cstr(TCE2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM1&quot;, replace(cstr(TSUM1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM2&quot;, replace(cstr(TSUM2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q1H&quot;, replace(cstr(Q1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2H&quot;, replace(cstr(Q2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1H&quot;, replace(cstr(V1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2H&quot;, replace(cstr(V2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4H&quot;, replace(cstr(V4H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5H&quot;, replace(cstr(V5H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIME&quot;, replace(cstr(ERRTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIMEH&quot;, replace(cstr(ERRTIMEH),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC&quot;, HC
  node.setAttribute &quot;SP&quot;, replace(cstr(SP),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB1&quot;, replace(cstr(SP_TB1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB2&quot;, replace(cstr(SP_TB2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DATETIMECOUNTER&quot;, Cdbl(datetimeCOUNTER)
  node.setAttribute &quot;DG12&quot;, replace(cstr(DG12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DG45&quot;, replace(cstr(DG45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP12&quot;, replace(cstr(DP12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP45&quot;, replace(cstr(DP45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;UNITSR&quot;, UNITSR
  node.setAttribute &quot;Q3&quot;, replace(cstr(Q3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q4&quot;, replace(cstr(Q4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PATM&quot;, replace(cstr(PATM),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q5&quot;, replace(cstr(Q5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ12&quot;, replace(cstr(DQ12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ45&quot;, replace(cstr(DQ45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PXB&quot;, replace(cstr(PXB),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ&quot;, replace(cstr(DQ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_1&quot;, HC_1
  node.setAttribute &quot;HC_2&quot;, HC_2
  node.setAttribute &quot;THOT&quot;, replace(cstr(THOT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS1&quot;, replace(cstr(DANS1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS2&quot;, replace(cstr(DANS2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS3&quot;, replace(cstr(DANS3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS4&quot;, replace(cstr(DANS4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS5&quot;, replace(cstr(DANS5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS6&quot;, replace(cstr(DANS6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;CHECK_A&quot;, replace(cstr(CHECK_A),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;OKTIME&quot;, replace(cstr(OKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WORKTIME&quot;, replace(cstr(WORKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR1&quot;, replace(cstr(TAIR1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR2&quot;, replace(cstr(TAIR2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_CODE&quot;, HC_CODE
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;DATACURR_H&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;DATACURR_H&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;DATACURR_H&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;DATACURR_H&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_H_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Часовые архивы
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;DATACURR_H&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_H.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as  DATACURR_H
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  DATACURR_H
 dim LID as  string
 dim o as  DATACURR_H
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  DATACURR_H
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as DATACURR_H
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as DATACURR_H
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as DATACURR_H
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as DATACURR_H
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as DATACURR_H
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as DATACURR_H
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_H
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_H
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as DATACURR_H
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  DATACURR_H
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;DATACURR_H.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As DATACURR_H
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As DATACURR_H
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!DATACURR_HID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as DATACURR_H
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;DATACURR_H_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;DATACURR_H&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as DATACURR_H
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;DATACURR_H&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Дата опроса&quot;, 0, 0, &quot;DCALL&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата счетчика&quot;, 0, 0, &quot;DCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1&quot;, 0, 0, &quot;Q1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2&quot;, 0, 0, &quot;Q2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 1&quot;, 0, 0, &quot;T1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 2&quot;, 0, 0, &quot;T2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 1 и 2&quot;, 0, 0, &quot;DT12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 3&quot;, 0, 0, &quot;T3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 4&quot;, 0, 0, &quot;T4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 5&quot;, 0, 0, &quot;T5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 4 и 5&quot;, 0, 0, &quot;DT45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 6&quot;, 0, 0, &quot;T6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1&quot;, 0, 0, &quot;V1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2&quot;, 0, 0, &quot;V2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 1 (расход ГВС)&quot;, 0, 0, &quot;DV12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 3&quot;, 0, 0, &quot;V3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4&quot;, 0, 0, &quot;V4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5&quot;, 0, 0, &quot;V5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 2&quot;, 0, 0, &quot;DV45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 6&quot;, 0, 0, &quot;V6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 1&quot;, 0, 0, &quot;M1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 2&quot;, 0, 0, &quot;M2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 1 (расход ГВС)&quot;, 0, 0, &quot;DM12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 3&quot;, 0, 0, &quot;M3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 4&quot;, 0, 0, &quot;M4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 5&quot;, 0, 0, &quot;M5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 2&quot;, 0, 0, &quot;DM45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 6&quot;, 0, 0, &quot;M6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 1&quot;, 0, 0, &quot;P1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 2&quot;, 0, 0, &quot;P2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 3&quot;, 0, 0, &quot;P3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 4&quot;, 0, 0, &quot;P4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 5&quot;, 0, 0, &quot;P5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 6&quot;, 0, 0, &quot;P6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 1&quot;, 0, 0, &quot;G1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 2&quot;, 0, 0, &quot;G2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 3&quot;, 0, 0, &quot;G3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 4&quot;, 0, 0, &quot;G4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 5&quot;, 0, 0, &quot;G5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 6&quot;, 0, 0, &quot;G6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодной воды&quot;, 0, 0, &quot;TCOOL&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 1&quot;, 0, 0, &quot;TCE1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 2&quot;, 0, 0, &quot;TCE2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB1&quot;, 0, 0, &quot;TSUM1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB2&quot;, 0, 0, &quot;TSUM2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1 нарастающим итогом&quot;, 0, 0, &quot;Q1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2 нарастающим итогом&quot;, 0, 0, &quot;Q2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1 нарастающим итогом&quot;, 0, 0, &quot;V1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2 нарастающим итогом&quot;, 0, 0, &quot;V2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4 нарастающим итогом&quot;, 0, 0, &quot;V4H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5 нарастающим итогом&quot;, 0, 0, &quot;V5H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии&quot;, 0, 0, &quot;ERRTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии нарастающим итогом&quot;, 0, 0, &quot;ERRTIMEH&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатные ситуации общ&quot;, 0, 0, &quot;HC&quot;).SortType =1
  YGrid.Columns.Add(&quot;Схема потребления&quot;, 0, 0, &quot;SP&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB1&quot;, 0, 0, &quot;SP_TB1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB2&quot;, 0, 0, &quot;SP_TB2&quot;).SortType =2
  YGrid.Columns.Add(&quot;datetimeCOUNTER&quot;, 0, 0, &quot;datetimeCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;G1-G2&quot;, 0, 0, &quot;DG12&quot;).SortType =2
  YGrid.Columns.Add(&quot;G4-G5&quot;, 0, 0, &quot;DG45&quot;).SortType =2
  YGrid.Columns.Add(&quot;P1-P2&quot;, 0, 0, &quot;DP12&quot;).SortType =2
  YGrid.Columns.Add(&quot;P4-P5&quot;, 0, 0, &quot;DP45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Единицы измерения расхода&quot;, 0, 0, &quot;UNITSR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тепловая энергия канал 3&quot;, 0, 0, &quot;Q3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 4&quot;, 0, 0, &quot;Q4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Атмосферное давление&quot;, 0, 0, &quot;PATM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 5&quot;, 0, 0, &quot;Q5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 1&quot;, 0, 0, &quot;DQ12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 2&quot;, 0, 0, &quot;DQ45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление холодной воды&quot;, 0, 0, &quot;PXB&quot;).SortType =2
  YGrid.Columns.Add(&quot;Расход энергии потребитель 1&quot;, 0, 0, &quot;DQ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатная ситуация 1 (ТВ1 или внешняя)&quot;, 0, 0, &quot;HC_1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Нештатная ситуация 2 (ТВ2 или внутренняя)&quot;, 0, 0, &quot;HC_2&quot;).SortType =1
  YGrid.Columns.Add(&quot;Температура горячей воды&quot;, 0, 0, &quot;THOT&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS1&quot;, 0, 0, &quot;DANS1&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS2&quot;, 0, 0, &quot;DANS2&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS3&quot;, 0, 0, &quot;DANS3&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS4&quot;, 0, 0, &quot;DANS4&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS5&quot;, 0, 0, &quot;DANS5&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS6&quot;, 0, 0, &quot;DANS6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Проверка архивных данных на НС (0 - не производилась, 1 - произведена)&quot;, 0, 0, &quot;CHECK_A&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время безошиб.работы&quot;, 0, 0, &quot;OKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время работы&quot;, 0, 0, &quot;WORKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 1&quot;, 0, 0, &quot;TAIR1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 2&quot;, 0, 0, &quot;TAIR2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Код нештатной ситуации тепловычислителя&quot;, 0, 0, &quot;HC_CODE&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as DATACURR_H
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.DCALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.DCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Q1, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Q2, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.T1, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.T2, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.DT12, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.T3, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.T4, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.T5, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.DT45, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.T6, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.V1, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.V2, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.DV12, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.V3, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.V4, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.V5, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.DV45, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.V6, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.M1, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.M2, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.DM12, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.M3, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.M4, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.M5, vbCrLf, &quot; &quot;), 255)
    Values.Value(27) = Left(Replace(obj.DM45, vbCrLf, &quot; &quot;), 255)
    Values.Value(28) = Left(Replace(obj.M6, vbCrLf, &quot; &quot;), 255)
    Values.Value(29) = Left(Replace(obj.P1, vbCrLf, &quot; &quot;), 255)
    Values.Value(30) = Left(Replace(obj.P2, vbCrLf, &quot; &quot;), 255)
    Values.Value(31) = Left(Replace(obj.P3, vbCrLf, &quot; &quot;), 255)
    Values.Value(32) = Left(Replace(obj.P4, vbCrLf, &quot; &quot;), 255)
    Values.Value(33) = Left(Replace(obj.P5, vbCrLf, &quot; &quot;), 255)
    Values.Value(34) = Left(Replace(obj.P6, vbCrLf, &quot; &quot;), 255)
    Values.Value(35) = Left(Replace(obj.G1, vbCrLf, &quot; &quot;), 255)
    Values.Value(36) = Left(Replace(obj.G2, vbCrLf, &quot; &quot;), 255)
    Values.Value(37) = Left(Replace(obj.G3, vbCrLf, &quot; &quot;), 255)
    Values.Value(38) = Left(Replace(obj.G4, vbCrLf, &quot; &quot;), 255)
    Values.Value(39) = Left(Replace(obj.G5, vbCrLf, &quot; &quot;), 255)
    Values.Value(40) = Left(Replace(obj.G6, vbCrLf, &quot; &quot;), 255)
    Values.Value(41) = Left(Replace(obj.TCOOL, vbCrLf, &quot; &quot;), 255)
    Values.Value(42) = Left(Replace(obj.TCE1, vbCrLf, &quot; &quot;), 255)
    Values.Value(43) = Left(Replace(obj.TCE2, vbCrLf, &quot; &quot;), 255)
    Values.Value(44) = Left(Replace(obj.TSUM1, vbCrLf, &quot; &quot;), 255)
    Values.Value(45) = Left(Replace(obj.TSUM2, vbCrLf, &quot; &quot;), 255)
    Values.Value(46) = Left(Replace(obj.Q1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(47) = Left(Replace(obj.Q2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(48) = Left(Replace(obj.V1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(49) = Left(Replace(obj.V2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(50) = Left(Replace(obj.V4H, vbCrLf, &quot; &quot;), 255)
    Values.Value(51) = Left(Replace(obj.V5H, vbCrLf, &quot; &quot;), 255)
    Values.Value(52) = Left(Replace(obj.ERRTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(53) = Left(Replace(obj.ERRTIMEH, vbCrLf, &quot; &quot;), 255)
    Values.Value(54) = Left(Replace(obj.HC, vbCrLf, &quot; &quot;), 255)
    Values.Value(55) = Left(Replace(obj.SP, vbCrLf, &quot; &quot;), 255)
    Values.Value(56) = Left(Replace(obj.SP_TB1, vbCrLf, &quot; &quot;), 255)
    Values.Value(57) = Left(Replace(obj.SP_TB2, vbCrLf, &quot; &quot;), 255)
    Values.Value(58) = Left(Replace(obj.datetimeCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(59) = Left(Replace(obj.DG12, vbCrLf, &quot; &quot;), 255)
    Values.Value(60) = Left(Replace(obj.DG45, vbCrLf, &quot; &quot;), 255)
    Values.Value(61) = Left(Replace(obj.DP12, vbCrLf, &quot; &quot;), 255)
    Values.Value(62) = Left(Replace(obj.DP45, vbCrLf, &quot; &quot;), 255)
    Values.Value(63) = Left(Replace(obj.UNITSR, vbCrLf, &quot; &quot;), 255)
    Values.Value(64) = Left(Replace(obj.Q3, vbCrLf, &quot; &quot;), 255)
    Values.Value(65) = Left(Replace(obj.Q4, vbCrLf, &quot; &quot;), 255)
    Values.Value(66) = Left(Replace(obj.PATM, vbCrLf, &quot; &quot;), 255)
    Values.Value(67) = Left(Replace(obj.Q5, vbCrLf, &quot; &quot;), 255)
    Values.Value(68) = Left(Replace(obj.DQ12, vbCrLf, &quot; &quot;), 255)
    Values.Value(69) = Left(Replace(obj.DQ45, vbCrLf, &quot; &quot;), 255)
    Values.Value(70) = Left(Replace(obj.PXB, vbCrLf, &quot; &quot;), 255)
    Values.Value(71) = Left(Replace(obj.DQ, vbCrLf, &quot; &quot;), 255)
    Values.Value(72) = Left(Replace(obj.HC_1, vbCrLf, &quot; &quot;), 255)
    Values.Value(73) = Left(Replace(obj.HC_2, vbCrLf, &quot; &quot;), 255)
    Values.Value(74) = Left(Replace(obj.THOT, vbCrLf, &quot; &quot;), 255)
    Values.Value(75) = Left(Replace(obj.DANS1, vbCrLf, &quot; &quot;), 255)
    Values.Value(76) = Left(Replace(obj.DANS2, vbCrLf, &quot; &quot;), 255)
    Values.Value(77) = Left(Replace(obj.DANS3, vbCrLf, &quot; &quot;), 255)
    Values.Value(78) = Left(Replace(obj.DANS4, vbCrLf, &quot; &quot;), 255)
    Values.Value(79) = Left(Replace(obj.DANS5, vbCrLf, &quot; &quot;), 255)
    Values.Value(80) = Left(Replace(obj.DANS6, vbCrLf, &quot; &quot;), 255)
    Values.Value(81) = Left(Replace(obj.CHECK_A, vbCrLf, &quot; &quot;), 255)
    Values.Value(82) = Left(Replace(obj.OKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(83) = Left(Replace(obj.WORKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(84) = Left(Replace(obj.TAIR1, vbCrLf, &quot; &quot;), 255)
    Values.Value(85) = Left(Replace(obj.TAIR2, vbCrLf, &quot; &quot;), 255)
    Values.Value(86) = Left(Replace(obj.HC_CODE, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;DATACURR_H&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_D" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Суточный архив
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_DCALL as DATE
private m_DCOUNTER as DATE
private m_Q1 as double
private m_Q2 as double
private m_T1 as double
private m_T2 as double
private m_DT12 as double
private m_T3 as double
private m_T4 as double
private m_T5 as double
private m_DT45 as double
private m_T6 as double
private m_V1 as double
private m_V2 as double
private m_DV12 as double
private m_V3 as double
private m_V4 as double
private m_V5 as double
private m_DV45 as double
private m_V6 as double
private m_M1 as double
private m_M2 as double
private m_DM12 as double
private m_M3 as double
private m_M4 as double
private m_M5 as double
private m_DM45 as double
private m_M6 as double
private m_P1 as double
private m_P2 as double
private m_P3 as double
private m_P4 as double
private m_P5 as double
private m_P6 as double
private m_G1 as double
private m_G2 as double
private m_G3 as double
private m_G4 as double
private m_G5 as double
private m_G6 as double
private m_TCOOL as double
private m_TCE1 as double
private m_TCE2 as double
private m_TSUM1 as double
private m_TSUM2 as double
private m_Q1H as double
private m_Q2H as double
private m_V1H as double
private m_V2H as double
private m_V4H as double
private m_V5H as double
private m_ERRTIME as double
private m_ERRTIMEH as double
private m_HC as String
private m_SP as double
private m_SP_TB1 as double
private m_SP_TB2 as double
private m_datetimeCOUNTER as DATE
private m_DG12 as double
private m_DG45 as double
private m_DP12 as double
private m_DP45 as double
private m_UNITSR as String
private m_Q3 as double
private m_Q4 as double
private m_PATM as double
private m_Q5 as double
private m_DQ12 as double
private m_DQ45 as double
private m_PXB as double
private m_DQ as double
private m_HC_1 as String
private m_HC_2 as String
private m_THOT as double
private m_DANS1 as double
private m_DANS2 as double
private m_DANS3 as double
private m_DANS4 as double
private m_DANS5 as double
private m_DANS6 as double
private m_CHECK_A as double
private m_OKTIME as double
private m_WORKTIME as double
private m_TAIR1 as double
private m_TAIR2 as double
private m_HC_CODE as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;DATACURR_D&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_D.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Дата опроса

'Дата опроса
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCALL(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCALL&quot;,DCALL,newvalue

   m_DCALL= newValue
end if
end property

'Дата опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCALL
public property Get DCALL() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCALL = m_DCALL
end property
' let 
'Дата счетчика

'Дата счетчика
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCOUNTER&quot;,DCOUNTER,newvalue

   m_DCOUNTER= newValue
end if
end property

'Дата счетчика
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCOUNTER
public property Get DCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCOUNTER = m_DCOUNTER
end property
' let 
'Тепловая энергия канал 1

'Тепловая энергия канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1&quot;,Q1,newvalue

   m_Q1= newValue
end if
end property

'Тепловая энергия канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1
public property Get Q1() as double
 LoadFromDatabase
 AccessTime=Now

   Q1 = m_Q1
end property
' let 
'Тепловая энергия канал 2

'Тепловая энергия канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2&quot;,Q2,newvalue

   m_Q2= newValue
end if
end property

'Тепловая энергия канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2
public property Get Q2() as double
 LoadFromDatabase
 AccessTime=Now

   Q2 = m_Q2
end property
' let 
'Температура по каналу 1

'Температура по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T1&quot;,T1,newvalue

   m_T1= newValue
end if
end property

'Температура по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T1
public property Get T1() as double
 LoadFromDatabase
 AccessTime=Now

   T1 = m_T1
end property
' let 
'Температура по каналу 2

'Температура по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T2&quot;,T2,newvalue

   m_T2= newValue
end if
end property

'Температура по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T2
public property Get T2() as double
 LoadFromDatabase
 AccessTime=Now

   T2 = m_T2
end property
' let 
'Разность Температур по каналу 1 и 2

'Разность Температур по каналу 1 и 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT12&quot;,DT12,newvalue

   m_DT12= newValue
end if
end property

'Разность Температур по каналу 1 и 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT12
public property Get DT12() as double
 LoadFromDatabase
 AccessTime=Now

   DT12 = m_DT12
end property
' let 
'Температура по каналу 3

'Температура по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T3&quot;,T3,newvalue

   m_T3= newValue
end if
end property

'Температура по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T3
public property Get T3() as double
 LoadFromDatabase
 AccessTime=Now

   T3 = m_T3
end property
' let 
'Температура по каналу 4

'Температура по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T4&quot;,T4,newvalue

   m_T4= newValue
end if
end property

'Температура по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T4
public property Get T4() as double
 LoadFromDatabase
 AccessTime=Now

   T4 = m_T4
end property
' let 
'Температура по каналу 5

'Температура по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T5&quot;,T5,newvalue

   m_T5= newValue
end if
end property

'Температура по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T5
public property Get T5() as double
 LoadFromDatabase
 AccessTime=Now

   T5 = m_T5
end property
' let 
'Разность Температур по каналу 4 и 5

'Разность Температур по каналу 4 и 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT45&quot;,DT45,newvalue

   m_DT45= newValue
end if
end property

'Разность Температур по каналу 4 и 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT45
public property Get DT45() as double
 LoadFromDatabase
 AccessTime=Now

   DT45 = m_DT45
end property
' let 
'Температура по каналу 6

'Температура по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T6&quot;,T6,newvalue

   m_T6= newValue
end if
end property

'Температура по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T6
public property Get T6() as double
 LoadFromDatabase
 AccessTime=Now

   T6 = m_T6
end property
' let 
'Объемный расход воды по каналу 1

'Объемный расход воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1&quot;,V1,newvalue

   m_V1= newValue
end if
end property

'Объемный расход воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1
public property Get V1() as double
 LoadFromDatabase
 AccessTime=Now

   V1 = m_V1
end property
' let 
'Объемный расход воды по каналу 2

'Объемный расход воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2&quot;,V2,newvalue

   m_V2= newValue
end if
end property

'Объемный расход воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2
public property Get V2() as double
 LoadFromDatabase
 AccessTime=Now

   V2 = m_V2
end property
' let 
'Разность объемов канал 1  (расход ГВС)

'Разность объемов канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV12&quot;,DV12,newvalue

   m_DV12= newValue
end if
end property

'Разность объемов канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV12
public property Get DV12() as double
 LoadFromDatabase
 AccessTime=Now

   DV12 = m_DV12
end property
' let 
'Объемный расход воды по каналу 3

'Объемный расход воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V3&quot;,V3,newvalue

   m_V3= newValue
end if
end property

'Объемный расход воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V3
public property Get V3() as double
 LoadFromDatabase
 AccessTime=Now

   V3 = m_V3
end property
' let 
'Объемный расход воды по каналу 4

'Объемный расход воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4&quot;,V4,newvalue

   m_V4= newValue
end if
end property

'Объемный расход воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4
public property Get V4() as double
 LoadFromDatabase
 AccessTime=Now

   V4 = m_V4
end property
' let 
'Объемный расход воды по каналу 5

'Объемный расход воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5&quot;,V5,newvalue

   m_V5= newValue
end if
end property

'Объемный расход воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5
public property Get V5() as double
 LoadFromDatabase
 AccessTime=Now

   V5 = m_V5
end property
' let 
'Разность объемов канал 2

'Разность объемов канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV45&quot;,DV45,newvalue

   m_DV45= newValue
end if
end property

'Разность объемов канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV45
public property Get DV45() as double
 LoadFromDatabase
 AccessTime=Now

   DV45 = m_DV45
end property
' let 
'Объемный расход воды по каналу 6

'Объемный расход воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V6&quot;,V6,newvalue

   m_V6= newValue
end if
end property

'Объемный расход воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V6
public property Get V6() as double
 LoadFromDatabase
 AccessTime=Now

   V6 = m_V6
end property
' let 
'Масса воды по каналу 1

'Масса воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M1&quot;,M1,newvalue

   m_M1= newValue
end if
end property

'Масса воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M1
public property Get M1() as double
 LoadFromDatabase
 AccessTime=Now

   M1 = m_M1
end property
' let 
'Масса воды по каналу 2

'Масса воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M2&quot;,M2,newvalue

   m_M2= newValue
end if
end property

'Масса воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M2
public property Get M2() as double
 LoadFromDatabase
 AccessTime=Now

   M2 = m_M2
end property
' let 
'Разность масс канал 1  (расход ГВС)

'Разность масс канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM12&quot;,DM12,newvalue

   m_DM12= newValue
end if
end property

'Разность масс канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM12
public property Get DM12() as double
 LoadFromDatabase
 AccessTime=Now

   DM12 = m_DM12
end property
' let 
'Масса воды по каналу 3

'Масса воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M3&quot;,M3,newvalue

   m_M3= newValue
end if
end property

'Масса воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M3
public property Get M3() as double
 LoadFromDatabase
 AccessTime=Now

   M3 = m_M3
end property
' let 
'Масса воды по каналу 4

'Масса воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M4&quot;,M4,newvalue

   m_M4= newValue
end if
end property

'Масса воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M4
public property Get M4() as double
 LoadFromDatabase
 AccessTime=Now

   M4 = m_M4
end property
' let 
'Масса воды по каналу 5

'Масса воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M5&quot;,M5,newvalue

   m_M5= newValue
end if
end property

'Масса воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M5
public property Get M5() as double
 LoadFromDatabase
 AccessTime=Now

   M5 = m_M5
end property
' let 
'Разность масс канал 2

'Разность масс канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM45&quot;,DM45,newvalue

   m_DM45= newValue
end if
end property

'Разность масс канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM45
public property Get DM45() as double
 LoadFromDatabase
 AccessTime=Now

   DM45 = m_DM45
end property
' let 
'Масса воды по каналу 6

'Масса воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M6&quot;,M6,newvalue

   m_M6= newValue
end if
end property

'Масса воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M6
public property Get M6() as double
 LoadFromDatabase
 AccessTime=Now

   M6 = m_M6
end property
' let 
'Давление в трубопроводе 1

'Давление в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P1&quot;,P1,newvalue

   m_P1= newValue
end if
end property

'Давление в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P1
public property Get P1() as double
 LoadFromDatabase
 AccessTime=Now

   P1 = m_P1
end property
' let 
'Давление в трубопроводе 2

'Давление в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P2&quot;,P2,newvalue

   m_P2= newValue
end if
end property

'Давление в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P2
public property Get P2() as double
 LoadFromDatabase
 AccessTime=Now

   P2 = m_P2
end property
' let 
'Давление в трубопроводе 3

'Давление в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P3&quot;,P3,newvalue

   m_P3= newValue
end if
end property

'Давление в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P3
public property Get P3() as double
 LoadFromDatabase
 AccessTime=Now

   P3 = m_P3
end property
' let 
'Давление в трубопроводе 4

'Давление в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P4&quot;,P4,newvalue

   m_P4= newValue
end if
end property

'Давление в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P4
public property Get P4() as double
 LoadFromDatabase
 AccessTime=Now

   P4 = m_P4
end property
' let 
'Давление в трубопроводе 5

'Давление в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P5&quot;,P5,newvalue

   m_P5= newValue
end if
end property

'Давление в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P5
public property Get P5() as double
 LoadFromDatabase
 AccessTime=Now

   P5 = m_P5
end property
' let 
'Давление в трубопроводе 6

'Давление в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P6&quot;,P6,newvalue

   m_P6= newValue
end if
end property

'Давление в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P6
public property Get P6() as double
 LoadFromDatabase
 AccessTime=Now

   P6 = m_P6
end property
' let 
'Текущее значение расхода в трубопроводе 1

'Текущее значение расхода в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G1&quot;,G1,newvalue

   m_G1= newValue
end if
end property

'Текущее значение расхода в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G1
public property Get G1() as double
 LoadFromDatabase
 AccessTime=Now

   G1 = m_G1
end property
' let 
'Текущее значение расхода в трубопроводе 2

'Текущее значение расхода в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G2&quot;,G2,newvalue

   m_G2= newValue
end if
end property

'Текущее значение расхода в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G2
public property Get G2() as double
 LoadFromDatabase
 AccessTime=Now

   G2 = m_G2
end property
' let 
'Текущее значение расхода в трубопроводе 3

'Текущее значение расхода в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G3&quot;,G3,newvalue

   m_G3= newValue
end if
end property

'Текущее значение расхода в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G3
public property Get G3() as double
 LoadFromDatabase
 AccessTime=Now

   G3 = m_G3
end property
' let 
'Текущее значение расхода в трубопроводе 4

'Текущее значение расхода в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G4&quot;,G4,newvalue

   m_G4= newValue
end if
end property

'Текущее значение расхода в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G4
public property Get G4() as double
 LoadFromDatabase
 AccessTime=Now

   G4 = m_G4
end property
' let 
'Текущее значение расхода в трубопроводе 5

'Текущее значение расхода в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G5&quot;,G5,newvalue

   m_G5= newValue
end if
end property

'Текущее значение расхода в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G5
public property Get G5() as double
 LoadFromDatabase
 AccessTime=Now

   G5 = m_G5
end property
' let 
'Текущее значение расхода в трубопроводе 6

'Текущее значение расхода в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G6&quot;,G6,newvalue

   m_G6= newValue
end if
end property

'Текущее значение расхода в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G6
public property Get G6() as double
 LoadFromDatabase
 AccessTime=Now

   G6 = m_G6
end property
' let 
'Температура холодной воды

'Температура холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCOOL(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCOOL&quot;,TCOOL,newvalue

   m_TCOOL= newValue
end if
end property

'Температура холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCOOL
public property Get TCOOL() as double
 LoadFromDatabase
 AccessTime=Now

   TCOOL = m_TCOOL
end property
' let 
'Температура холодного конца канал 1

'Температура холодного конца канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE1&quot;,TCE1,newvalue

   m_TCE1= newValue
end if
end property

'Температура холодного конца канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE1
public property Get TCE1() as double
 LoadFromDatabase
 AccessTime=Now

   TCE1 = m_TCE1
end property
' let 
'Температура холодного конца канал 2

'Температура холодного конца канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE2&quot;,TCE2,newvalue

   m_TCE2= newValue
end if
end property

'Температура холодного конца канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE2
public property Get TCE2() as double
 LoadFromDatabase
 AccessTime=Now

   TCE2 = m_TCE2
end property
' let 
'Тотальное время счета TB1

'Тотальное время счета TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM1&quot;,TSUM1,newvalue

   m_TSUM1= newValue
end if
end property

'Тотальное время счета TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM1
public property Get TSUM1() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM1 = m_TSUM1
end property
' let 
'Тотальное время счета TB2

'Тотальное время счета TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM2&quot;,TSUM2,newvalue

   m_TSUM2= newValue
end if
end property

'Тотальное время счета TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM2
public property Get TSUM2() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM2 = m_TSUM2
end property
' let 
'Тепловая энергия канал 1 нарастающим итогом

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1H&quot;,Q1H,newvalue

   m_Q1H= newValue
end if
end property

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1H
public property Get Q1H() as double
 LoadFromDatabase
 AccessTime=Now

   Q1H = m_Q1H
end property
' let 
'Тепловая энергия канал 2 нарастающим итогом

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2H&quot;,Q2H,newvalue

   m_Q2H= newValue
end if
end property

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2H
public property Get Q2H() as double
 LoadFromDatabase
 AccessTime=Now

   Q2H = m_Q2H
end property
' let 
'Объемный расход воды по каналу 1  нарастающим итогом

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1H&quot;,V1H,newvalue

   m_V1H= newValue
end if
end property

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1H
public property Get V1H() as double
 LoadFromDatabase
 AccessTime=Now

   V1H = m_V1H
end property
' let 
'Объемный расход воды по каналу 2  нарастающим итогом

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2H&quot;,V2H,newvalue

   m_V2H= newValue
end if
end property

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2H
public property Get V2H() as double
 LoadFromDatabase
 AccessTime=Now

   V2H = m_V2H
end property
' let 
'Объемный расход воды по каналу 4  нарастающим итогом

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4H&quot;,V4H,newvalue

   m_V4H= newValue
end if
end property

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4H
public property Get V4H() as double
 LoadFromDatabase
 AccessTime=Now

   V4H = m_V4H
end property
' let 
'Объемный расход воды по каналу 5  нарастающим итогом

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5H&quot;,V5H,newvalue

   m_V5H= newValue
end if
end property

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5H
public property Get V5H() as double
 LoadFromDatabase
 AccessTime=Now

   V5H = m_V5H
end property
' let 
'Время аварии

'Время аварии
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIME&quot;,ERRTIME,newvalue

   m_ERRTIME= newValue
end if
end property

'Время аварии
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIME
public property Get ERRTIME() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIME = m_ERRTIME
end property
' let 
'Время аварии нарастающим итогом

'Время аварии нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIMEH(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIMEH&quot;,ERRTIMEH,newvalue

   m_ERRTIMEH= newValue
end if
end property

'Время аварии нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIMEH
public property Get ERRTIMEH() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIMEH = m_ERRTIMEH
end property
' let 
'Нештатные ситуации общ

'Нештатные ситуации общ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC&quot;,HC,newvalue

   m_HC= newValue
end if
end property

'Нештатные ситуации общ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC
public property Get HC() as String
 LoadFromDatabase
 AccessTime=Now

   HC = m_HC
end property
' let 
'Схема потребления

'Схема потребления
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP&quot;,SP,newvalue

   m_SP= newValue
end if
end property

'Схема потребления
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP
public property Get SP() as double
 LoadFromDatabase
 AccessTime=Now

   SP = m_SP
end property
' let 
'Схема потребления TB1

'Схема потребления TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB1&quot;,SP_TB1,newvalue

   m_SP_TB1= newValue
end if
end property

'Схема потребления TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB1
public property Get SP_TB1() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB1 = m_SP_TB1
end property
' let 
'Схема потребления TB2

'Схема потребления TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB2&quot;,SP_TB2,newvalue

   m_SP_TB2= newValue
end if
end property

'Схема потребления TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB2
public property Get SP_TB2() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB2 = m_SP_TB2
end property
' let 
'datetimeCOUNTER

'datetimeCOUNTER
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let datetimeCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;datetimeCOUNTER&quot;,datetimeCOUNTER,newvalue

   m_datetimeCOUNTER= newValue
end if
end property

'datetimeCOUNTER
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. datetimeCOUNTER
public property Get datetimeCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   datetimeCOUNTER = m_datetimeCOUNTER
end property
' let 
'G1-G2

'G1-G2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG12&quot;,DG12,newvalue

   m_DG12= newValue
end if
end property

'G1-G2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG12
public property Get DG12() as double
 LoadFromDatabase
 AccessTime=Now

   DG12 = m_DG12
end property
' let 
'G4-G5

'G4-G5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG45&quot;,DG45,newvalue

   m_DG45= newValue
end if
end property

'G4-G5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG45
public property Get DG45() as double
 LoadFromDatabase
 AccessTime=Now

   DG45 = m_DG45
end property
' let 
'P1-P2

'P1-P2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP12&quot;,DP12,newvalue

   m_DP12= newValue
end if
end property

'P1-P2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP12
public property Get DP12() as double
 LoadFromDatabase
 AccessTime=Now

   DP12 = m_DP12
end property
' let 
'P4-P5

'P4-P5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP45&quot;,DP45,newvalue

   m_DP45= newValue
end if
end property

'P4-P5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP45
public property Get DP45() as double
 LoadFromDatabase
 AccessTime=Now

   DP45 = m_DP45
end property
' let 
'Единицы измерения расхода

'Единицы измерения расхода
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UNITSR(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UNITSR&quot;,UNITSR,newvalue

   m_UNITSR= newValue
end if
end property

'Единицы измерения расхода
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. UNITSR
public property Get UNITSR() as String
 LoadFromDatabase
 AccessTime=Now

   UNITSR = m_UNITSR
end property
' let 
'Тепловая энергия канал 3

'Тепловая энергия канал 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q3&quot;,Q3,newvalue

   m_Q3= newValue
end if
end property

'Тепловая энергия канал 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q3
public property Get Q3() as double
 LoadFromDatabase
 AccessTime=Now

   Q3 = m_Q3
end property
' let 
'Тепловая энергия канал 4

'Тепловая энергия канал 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q4&quot;,Q4,newvalue

   m_Q4= newValue
end if
end property

'Тепловая энергия канал 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q4
public property Get Q4() as double
 LoadFromDatabase
 AccessTime=Now

   Q4 = m_Q4
end property
' let 
'Атмосферное давление

'Атмосферное давление
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PATM(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PATM&quot;,PATM,newvalue

   m_PATM= newValue
end if
end property

'Атмосферное давление
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PATM
public property Get PATM() as double
 LoadFromDatabase
 AccessTime=Now

   PATM = m_PATM
end property
' let 
'Тепловая энергия канал 5

'Тепловая энергия канал 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q5&quot;,Q5,newvalue

   m_Q5= newValue
end if
end property

'Тепловая энергия канал 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q5
public property Get Q5() as double
 LoadFromDatabase
 AccessTime=Now

   Q5 = m_Q5
end property
' let 
'Тепловая энергия потребитель 1

'Тепловая энергия потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ12&quot;,DQ12,newvalue

   m_DQ12= newValue
end if
end property

'Тепловая энергия потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ12
public property Get DQ12() as double
 LoadFromDatabase
 AccessTime=Now

   DQ12 = m_DQ12
end property
' let 
'Тепловая энергия потребитель 2

'Тепловая энергия потребитель 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ45&quot;,DQ45,newvalue

   m_DQ45= newValue
end if
end property

'Тепловая энергия потребитель 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ45
public property Get DQ45() as double
 LoadFromDatabase
 AccessTime=Now

   DQ45 = m_DQ45
end property
' let 
'Давление холодной воды

'Давление холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PXB(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PXB&quot;,PXB,newvalue

   m_PXB= newValue
end if
end property

'Давление холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PXB
public property Get PXB() as double
 LoadFromDatabase
 AccessTime=Now

   PXB = m_PXB
end property
' let 
'Расход энергии потребитель 1

'Расход энергии потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ&quot;,DQ,newvalue

   m_DQ= newValue
end if
end property

'Расход энергии потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ
public property Get DQ() as double
 LoadFromDatabase
 AccessTime=Now

   DQ = m_DQ
end property
' let 
'Нештатная ситуация 1 (ТВ1 или внешняя)

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_1&quot;,HC_1,newvalue

   m_HC_1= newValue
end if
end property

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_1
public property Get HC_1() as String
 LoadFromDatabase
 AccessTime=Now

   HC_1 = m_HC_1
end property
' let 
'Нештатная ситуация 2 (ТВ2 или внутренняя)

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_2&quot;,HC_2,newvalue

   m_HC_2= newValue
end if
end property

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_2
public property Get HC_2() as String
 LoadFromDatabase
 AccessTime=Now

   HC_2 = m_HC_2
end property
' let 
'Температура горячей воды

'Температура горячей воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let THOT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;THOT&quot;,THOT,newvalue

   m_THOT= newValue
end if
end property

'Температура горячей воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. THOT
public property Get THOT() as double
 LoadFromDatabase
 AccessTime=Now

   THOT = m_THOT
end property
' let 
'DANS1

'DANS1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS1&quot;,DANS1,newvalue

   m_DANS1= newValue
end if
end property

'DANS1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS1
public property Get DANS1() as double
 LoadFromDatabase
 AccessTime=Now

   DANS1 = m_DANS1
end property
' let 
'DANS2

'DANS2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS2&quot;,DANS2,newvalue

   m_DANS2= newValue
end if
end property

'DANS2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS2
public property Get DANS2() as double
 LoadFromDatabase
 AccessTime=Now

   DANS2 = m_DANS2
end property
' let 
'DANS3

'DANS3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS3&quot;,DANS3,newvalue

   m_DANS3= newValue
end if
end property

'DANS3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS3
public property Get DANS3() as double
 LoadFromDatabase
 AccessTime=Now

   DANS3 = m_DANS3
end property
' let 
'DANS4

'DANS4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS4&quot;,DANS4,newvalue

   m_DANS4= newValue
end if
end property

'DANS4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS4
public property Get DANS4() as double
 LoadFromDatabase
 AccessTime=Now

   DANS4 = m_DANS4
end property
' let 
'DANS5

'DANS5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS5&quot;,DANS5,newvalue

   m_DANS5= newValue
end if
end property

'DANS5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS5
public property Get DANS5() as double
 LoadFromDatabase
 AccessTime=Now

   DANS5 = m_DANS5
end property
' let 
'DANS6

'DANS6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS6&quot;,DANS6,newvalue

   m_DANS6= newValue
end if
end property

'DANS6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS6
public property Get DANS6() as double
 LoadFromDatabase
 AccessTime=Now

   DANS6 = m_DANS6
end property
' let 
'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHECK_A(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHECK_A&quot;,CHECK_A,newvalue

   m_CHECK_A= newValue
end if
end property

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CHECK_A
public property Get CHECK_A() as double
 LoadFromDatabase
 AccessTime=Now

   CHECK_A = m_CHECK_A
end property
' let 
'Время безошиб.работы

'Время безошиб.работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OKTIME&quot;,OKTIME,newvalue

   m_OKTIME= newValue
end if
end property

'Время безошиб.работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. OKTIME
public property Get OKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   OKTIME = m_OKTIME
end property
' let 
'Время работы

'Время работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WORKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WORKTIME&quot;,WORKTIME,newvalue

   m_WORKTIME= newValue
end if
end property

'Время работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WORKTIME
public property Get WORKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   WORKTIME = m_WORKTIME
end property
' let 
'Температура воздуха канал 1

'Температура воздуха канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR1&quot;,TAIR1,newvalue

   m_TAIR1= newValue
end if
end property

'Температура воздуха канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR1
public property Get TAIR1() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR1 = m_TAIR1
end property
' let 
'Температура воздуха канал 2

'Температура воздуха канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR2&quot;,TAIR2,newvalue

   m_TAIR2= newValue
end if
end property

'Температура воздуха канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR2
public property Get TAIR2() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR2 = m_TAIR2
end property
' let 
'Код нештатной ситуации тепловычислителя

'Код нештатной ситуации тепловычислителя
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_CODE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_CODE&quot;,HC_CODE,newvalue

   m_HC_CODE= newValue
end if
end property

'Код нештатной ситуации тепловычислителя
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_CODE
public property Get HC_CODE() as String
 LoadFromDatabase
 AccessTime=Now

   HC_CODE = m_HC_CODE
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;DCALL&quot;,m_DCALL)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DCOUNTER&quot;,m_DCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;Q1&quot;,m_Q1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2&quot;,m_Q2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T1&quot;,m_T1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T2&quot;,m_T2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT12&quot;,m_DT12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T3&quot;,m_T3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T4&quot;,m_T4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T5&quot;,m_T5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT45&quot;,m_DT45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T6&quot;,m_T6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1&quot;,m_V1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2&quot;,m_V2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV12&quot;,m_DV12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V3&quot;,m_V3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4&quot;,m_V4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5&quot;,m_V5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV45&quot;,m_DV45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V6&quot;,m_V6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M1&quot;,m_M1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M2&quot;,m_M2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM12&quot;,m_DM12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M3&quot;,m_M3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M4&quot;,m_M4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M5&quot;,m_M5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM45&quot;,m_DM45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M6&quot;,m_M6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P1&quot;,m_P1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P2&quot;,m_P2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P3&quot;,m_P3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P4&quot;,m_P4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P5&quot;,m_P5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P6&quot;,m_P6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G1&quot;,m_G1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G2&quot;,m_G2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G3&quot;,m_G3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G4&quot;,m_G4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G5&quot;,m_G5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G6&quot;,m_G6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCOOL&quot;,m_TCOOL)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE1&quot;,m_TCE1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE2&quot;,m_TCE2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM1&quot;,m_TSUM1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM2&quot;,m_TSUM2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q1H&quot;,m_Q1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2H&quot;,m_Q2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1H&quot;,m_V1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2H&quot;,m_V2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4H&quot;,m_V4H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5H&quot;,m_V5H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIME&quot;,m_ERRTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIMEH&quot;,m_ERRTIMEH)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC&quot;,m_HC)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;SP&quot;,m_SP)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB1&quot;,m_SP_TB1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB2&quot;,m_SP_TB2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;datetimeCOUNTER&quot;,m_datetimeCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DG12&quot;,m_DG12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DG45&quot;,m_DG45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP12&quot;,m_DP12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP45&quot;,m_DP45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;UNITSR&quot;,m_UNITSR)
nvi.ValueSize = 24
  set nvi=nv.Add( &quot;Q3&quot;,m_Q3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q4&quot;,m_Q4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PATM&quot;,m_PATM)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q5&quot;,m_Q5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ12&quot;,m_DQ12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ45&quot;,m_DQ45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PXB&quot;,m_PXB)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ&quot;,m_DQ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_1&quot;,m_HC_1)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;HC_2&quot;,m_HC_2)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;THOT&quot;,m_THOT)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS1&quot;,m_DANS1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS2&quot;,m_DANS2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS3&quot;,m_DANS3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS4&quot;,m_DANS4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS5&quot;,m_DANS5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS6&quot;,m_DANS6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;CHECK_A&quot;,m_CHECK_A)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;OKTIME&quot;,m_OKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WORKTIME&quot;,m_WORKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR1&quot;,m_TAIR1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR2&quot;,m_TAIR2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_CODE&quot;,m_HC_CODE)
nvi.ValueSize = 360
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; DCALL &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_DCALL=nv.item( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.item( &quot;DCOUNTER&quot;).Value
m_Q1=nv.item( &quot;Q1&quot;).Value
m_Q2=nv.item( &quot;Q2&quot;).Value
m_T1=nv.item( &quot;T1&quot;).Value
m_T2=nv.item( &quot;T2&quot;).Value
m_DT12=nv.item( &quot;DT12&quot;).Value
m_T3=nv.item( &quot;T3&quot;).Value
m_T4=nv.item( &quot;T4&quot;).Value
m_T5=nv.item( &quot;T5&quot;).Value
m_DT45=nv.item( &quot;DT45&quot;).Value
m_T6=nv.item( &quot;T6&quot;).Value
m_V1=nv.item( &quot;V1&quot;).Value
m_V2=nv.item( &quot;V2&quot;).Value
m_DV12=nv.item( &quot;DV12&quot;).Value
m_V3=nv.item( &quot;V3&quot;).Value
m_V4=nv.item( &quot;V4&quot;).Value
m_V5=nv.item( &quot;V5&quot;).Value
m_DV45=nv.item( &quot;DV45&quot;).Value
m_V6=nv.item( &quot;V6&quot;).Value
m_M1=nv.item( &quot;M1&quot;).Value
m_M2=nv.item( &quot;M2&quot;).Value
m_DM12=nv.item( &quot;DM12&quot;).Value
m_M3=nv.item( &quot;M3&quot;).Value
m_M4=nv.item( &quot;M4&quot;).Value
m_M5=nv.item( &quot;M5&quot;).Value
m_DM45=nv.item( &quot;DM45&quot;).Value
m_M6=nv.item( &quot;M6&quot;).Value
m_P1=nv.item( &quot;P1&quot;).Value
m_P2=nv.item( &quot;P2&quot;).Value
m_P3=nv.item( &quot;P3&quot;).Value
m_P4=nv.item( &quot;P4&quot;).Value
m_P5=nv.item( &quot;P5&quot;).Value
m_P6=nv.item( &quot;P6&quot;).Value
m_G1=nv.item( &quot;G1&quot;).Value
m_G2=nv.item( &quot;G2&quot;).Value
m_G3=nv.item( &quot;G3&quot;).Value
m_G4=nv.item( &quot;G4&quot;).Value
m_G5=nv.item( &quot;G5&quot;).Value
m_G6=nv.item( &quot;G6&quot;).Value
m_TCOOL=nv.item( &quot;TCOOL&quot;).Value
m_TCE1=nv.item( &quot;TCE1&quot;).Value
m_TCE2=nv.item( &quot;TCE2&quot;).Value
m_TSUM1=nv.item( &quot;TSUM1&quot;).Value
m_TSUM2=nv.item( &quot;TSUM2&quot;).Value
m_Q1H=nv.item( &quot;Q1H&quot;).Value
m_Q2H=nv.item( &quot;Q2H&quot;).Value
m_V1H=nv.item( &quot;V1H&quot;).Value
m_V2H=nv.item( &quot;V2H&quot;).Value
m_V4H=nv.item( &quot;V4H&quot;).Value
m_V5H=nv.item( &quot;V5H&quot;).Value
m_ERRTIME=nv.item( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.item( &quot;ERRTIMEH&quot;).Value
m_HC=nv.item( &quot;HC&quot;).Value
m_SP=nv.item( &quot;SP&quot;).Value
m_SP_TB1=nv.item( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.item( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.item( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.item( &quot;DG12&quot;).Value
m_DG45=nv.item( &quot;DG45&quot;).Value
m_DP12=nv.item( &quot;DP12&quot;).Value
m_DP45=nv.item( &quot;DP45&quot;).Value
m_UNITSR=nv.item( &quot;UNITSR&quot;).Value
m_Q3=nv.item( &quot;Q3&quot;).Value
m_Q4=nv.item( &quot;Q4&quot;).Value
m_PATM=nv.item( &quot;PATM&quot;).Value
m_Q5=nv.item( &quot;Q5&quot;).Value
m_DQ12=nv.item( &quot;DQ12&quot;).Value
m_DQ45=nv.item( &quot;DQ45&quot;).Value
m_PXB=nv.item( &quot;PXB&quot;).Value
m_DQ=nv.item( &quot;DQ&quot;).Value
m_HC_1=nv.item( &quot;HC_1&quot;).Value
m_HC_2=nv.item( &quot;HC_2&quot;).Value
m_THOT=nv.item( &quot;THOT&quot;).Value
m_DANS1=nv.item( &quot;DANS1&quot;).Value
m_DANS2=nv.item( &quot;DANS2&quot;).Value
m_DANS3=nv.item( &quot;DANS3&quot;).Value
m_DANS4=nv.item( &quot;DANS4&quot;).Value
m_DANS5=nv.item( &quot;DANS5&quot;).Value
m_DANS6=nv.item( &quot;DANS6&quot;).Value
m_CHECK_A=nv.item( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.item( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.item( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.item( &quot;TAIR1&quot;).Value
m_TAIR2=nv.item( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.item( &quot;HC_CODE&quot;).Value
else

m_DCALL=nv.fields( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.fields( &quot;DCOUNTER&quot;).Value
m_Q1=nv.fields( &quot;Q1&quot;).Value
m_Q2=nv.fields( &quot;Q2&quot;).Value
m_T1=nv.fields( &quot;T1&quot;).Value
m_T2=nv.fields( &quot;T2&quot;).Value
m_DT12=nv.fields( &quot;DT12&quot;).Value
m_T3=nv.fields( &quot;T3&quot;).Value
m_T4=nv.fields( &quot;T4&quot;).Value
m_T5=nv.fields( &quot;T5&quot;).Value
m_DT45=nv.fields( &quot;DT45&quot;).Value
m_T6=nv.fields( &quot;T6&quot;).Value
m_V1=nv.fields( &quot;V1&quot;).Value
m_V2=nv.fields( &quot;V2&quot;).Value
m_DV12=nv.fields( &quot;DV12&quot;).Value
m_V3=nv.fields( &quot;V3&quot;).Value
m_V4=nv.fields( &quot;V4&quot;).Value
m_V5=nv.fields( &quot;V5&quot;).Value
m_DV45=nv.fields( &quot;DV45&quot;).Value
m_V6=nv.fields( &quot;V6&quot;).Value
m_M1=nv.fields( &quot;M1&quot;).Value
m_M2=nv.fields( &quot;M2&quot;).Value
m_DM12=nv.fields( &quot;DM12&quot;).Value
m_M3=nv.fields( &quot;M3&quot;).Value
m_M4=nv.fields( &quot;M4&quot;).Value
m_M5=nv.fields( &quot;M5&quot;).Value
m_DM45=nv.fields( &quot;DM45&quot;).Value
m_M6=nv.fields( &quot;M6&quot;).Value
m_P1=nv.fields( &quot;P1&quot;).Value
m_P2=nv.fields( &quot;P2&quot;).Value
m_P3=nv.fields( &quot;P3&quot;).Value
m_P4=nv.fields( &quot;P4&quot;).Value
m_P5=nv.fields( &quot;P5&quot;).Value
m_P6=nv.fields( &quot;P6&quot;).Value
m_G1=nv.fields( &quot;G1&quot;).Value
m_G2=nv.fields( &quot;G2&quot;).Value
m_G3=nv.fields( &quot;G3&quot;).Value
m_G4=nv.fields( &quot;G4&quot;).Value
m_G5=nv.fields( &quot;G5&quot;).Value
m_G6=nv.fields( &quot;G6&quot;).Value
m_TCOOL=nv.fields( &quot;TCOOL&quot;).Value
m_TCE1=nv.fields( &quot;TCE1&quot;).Value
m_TCE2=nv.fields( &quot;TCE2&quot;).Value
m_TSUM1=nv.fields( &quot;TSUM1&quot;).Value
m_TSUM2=nv.fields( &quot;TSUM2&quot;).Value
m_Q1H=nv.fields( &quot;Q1H&quot;).Value
m_Q2H=nv.fields( &quot;Q2H&quot;).Value
m_V1H=nv.fields( &quot;V1H&quot;).Value
m_V2H=nv.fields( &quot;V2H&quot;).Value
m_V4H=nv.fields( &quot;V4H&quot;).Value
m_V5H=nv.fields( &quot;V5H&quot;).Value
m_ERRTIME=nv.fields( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.fields( &quot;ERRTIMEH&quot;).Value
m_HC=nv.fields( &quot;HC&quot;).Value
m_SP=nv.fields( &quot;SP&quot;).Value
m_SP_TB1=nv.fields( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.fields( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.fields( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.fields( &quot;DG12&quot;).Value
m_DG45=nv.fields( &quot;DG45&quot;).Value
m_DP12=nv.fields( &quot;DP12&quot;).Value
m_DP45=nv.fields( &quot;DP45&quot;).Value
m_UNITSR=nv.fields( &quot;UNITSR&quot;).Value
m_Q3=nv.fields( &quot;Q3&quot;).Value
m_Q4=nv.fields( &quot;Q4&quot;).Value
m_PATM=nv.fields( &quot;PATM&quot;).Value
m_Q5=nv.fields( &quot;Q5&quot;).Value
m_DQ12=nv.fields( &quot;DQ12&quot;).Value
m_DQ45=nv.fields( &quot;DQ45&quot;).Value
m_PXB=nv.fields( &quot;PXB&quot;).Value
m_DQ=nv.fields( &quot;DQ&quot;).Value
m_HC_1=nv.fields( &quot;HC_1&quot;).Value
m_HC_2=nv.fields( &quot;HC_2&quot;).Value
m_THOT=nv.fields( &quot;THOT&quot;).Value
m_DANS1=nv.fields( &quot;DANS1&quot;).Value
m_DANS2=nv.fields( &quot;DANS2&quot;).Value
m_DANS3=nv.fields( &quot;DANS3&quot;).Value
m_DANS4=nv.fields( &quot;DANS4&quot;).Value
m_DANS5=nv.fields( &quot;DANS5&quot;).Value
m_DANS6=nv.fields( &quot;DANS6&quot;).Value
m_CHECK_A=nv.fields( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.fields( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.fields( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.fields( &quot;TAIR1&quot;).Value
m_TAIR2=nv.fields( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.fields( &quot;HC_CODE&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as DATACURR_D
   set o = new DATACURR_D
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;DATACURR_D.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;DATACURR_D.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;DATACURR_D&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;DATACURR_D.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;DATACURR_D&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;DATACURR_D.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;DATACURR_D.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  DCALL=node.Attributes.getNamedItem(&quot;DCALL&quot;).nodeValue
  DCOUNTER=node.Attributes.getNamedItem(&quot;DCOUNTER&quot;).nodeValue
  Q1=val(Replace(node.Attributes.getNamedItem(&quot;Q1&quot;).nodeValue,vbLf,vbcrlf))
  Q2=val(Replace(node.Attributes.getNamedItem(&quot;Q2&quot;).nodeValue,vbLf,vbcrlf))
  T1=val(Replace(node.Attributes.getNamedItem(&quot;T1&quot;).nodeValue,vbLf,vbcrlf))
  T2=val(Replace(node.Attributes.getNamedItem(&quot;T2&quot;).nodeValue,vbLf,vbcrlf))
  DT12=val(Replace(node.Attributes.getNamedItem(&quot;DT12&quot;).nodeValue,vbLf,vbcrlf))
  T3=val(Replace(node.Attributes.getNamedItem(&quot;T3&quot;).nodeValue,vbLf,vbcrlf))
  T4=val(Replace(node.Attributes.getNamedItem(&quot;T4&quot;).nodeValue,vbLf,vbcrlf))
  T5=val(Replace(node.Attributes.getNamedItem(&quot;T5&quot;).nodeValue,vbLf,vbcrlf))
  DT45=val(Replace(node.Attributes.getNamedItem(&quot;DT45&quot;).nodeValue,vbLf,vbcrlf))
  T6=val(Replace(node.Attributes.getNamedItem(&quot;T6&quot;).nodeValue,vbLf,vbcrlf))
  V1=val(Replace(node.Attributes.getNamedItem(&quot;V1&quot;).nodeValue,vbLf,vbcrlf))
  V2=val(Replace(node.Attributes.getNamedItem(&quot;V2&quot;).nodeValue,vbLf,vbcrlf))
  DV12=val(Replace(node.Attributes.getNamedItem(&quot;DV12&quot;).nodeValue,vbLf,vbcrlf))
  V3=val(Replace(node.Attributes.getNamedItem(&quot;V3&quot;).nodeValue,vbLf,vbcrlf))
  V4=val(Replace(node.Attributes.getNamedItem(&quot;V4&quot;).nodeValue,vbLf,vbcrlf))
  V5=val(Replace(node.Attributes.getNamedItem(&quot;V5&quot;).nodeValue,vbLf,vbcrlf))
  DV45=val(Replace(node.Attributes.getNamedItem(&quot;DV45&quot;).nodeValue,vbLf,vbcrlf))
  V6=val(Replace(node.Attributes.getNamedItem(&quot;V6&quot;).nodeValue,vbLf,vbcrlf))
  M1=val(Replace(node.Attributes.getNamedItem(&quot;M1&quot;).nodeValue,vbLf,vbcrlf))
  M2=val(Replace(node.Attributes.getNamedItem(&quot;M2&quot;).nodeValue,vbLf,vbcrlf))
  DM12=val(Replace(node.Attributes.getNamedItem(&quot;DM12&quot;).nodeValue,vbLf,vbcrlf))
  M3=val(Replace(node.Attributes.getNamedItem(&quot;M3&quot;).nodeValue,vbLf,vbcrlf))
  M4=val(Replace(node.Attributes.getNamedItem(&quot;M4&quot;).nodeValue,vbLf,vbcrlf))
  M5=val(Replace(node.Attributes.getNamedItem(&quot;M5&quot;).nodeValue,vbLf,vbcrlf))
  DM45=val(Replace(node.Attributes.getNamedItem(&quot;DM45&quot;).nodeValue,vbLf,vbcrlf))
  M6=val(Replace(node.Attributes.getNamedItem(&quot;M6&quot;).nodeValue,vbLf,vbcrlf))
  P1=val(Replace(node.Attributes.getNamedItem(&quot;P1&quot;).nodeValue,vbLf,vbcrlf))
  P2=val(Replace(node.Attributes.getNamedItem(&quot;P2&quot;).nodeValue,vbLf,vbcrlf))
  P3=val(Replace(node.Attributes.getNamedItem(&quot;P3&quot;).nodeValue,vbLf,vbcrlf))
  P4=val(Replace(node.Attributes.getNamedItem(&quot;P4&quot;).nodeValue,vbLf,vbcrlf))
  P5=val(Replace(node.Attributes.getNamedItem(&quot;P5&quot;).nodeValue,vbLf,vbcrlf))
  P6=val(Replace(node.Attributes.getNamedItem(&quot;P6&quot;).nodeValue,vbLf,vbcrlf))
  G1=val(Replace(node.Attributes.getNamedItem(&quot;G1&quot;).nodeValue,vbLf,vbcrlf))
  G2=val(Replace(node.Attributes.getNamedItem(&quot;G2&quot;).nodeValue,vbLf,vbcrlf))
  G3=val(Replace(node.Attributes.getNamedItem(&quot;G3&quot;).nodeValue,vbLf,vbcrlf))
  G4=val(Replace(node.Attributes.getNamedItem(&quot;G4&quot;).nodeValue,vbLf,vbcrlf))
  G5=val(Replace(node.Attributes.getNamedItem(&quot;G5&quot;).nodeValue,vbLf,vbcrlf))
  G6=val(Replace(node.Attributes.getNamedItem(&quot;G6&quot;).nodeValue,vbLf,vbcrlf))
  TCOOL=val(Replace(node.Attributes.getNamedItem(&quot;TCOOL&quot;).nodeValue,vbLf,vbcrlf))
  TCE1=val(Replace(node.Attributes.getNamedItem(&quot;TCE1&quot;).nodeValue,vbLf,vbcrlf))
  TCE2=val(Replace(node.Attributes.getNamedItem(&quot;TCE2&quot;).nodeValue,vbLf,vbcrlf))
  TSUM1=val(Replace(node.Attributes.getNamedItem(&quot;TSUM1&quot;).nodeValue,vbLf,vbcrlf))
  TSUM2=val(Replace(node.Attributes.getNamedItem(&quot;TSUM2&quot;).nodeValue,vbLf,vbcrlf))
  Q1H=val(Replace(node.Attributes.getNamedItem(&quot;Q1H&quot;).nodeValue,vbLf,vbcrlf))
  Q2H=val(Replace(node.Attributes.getNamedItem(&quot;Q2H&quot;).nodeValue,vbLf,vbcrlf))
  V1H=val(Replace(node.Attributes.getNamedItem(&quot;V1H&quot;).nodeValue,vbLf,vbcrlf))
  V2H=val(Replace(node.Attributes.getNamedItem(&quot;V2H&quot;).nodeValue,vbLf,vbcrlf))
  V4H=val(Replace(node.Attributes.getNamedItem(&quot;V4H&quot;).nodeValue,vbLf,vbcrlf))
  V5H=val(Replace(node.Attributes.getNamedItem(&quot;V5H&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIME=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIME&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIMEH=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIMEH&quot;).nodeValue,vbLf,vbcrlf))
  HC=Replace(node.Attributes.getNamedItem(&quot;HC&quot;).nodeValue,vbLf,vbcrlf)
  SP=val(Replace(node.Attributes.getNamedItem(&quot;SP&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB1=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB1&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB2=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB2&quot;).nodeValue,vbLf,vbcrlf))
  datetimeCOUNTER=node.Attributes.getNamedItem(&quot;DATETIMECOUNTER&quot;).nodeValue
  DG12=val(Replace(node.Attributes.getNamedItem(&quot;DG12&quot;).nodeValue,vbLf,vbcrlf))
  DG45=val(Replace(node.Attributes.getNamedItem(&quot;DG45&quot;).nodeValue,vbLf,vbcrlf))
  DP12=val(Replace(node.Attributes.getNamedItem(&quot;DP12&quot;).nodeValue,vbLf,vbcrlf))
  DP45=val(Replace(node.Attributes.getNamedItem(&quot;DP45&quot;).nodeValue,vbLf,vbcrlf))
  UNITSR=Replace(node.Attributes.getNamedItem(&quot;UNITSR&quot;).nodeValue,vbLf,vbcrlf)
  Q3=val(Replace(node.Attributes.getNamedItem(&quot;Q3&quot;).nodeValue,vbLf,vbcrlf))
  Q4=val(Replace(node.Attributes.getNamedItem(&quot;Q4&quot;).nodeValue,vbLf,vbcrlf))
  PATM=val(Replace(node.Attributes.getNamedItem(&quot;PATM&quot;).nodeValue,vbLf,vbcrlf))
  Q5=val(Replace(node.Attributes.getNamedItem(&quot;Q5&quot;).nodeValue,vbLf,vbcrlf))
  DQ12=val(Replace(node.Attributes.getNamedItem(&quot;DQ12&quot;).nodeValue,vbLf,vbcrlf))
  DQ45=val(Replace(node.Attributes.getNamedItem(&quot;DQ45&quot;).nodeValue,vbLf,vbcrlf))
  PXB=val(Replace(node.Attributes.getNamedItem(&quot;PXB&quot;).nodeValue,vbLf,vbcrlf))
  DQ=val(Replace(node.Attributes.getNamedItem(&quot;DQ&quot;).nodeValue,vbLf,vbcrlf))
  HC_1=Replace(node.Attributes.getNamedItem(&quot;HC_1&quot;).nodeValue,vbLf,vbcrlf)
  HC_2=Replace(node.Attributes.getNamedItem(&quot;HC_2&quot;).nodeValue,vbLf,vbcrlf)
  THOT=val(Replace(node.Attributes.getNamedItem(&quot;THOT&quot;).nodeValue,vbLf,vbcrlf))
  DANS1=val(Replace(node.Attributes.getNamedItem(&quot;DANS1&quot;).nodeValue,vbLf,vbcrlf))
  DANS2=val(Replace(node.Attributes.getNamedItem(&quot;DANS2&quot;).nodeValue,vbLf,vbcrlf))
  DANS3=val(Replace(node.Attributes.getNamedItem(&quot;DANS3&quot;).nodeValue,vbLf,vbcrlf))
  DANS4=val(Replace(node.Attributes.getNamedItem(&quot;DANS4&quot;).nodeValue,vbLf,vbcrlf))
  DANS5=val(Replace(node.Attributes.getNamedItem(&quot;DANS5&quot;).nodeValue,vbLf,vbcrlf))
  DANS6=val(Replace(node.Attributes.getNamedItem(&quot;DANS6&quot;).nodeValue,vbLf,vbcrlf))
  CHECK_A=val(Replace(node.Attributes.getNamedItem(&quot;CHECK_A&quot;).nodeValue,vbLf,vbcrlf))
  OKTIME=val(Replace(node.Attributes.getNamedItem(&quot;OKTIME&quot;).nodeValue,vbLf,vbcrlf))
  WORKTIME=val(Replace(node.Attributes.getNamedItem(&quot;WORKTIME&quot;).nodeValue,vbLf,vbcrlf))
  TAIR1=val(Replace(node.Attributes.getNamedItem(&quot;TAIR1&quot;).nodeValue,vbLf,vbcrlf))
  TAIR2=val(Replace(node.Attributes.getNamedItem(&quot;TAIR2&quot;).nodeValue,vbLf,vbcrlf))
  HC_CODE=Replace(node.Attributes.getNamedItem(&quot;HC_CODE&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;DCALL&quot;, Cdbl(DCALL)
  node.setAttribute &quot;DCOUNTER&quot;, Cdbl(DCOUNTER)
  node.setAttribute &quot;Q1&quot;, replace(cstr(Q1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2&quot;, replace(cstr(Q2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T1&quot;, replace(cstr(T1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T2&quot;, replace(cstr(T2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT12&quot;, replace(cstr(DT12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T3&quot;, replace(cstr(T3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T4&quot;, replace(cstr(T4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T5&quot;, replace(cstr(T5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT45&quot;, replace(cstr(DT45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T6&quot;, replace(cstr(T6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1&quot;, replace(cstr(V1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2&quot;, replace(cstr(V2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV12&quot;, replace(cstr(DV12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V3&quot;, replace(cstr(V3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4&quot;, replace(cstr(V4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5&quot;, replace(cstr(V5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV45&quot;, replace(cstr(DV45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V6&quot;, replace(cstr(V6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M1&quot;, replace(cstr(M1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M2&quot;, replace(cstr(M2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM12&quot;, replace(cstr(DM12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M3&quot;, replace(cstr(M3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M4&quot;, replace(cstr(M4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M5&quot;, replace(cstr(M5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM45&quot;, replace(cstr(DM45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M6&quot;, replace(cstr(M6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P1&quot;, replace(cstr(P1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P2&quot;, replace(cstr(P2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P3&quot;, replace(cstr(P3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P4&quot;, replace(cstr(P4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P5&quot;, replace(cstr(P5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P6&quot;, replace(cstr(P6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G1&quot;, replace(cstr(G1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G2&quot;, replace(cstr(G2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G3&quot;, replace(cstr(G3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G4&quot;, replace(cstr(G4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G5&quot;, replace(cstr(G5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G6&quot;, replace(cstr(G6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCOOL&quot;, replace(cstr(TCOOL),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE1&quot;, replace(cstr(TCE1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE2&quot;, replace(cstr(TCE2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM1&quot;, replace(cstr(TSUM1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM2&quot;, replace(cstr(TSUM2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q1H&quot;, replace(cstr(Q1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2H&quot;, replace(cstr(Q2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1H&quot;, replace(cstr(V1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2H&quot;, replace(cstr(V2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4H&quot;, replace(cstr(V4H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5H&quot;, replace(cstr(V5H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIME&quot;, replace(cstr(ERRTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIMEH&quot;, replace(cstr(ERRTIMEH),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC&quot;, HC
  node.setAttribute &quot;SP&quot;, replace(cstr(SP),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB1&quot;, replace(cstr(SP_TB1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB2&quot;, replace(cstr(SP_TB2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DATETIMECOUNTER&quot;, Cdbl(datetimeCOUNTER)
  node.setAttribute &quot;DG12&quot;, replace(cstr(DG12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DG45&quot;, replace(cstr(DG45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP12&quot;, replace(cstr(DP12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP45&quot;, replace(cstr(DP45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;UNITSR&quot;, UNITSR
  node.setAttribute &quot;Q3&quot;, replace(cstr(Q3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q4&quot;, replace(cstr(Q4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PATM&quot;, replace(cstr(PATM),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q5&quot;, replace(cstr(Q5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ12&quot;, replace(cstr(DQ12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ45&quot;, replace(cstr(DQ45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PXB&quot;, replace(cstr(PXB),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ&quot;, replace(cstr(DQ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_1&quot;, HC_1
  node.setAttribute &quot;HC_2&quot;, HC_2
  node.setAttribute &quot;THOT&quot;, replace(cstr(THOT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS1&quot;, replace(cstr(DANS1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS2&quot;, replace(cstr(DANS2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS3&quot;, replace(cstr(DANS3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS4&quot;, replace(cstr(DANS4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS5&quot;, replace(cstr(DANS5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS6&quot;, replace(cstr(DANS6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;CHECK_A&quot;, replace(cstr(CHECK_A),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;OKTIME&quot;, replace(cstr(OKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WORKTIME&quot;, replace(cstr(WORKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR1&quot;, replace(cstr(TAIR1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR2&quot;, replace(cstr(TAIR2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_CODE&quot;, HC_CODE
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;DATACURR_D&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;DATACURR_D&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;DATACURR_D&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;DATACURR_D&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_D_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Суточный архив
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;DATACURR_D&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_D.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as  DATACURR_D
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  DATACURR_D
 dim LID as  string
 dim o as  DATACURR_D
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  DATACURR_D
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as DATACURR_D
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as DATACURR_D
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as DATACURR_D
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as DATACURR_D
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as DATACURR_D
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as DATACURR_D
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_D
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_D
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as DATACURR_D
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  DATACURR_D
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;DATACURR_D.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As DATACURR_D
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As DATACURR_D
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!DATACURR_DID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as DATACURR_D
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;DATACURR_D_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;DATACURR_D&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as DATACURR_D
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;DATACURR_D&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Дата опроса&quot;, 0, 0, &quot;DCALL&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата счетчика&quot;, 0, 0, &quot;DCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1&quot;, 0, 0, &quot;Q1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2&quot;, 0, 0, &quot;Q2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 1&quot;, 0, 0, &quot;T1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 2&quot;, 0, 0, &quot;T2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 1 и 2&quot;, 0, 0, &quot;DT12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 3&quot;, 0, 0, &quot;T3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 4&quot;, 0, 0, &quot;T4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 5&quot;, 0, 0, &quot;T5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 4 и 5&quot;, 0, 0, &quot;DT45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 6&quot;, 0, 0, &quot;T6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1&quot;, 0, 0, &quot;V1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2&quot;, 0, 0, &quot;V2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 1 (расход ГВС)&quot;, 0, 0, &quot;DV12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 3&quot;, 0, 0, &quot;V3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4&quot;, 0, 0, &quot;V4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5&quot;, 0, 0, &quot;V5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 2&quot;, 0, 0, &quot;DV45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 6&quot;, 0, 0, &quot;V6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 1&quot;, 0, 0, &quot;M1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 2&quot;, 0, 0, &quot;M2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 1 (расход ГВС)&quot;, 0, 0, &quot;DM12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 3&quot;, 0, 0, &quot;M3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 4&quot;, 0, 0, &quot;M4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 5&quot;, 0, 0, &quot;M5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 2&quot;, 0, 0, &quot;DM45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 6&quot;, 0, 0, &quot;M6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 1&quot;, 0, 0, &quot;P1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 2&quot;, 0, 0, &quot;P2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 3&quot;, 0, 0, &quot;P3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 4&quot;, 0, 0, &quot;P4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 5&quot;, 0, 0, &quot;P5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 6&quot;, 0, 0, &quot;P6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 1&quot;, 0, 0, &quot;G1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 2&quot;, 0, 0, &quot;G2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 3&quot;, 0, 0, &quot;G3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 4&quot;, 0, 0, &quot;G4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 5&quot;, 0, 0, &quot;G5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 6&quot;, 0, 0, &quot;G6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодной воды&quot;, 0, 0, &quot;TCOOL&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 1&quot;, 0, 0, &quot;TCE1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 2&quot;, 0, 0, &quot;TCE2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB1&quot;, 0, 0, &quot;TSUM1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB2&quot;, 0, 0, &quot;TSUM2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1 нарастающим итогом&quot;, 0, 0, &quot;Q1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2 нарастающим итогом&quot;, 0, 0, &quot;Q2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1 нарастающим итогом&quot;, 0, 0, &quot;V1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2 нарастающим итогом&quot;, 0, 0, &quot;V2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4 нарастающим итогом&quot;, 0, 0, &quot;V4H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5 нарастающим итогом&quot;, 0, 0, &quot;V5H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии&quot;, 0, 0, &quot;ERRTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии нарастающим итогом&quot;, 0, 0, &quot;ERRTIMEH&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатные ситуации общ&quot;, 0, 0, &quot;HC&quot;).SortType =1
  YGrid.Columns.Add(&quot;Схема потребления&quot;, 0, 0, &quot;SP&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB1&quot;, 0, 0, &quot;SP_TB1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB2&quot;, 0, 0, &quot;SP_TB2&quot;).SortType =2
  YGrid.Columns.Add(&quot;datetimeCOUNTER&quot;, 0, 0, &quot;datetimeCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;G1-G2&quot;, 0, 0, &quot;DG12&quot;).SortType =2
  YGrid.Columns.Add(&quot;G4-G5&quot;, 0, 0, &quot;DG45&quot;).SortType =2
  YGrid.Columns.Add(&quot;P1-P2&quot;, 0, 0, &quot;DP12&quot;).SortType =2
  YGrid.Columns.Add(&quot;P4-P5&quot;, 0, 0, &quot;DP45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Единицы измерения расхода&quot;, 0, 0, &quot;UNITSR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тепловая энергия канал 3&quot;, 0, 0, &quot;Q3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 4&quot;, 0, 0, &quot;Q4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Атмосферное давление&quot;, 0, 0, &quot;PATM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 5&quot;, 0, 0, &quot;Q5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 1&quot;, 0, 0, &quot;DQ12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 2&quot;, 0, 0, &quot;DQ45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление холодной воды&quot;, 0, 0, &quot;PXB&quot;).SortType =2
  YGrid.Columns.Add(&quot;Расход энергии потребитель 1&quot;, 0, 0, &quot;DQ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатная ситуация 1 (ТВ1 или внешняя)&quot;, 0, 0, &quot;HC_1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Нештатная ситуация 2 (ТВ2 или внутренняя)&quot;, 0, 0, &quot;HC_2&quot;).SortType =1
  YGrid.Columns.Add(&quot;Температура горячей воды&quot;, 0, 0, &quot;THOT&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS1&quot;, 0, 0, &quot;DANS1&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS2&quot;, 0, 0, &quot;DANS2&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS3&quot;, 0, 0, &quot;DANS3&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS4&quot;, 0, 0, &quot;DANS4&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS5&quot;, 0, 0, &quot;DANS5&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS6&quot;, 0, 0, &quot;DANS6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Проверка архивных данных на НС (0 - не производилась, 1 - произведена)&quot;, 0, 0, &quot;CHECK_A&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время безошиб.работы&quot;, 0, 0, &quot;OKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время работы&quot;, 0, 0, &quot;WORKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 1&quot;, 0, 0, &quot;TAIR1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 2&quot;, 0, 0, &quot;TAIR2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Код нештатной ситуации тепловычислителя&quot;, 0, 0, &quot;HC_CODE&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as DATACURR_D
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.DCALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.DCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Q1, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Q2, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.T1, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.T2, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.DT12, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.T3, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.T4, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.T5, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.DT45, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.T6, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.V1, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.V2, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.DV12, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.V3, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.V4, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.V5, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.DV45, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.V6, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.M1, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.M2, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.DM12, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.M3, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.M4, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.M5, vbCrLf, &quot; &quot;), 255)
    Values.Value(27) = Left(Replace(obj.DM45, vbCrLf, &quot; &quot;), 255)
    Values.Value(28) = Left(Replace(obj.M6, vbCrLf, &quot; &quot;), 255)
    Values.Value(29) = Left(Replace(obj.P1, vbCrLf, &quot; &quot;), 255)
    Values.Value(30) = Left(Replace(obj.P2, vbCrLf, &quot; &quot;), 255)
    Values.Value(31) = Left(Replace(obj.P3, vbCrLf, &quot; &quot;), 255)
    Values.Value(32) = Left(Replace(obj.P4, vbCrLf, &quot; &quot;), 255)
    Values.Value(33) = Left(Replace(obj.P5, vbCrLf, &quot; &quot;), 255)
    Values.Value(34) = Left(Replace(obj.P6, vbCrLf, &quot; &quot;), 255)
    Values.Value(35) = Left(Replace(obj.G1, vbCrLf, &quot; &quot;), 255)
    Values.Value(36) = Left(Replace(obj.G2, vbCrLf, &quot; &quot;), 255)
    Values.Value(37) = Left(Replace(obj.G3, vbCrLf, &quot; &quot;), 255)
    Values.Value(38) = Left(Replace(obj.G4, vbCrLf, &quot; &quot;), 255)
    Values.Value(39) = Left(Replace(obj.G5, vbCrLf, &quot; &quot;), 255)
    Values.Value(40) = Left(Replace(obj.G6, vbCrLf, &quot; &quot;), 255)
    Values.Value(41) = Left(Replace(obj.TCOOL, vbCrLf, &quot; &quot;), 255)
    Values.Value(42) = Left(Replace(obj.TCE1, vbCrLf, &quot; &quot;), 255)
    Values.Value(43) = Left(Replace(obj.TCE2, vbCrLf, &quot; &quot;), 255)
    Values.Value(44) = Left(Replace(obj.TSUM1, vbCrLf, &quot; &quot;), 255)
    Values.Value(45) = Left(Replace(obj.TSUM2, vbCrLf, &quot; &quot;), 255)
    Values.Value(46) = Left(Replace(obj.Q1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(47) = Left(Replace(obj.Q2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(48) = Left(Replace(obj.V1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(49) = Left(Replace(obj.V2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(50) = Left(Replace(obj.V4H, vbCrLf, &quot; &quot;), 255)
    Values.Value(51) = Left(Replace(obj.V5H, vbCrLf, &quot; &quot;), 255)
    Values.Value(52) = Left(Replace(obj.ERRTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(53) = Left(Replace(obj.ERRTIMEH, vbCrLf, &quot; &quot;), 255)
    Values.Value(54) = Left(Replace(obj.HC, vbCrLf, &quot; &quot;), 255)
    Values.Value(55) = Left(Replace(obj.SP, vbCrLf, &quot; &quot;), 255)
    Values.Value(56) = Left(Replace(obj.SP_TB1, vbCrLf, &quot; &quot;), 255)
    Values.Value(57) = Left(Replace(obj.SP_TB2, vbCrLf, &quot; &quot;), 255)
    Values.Value(58) = Left(Replace(obj.datetimeCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(59) = Left(Replace(obj.DG12, vbCrLf, &quot; &quot;), 255)
    Values.Value(60) = Left(Replace(obj.DG45, vbCrLf, &quot; &quot;), 255)
    Values.Value(61) = Left(Replace(obj.DP12, vbCrLf, &quot; &quot;), 255)
    Values.Value(62) = Left(Replace(obj.DP45, vbCrLf, &quot; &quot;), 255)
    Values.Value(63) = Left(Replace(obj.UNITSR, vbCrLf, &quot; &quot;), 255)
    Values.Value(64) = Left(Replace(obj.Q3, vbCrLf, &quot; &quot;), 255)
    Values.Value(65) = Left(Replace(obj.Q4, vbCrLf, &quot; &quot;), 255)
    Values.Value(66) = Left(Replace(obj.PATM, vbCrLf, &quot; &quot;), 255)
    Values.Value(67) = Left(Replace(obj.Q5, vbCrLf, &quot; &quot;), 255)
    Values.Value(68) = Left(Replace(obj.DQ12, vbCrLf, &quot; &quot;), 255)
    Values.Value(69) = Left(Replace(obj.DQ45, vbCrLf, &quot; &quot;), 255)
    Values.Value(70) = Left(Replace(obj.PXB, vbCrLf, &quot; &quot;), 255)
    Values.Value(71) = Left(Replace(obj.DQ, vbCrLf, &quot; &quot;), 255)
    Values.Value(72) = Left(Replace(obj.HC_1, vbCrLf, &quot; &quot;), 255)
    Values.Value(73) = Left(Replace(obj.HC_2, vbCrLf, &quot; &quot;), 255)
    Values.Value(74) = Left(Replace(obj.THOT, vbCrLf, &quot; &quot;), 255)
    Values.Value(75) = Left(Replace(obj.DANS1, vbCrLf, &quot; &quot;), 255)
    Values.Value(76) = Left(Replace(obj.DANS2, vbCrLf, &quot; &quot;), 255)
    Values.Value(77) = Left(Replace(obj.DANS3, vbCrLf, &quot; &quot;), 255)
    Values.Value(78) = Left(Replace(obj.DANS4, vbCrLf, &quot; &quot;), 255)
    Values.Value(79) = Left(Replace(obj.DANS5, vbCrLf, &quot; &quot;), 255)
    Values.Value(80) = Left(Replace(obj.DANS6, vbCrLf, &quot; &quot;), 255)
    Values.Value(81) = Left(Replace(obj.CHECK_A, vbCrLf, &quot; &quot;), 255)
    Values.Value(82) = Left(Replace(obj.OKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(83) = Left(Replace(obj.WORKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(84) = Left(Replace(obj.TAIR1, vbCrLf, &quot; &quot;), 255)
    Values.Value(85) = Left(Replace(obj.TAIR2, vbCrLf, &quot; &quot;), 255)
    Values.Value(86) = Left(Replace(obj.HC_CODE, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;DATACURR_D&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_T" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Суммарные показатели
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_DCALL as DATE
private m_DCOUNTER as DATE
private m_Q1 as double
private m_Q2 as double
private m_T1 as double
private m_T2 as double
private m_DT12 as double
private m_T3 as double
private m_T4 as double
private m_T5 as double
private m_DT45 as double
private m_T6 as double
private m_V1 as double
private m_V2 as double
private m_DV12 as double
private m_V3 as double
private m_V4 as double
private m_V5 as double
private m_DV45 as double
private m_V6 as double
private m_M1 as double
private m_M2 as double
private m_DM12 as double
private m_M3 as double
private m_M4 as double
private m_M5 as double
private m_DM45 as double
private m_M6 as double
private m_P1 as double
private m_P2 as double
private m_P3 as double
private m_P4 as double
private m_P5 as double
private m_P6 as double
private m_G1 as double
private m_G2 as double
private m_G3 as double
private m_G4 as double
private m_G5 as double
private m_G6 as double
private m_TCOOL as double
private m_TCE1 as double
private m_TCE2 as double
private m_TSUM1 as double
private m_TSUM2 as double
private m_Q1H as double
private m_Q2H as double
private m_V1H as double
private m_V2H as double
private m_V4H as double
private m_V5H as double
private m_ERRTIME as double
private m_ERRTIMEH as double
private m_HC as String
private m_SP as double
private m_SP_TB1 as double
private m_SP_TB2 as double
private m_datetimeCOUNTER as DATE
private m_DG12 as double
private m_DG45 as double
private m_DP12 as double
private m_DP45 as double
private m_UNITSR as String
private m_Q3 as double
private m_Q4 as double
private m_PATM as double
private m_Q5 as double
private m_DQ12 as double
private m_DQ45 as double
private m_PXB as double
private m_DQ as double
private m_HC_1 as String
private m_HC_2 as String
private m_THOT as double
private m_DANS1 as double
private m_DANS2 as double
private m_DANS3 as double
private m_DANS4 as double
private m_DANS5 as double
private m_DANS6 as double
private m_CHECK_A as double
private m_OKTIME as double
private m_WORKTIME as double
private m_TAIR1 as double
private m_TAIR2 as double
private m_HC_CODE as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;DATACURR_T&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_T.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Дата опроса

'Дата опроса
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCALL(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCALL&quot;,DCALL,newvalue

   m_DCALL= newValue
end if
end property

'Дата опроса
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCALL
public property Get DCALL() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCALL = m_DCALL
end property
' let 
'Дата счетчика

'Дата счетчика
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DCOUNTER&quot;,DCOUNTER,newvalue

   m_DCOUNTER= newValue
end if
end property

'Дата счетчика
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DCOUNTER
public property Get DCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   DCOUNTER = m_DCOUNTER
end property
' let 
'Тепловая энергия канал 1

'Тепловая энергия канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1&quot;,Q1,newvalue

   m_Q1= newValue
end if
end property

'Тепловая энергия канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1
public property Get Q1() as double
 LoadFromDatabase
 AccessTime=Now

   Q1 = m_Q1
end property
' let 
'Тепловая энергия канал 2

'Тепловая энергия канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2&quot;,Q2,newvalue

   m_Q2= newValue
end if
end property

'Тепловая энергия канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2
public property Get Q2() as double
 LoadFromDatabase
 AccessTime=Now

   Q2 = m_Q2
end property
' let 
'Температура по каналу 1

'Температура по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T1&quot;,T1,newvalue

   m_T1= newValue
end if
end property

'Температура по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T1
public property Get T1() as double
 LoadFromDatabase
 AccessTime=Now

   T1 = m_T1
end property
' let 
'Температура по каналу 2

'Температура по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T2&quot;,T2,newvalue

   m_T2= newValue
end if
end property

'Температура по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T2
public property Get T2() as double
 LoadFromDatabase
 AccessTime=Now

   T2 = m_T2
end property
' let 
'Разность Температур по каналу 1 и 2

'Разность Температур по каналу 1 и 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT12&quot;,DT12,newvalue

   m_DT12= newValue
end if
end property

'Разность Температур по каналу 1 и 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT12
public property Get DT12() as double
 LoadFromDatabase
 AccessTime=Now

   DT12 = m_DT12
end property
' let 
'Температура по каналу 3

'Температура по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T3&quot;,T3,newvalue

   m_T3= newValue
end if
end property

'Температура по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T3
public property Get T3() as double
 LoadFromDatabase
 AccessTime=Now

   T3 = m_T3
end property
' let 
'Температура по каналу 4

'Температура по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T4&quot;,T4,newvalue

   m_T4= newValue
end if
end property

'Температура по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T4
public property Get T4() as double
 LoadFromDatabase
 AccessTime=Now

   T4 = m_T4
end property
' let 
'Температура по каналу 5

'Температура по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T5&quot;,T5,newvalue

   m_T5= newValue
end if
end property

'Температура по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T5
public property Get T5() as double
 LoadFromDatabase
 AccessTime=Now

   T5 = m_T5
end property
' let 
'Разность Температур по каналу 4 и 5

'Разность Температур по каналу 4 и 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DT45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DT45&quot;,DT45,newvalue

   m_DT45= newValue
end if
end property

'Разность Температур по каналу 4 и 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DT45
public property Get DT45() as double
 LoadFromDatabase
 AccessTime=Now

   DT45 = m_DT45
end property
' let 
'Температура по каналу 6

'Температура по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let T6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;T6&quot;,T6,newvalue

   m_T6= newValue
end if
end property

'Температура по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. T6
public property Get T6() as double
 LoadFromDatabase
 AccessTime=Now

   T6 = m_T6
end property
' let 
'Объемный расход воды по каналу 1

'Объемный расход воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1&quot;,V1,newvalue

   m_V1= newValue
end if
end property

'Объемный расход воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1
public property Get V1() as double
 LoadFromDatabase
 AccessTime=Now

   V1 = m_V1
end property
' let 
'Объемный расход воды по каналу 2

'Объемный расход воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2&quot;,V2,newvalue

   m_V2= newValue
end if
end property

'Объемный расход воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2
public property Get V2() as double
 LoadFromDatabase
 AccessTime=Now

   V2 = m_V2
end property
' let 
'Разность объемов канал 1  (расход ГВС)

'Разность объемов канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV12&quot;,DV12,newvalue

   m_DV12= newValue
end if
end property

'Разность объемов канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV12
public property Get DV12() as double
 LoadFromDatabase
 AccessTime=Now

   DV12 = m_DV12
end property
' let 
'Объемный расход воды по каналу 3

'Объемный расход воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V3&quot;,V3,newvalue

   m_V3= newValue
end if
end property

'Объемный расход воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V3
public property Get V3() as double
 LoadFromDatabase
 AccessTime=Now

   V3 = m_V3
end property
' let 
'Объемный расход воды по каналу 4

'Объемный расход воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4&quot;,V4,newvalue

   m_V4= newValue
end if
end property

'Объемный расход воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4
public property Get V4() as double
 LoadFromDatabase
 AccessTime=Now

   V4 = m_V4
end property
' let 
'Объемный расход воды по каналу 5

'Объемный расход воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5&quot;,V5,newvalue

   m_V5= newValue
end if
end property

'Объемный расход воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5
public property Get V5() as double
 LoadFromDatabase
 AccessTime=Now

   V5 = m_V5
end property
' let 
'Разность объемов канал 2

'Разность объемов канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DV45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DV45&quot;,DV45,newvalue

   m_DV45= newValue
end if
end property

'Разность объемов канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DV45
public property Get DV45() as double
 LoadFromDatabase
 AccessTime=Now

   DV45 = m_DV45
end property
' let 
'Объемный расход воды по каналу 6

'Объемный расход воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V6&quot;,V6,newvalue

   m_V6= newValue
end if
end property

'Объемный расход воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V6
public property Get V6() as double
 LoadFromDatabase
 AccessTime=Now

   V6 = m_V6
end property
' let 
'Масса воды по каналу 1

'Масса воды по каналу 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M1&quot;,M1,newvalue

   m_M1= newValue
end if
end property

'Масса воды по каналу 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M1
public property Get M1() as double
 LoadFromDatabase
 AccessTime=Now

   M1 = m_M1
end property
' let 
'Масса воды по каналу 2

'Масса воды по каналу 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M2&quot;,M2,newvalue

   m_M2= newValue
end if
end property

'Масса воды по каналу 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M2
public property Get M2() as double
 LoadFromDatabase
 AccessTime=Now

   M2 = m_M2
end property
' let 
'Разность масс канал 1  (расход ГВС)

'Разность масс канал 1  (расход ГВС)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM12&quot;,DM12,newvalue

   m_DM12= newValue
end if
end property

'Разность масс канал 1  (расход ГВС)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM12
public property Get DM12() as double
 LoadFromDatabase
 AccessTime=Now

   DM12 = m_DM12
end property
' let 
'Масса воды по каналу 3

'Масса воды по каналу 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M3&quot;,M3,newvalue

   m_M3= newValue
end if
end property

'Масса воды по каналу 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M3
public property Get M3() as double
 LoadFromDatabase
 AccessTime=Now

   M3 = m_M3
end property
' let 
'Масса воды по каналу 4

'Масса воды по каналу 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M4&quot;,M4,newvalue

   m_M4= newValue
end if
end property

'Масса воды по каналу 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M4
public property Get M4() as double
 LoadFromDatabase
 AccessTime=Now

   M4 = m_M4
end property
' let 
'Масса воды по каналу 5

'Масса воды по каналу 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M5&quot;,M5,newvalue

   m_M5= newValue
end if
end property

'Масса воды по каналу 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M5
public property Get M5() as double
 LoadFromDatabase
 AccessTime=Now

   M5 = m_M5
end property
' let 
'Разность масс канал 2

'Разность масс канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DM45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DM45&quot;,DM45,newvalue

   m_DM45= newValue
end if
end property

'Разность масс канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DM45
public property Get DM45() as double
 LoadFromDatabase
 AccessTime=Now

   DM45 = m_DM45
end property
' let 
'Масса воды по каналу 6

'Масса воды по каналу 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let M6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;M6&quot;,M6,newvalue

   m_M6= newValue
end if
end property

'Масса воды по каналу 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. M6
public property Get M6() as double
 LoadFromDatabase
 AccessTime=Now

   M6 = m_M6
end property
' let 
'Давление в трубопроводе 1

'Давление в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P1&quot;,P1,newvalue

   m_P1= newValue
end if
end property

'Давление в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P1
public property Get P1() as double
 LoadFromDatabase
 AccessTime=Now

   P1 = m_P1
end property
' let 
'Давление в трубопроводе 2

'Давление в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P2&quot;,P2,newvalue

   m_P2= newValue
end if
end property

'Давление в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P2
public property Get P2() as double
 LoadFromDatabase
 AccessTime=Now

   P2 = m_P2
end property
' let 
'Давление в трубопроводе 3

'Давление в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P3&quot;,P3,newvalue

   m_P3= newValue
end if
end property

'Давление в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P3
public property Get P3() as double
 LoadFromDatabase
 AccessTime=Now

   P3 = m_P3
end property
' let 
'Давление в трубопроводе 4

'Давление в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P4&quot;,P4,newvalue

   m_P4= newValue
end if
end property

'Давление в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P4
public property Get P4() as double
 LoadFromDatabase
 AccessTime=Now

   P4 = m_P4
end property
' let 
'Давление в трубопроводе 5

'Давление в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P5&quot;,P5,newvalue

   m_P5= newValue
end if
end property

'Давление в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P5
public property Get P5() as double
 LoadFromDatabase
 AccessTime=Now

   P5 = m_P5
end property
' let 
'Давление в трубопроводе 6

'Давление в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let P6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;P6&quot;,P6,newvalue

   m_P6= newValue
end if
end property

'Давление в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. P6
public property Get P6() as double
 LoadFromDatabase
 AccessTime=Now

   P6 = m_P6
end property
' let 
'Текущее значение расхода в трубопроводе 1

'Текущее значение расхода в трубопроводе 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G1&quot;,G1,newvalue

   m_G1= newValue
end if
end property

'Текущее значение расхода в трубопроводе 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G1
public property Get G1() as double
 LoadFromDatabase
 AccessTime=Now

   G1 = m_G1
end property
' let 
'Текущее значение расхода в трубопроводе 2

'Текущее значение расхода в трубопроводе 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G2&quot;,G2,newvalue

   m_G2= newValue
end if
end property

'Текущее значение расхода в трубопроводе 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G2
public property Get G2() as double
 LoadFromDatabase
 AccessTime=Now

   G2 = m_G2
end property
' let 
'Текущее значение расхода в трубопроводе 3

'Текущее значение расхода в трубопроводе 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G3&quot;,G3,newvalue

   m_G3= newValue
end if
end property

'Текущее значение расхода в трубопроводе 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G3
public property Get G3() as double
 LoadFromDatabase
 AccessTime=Now

   G3 = m_G3
end property
' let 
'Текущее значение расхода в трубопроводе 4

'Текущее значение расхода в трубопроводе 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G4&quot;,G4,newvalue

   m_G4= newValue
end if
end property

'Текущее значение расхода в трубопроводе 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G4
public property Get G4() as double
 LoadFromDatabase
 AccessTime=Now

   G4 = m_G4
end property
' let 
'Текущее значение расхода в трубопроводе 5

'Текущее значение расхода в трубопроводе 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G5&quot;,G5,newvalue

   m_G5= newValue
end if
end property

'Текущее значение расхода в трубопроводе 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G5
public property Get G5() as double
 LoadFromDatabase
 AccessTime=Now

   G5 = m_G5
end property
' let 
'Текущее значение расхода в трубопроводе 6

'Текущее значение расхода в трубопроводе 6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let G6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;G6&quot;,G6,newvalue

   m_G6= newValue
end if
end property

'Текущее значение расхода в трубопроводе 6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. G6
public property Get G6() as double
 LoadFromDatabase
 AccessTime=Now

   G6 = m_G6
end property
' let 
'Температура холодной воды

'Температура холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCOOL(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCOOL&quot;,TCOOL,newvalue

   m_TCOOL= newValue
end if
end property

'Температура холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCOOL
public property Get TCOOL() as double
 LoadFromDatabase
 AccessTime=Now

   TCOOL = m_TCOOL
end property
' let 
'Температура холодного конца канал 1

'Температура холодного конца канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE1&quot;,TCE1,newvalue

   m_TCE1= newValue
end if
end property

'Температура холодного конца канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE1
public property Get TCE1() as double
 LoadFromDatabase
 AccessTime=Now

   TCE1 = m_TCE1
end property
' let 
'Температура холодного конца канал 2

'Температура холодного конца канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TCE2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TCE2&quot;,TCE2,newvalue

   m_TCE2= newValue
end if
end property

'Температура холодного конца канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TCE2
public property Get TCE2() as double
 LoadFromDatabase
 AccessTime=Now

   TCE2 = m_TCE2
end property
' let 
'Тотальное время счета TB1

'Тотальное время счета TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM1&quot;,TSUM1,newvalue

   m_TSUM1= newValue
end if
end property

'Тотальное время счета TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM1
public property Get TSUM1() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM1 = m_TSUM1
end property
' let 
'Тотальное время счета TB2

'Тотальное время счета TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TSUM2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TSUM2&quot;,TSUM2,newvalue

   m_TSUM2= newValue
end if
end property

'Тотальное время счета TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TSUM2
public property Get TSUM2() as double
 LoadFromDatabase
 AccessTime=Now

   TSUM2 = m_TSUM2
end property
' let 
'Тепловая энергия канал 1 нарастающим итогом

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q1H&quot;,Q1H,newvalue

   m_Q1H= newValue
end if
end property

'Тепловая энергия канал 1 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q1H
public property Get Q1H() as double
 LoadFromDatabase
 AccessTime=Now

   Q1H = m_Q1H
end property
' let 
'Тепловая энергия канал 2 нарастающим итогом

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q2H&quot;,Q2H,newvalue

   m_Q2H= newValue
end if
end property

'Тепловая энергия канал 2 нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q2H
public property Get Q2H() as double
 LoadFromDatabase
 AccessTime=Now

   Q2H = m_Q2H
end property
' let 
'Объемный расход воды по каналу 1  нарастающим итогом

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V1H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V1H&quot;,V1H,newvalue

   m_V1H= newValue
end if
end property

'Объемный расход воды по каналу 1  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V1H
public property Get V1H() as double
 LoadFromDatabase
 AccessTime=Now

   V1H = m_V1H
end property
' let 
'Объемный расход воды по каналу 2  нарастающим итогом

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V2H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V2H&quot;,V2H,newvalue

   m_V2H= newValue
end if
end property

'Объемный расход воды по каналу 2  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V2H
public property Get V2H() as double
 LoadFromDatabase
 AccessTime=Now

   V2H = m_V2H
end property
' let 
'Объемный расход воды по каналу 4  нарастающим итогом

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V4H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V4H&quot;,V4H,newvalue

   m_V4H= newValue
end if
end property

'Объемный расход воды по каналу 4  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V4H
public property Get V4H() as double
 LoadFromDatabase
 AccessTime=Now

   V4H = m_V4H
end property
' let 
'Объемный расход воды по каналу 5  нарастающим итогом

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let V5H(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;V5H&quot;,V5H,newvalue

   m_V5H= newValue
end if
end property

'Объемный расход воды по каналу 5  нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. V5H
public property Get V5H() as double
 LoadFromDatabase
 AccessTime=Now

   V5H = m_V5H
end property
' let 
'Время аварии

'Время аварии
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIME&quot;,ERRTIME,newvalue

   m_ERRTIME= newValue
end if
end property

'Время аварии
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIME
public property Get ERRTIME() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIME = m_ERRTIME
end property
' let 
'Время аварии нарастающим итогом

'Время аварии нарастающим итогом
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ERRTIMEH(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ERRTIMEH&quot;,ERRTIMEH,newvalue

   m_ERRTIMEH= newValue
end if
end property

'Время аварии нарастающим итогом
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ERRTIMEH
public property Get ERRTIMEH() as double
 LoadFromDatabase
 AccessTime=Now

   ERRTIMEH = m_ERRTIMEH
end property
' let 
'Нештатные ситуации общ

'Нештатные ситуации общ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC&quot;,HC,newvalue

   m_HC= newValue
end if
end property

'Нештатные ситуации общ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC
public property Get HC() as String
 LoadFromDatabase
 AccessTime=Now

   HC = m_HC
end property
' let 
'Схема потребления

'Схема потребления
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP&quot;,SP,newvalue

   m_SP= newValue
end if
end property

'Схема потребления
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP
public property Get SP() as double
 LoadFromDatabase
 AccessTime=Now

   SP = m_SP
end property
' let 
'Схема потребления TB1

'Схема потребления TB1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB1&quot;,SP_TB1,newvalue

   m_SP_TB1= newValue
end if
end property

'Схема потребления TB1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB1
public property Get SP_TB1() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB1 = m_SP_TB1
end property
' let 
'Схема потребления TB2

'Схема потребления TB2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SP_TB2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SP_TB2&quot;,SP_TB2,newvalue

   m_SP_TB2= newValue
end if
end property

'Схема потребления TB2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SP_TB2
public property Get SP_TB2() as double
 LoadFromDatabase
 AccessTime=Now

   SP_TB2 = m_SP_TB2
end property
' let 
'datetimeCOUNTER

'datetimeCOUNTER
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let datetimeCOUNTER(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;datetimeCOUNTER&quot;,datetimeCOUNTER,newvalue

   m_datetimeCOUNTER= newValue
end if
end property

'datetimeCOUNTER
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. datetimeCOUNTER
public property Get datetimeCOUNTER() as DATE
 LoadFromDatabase
 AccessTime=Now

   datetimeCOUNTER = m_datetimeCOUNTER
end property
' let 
'G1-G2

'G1-G2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG12&quot;,DG12,newvalue

   m_DG12= newValue
end if
end property

'G1-G2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG12
public property Get DG12() as double
 LoadFromDatabase
 AccessTime=Now

   DG12 = m_DG12
end property
' let 
'G4-G5

'G4-G5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DG45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DG45&quot;,DG45,newvalue

   m_DG45= newValue
end if
end property

'G4-G5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DG45
public property Get DG45() as double
 LoadFromDatabase
 AccessTime=Now

   DG45 = m_DG45
end property
' let 
'P1-P2

'P1-P2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP12&quot;,DP12,newvalue

   m_DP12= newValue
end if
end property

'P1-P2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP12
public property Get DP12() as double
 LoadFromDatabase
 AccessTime=Now

   DP12 = m_DP12
end property
' let 
'P4-P5

'P4-P5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DP45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DP45&quot;,DP45,newvalue

   m_DP45= newValue
end if
end property

'P4-P5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DP45
public property Get DP45() as double
 LoadFromDatabase
 AccessTime=Now

   DP45 = m_DP45
end property
' let 
'Единицы измерения расхода

'Единицы измерения расхода
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UNITSR(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UNITSR&quot;,UNITSR,newvalue

   m_UNITSR= newValue
end if
end property

'Единицы измерения расхода
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. UNITSR
public property Get UNITSR() as String
 LoadFromDatabase
 AccessTime=Now

   UNITSR = m_UNITSR
end property
' let 
'Тепловая энергия канал 3

'Тепловая энергия канал 3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q3&quot;,Q3,newvalue

   m_Q3= newValue
end if
end property

'Тепловая энергия канал 3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q3
public property Get Q3() as double
 LoadFromDatabase
 AccessTime=Now

   Q3 = m_Q3
end property
' let 
'Тепловая энергия канал 4

'Тепловая энергия канал 4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q4&quot;,Q4,newvalue

   m_Q4= newValue
end if
end property

'Тепловая энергия канал 4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q4
public property Get Q4() as double
 LoadFromDatabase
 AccessTime=Now

   Q4 = m_Q4
end property
' let 
'Атмосферное давление

'Атмосферное давление
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PATM(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PATM&quot;,PATM,newvalue

   m_PATM= newValue
end if
end property

'Атмосферное давление
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PATM
public property Get PATM() as double
 LoadFromDatabase
 AccessTime=Now

   PATM = m_PATM
end property
' let 
'Тепловая энергия канал 5

'Тепловая энергия канал 5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Q5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Q5&quot;,Q5,newvalue

   m_Q5= newValue
end if
end property

'Тепловая энергия канал 5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Q5
public property Get Q5() as double
 LoadFromDatabase
 AccessTime=Now

   Q5 = m_Q5
end property
' let 
'Тепловая энергия потребитель 1

'Тепловая энергия потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ12(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ12&quot;,DQ12,newvalue

   m_DQ12= newValue
end if
end property

'Тепловая энергия потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ12
public property Get DQ12() as double
 LoadFromDatabase
 AccessTime=Now

   DQ12 = m_DQ12
end property
' let 
'Тепловая энергия потребитель 2

'Тепловая энергия потребитель 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ45(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ45&quot;,DQ45,newvalue

   m_DQ45= newValue
end if
end property

'Тепловая энергия потребитель 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ45
public property Get DQ45() as double
 LoadFromDatabase
 AccessTime=Now

   DQ45 = m_DQ45
end property
' let 
'Давление холодной воды

'Давление холодной воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PXB(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PXB&quot;,PXB,newvalue

   m_PXB= newValue
end if
end property

'Давление холодной воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PXB
public property Get PXB() as double
 LoadFromDatabase
 AccessTime=Now

   PXB = m_PXB
end property
' let 
'Расход энергии потребитель 1

'Расход энергии потребитель 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DQ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DQ&quot;,DQ,newvalue

   m_DQ= newValue
end if
end property

'Расход энергии потребитель 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DQ
public property Get DQ() as double
 LoadFromDatabase
 AccessTime=Now

   DQ = m_DQ
end property
' let 
'Нештатная ситуация 1 (ТВ1 или внешняя)

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_1&quot;,HC_1,newvalue

   m_HC_1= newValue
end if
end property

'Нештатная ситуация 1 (ТВ1 или внешняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_1
public property Get HC_1() as String
 LoadFromDatabase
 AccessTime=Now

   HC_1 = m_HC_1
end property
' let 
'Нештатная ситуация 2 (ТВ2 или внутренняя)

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_2&quot;,HC_2,newvalue

   m_HC_2= newValue
end if
end property

'Нештатная ситуация 2 (ТВ2 или внутренняя)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_2
public property Get HC_2() as String
 LoadFromDatabase
 AccessTime=Now

   HC_2 = m_HC_2
end property
' let 
'Температура горячей воды

'Температура горячей воды
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let THOT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;THOT&quot;,THOT,newvalue

   m_THOT= newValue
end if
end property

'Температура горячей воды
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. THOT
public property Get THOT() as double
 LoadFromDatabase
 AccessTime=Now

   THOT = m_THOT
end property
' let 
'DANS1

'DANS1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS1&quot;,DANS1,newvalue

   m_DANS1= newValue
end if
end property

'DANS1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS1
public property Get DANS1() as double
 LoadFromDatabase
 AccessTime=Now

   DANS1 = m_DANS1
end property
' let 
'DANS2

'DANS2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS2&quot;,DANS2,newvalue

   m_DANS2= newValue
end if
end property

'DANS2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS2
public property Get DANS2() as double
 LoadFromDatabase
 AccessTime=Now

   DANS2 = m_DANS2
end property
' let 
'DANS3

'DANS3
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS3(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS3&quot;,DANS3,newvalue

   m_DANS3= newValue
end if
end property

'DANS3
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS3
public property Get DANS3() as double
 LoadFromDatabase
 AccessTime=Now

   DANS3 = m_DANS3
end property
' let 
'DANS4

'DANS4
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS4(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS4&quot;,DANS4,newvalue

   m_DANS4= newValue
end if
end property

'DANS4
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS4
public property Get DANS4() as double
 LoadFromDatabase
 AccessTime=Now

   DANS4 = m_DANS4
end property
' let 
'DANS5

'DANS5
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS5(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS5&quot;,DANS5,newvalue

   m_DANS5= newValue
end if
end property

'DANS5
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS5
public property Get DANS5() as double
 LoadFromDatabase
 AccessTime=Now

   DANS5 = m_DANS5
end property
' let 
'DANS6

'DANS6
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DANS6(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DANS6&quot;,DANS6,newvalue

   m_DANS6= newValue
end if
end property

'DANS6
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DANS6
public property Get DANS6() as double
 LoadFromDatabase
 AccessTime=Now

   DANS6 = m_DANS6
end property
' let 
'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHECK_A(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHECK_A&quot;,CHECK_A,newvalue

   m_CHECK_A= newValue
end if
end property

'Проверка архивных данных на НС (0 - не производилась, 1 - произведена)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CHECK_A
public property Get CHECK_A() as double
 LoadFromDatabase
 AccessTime=Now

   CHECK_A = m_CHECK_A
end property
' let 
'Время безошиб.работы

'Время безошиб.работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OKTIME&quot;,OKTIME,newvalue

   m_OKTIME= newValue
end if
end property

'Время безошиб.работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. OKTIME
public property Get OKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   OKTIME = m_OKTIME
end property
' let 
'Время работы

'Время работы
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WORKTIME(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WORKTIME&quot;,WORKTIME,newvalue

   m_WORKTIME= newValue
end if
end property

'Время работы
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WORKTIME
public property Get WORKTIME() as double
 LoadFromDatabase
 AccessTime=Now

   WORKTIME = m_WORKTIME
end property
' let 
'Температура воздуха канал 1

'Температура воздуха канал 1
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR1&quot;,TAIR1,newvalue

   m_TAIR1= newValue
end if
end property

'Температура воздуха канал 1
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR1
public property Get TAIR1() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR1 = m_TAIR1
end property
' let 
'Температура воздуха канал 2

'Температура воздуха канал 2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TAIR2(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TAIR2&quot;,TAIR2,newvalue

   m_TAIR2= newValue
end if
end property

'Температура воздуха канал 2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TAIR2
public property Get TAIR2() as double
 LoadFromDatabase
 AccessTime=Now

   TAIR2 = m_TAIR2
end property
' let 
'Код нештатной ситуации тепловычислителя

'Код нештатной ситуации тепловычислителя
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let HC_CODE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;HC_CODE&quot;,HC_CODE,newvalue

   m_HC_CODE= newValue
end if
end property

'Код нештатной ситуации тепловычислителя
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. HC_CODE
public property Get HC_CODE() as String
 LoadFromDatabase
 AccessTime=Now

   HC_CODE = m_HC_CODE
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;DCALL&quot;,m_DCALL)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DCOUNTER&quot;,m_DCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;Q1&quot;,m_Q1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2&quot;,m_Q2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T1&quot;,m_T1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T2&quot;,m_T2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT12&quot;,m_DT12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T3&quot;,m_T3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T4&quot;,m_T4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T5&quot;,m_T5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DT45&quot;,m_DT45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;T6&quot;,m_T6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1&quot;,m_V1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2&quot;,m_V2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV12&quot;,m_DV12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V3&quot;,m_V3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4&quot;,m_V4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5&quot;,m_V5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DV45&quot;,m_DV45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V6&quot;,m_V6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M1&quot;,m_M1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M2&quot;,m_M2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM12&quot;,m_DM12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M3&quot;,m_M3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M4&quot;,m_M4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M5&quot;,m_M5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DM45&quot;,m_DM45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;M6&quot;,m_M6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P1&quot;,m_P1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P2&quot;,m_P2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P3&quot;,m_P3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P4&quot;,m_P4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P5&quot;,m_P5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;P6&quot;,m_P6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G1&quot;,m_G1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G2&quot;,m_G2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G3&quot;,m_G3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G4&quot;,m_G4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G5&quot;,m_G5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;G6&quot;,m_G6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCOOL&quot;,m_TCOOL)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE1&quot;,m_TCE1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TCE2&quot;,m_TCE2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM1&quot;,m_TSUM1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TSUM2&quot;,m_TSUM2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q1H&quot;,m_Q1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q2H&quot;,m_Q2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V1H&quot;,m_V1H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V2H&quot;,m_V2H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V4H&quot;,m_V4H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;V5H&quot;,m_V5H)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIME&quot;,m_ERRTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ERRTIMEH&quot;,m_ERRTIMEH)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC&quot;,m_HC)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;SP&quot;,m_SP)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB1&quot;,m_SP_TB1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SP_TB2&quot;,m_SP_TB2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;datetimeCOUNTER&quot;,m_datetimeCOUNTER)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DG12&quot;,m_DG12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DG45&quot;,m_DG45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP12&quot;,m_DP12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DP45&quot;,m_DP45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;UNITSR&quot;,m_UNITSR)
nvi.ValueSize = 24
  set nvi=nv.Add( &quot;Q3&quot;,m_Q3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q4&quot;,m_Q4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PATM&quot;,m_PATM)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Q5&quot;,m_Q5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ12&quot;,m_DQ12)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ45&quot;,m_DQ45)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PXB&quot;,m_PXB)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DQ&quot;,m_DQ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_1&quot;,m_HC_1)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;HC_2&quot;,m_HC_2)
nvi.ValueSize = 360
  set nvi=nv.Add( &quot;THOT&quot;,m_THOT)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS1&quot;,m_DANS1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS2&quot;,m_DANS2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS3&quot;,m_DANS3)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS4&quot;,m_DANS4)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS5&quot;,m_DANS5)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DANS6&quot;,m_DANS6)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;CHECK_A&quot;,m_CHECK_A)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;OKTIME&quot;,m_OKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WORKTIME&quot;,m_WORKTIME)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR1&quot;,m_TAIR1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TAIR2&quot;,m_TAIR2)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;HC_CODE&quot;,m_HC_CODE)
nvi.ValueSize = 360
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; DCALL &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_DCALL=nv.item( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.item( &quot;DCOUNTER&quot;).Value
m_Q1=nv.item( &quot;Q1&quot;).Value
m_Q2=nv.item( &quot;Q2&quot;).Value
m_T1=nv.item( &quot;T1&quot;).Value
m_T2=nv.item( &quot;T2&quot;).Value
m_DT12=nv.item( &quot;DT12&quot;).Value
m_T3=nv.item( &quot;T3&quot;).Value
m_T4=nv.item( &quot;T4&quot;).Value
m_T5=nv.item( &quot;T5&quot;).Value
m_DT45=nv.item( &quot;DT45&quot;).Value
m_T6=nv.item( &quot;T6&quot;).Value
m_V1=nv.item( &quot;V1&quot;).Value
m_V2=nv.item( &quot;V2&quot;).Value
m_DV12=nv.item( &quot;DV12&quot;).Value
m_V3=nv.item( &quot;V3&quot;).Value
m_V4=nv.item( &quot;V4&quot;).Value
m_V5=nv.item( &quot;V5&quot;).Value
m_DV45=nv.item( &quot;DV45&quot;).Value
m_V6=nv.item( &quot;V6&quot;).Value
m_M1=nv.item( &quot;M1&quot;).Value
m_M2=nv.item( &quot;M2&quot;).Value
m_DM12=nv.item( &quot;DM12&quot;).Value
m_M3=nv.item( &quot;M3&quot;).Value
m_M4=nv.item( &quot;M4&quot;).Value
m_M5=nv.item( &quot;M5&quot;).Value
m_DM45=nv.item( &quot;DM45&quot;).Value
m_M6=nv.item( &quot;M6&quot;).Value
m_P1=nv.item( &quot;P1&quot;).Value
m_P2=nv.item( &quot;P2&quot;).Value
m_P3=nv.item( &quot;P3&quot;).Value
m_P4=nv.item( &quot;P4&quot;).Value
m_P5=nv.item( &quot;P5&quot;).Value
m_P6=nv.item( &quot;P6&quot;).Value
m_G1=nv.item( &quot;G1&quot;).Value
m_G2=nv.item( &quot;G2&quot;).Value
m_G3=nv.item( &quot;G3&quot;).Value
m_G4=nv.item( &quot;G4&quot;).Value
m_G5=nv.item( &quot;G5&quot;).Value
m_G6=nv.item( &quot;G6&quot;).Value
m_TCOOL=nv.item( &quot;TCOOL&quot;).Value
m_TCE1=nv.item( &quot;TCE1&quot;).Value
m_TCE2=nv.item( &quot;TCE2&quot;).Value
m_TSUM1=nv.item( &quot;TSUM1&quot;).Value
m_TSUM2=nv.item( &quot;TSUM2&quot;).Value
m_Q1H=nv.item( &quot;Q1H&quot;).Value
m_Q2H=nv.item( &quot;Q2H&quot;).Value
m_V1H=nv.item( &quot;V1H&quot;).Value
m_V2H=nv.item( &quot;V2H&quot;).Value
m_V4H=nv.item( &quot;V4H&quot;).Value
m_V5H=nv.item( &quot;V5H&quot;).Value
m_ERRTIME=nv.item( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.item( &quot;ERRTIMEH&quot;).Value
m_HC=nv.item( &quot;HC&quot;).Value
m_SP=nv.item( &quot;SP&quot;).Value
m_SP_TB1=nv.item( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.item( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.item( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.item( &quot;DG12&quot;).Value
m_DG45=nv.item( &quot;DG45&quot;).Value
m_DP12=nv.item( &quot;DP12&quot;).Value
m_DP45=nv.item( &quot;DP45&quot;).Value
m_UNITSR=nv.item( &quot;UNITSR&quot;).Value
m_Q3=nv.item( &quot;Q3&quot;).Value
m_Q4=nv.item( &quot;Q4&quot;).Value
m_PATM=nv.item( &quot;PATM&quot;).Value
m_Q5=nv.item( &quot;Q5&quot;).Value
m_DQ12=nv.item( &quot;DQ12&quot;).Value
m_DQ45=nv.item( &quot;DQ45&quot;).Value
m_PXB=nv.item( &quot;PXB&quot;).Value
m_DQ=nv.item( &quot;DQ&quot;).Value
m_HC_1=nv.item( &quot;HC_1&quot;).Value
m_HC_2=nv.item( &quot;HC_2&quot;).Value
m_THOT=nv.item( &quot;THOT&quot;).Value
m_DANS1=nv.item( &quot;DANS1&quot;).Value
m_DANS2=nv.item( &quot;DANS2&quot;).Value
m_DANS3=nv.item( &quot;DANS3&quot;).Value
m_DANS4=nv.item( &quot;DANS4&quot;).Value
m_DANS5=nv.item( &quot;DANS5&quot;).Value
m_DANS6=nv.item( &quot;DANS6&quot;).Value
m_CHECK_A=nv.item( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.item( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.item( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.item( &quot;TAIR1&quot;).Value
m_TAIR2=nv.item( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.item( &quot;HC_CODE&quot;).Value
else

m_DCALL=nv.fields( &quot;DCALL&quot;).Value
m_DCOUNTER=nv.fields( &quot;DCOUNTER&quot;).Value
m_Q1=nv.fields( &quot;Q1&quot;).Value
m_Q2=nv.fields( &quot;Q2&quot;).Value
m_T1=nv.fields( &quot;T1&quot;).Value
m_T2=nv.fields( &quot;T2&quot;).Value
m_DT12=nv.fields( &quot;DT12&quot;).Value
m_T3=nv.fields( &quot;T3&quot;).Value
m_T4=nv.fields( &quot;T4&quot;).Value
m_T5=nv.fields( &quot;T5&quot;).Value
m_DT45=nv.fields( &quot;DT45&quot;).Value
m_T6=nv.fields( &quot;T6&quot;).Value
m_V1=nv.fields( &quot;V1&quot;).Value
m_V2=nv.fields( &quot;V2&quot;).Value
m_DV12=nv.fields( &quot;DV12&quot;).Value
m_V3=nv.fields( &quot;V3&quot;).Value
m_V4=nv.fields( &quot;V4&quot;).Value
m_V5=nv.fields( &quot;V5&quot;).Value
m_DV45=nv.fields( &quot;DV45&quot;).Value
m_V6=nv.fields( &quot;V6&quot;).Value
m_M1=nv.fields( &quot;M1&quot;).Value
m_M2=nv.fields( &quot;M2&quot;).Value
m_DM12=nv.fields( &quot;DM12&quot;).Value
m_M3=nv.fields( &quot;M3&quot;).Value
m_M4=nv.fields( &quot;M4&quot;).Value
m_M5=nv.fields( &quot;M5&quot;).Value
m_DM45=nv.fields( &quot;DM45&quot;).Value
m_M6=nv.fields( &quot;M6&quot;).Value
m_P1=nv.fields( &quot;P1&quot;).Value
m_P2=nv.fields( &quot;P2&quot;).Value
m_P3=nv.fields( &quot;P3&quot;).Value
m_P4=nv.fields( &quot;P4&quot;).Value
m_P5=nv.fields( &quot;P5&quot;).Value
m_P6=nv.fields( &quot;P6&quot;).Value
m_G1=nv.fields( &quot;G1&quot;).Value
m_G2=nv.fields( &quot;G2&quot;).Value
m_G3=nv.fields( &quot;G3&quot;).Value
m_G4=nv.fields( &quot;G4&quot;).Value
m_G5=nv.fields( &quot;G5&quot;).Value
m_G6=nv.fields( &quot;G6&quot;).Value
m_TCOOL=nv.fields( &quot;TCOOL&quot;).Value
m_TCE1=nv.fields( &quot;TCE1&quot;).Value
m_TCE2=nv.fields( &quot;TCE2&quot;).Value
m_TSUM1=nv.fields( &quot;TSUM1&quot;).Value
m_TSUM2=nv.fields( &quot;TSUM2&quot;).Value
m_Q1H=nv.fields( &quot;Q1H&quot;).Value
m_Q2H=nv.fields( &quot;Q2H&quot;).Value
m_V1H=nv.fields( &quot;V1H&quot;).Value
m_V2H=nv.fields( &quot;V2H&quot;).Value
m_V4H=nv.fields( &quot;V4H&quot;).Value
m_V5H=nv.fields( &quot;V5H&quot;).Value
m_ERRTIME=nv.fields( &quot;ERRTIME&quot;).Value
m_ERRTIMEH=nv.fields( &quot;ERRTIMEH&quot;).Value
m_HC=nv.fields( &quot;HC&quot;).Value
m_SP=nv.fields( &quot;SP&quot;).Value
m_SP_TB1=nv.fields( &quot;SP_TB1&quot;).Value
m_SP_TB2=nv.fields( &quot;SP_TB2&quot;).Value
m_datetimeCOUNTER=nv.fields( &quot;datetimeCOUNTER&quot;).Value
m_DG12=nv.fields( &quot;DG12&quot;).Value
m_DG45=nv.fields( &quot;DG45&quot;).Value
m_DP12=nv.fields( &quot;DP12&quot;).Value
m_DP45=nv.fields( &quot;DP45&quot;).Value
m_UNITSR=nv.fields( &quot;UNITSR&quot;).Value
m_Q3=nv.fields( &quot;Q3&quot;).Value
m_Q4=nv.fields( &quot;Q4&quot;).Value
m_PATM=nv.fields( &quot;PATM&quot;).Value
m_Q5=nv.fields( &quot;Q5&quot;).Value
m_DQ12=nv.fields( &quot;DQ12&quot;).Value
m_DQ45=nv.fields( &quot;DQ45&quot;).Value
m_PXB=nv.fields( &quot;PXB&quot;).Value
m_DQ=nv.fields( &quot;DQ&quot;).Value
m_HC_1=nv.fields( &quot;HC_1&quot;).Value
m_HC_2=nv.fields( &quot;HC_2&quot;).Value
m_THOT=nv.fields( &quot;THOT&quot;).Value
m_DANS1=nv.fields( &quot;DANS1&quot;).Value
m_DANS2=nv.fields( &quot;DANS2&quot;).Value
m_DANS3=nv.fields( &quot;DANS3&quot;).Value
m_DANS4=nv.fields( &quot;DANS4&quot;).Value
m_DANS5=nv.fields( &quot;DANS5&quot;).Value
m_DANS6=nv.fields( &quot;DANS6&quot;).Value
m_CHECK_A=nv.fields( &quot;CHECK_A&quot;).Value
m_OKTIME=nv.fields( &quot;OKTIME&quot;).Value
m_WORKTIME=nv.fields( &quot;WORKTIME&quot;).Value
m_TAIR1=nv.fields( &quot;TAIR1&quot;).Value
m_TAIR2=nv.fields( &quot;TAIR2&quot;).Value
m_HC_CODE=nv.fields( &quot;HC_CODE&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as DATACURR_T
   set o = new DATACURR_T
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;DATACURR_T.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;DATACURR_T.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;DATACURR_T&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;DATACURR_T.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;DATACURR_T&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;DATACURR_T.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;DATACURR_T.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  DCALL=node.Attributes.getNamedItem(&quot;DCALL&quot;).nodeValue
  DCOUNTER=node.Attributes.getNamedItem(&quot;DCOUNTER&quot;).nodeValue
  Q1=val(Replace(node.Attributes.getNamedItem(&quot;Q1&quot;).nodeValue,vbLf,vbcrlf))
  Q2=val(Replace(node.Attributes.getNamedItem(&quot;Q2&quot;).nodeValue,vbLf,vbcrlf))
  T1=val(Replace(node.Attributes.getNamedItem(&quot;T1&quot;).nodeValue,vbLf,vbcrlf))
  T2=val(Replace(node.Attributes.getNamedItem(&quot;T2&quot;).nodeValue,vbLf,vbcrlf))
  DT12=val(Replace(node.Attributes.getNamedItem(&quot;DT12&quot;).nodeValue,vbLf,vbcrlf))
  T3=val(Replace(node.Attributes.getNamedItem(&quot;T3&quot;).nodeValue,vbLf,vbcrlf))
  T4=val(Replace(node.Attributes.getNamedItem(&quot;T4&quot;).nodeValue,vbLf,vbcrlf))
  T5=val(Replace(node.Attributes.getNamedItem(&quot;T5&quot;).nodeValue,vbLf,vbcrlf))
  DT45=val(Replace(node.Attributes.getNamedItem(&quot;DT45&quot;).nodeValue,vbLf,vbcrlf))
  T6=val(Replace(node.Attributes.getNamedItem(&quot;T6&quot;).nodeValue,vbLf,vbcrlf))
  V1=val(Replace(node.Attributes.getNamedItem(&quot;V1&quot;).nodeValue,vbLf,vbcrlf))
  V2=val(Replace(node.Attributes.getNamedItem(&quot;V2&quot;).nodeValue,vbLf,vbcrlf))
  DV12=val(Replace(node.Attributes.getNamedItem(&quot;DV12&quot;).nodeValue,vbLf,vbcrlf))
  V3=val(Replace(node.Attributes.getNamedItem(&quot;V3&quot;).nodeValue,vbLf,vbcrlf))
  V4=val(Replace(node.Attributes.getNamedItem(&quot;V4&quot;).nodeValue,vbLf,vbcrlf))
  V5=val(Replace(node.Attributes.getNamedItem(&quot;V5&quot;).nodeValue,vbLf,vbcrlf))
  DV45=val(Replace(node.Attributes.getNamedItem(&quot;DV45&quot;).nodeValue,vbLf,vbcrlf))
  V6=val(Replace(node.Attributes.getNamedItem(&quot;V6&quot;).nodeValue,vbLf,vbcrlf))
  M1=val(Replace(node.Attributes.getNamedItem(&quot;M1&quot;).nodeValue,vbLf,vbcrlf))
  M2=val(Replace(node.Attributes.getNamedItem(&quot;M2&quot;).nodeValue,vbLf,vbcrlf))
  DM12=val(Replace(node.Attributes.getNamedItem(&quot;DM12&quot;).nodeValue,vbLf,vbcrlf))
  M3=val(Replace(node.Attributes.getNamedItem(&quot;M3&quot;).nodeValue,vbLf,vbcrlf))
  M4=val(Replace(node.Attributes.getNamedItem(&quot;M4&quot;).nodeValue,vbLf,vbcrlf))
  M5=val(Replace(node.Attributes.getNamedItem(&quot;M5&quot;).nodeValue,vbLf,vbcrlf))
  DM45=val(Replace(node.Attributes.getNamedItem(&quot;DM45&quot;).nodeValue,vbLf,vbcrlf))
  M6=val(Replace(node.Attributes.getNamedItem(&quot;M6&quot;).nodeValue,vbLf,vbcrlf))
  P1=val(Replace(node.Attributes.getNamedItem(&quot;P1&quot;).nodeValue,vbLf,vbcrlf))
  P2=val(Replace(node.Attributes.getNamedItem(&quot;P2&quot;).nodeValue,vbLf,vbcrlf))
  P3=val(Replace(node.Attributes.getNamedItem(&quot;P3&quot;).nodeValue,vbLf,vbcrlf))
  P4=val(Replace(node.Attributes.getNamedItem(&quot;P4&quot;).nodeValue,vbLf,vbcrlf))
  P5=val(Replace(node.Attributes.getNamedItem(&quot;P5&quot;).nodeValue,vbLf,vbcrlf))
  P6=val(Replace(node.Attributes.getNamedItem(&quot;P6&quot;).nodeValue,vbLf,vbcrlf))
  G1=val(Replace(node.Attributes.getNamedItem(&quot;G1&quot;).nodeValue,vbLf,vbcrlf))
  G2=val(Replace(node.Attributes.getNamedItem(&quot;G2&quot;).nodeValue,vbLf,vbcrlf))
  G3=val(Replace(node.Attributes.getNamedItem(&quot;G3&quot;).nodeValue,vbLf,vbcrlf))
  G4=val(Replace(node.Attributes.getNamedItem(&quot;G4&quot;).nodeValue,vbLf,vbcrlf))
  G5=val(Replace(node.Attributes.getNamedItem(&quot;G5&quot;).nodeValue,vbLf,vbcrlf))
  G6=val(Replace(node.Attributes.getNamedItem(&quot;G6&quot;).nodeValue,vbLf,vbcrlf))
  TCOOL=val(Replace(node.Attributes.getNamedItem(&quot;TCOOL&quot;).nodeValue,vbLf,vbcrlf))
  TCE1=val(Replace(node.Attributes.getNamedItem(&quot;TCE1&quot;).nodeValue,vbLf,vbcrlf))
  TCE2=val(Replace(node.Attributes.getNamedItem(&quot;TCE2&quot;).nodeValue,vbLf,vbcrlf))
  TSUM1=val(Replace(node.Attributes.getNamedItem(&quot;TSUM1&quot;).nodeValue,vbLf,vbcrlf))
  TSUM2=val(Replace(node.Attributes.getNamedItem(&quot;TSUM2&quot;).nodeValue,vbLf,vbcrlf))
  Q1H=val(Replace(node.Attributes.getNamedItem(&quot;Q1H&quot;).nodeValue,vbLf,vbcrlf))
  Q2H=val(Replace(node.Attributes.getNamedItem(&quot;Q2H&quot;).nodeValue,vbLf,vbcrlf))
  V1H=val(Replace(node.Attributes.getNamedItem(&quot;V1H&quot;).nodeValue,vbLf,vbcrlf))
  V2H=val(Replace(node.Attributes.getNamedItem(&quot;V2H&quot;).nodeValue,vbLf,vbcrlf))
  V4H=val(Replace(node.Attributes.getNamedItem(&quot;V4H&quot;).nodeValue,vbLf,vbcrlf))
  V5H=val(Replace(node.Attributes.getNamedItem(&quot;V5H&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIME=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIME&quot;).nodeValue,vbLf,vbcrlf))
  ERRTIMEH=val(Replace(node.Attributes.getNamedItem(&quot;ERRTIMEH&quot;).nodeValue,vbLf,vbcrlf))
  HC=Replace(node.Attributes.getNamedItem(&quot;HC&quot;).nodeValue,vbLf,vbcrlf)
  SP=val(Replace(node.Attributes.getNamedItem(&quot;SP&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB1=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB1&quot;).nodeValue,vbLf,vbcrlf))
  SP_TB2=val(Replace(node.Attributes.getNamedItem(&quot;SP_TB2&quot;).nodeValue,vbLf,vbcrlf))
  datetimeCOUNTER=node.Attributes.getNamedItem(&quot;DATETIMECOUNTER&quot;).nodeValue
  DG12=val(Replace(node.Attributes.getNamedItem(&quot;DG12&quot;).nodeValue,vbLf,vbcrlf))
  DG45=val(Replace(node.Attributes.getNamedItem(&quot;DG45&quot;).nodeValue,vbLf,vbcrlf))
  DP12=val(Replace(node.Attributes.getNamedItem(&quot;DP12&quot;).nodeValue,vbLf,vbcrlf))
  DP45=val(Replace(node.Attributes.getNamedItem(&quot;DP45&quot;).nodeValue,vbLf,vbcrlf))
  UNITSR=Replace(node.Attributes.getNamedItem(&quot;UNITSR&quot;).nodeValue,vbLf,vbcrlf)
  Q3=val(Replace(node.Attributes.getNamedItem(&quot;Q3&quot;).nodeValue,vbLf,vbcrlf))
  Q4=val(Replace(node.Attributes.getNamedItem(&quot;Q4&quot;).nodeValue,vbLf,vbcrlf))
  PATM=val(Replace(node.Attributes.getNamedItem(&quot;PATM&quot;).nodeValue,vbLf,vbcrlf))
  Q5=val(Replace(node.Attributes.getNamedItem(&quot;Q5&quot;).nodeValue,vbLf,vbcrlf))
  DQ12=val(Replace(node.Attributes.getNamedItem(&quot;DQ12&quot;).nodeValue,vbLf,vbcrlf))
  DQ45=val(Replace(node.Attributes.getNamedItem(&quot;DQ45&quot;).nodeValue,vbLf,vbcrlf))
  PXB=val(Replace(node.Attributes.getNamedItem(&quot;PXB&quot;).nodeValue,vbLf,vbcrlf))
  DQ=val(Replace(node.Attributes.getNamedItem(&quot;DQ&quot;).nodeValue,vbLf,vbcrlf))
  HC_1=Replace(node.Attributes.getNamedItem(&quot;HC_1&quot;).nodeValue,vbLf,vbcrlf)
  HC_2=Replace(node.Attributes.getNamedItem(&quot;HC_2&quot;).nodeValue,vbLf,vbcrlf)
  THOT=val(Replace(node.Attributes.getNamedItem(&quot;THOT&quot;).nodeValue,vbLf,vbcrlf))
  DANS1=val(Replace(node.Attributes.getNamedItem(&quot;DANS1&quot;).nodeValue,vbLf,vbcrlf))
  DANS2=val(Replace(node.Attributes.getNamedItem(&quot;DANS2&quot;).nodeValue,vbLf,vbcrlf))
  DANS3=val(Replace(node.Attributes.getNamedItem(&quot;DANS3&quot;).nodeValue,vbLf,vbcrlf))
  DANS4=val(Replace(node.Attributes.getNamedItem(&quot;DANS4&quot;).nodeValue,vbLf,vbcrlf))
  DANS5=val(Replace(node.Attributes.getNamedItem(&quot;DANS5&quot;).nodeValue,vbLf,vbcrlf))
  DANS6=val(Replace(node.Attributes.getNamedItem(&quot;DANS6&quot;).nodeValue,vbLf,vbcrlf))
  CHECK_A=val(Replace(node.Attributes.getNamedItem(&quot;CHECK_A&quot;).nodeValue,vbLf,vbcrlf))
  OKTIME=val(Replace(node.Attributes.getNamedItem(&quot;OKTIME&quot;).nodeValue,vbLf,vbcrlf))
  WORKTIME=val(Replace(node.Attributes.getNamedItem(&quot;WORKTIME&quot;).nodeValue,vbLf,vbcrlf))
  TAIR1=val(Replace(node.Attributes.getNamedItem(&quot;TAIR1&quot;).nodeValue,vbLf,vbcrlf))
  TAIR2=val(Replace(node.Attributes.getNamedItem(&quot;TAIR2&quot;).nodeValue,vbLf,vbcrlf))
  HC_CODE=Replace(node.Attributes.getNamedItem(&quot;HC_CODE&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;DCALL&quot;, Cdbl(DCALL)
  node.setAttribute &quot;DCOUNTER&quot;, Cdbl(DCOUNTER)
  node.setAttribute &quot;Q1&quot;, replace(cstr(Q1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2&quot;, replace(cstr(Q2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T1&quot;, replace(cstr(T1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T2&quot;, replace(cstr(T2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT12&quot;, replace(cstr(DT12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T3&quot;, replace(cstr(T3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T4&quot;, replace(cstr(T4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T5&quot;, replace(cstr(T5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DT45&quot;, replace(cstr(DT45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;T6&quot;, replace(cstr(T6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1&quot;, replace(cstr(V1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2&quot;, replace(cstr(V2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV12&quot;, replace(cstr(DV12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V3&quot;, replace(cstr(V3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4&quot;, replace(cstr(V4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5&quot;, replace(cstr(V5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DV45&quot;, replace(cstr(DV45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V6&quot;, replace(cstr(V6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M1&quot;, replace(cstr(M1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M2&quot;, replace(cstr(M2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM12&quot;, replace(cstr(DM12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M3&quot;, replace(cstr(M3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M4&quot;, replace(cstr(M4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M5&quot;, replace(cstr(M5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DM45&quot;, replace(cstr(DM45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;M6&quot;, replace(cstr(M6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P1&quot;, replace(cstr(P1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P2&quot;, replace(cstr(P2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P3&quot;, replace(cstr(P3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P4&quot;, replace(cstr(P4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P5&quot;, replace(cstr(P5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;P6&quot;, replace(cstr(P6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G1&quot;, replace(cstr(G1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G2&quot;, replace(cstr(G2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G3&quot;, replace(cstr(G3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G4&quot;, replace(cstr(G4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G5&quot;, replace(cstr(G5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;G6&quot;, replace(cstr(G6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCOOL&quot;, replace(cstr(TCOOL),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE1&quot;, replace(cstr(TCE1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TCE2&quot;, replace(cstr(TCE2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM1&quot;, replace(cstr(TSUM1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TSUM2&quot;, replace(cstr(TSUM2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q1H&quot;, replace(cstr(Q1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q2H&quot;, replace(cstr(Q2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V1H&quot;, replace(cstr(V1H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V2H&quot;, replace(cstr(V2H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V4H&quot;, replace(cstr(V4H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;V5H&quot;, replace(cstr(V5H),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIME&quot;, replace(cstr(ERRTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ERRTIMEH&quot;, replace(cstr(ERRTIMEH),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC&quot;, HC
  node.setAttribute &quot;SP&quot;, replace(cstr(SP),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB1&quot;, replace(cstr(SP_TB1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SP_TB2&quot;, replace(cstr(SP_TB2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DATETIMECOUNTER&quot;, Cdbl(datetimeCOUNTER)
  node.setAttribute &quot;DG12&quot;, replace(cstr(DG12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DG45&quot;, replace(cstr(DG45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP12&quot;, replace(cstr(DP12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DP45&quot;, replace(cstr(DP45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;UNITSR&quot;, UNITSR
  node.setAttribute &quot;Q3&quot;, replace(cstr(Q3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q4&quot;, replace(cstr(Q4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PATM&quot;, replace(cstr(PATM),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;Q5&quot;, replace(cstr(Q5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ12&quot;, replace(cstr(DQ12),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ45&quot;, replace(cstr(DQ45),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PXB&quot;, replace(cstr(PXB),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DQ&quot;, replace(cstr(DQ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_1&quot;, HC_1
  node.setAttribute &quot;HC_2&quot;, HC_2
  node.setAttribute &quot;THOT&quot;, replace(cstr(THOT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS1&quot;, replace(cstr(DANS1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS2&quot;, replace(cstr(DANS2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS3&quot;, replace(cstr(DANS3),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS4&quot;, replace(cstr(DANS4),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS5&quot;, replace(cstr(DANS5),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DANS6&quot;, replace(cstr(DANS6),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;CHECK_A&quot;, replace(cstr(CHECK_A),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;OKTIME&quot;, replace(cstr(OKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WORKTIME&quot;, replace(cstr(WORKTIME),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR1&quot;, replace(cstr(TAIR1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TAIR2&quot;, replace(cstr(TAIR2),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;HC_CODE&quot;, HC_CODE
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;DATACURR_T&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;DATACURR_T&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;DATACURR_T&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;DATACURR_T&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="DATACURR_T_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Суммарные показатели
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;DATACURR_T&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;DATACURR_T.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as  DATACURR_T
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  DATACURR_T
 dim LID as  string
 dim o as  DATACURR_T
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  DATACURR_T
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as DATACURR_T
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as DATACURR_T
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as DATACURR_T
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as DATACURR_T
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as DATACURR_T
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as DATACURR_T
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса DATACURR_T
'  ,или Nothing
'See Also:
'Example:
' dim variable as DATACURR_T
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as DATACURR_T
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  DATACURR_T
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;DATACURR_T.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As DATACURR_T
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As DATACURR_T
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!DATACURR_TID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as DATACURR_T
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;DATACURR_T_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;DATACURR_T&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as DATACURR_T
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;DATACURR_T&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Дата опроса&quot;, 0, 0, &quot;DCALL&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата счетчика&quot;, 0, 0, &quot;DCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1&quot;, 0, 0, &quot;Q1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2&quot;, 0, 0, &quot;Q2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 1&quot;, 0, 0, &quot;T1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 2&quot;, 0, 0, &quot;T2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 1 и 2&quot;, 0, 0, &quot;DT12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 3&quot;, 0, 0, &quot;T3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 4&quot;, 0, 0, &quot;T4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 5&quot;, 0, 0, &quot;T5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность Температур по каналу 4 и 5&quot;, 0, 0, &quot;DT45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура по каналу 6&quot;, 0, 0, &quot;T6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1&quot;, 0, 0, &quot;V1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2&quot;, 0, 0, &quot;V2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 1 (расход ГВС)&quot;, 0, 0, &quot;DV12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 3&quot;, 0, 0, &quot;V3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4&quot;, 0, 0, &quot;V4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5&quot;, 0, 0, &quot;V5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность объемов канал 2&quot;, 0, 0, &quot;DV45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 6&quot;, 0, 0, &quot;V6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 1&quot;, 0, 0, &quot;M1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 2&quot;, 0, 0, &quot;M2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 1 (расход ГВС)&quot;, 0, 0, &quot;DM12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 3&quot;, 0, 0, &quot;M3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 4&quot;, 0, 0, &quot;M4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 5&quot;, 0, 0, &quot;M5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разность масс канал 2&quot;, 0, 0, &quot;DM45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Масса воды по каналу 6&quot;, 0, 0, &quot;M6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 1&quot;, 0, 0, &quot;P1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 2&quot;, 0, 0, &quot;P2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 3&quot;, 0, 0, &quot;P3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 4&quot;, 0, 0, &quot;P4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 5&quot;, 0, 0, &quot;P5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление в трубопроводе 6&quot;, 0, 0, &quot;P6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 1&quot;, 0, 0, &quot;G1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 2&quot;, 0, 0, &quot;G2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 3&quot;, 0, 0, &quot;G3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 4&quot;, 0, 0, &quot;G4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 5&quot;, 0, 0, &quot;G5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Текущее значение расхода в трубопроводе 6&quot;, 0, 0, &quot;G6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодной воды&quot;, 0, 0, &quot;TCOOL&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 1&quot;, 0, 0, &quot;TCE1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура холодного конца канал 2&quot;, 0, 0, &quot;TCE2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB1&quot;, 0, 0, &quot;TSUM1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тотальное время счета TB2&quot;, 0, 0, &quot;TSUM2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 1 нарастающим итогом&quot;, 0, 0, &quot;Q1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 2 нарастающим итогом&quot;, 0, 0, &quot;Q2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 1 нарастающим итогом&quot;, 0, 0, &quot;V1H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 2 нарастающим итогом&quot;, 0, 0, &quot;V2H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 4 нарастающим итогом&quot;, 0, 0, &quot;V4H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Объемный расход воды по каналу 5 нарастающим итогом&quot;, 0, 0, &quot;V5H&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии&quot;, 0, 0, &quot;ERRTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время аварии нарастающим итогом&quot;, 0, 0, &quot;ERRTIMEH&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатные ситуации общ&quot;, 0, 0, &quot;HC&quot;).SortType =1
  YGrid.Columns.Add(&quot;Схема потребления&quot;, 0, 0, &quot;SP&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB1&quot;, 0, 0, &quot;SP_TB1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Схема потребления TB2&quot;, 0, 0, &quot;SP_TB2&quot;).SortType =2
  YGrid.Columns.Add(&quot;datetimeCOUNTER&quot;, 0, 0, &quot;datetimeCOUNTER&quot;).SortType =4
  YGrid.Columns.Add(&quot;G1-G2&quot;, 0, 0, &quot;DG12&quot;).SortType =2
  YGrid.Columns.Add(&quot;G4-G5&quot;, 0, 0, &quot;DG45&quot;).SortType =2
  YGrid.Columns.Add(&quot;P1-P2&quot;, 0, 0, &quot;DP12&quot;).SortType =2
  YGrid.Columns.Add(&quot;P4-P5&quot;, 0, 0, &quot;DP45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Единицы измерения расхода&quot;, 0, 0, &quot;UNITSR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тепловая энергия канал 3&quot;, 0, 0, &quot;Q3&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 4&quot;, 0, 0, &quot;Q4&quot;).SortType =2
  YGrid.Columns.Add(&quot;Атмосферное давление&quot;, 0, 0, &quot;PATM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия канал 5&quot;, 0, 0, &quot;Q5&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 1&quot;, 0, 0, &quot;DQ12&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тепловая энергия потребитель 2&quot;, 0, 0, &quot;DQ45&quot;).SortType =2
  YGrid.Columns.Add(&quot;Давление холодной воды&quot;, 0, 0, &quot;PXB&quot;).SortType =2
  YGrid.Columns.Add(&quot;Расход энергии потребитель 1&quot;, 0, 0, &quot;DQ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Нештатная ситуация 1 (ТВ1 или внешняя)&quot;, 0, 0, &quot;HC_1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Нештатная ситуация 2 (ТВ2 или внутренняя)&quot;, 0, 0, &quot;HC_2&quot;).SortType =1
  YGrid.Columns.Add(&quot;Температура горячей воды&quot;, 0, 0, &quot;THOT&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS1&quot;, 0, 0, &quot;DANS1&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS2&quot;, 0, 0, &quot;DANS2&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS3&quot;, 0, 0, &quot;DANS3&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS4&quot;, 0, 0, &quot;DANS4&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS5&quot;, 0, 0, &quot;DANS5&quot;).SortType =2
  YGrid.Columns.Add(&quot;DANS6&quot;, 0, 0, &quot;DANS6&quot;).SortType =2
  YGrid.Columns.Add(&quot;Проверка архивных данных на НС (0 - не производилась, 1 - произведена)&quot;, 0, 0, &quot;CHECK_A&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время безошиб.работы&quot;, 0, 0, &quot;OKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Время работы&quot;, 0, 0, &quot;WORKTIME&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 1&quot;, 0, 0, &quot;TAIR1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Температура воздуха канал 2&quot;, 0, 0, &quot;TAIR2&quot;).SortType =2
  YGrid.Columns.Add(&quot;Код нештатной ситуации тепловычислителя&quot;, 0, 0, &quot;HC_CODE&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as DATACURR_T
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.DCALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.DCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Q1, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Q2, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.T1, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.T2, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.DT12, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.T3, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.T4, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.T5, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.DT45, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.T6, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.V1, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.V2, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.DV12, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.V3, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.V4, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.V5, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.DV45, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.V6, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.M1, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.M2, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.DM12, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.M3, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.M4, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.M5, vbCrLf, &quot; &quot;), 255)
    Values.Value(27) = Left(Replace(obj.DM45, vbCrLf, &quot; &quot;), 255)
    Values.Value(28) = Left(Replace(obj.M6, vbCrLf, &quot; &quot;), 255)
    Values.Value(29) = Left(Replace(obj.P1, vbCrLf, &quot; &quot;), 255)
    Values.Value(30) = Left(Replace(obj.P2, vbCrLf, &quot; &quot;), 255)
    Values.Value(31) = Left(Replace(obj.P3, vbCrLf, &quot; &quot;), 255)
    Values.Value(32) = Left(Replace(obj.P4, vbCrLf, &quot; &quot;), 255)
    Values.Value(33) = Left(Replace(obj.P5, vbCrLf, &quot; &quot;), 255)
    Values.Value(34) = Left(Replace(obj.P6, vbCrLf, &quot; &quot;), 255)
    Values.Value(35) = Left(Replace(obj.G1, vbCrLf, &quot; &quot;), 255)
    Values.Value(36) = Left(Replace(obj.G2, vbCrLf, &quot; &quot;), 255)
    Values.Value(37) = Left(Replace(obj.G3, vbCrLf, &quot; &quot;), 255)
    Values.Value(38) = Left(Replace(obj.G4, vbCrLf, &quot; &quot;), 255)
    Values.Value(39) = Left(Replace(obj.G5, vbCrLf, &quot; &quot;), 255)
    Values.Value(40) = Left(Replace(obj.G6, vbCrLf, &quot; &quot;), 255)
    Values.Value(41) = Left(Replace(obj.TCOOL, vbCrLf, &quot; &quot;), 255)
    Values.Value(42) = Left(Replace(obj.TCE1, vbCrLf, &quot; &quot;), 255)
    Values.Value(43) = Left(Replace(obj.TCE2, vbCrLf, &quot; &quot;), 255)
    Values.Value(44) = Left(Replace(obj.TSUM1, vbCrLf, &quot; &quot;), 255)
    Values.Value(45) = Left(Replace(obj.TSUM2, vbCrLf, &quot; &quot;), 255)
    Values.Value(46) = Left(Replace(obj.Q1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(47) = Left(Replace(obj.Q2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(48) = Left(Replace(obj.V1H, vbCrLf, &quot; &quot;), 255)
    Values.Value(49) = Left(Replace(obj.V2H, vbCrLf, &quot; &quot;), 255)
    Values.Value(50) = Left(Replace(obj.V4H, vbCrLf, &quot; &quot;), 255)
    Values.Value(51) = Left(Replace(obj.V5H, vbCrLf, &quot; &quot;), 255)
    Values.Value(52) = Left(Replace(obj.ERRTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(53) = Left(Replace(obj.ERRTIMEH, vbCrLf, &quot; &quot;), 255)
    Values.Value(54) = Left(Replace(obj.HC, vbCrLf, &quot; &quot;), 255)
    Values.Value(55) = Left(Replace(obj.SP, vbCrLf, &quot; &quot;), 255)
    Values.Value(56) = Left(Replace(obj.SP_TB1, vbCrLf, &quot; &quot;), 255)
    Values.Value(57) = Left(Replace(obj.SP_TB2, vbCrLf, &quot; &quot;), 255)
    Values.Value(58) = Left(Replace(obj.datetimeCOUNTER, vbCrLf, &quot; &quot;), 255)
    Values.Value(59) = Left(Replace(obj.DG12, vbCrLf, &quot; &quot;), 255)
    Values.Value(60) = Left(Replace(obj.DG45, vbCrLf, &quot; &quot;), 255)
    Values.Value(61) = Left(Replace(obj.DP12, vbCrLf, &quot; &quot;), 255)
    Values.Value(62) = Left(Replace(obj.DP45, vbCrLf, &quot; &quot;), 255)
    Values.Value(63) = Left(Replace(obj.UNITSR, vbCrLf, &quot; &quot;), 255)
    Values.Value(64) = Left(Replace(obj.Q3, vbCrLf, &quot; &quot;), 255)
    Values.Value(65) = Left(Replace(obj.Q4, vbCrLf, &quot; &quot;), 255)
    Values.Value(66) = Left(Replace(obj.PATM, vbCrLf, &quot; &quot;), 255)
    Values.Value(67) = Left(Replace(obj.Q5, vbCrLf, &quot; &quot;), 255)
    Values.Value(68) = Left(Replace(obj.DQ12, vbCrLf, &quot; &quot;), 255)
    Values.Value(69) = Left(Replace(obj.DQ45, vbCrLf, &quot; &quot;), 255)
    Values.Value(70) = Left(Replace(obj.PXB, vbCrLf, &quot; &quot;), 255)
    Values.Value(71) = Left(Replace(obj.DQ, vbCrLf, &quot; &quot;), 255)
    Values.Value(72) = Left(Replace(obj.HC_1, vbCrLf, &quot; &quot;), 255)
    Values.Value(73) = Left(Replace(obj.HC_2, vbCrLf, &quot; &quot;), 255)
    Values.Value(74) = Left(Replace(obj.THOT, vbCrLf, &quot; &quot;), 255)
    Values.Value(75) = Left(Replace(obj.DANS1, vbCrLf, &quot; &quot;), 255)
    Values.Value(76) = Left(Replace(obj.DANS2, vbCrLf, &quot; &quot;), 255)
    Values.Value(77) = Left(Replace(obj.DANS3, vbCrLf, &quot; &quot;), 255)
    Values.Value(78) = Left(Replace(obj.DANS4, vbCrLf, &quot; &quot;), 255)
    Values.Value(79) = Left(Replace(obj.DANS5, vbCrLf, &quot; &quot;), 255)
    Values.Value(80) = Left(Replace(obj.DANS6, vbCrLf, &quot; &quot;), 255)
    Values.Value(81) = Left(Replace(obj.CHECK_A, vbCrLf, &quot; &quot;), 255)
    Values.Value(82) = Left(Replace(obj.OKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(83) = Left(Replace(obj.WORKTIME, vbCrLf, &quot; &quot;), 255)
    Values.Value(84) = Left(Replace(obj.TAIR1, vbCrLf, &quot; &quot;), 255)
    Values.Value(85) = Left(Replace(obj.TAIR2, vbCrLf, &quot; &quot;), 255)
    Values.Value(86) = Left(Replace(obj.HC_CODE, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;DATACURR_T&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
