<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="dll"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221}"/><AttributeHolder Name="Name" Value="t_BDEVICES"/><AttributeHolder Name="Description" Value="Опрашиваемое устройство"/><ModuleHolder ModuleName="Application" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="multiuse"/><BlockHolder BlockName="'description" BlockCode="'корневой интерфейс документа (Опрашиваемое устройство)
private m_Logger as MTZUtil.Logger
private m_MTZSession as MTZSession.Session
private m_Manager as MTZManager.Main
Private findCash As Collection
private m_ID as string
private m_SecureStyleID as string
private m_StatusID as string
private m_Name as string
private const m_TypeName as string=&quot;t_BDEVICES&quot;
private m_WorkOffline as boolean
private m_AutoLoadPart as boolean


enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
enum enumPCB_FileType'Тип файла
  PCB_FileType_Proekt_PP=0'Проект ПП
  PCB_FileType_HZ=1'ХЗ
end enum 
enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
enum enumtypeFace'Физическое лицо \ Юрифическое лицо
  typeFace_FizLico=0'ФизЛицо
  typeFace_UrLico=1'ЮрЛицо
end enum 
enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Element_oformleniy=5'Элемент оформления
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
end enum 
enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
enum enumtypePackage'Тип отправления
  typePackage_Vse=-1'Все
  typePackage_Tovar=1'Товар
  typePackage_Dokumenti=0'Документы
end enum 
enum enumPCB_HoleType'Тип отверстия
  PCB_HoleType_Gluhoe=2'Глухое
  PCB_HoleType_Metalizirovannoe=0'Метализированное
  PCB_HoleType_Nemetallizirovannoe=1'Неметаллизированное
end enum 
enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
enum enumTypeSempling'Тип выборки
  TypeSempling_Klienti=-1'Клиенты
  TypeSempling_Adresati_operatorov=0'Адресаты операторов
  TypeSempling_Spisok_adresov_SPb=2'Список адресов СПб
  TypeSempling_Spisok_adresatov=1'Список адресатов
end enum 
enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
enum enumDeliveryOn'
  DeliveryOn_Gorod=4'Город
  DeliveryOn_Strana=1'Страна
  DeliveryOn_Megdunarodnay=0'Международная
  DeliveryOn_Strana2=2'Страна2
  DeliveryOn_Sub_ekt=3'Субъект
end enum 
enum enumtypeOperatorSystem'
  typeOperatorSystem_Menedger=2'Менеджер
  typeOperatorSystem_Procee=0'Прочее
  typeOperatorSystem_Operator=1'Оператор
end enum 
enum enumstateNomen'
  stateNomen_Pereadresaciy=6'Переадресация
  stateNomen_Oformlyetsy=0'Оформляется
  stateNomen_Dostavleno=4'Доставлено
  stateNomen_V_processe=3'В процессе
  stateNomen_Vozvrat=5'Возврат
  stateNomen_Prinyto=2'Принято
end enum 
enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_cls__=0'cls__
  FolderType_Kalendar_=5'Календарь
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
enum enummsgState'Состояние заявки
  msgState_Sostoynie_zayvki=0'Состояние заявки
  msgState_Soobseno_abonentu=1'Сообщено абоненту
  msgState_Abonent_ne_otvetil=2'Абонент не ответил
  msgState_Promegutocniy_otvet=3'Промежуточный ответ
end enum 
enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Na_istocnik_dannih=3'На источник данных
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
enum enumtypeOrder'
  typeOrder_Bezadresniy_zakaz=0'Безадресный заказ
  typeOrder_Adresniy_zakaz=1'Адресный заказ
end enum 
enum enummsgResult'Результат
  msgResult_Vipolneno=2'Выполнено
  msgResult_V_rabote=1'В работе
  msgResult_Rezul_tat=0'Результат
end enum 
enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
enum enumtypeDocOrder'Тип документов для печати заказчику
  typeDocOrder_Nalicniy_OPNPKO_PLS_kasDOTcekCLS=1'Наличный (ПКО + кас.чек)
  typeDocOrder_Nalicniy_OPNtovarniy_cek_PLS_kasDOTcekCLS=0'Наличный (товарный чек + кас.чек)
  typeDocOrder_Beznalicniy_rascet=3'Безналичный расчет
end enum 
enum enumPCB_LayerP'Представление поля
  PCB_LayerP_Negativ=2'Негатив
  PCB_LayerP_Ne_imeet_znaceniy=0'Не имеет значения
  PCB_LayerP_Pozitiv=1'Позитив
end enum 
enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
enum enumPartType'PartType
  PartType_Rassirenie=3'Расширение
  PartType_Kollekciy=1'Коллекция
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
  PartType_Rassirenie_s_dannimi=4'Расширение с данными
end enum 
enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
enum enumtypeClient'Тип заказчика
  typeClient_Razoviy=0'Разовый
end enum 
enum enumtypeNomen'Тип номенкатуры
  typeNomen_Listovki=2'Листовки
  typeNomen_Tovar=1'Товар
  typeNomen_GazetiCOMA_gurnaliCOMA_brosuri=4'Газеты, журналы, брошюры
  typeNomen_Pis_mo=3'Письмо
  typeNomen_Dokument=0'Документ
end enum 
enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
enum enumtypePersonPay'
  typePersonPay_Otpravitel_=0'Отправитель
  typePersonPay_Polucatel_=1'Получатель
end enum 
enum enumJournalLinkType'Для связи журналов друг с другом
  JournalLinkType_Ssilka_na_stroku=2'Ссылка на строку
  JournalLinkType_Ssilka_na_ob_ekt=1'Ссылка на объект
  JournalLinkType_Svyzka_InstanceID_OPNv_peredlah_ob_ektaCLS=3'Связка InstanceID (в передлах объекта)
  JournalLinkType_Svyzka_ParentStructRowID__OPNv_peredlah_ob_ektaCLS=4'Связка ParentStructRowID  (в передлах объекта)
  JournalLinkType_Net=0'Нет
end enum 
enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
enum enumtypePay'Сдельная \ Ставка
  typePay_Stavka=1'Ставка
  typePay_Sdel_nay=0'Сдельная
end enum 
enum enumPCB_TaskType'Тип задачи
  PCB_TaskType_Dostavka=4'Доставка
  PCB_TaskType_Izgotovlenie_PP=1'Изготовление ПП
  PCB_TaskType_Postavka_komplektuusih=2'Поставка комплектующих
  PCB_TaskType_Montag_PP=0'Монтаж ПП
  PCB_TaskType_Proektirovanie_PP=3'Проектирование ПП
end enum 
enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
enum enumtypeReceiv'
  typeReceiv_PTS=1'ПТС
  typeReceiv_SVS=0'СВС
end enum 
enum enumPCB_CustomerType'Статус заказчика
  PCB_CustomerType_Real_niy=1'Реальный
  PCB_CustomerType_Potencial_niy=0'Потенциальный
end enum 
enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
enum enumtypeRowCheque'Тип строки чека
  typeRowCheque_PO=1'ПО
  typeRowCheque_Procee=0'Прочее
  typeRowCheque_Prostoe_PO=4'Простое ПО
  typeRowCheque_dopDOTusluga_PO=2'доп.услуга ПО
  typeRowCheque_dopDOTusluga_zakaza=3'доп.услуга заказа
  typeRowCheque_Tovar=5'Товар
end enum 
enum enumPCB_clear'Тип задачи
  PCB_clear_Zadaca_1=1'Задача 1
  PCB_clear_Zadaca_2=0'Задача 2
end enum 
enum enumtypeTariff'
  typeTariff_Usluga=1'Услуга
  typeTariff_Dostavka=0'Доставка
end enum 
enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
enum enumtypeTRF'Тип тарифа СС
  typeTRF_Tarif_podrydcika=0'Тариф подрядчика
  typeTRF_Tarif_klienta=1'Тариф клиента
  typeTRF_Obsiy_tarif=-1'Общий тариф
end enum 
enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
enum enumtypeCourier'Договор \ ТрудКнижка
  typeCourier_Trudovay_knigka=1'Трудовая книжка
  typeCourier_Dogovor_podryda=0'Договор подряда
end enum 
enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 
private m_BDEVICES as BDEVICES_col
private m_BMODEMS as BMODEMS_col
private m_CHARTSETTINGS as CHARTSETTINGS_col
private m_VALUEBOUNDS as VALUEBOUNDS_col
private m_CONTRACT as CONTRACT_col
private m_PLANCALL as PLANCALL_col
private m_SETUPHAN as SETUPHAN_col
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="


'Название типа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TypeName
public property get TypeName() as string
  TypeName = m_TypeName
end property


'Отладочный компонент
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZUtil.Logger
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZUtil.Logger
' Set variable = me. Logger
public property get Logger() as MTZUtil.Logger
  if m_Logger is nothing then
    set m_Logger = new MTZUtil.Logger
    m_Logger.CreateLog TypeName &amp; &quot;_&quot; &amp; ID ,TypeName
  end if
  set Logger = m_Logger
end property


'Получить Название документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Name
public property get Name() as string
  Name = m_Name
end property


'Задать название документа
'Parameters:
'[IN][OUT]  n , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Name = value
public property Let Name(n as string)
  m_Name = n
end property


'Получить корневой объект системы - менеджер документов
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZManager.Main
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZManager.Main
' Set variable = me. Manager
public property get Manager() as MTZManager.Main
  set Manager = m_Manager
end property


'Задать менеджер документов
'Parameters:
'[IN][OUT]  m , тип параметра: MTZManager.Main  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Manager = value
public property Set Manager(m as MTZManager.Main)
  if not m_Manager is nothing then exit property
  set m_Manager = m
  Logger.Message &quot;Manager defined&quot;
end property


'Получить текущую сессию пользователя
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZSession.Session
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZSession.Session
' Set variable = me. MTZSession
public property get MTZSession() as MTZSession.Session
  set MTZSession = m_MTZSession
end property


'Задть текущую сессию пользователя
'Parameters:
'[IN][OUT]  m , тип параметра: MTZSession.Session  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. MTZSession = value
public property Set MTZSession(m as MTZSession.Session)
  if not m_MTZSession is nothing then exit property
  set m_MTZSession = m
  Logger.Message &quot;Session defined&quot;
  m_AutoLoadPart=true
end property


'Признак - работа без соединения с базой
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. WorkOffline
public property Get WorkOffline() as boolean
    WorkOffline = m_WorkOffline
end property


'Получить значение признака работы без соединения
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. WorkOffline = value
public property Let WorkOffline(v as boolean)
  if MTZSession is nothing then 
    m_WorkOffline = false
  else 
    m_WorkOffline = v
  end if 
end property


'Получить признак автоматической загрузки всеех полей
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. AutoLoadPart
public property Get AutoLoadPart() as boolean
    AutoLoadPart = m_AutoLoadPart
end property


'Признак загрузки всех полей (не только идентификатора)
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AutoLoadPart = value
public property Let AutoLoadPart(v as boolean)
    m_AutoLoadPart = v
end property


'Идентификатор документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  ID = m_ID
end property


'Задать идентификатор документа
'Parameters:
'[IN][OUT]  v , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
public property Let ID(v as string)
  m_ID=v
end property


'Родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = nothing
end property


'Корневой объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = me
end property


'Добавить в оптимизтор поиска строку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string, 
'[IN]   Item , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.AddToCash({параметры})
public Sub AddToCash( byval Key as string, byval Item as Object)
  on error resume next
  findCash.Add Item,Key
end sub


'Исключить из оптимизатора сторку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string  - ...
'See Also:
'Example:
'  call me.RemoveFromCash({параметры})
public Sub RemoveFromCash( byval Key as string)
  on error resume next
  findCash.Remove Key
end sub

'Задать идентификатор стиля защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
public property let SecureStyleID(byval newID as string)
  Secure newID
  GetStatus
end property

'Получить идентификатор стиля защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  GetStatus
  SecureStyleID = m_SecureStyleID
end property

'Задать идентификатор сосотяния документа
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. StatusID = value
public property let StatusID(byval newID as string)
    SetStatus newID
    GetStatus
end property

'Получить идентификатор состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusID
public property Get StatusID() as string
  GetStatus
  StatusID = m_StatusID
end property

'Получить название состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusName
public property Get StatusName() as string
  GetStatus
  StatusName=&quot;&quot;
end property

'Даные раздела Подключенные к узлу устройства
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса BDEVICES_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES_col
' Set variable = me. BDEVICES (...параметры...)
public property Get BDEVICES (optional byval Refresh as boolean = true) as BDEVICES_col
 if m_BDEVICES is nothing then
   set  m_BDEVICES = new BDEVICES_col
   set m_BDEVICES.Parent = me
   set m_BDEVICES.Application = me.Application
   if Refresh then m_BDEVICES.Refresh
 end if
 set  BDEVICES = m_BDEVICES
end property

'Даные раздела Модемы в узлах учета
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса BMODEMS_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS_col
' Set variable = me. BMODEMS (...параметры...)
public property Get BMODEMS (optional byval Refresh as boolean = true) as BMODEMS_col
 if m_BMODEMS is nothing then
   set  m_BMODEMS = new BMODEMS_col
   set m_BMODEMS.Parent = me
   set m_BMODEMS.Application = me.Application
   if Refresh then m_BMODEMS.Refresh
 end if
 set  BMODEMS = m_BMODEMS
end property

'Даные раздела Настройки графиков
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса CHARTSETTINGS_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS_col
' Set variable = me. CHARTSETTINGS (...параметры...)
public property Get CHARTSETTINGS (optional byval Refresh as boolean = true) as CHARTSETTINGS_col
 if m_CHARTSETTINGS is nothing then
   set  m_CHARTSETTINGS = new CHARTSETTINGS_col
   set m_CHARTSETTINGS.Parent = me
   set m_CHARTSETTINGS.Application = me.Application
   if Refresh then m_CHARTSETTINGS.Refresh
 end if
 set  CHARTSETTINGS = m_CHARTSETTINGS
end property

'Даные раздела Граничные значения проверяемых параметров
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса VALUEBOUNDS_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS_col
' Set variable = me. VALUEBOUNDS (...параметры...)
public property Get VALUEBOUNDS (optional byval Refresh as boolean = true) as VALUEBOUNDS_col
 if m_VALUEBOUNDS is nothing then
   set  m_VALUEBOUNDS = new VALUEBOUNDS_col
   set m_VALUEBOUNDS.Parent = me
   set m_VALUEBOUNDS.Application = me.Application
   if Refresh then m_VALUEBOUNDS.Refresh
 end if
 set  VALUEBOUNDS = m_VALUEBOUNDS
end property

'Даные раздела Договорные установки
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса CONTRACT_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT_col
' Set variable = me. CONTRACT (...параметры...)
public property Get CONTRACT (optional byval Refresh as boolean = true) as CONTRACT_col
 if m_CONTRACT is nothing then
   set  m_CONTRACT = new CONTRACT_col
   set m_CONTRACT.Parent = me
   set m_CONTRACT.Application = me.Application
   if Refresh then m_CONTRACT.Refresh
 end if
 set  CONTRACT = m_CONTRACT
end property

'Даные раздела План опроса устройств
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PLANCALL_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL_col
' Set variable = me. PLANCALL (...параметры...)
public property Get PLANCALL (optional byval Refresh as boolean = true) as PLANCALL_col
 if m_PLANCALL is nothing then
   set  m_PLANCALL = new PLANCALL_col
   set m_PLANCALL.Parent = me
   set m_PLANCALL.Application = me.Application
   if Refresh then m_PLANCALL.Refresh
 end if
 set  PLANCALL = m_PLANCALL
end property

'Даные раздела Настройки ручного опроса
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса SETUPHAN_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN_col
' Set variable = me. SETUPHAN (...параметры...)
public property Get SETUPHAN (optional byval Refresh as boolean = true) as SETUPHAN_col
 if m_SETUPHAN is nothing then
   set  m_SETUPHAN = new SETUPHAN_col
   set m_SETUPHAN.Parent = me
   set m_SETUPHAN.Application = me.Application
   if Refresh then m_SETUPHAN.Refresh
 end if
 set  SETUPHAN = m_SETUPHAN
end property

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public sub CloseClass()
 on error resume next
 Set findCash = Nothing

  if not m_BDEVICES is nothing then 
    m_BDEVICES.CloseClass 
    set m_BDEVICES = nothing 
  end if
  if not m_BMODEMS is nothing then 
    m_BMODEMS.CloseClass 
    set m_BMODEMS = nothing 
  end if
  if not m_CHARTSETTINGS is nothing then 
    m_CHARTSETTINGS.CloseClass 
    set m_CHARTSETTINGS = nothing 
  end if
  if not m_VALUEBOUNDS is nothing then 
    m_VALUEBOUNDS.CloseClass 
    set m_VALUEBOUNDS = nothing 
  end if
  if not m_CONTRACT is nothing then 
    m_CONTRACT.CloseClass 
    set m_CONTRACT = nothing 
  end if
  if not m_PLANCALL is nothing then 
    m_PLANCALL.CloseClass 
    set m_PLANCALL = nothing 
  end if
  if not m_SETUPHAN is nothing then 
    m_SETUPHAN.CloseClass 
    set m_SETUPHAN = nothing 
  end if
  if not m_manager is nothing then
    set m_manager = nothing
  end if
  if not m_MTZSession is nothing then
    set m_MTZSession = nothing
  end if
  if not m_Logger is nothing then
    m_Logger.Message &quot;Application.CloseClass&quot; 
    set m_Logger = nothing
  end if
end sub

'Поиск  строки раздела по ключу и названию раздела во всех документах
'Parameters:
'[IN]   StrID , тип параметра: String, 
'[IN]   RowID , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as Object
' Set variable = me.FindRowObject(...параметры...)
Public Function FindRowObject(ByVal StrID As String, ByVal RowID As String) As Object
  Dim obj As Object
  Dim Rowobj As Object
  Dim i As Long
Dim m_FindObject As Object

If StrID = &quot;&quot; Then Exit Function
If RowID = &quot;&quot; Then Exit Function
If findCash Is Nothing Then
 Set findCash = New Collection
End If
On Error Resume Next
Set m_FindObject = findCash.Item(StrID &amp; RowID)
If Not m_FindObject Is Nothing Then
  If m_FindObject.Application Is Nothing Then
    Set m_FindObject = Nothing
    findCash.Remove StrID &amp; RowID
  Else
   Set FindRowObject = m_FindObject
   Exit Function
  End If
End If

  Dim rpl As RowParentList
  Set rpl = MTZSession.TheFinder.RowParents(StrID, RowID)
  If rpl.Count &gt; 0 Then

 If rpl.Item(1).RowID = ID Then
    Set Rowobj = Me
    For i = 2 To rpl.Count
     Set Rowobj = Rowobj.FindObject(rpl.Item(i).PartName, rpl.Item(i).RowID)
    Next

' reference from another object
 Else
   Set obj = Manager.GetInstanceObject(rpl.Item(1).RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindRowObject(StrID, RowID)
 End If

  Else
' use old search style
 Set Rowobj = FindObject(StrID, RowID)
 If Rowobj Is Nothing Then
   Set obj = Manager.FindInstanceByRow(StrID, RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindObject(StrID, RowID)
 End If
  End If
  If Rowobj Is Nothing Then Exit Function
  Set FindRowObject = Rowobj
  Set Rowobj = Nothing
  Set obj = Nothing
End Function


'Поиск строки только в текщем документе
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
  If findCash Is Nothing Then
  Set findCash = New Collection
 End If
 On Error Resume Next
 Set m_FindObject = findCash.item(StrID &amp; InstID)
 if  not m_FindObject is nothing then
   if  m_FindObject.application is nothing then
     set m_FindObject = nothing
     findCash.remove StrID &amp; InstID
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  BDEVICES.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  BMODEMS.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  CHARTSETTINGS.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  VALUEBOUNDS.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  CONTRACT.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  PLANCALL.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  SETUPHAN.FindObject(StrID,InstID)
 end if
 If findCash.item(StrID &amp; InstID) Is Nothing Then
   findCash.Add m_FindObject, StrID &amp; InstID
 End If
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function


'Оптимизировать объем занятой памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()

BDEVICES.Compact
BMODEMS.Compact
CHARTSETTINGS.Compact
VALUEBOUNDS.Compact
CONTRACT.Compact
PLANCALL.Compact
SETUPHAN.Compact
end sub

'Задать стиль защиты документа
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;INSTANCE&quot; ,ID,SecurityStyleID)
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Secure&quot;,err.description
end sub

'Распространить стиль защиты на все строки документа
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.Propagate &quot;INSTANCE&quot;, ID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Propagate&quot;,err.description
end sub

'Сохранить изменения (новое имя)
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save()
public sub Save()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.NewInstance ID, TypeName, Name
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Save&quot;,err.description
end sub

'Задать состояние
'Parameters:
'[IN]   StatusID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.SetStatus({параметры})
private sub SetStatus(byval StatusID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.SetStatus id,StatusID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub

'Получтиь актуальное состояние
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.GetStatus()
private sub GetStatus() 
if application.WorkOffline then exit sub
Dim rs as adodb.recordset
On Error goto bye
set rs =application.MTZSession.GetRow( &quot;INSTANCE&quot;, ID)
m_statusid=rs!status &amp; &quot;&quot; 
m_SecureStyleID = rs!SecurityStyleID &amp; &quot;&quot; 
exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
 on error resume next
  Dim anode As IXMLDOMElement
  Dim e_list As IXMLDOMNodeList
 on error resume next
  set anode = node.firstchild  
  if m_typename &lt;&gt; anode.Attributes.getNamedItem(&quot;TYPENAME&quot;).nodeValue then exit sub
  m_IsLocked=anode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  if LoadMode &lt;&gt;2 then 
    m_ID=anode.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    SetStatus anode.Attributes.getNamedItem(&quot;STATUSID&quot;).nodeValue
    Secure anode.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
    WorkOffline =anode.Attributes.getNamedItem(&quot;WorkOffline&quot;).nodevalue
    if workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  end if 
  m_Name=anode.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue
Set e_list = anode.selectNodes(&quot;BDEVICES_COL&quot;)
  BDEVICES.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;BMODEMS_COL&quot;)
  BMODEMS.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;CHARTSETTINGS_COL&quot;)
  CHARTSETTINGS.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;VALUEBOUNDS_COL&quot;)
  VALUEBOUNDS.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;CONTRACT_COL&quot;)
  CONTRACT.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PLANCALL_COL&quot;)
  PLANCALL.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;SETUPHAN_COL&quot;)
  SETUPHAN.XMLLoad e_list, LoadMode
end sub



'Сохранить данные в XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
  dim anode as IXMLDOMElement
  set anode = xdom.CreateElement(&quot;APPLICATION&quot;)
  anode.setAttribute &quot;ID&quot;, m_ID
  anode.setAttribute &quot;TYPENAME&quot;, m_TypeName
  anode.setAttribute &quot;NAME&quot;, m_Name
  anode.setAttribute &quot;STATUSID&quot;, m_StatusID
  anode.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  anode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  anode.setAttribute &quot;WorkOffline&quot;, WorkOffline
  node.appendChild anode
  BDEVICES.XMLSave anode,xdom
  BMODEMS.XMLSave anode,xdom
  CHARTSETTINGS.XMLSave anode,xdom
  VALUEBOUNDS.XMLSave anode,xdom
  CONTRACT.XMLSave anode,xdom
  PLANCALL.XMLSave anode,xdom
  SETUPHAN.XMLSave anode,xdom
end sub


'Краткое название
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.Brief() 
public function Brief() as string
 Brief= Name 
end function

'Загрузка корня объекта в дерево
'Parameters:
'[IN][OUT]   tree , тип параметра: object, 
'[IN]   pkey , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;, 
'[IN][OUT]   optional CollectionName , тип параметра: string=&quot;&quot;   - ...
'See Also:
'Example:
'  call me.FillTree({параметры})
public sub FillTree( tree as object, byval pkey as string, byval mode as string, optional Mask as string =&quot;&quot;, optional CollectionName as string=&quot;&quot; )
 dim node as object,key as string
If CollectionName = &quot;&quot; Then
 key = createguid2() &amp; ID
 if pkey =&quot;&quot; then
   set node=tree.nodes.add(,0,key,Brief)
 else
   set node=tree.nodes.add(pkey,4,key,Brief)
 end if
 node.tag=&quot;object&quot;
else
 key=&quot;&quot; 
end if
  if mode = &quot;&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;BDEVICES&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;BDEVICES&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;BDEVICES&quot;,&quot;Подключенные к узлу устройства&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;BDEVICES&quot;,&quot;Подключенные к узлу устройства&quot;)
    end if
       node.tag=&quot;BDEVICES&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;BDEVICES&quot;,&quot;Подключенные к узлу устройства&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;BDEVICES&quot;,&quot;Подключенные к узлу устройства&quot;)
    end if
    node.tag=&quot;BDEVICES&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;BMODEMS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;BMODEMS&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;BMODEMS&quot;,&quot;Модемы в узлах учета&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;BMODEMS&quot;,&quot;Модемы в узлах учета&quot;)
    end if
       node.tag=&quot;BMODEMS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;BMODEMS&quot;,&quot;Модемы в узлах учета&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;BMODEMS&quot;,&quot;Модемы в узлах учета&quot;)
    end if
    node.tag=&quot;BMODEMS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;CHARTSETTINGS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;CHARTSETTINGS&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;CHARTSETTINGS&quot;,&quot;Настройки графиков&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;CHARTSETTINGS&quot;,&quot;Настройки графиков&quot;)
    end if
       node.tag=&quot;CHARTSETTINGS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;CHARTSETTINGS&quot;,&quot;Настройки графиков&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;CHARTSETTINGS&quot;,&quot;Настройки графиков&quot;)
    end if
    node.tag=&quot;CHARTSETTINGS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;VALUEBOUNDS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;VALUEBOUNDS&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;VALUEBOUNDS&quot;,&quot;Граничные значения проверяемых параметров&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;VALUEBOUNDS&quot;,&quot;Граничные значения проверяемых параметров&quot;)
    end if
       node.tag=&quot;VALUEBOUNDS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;VALUEBOUNDS&quot;,&quot;Граничные значения проверяемых параметров&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;VALUEBOUNDS&quot;,&quot;Граничные значения проверяемых параметров&quot;)
    end if
    node.tag=&quot;VALUEBOUNDS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;CONTRACT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;CONTRACT&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;CONTRACT&quot;,&quot;Договорные установки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;CONTRACT&quot;,&quot;Договорные установки&quot;)
    end if
       node.tag=&quot;CONTRACT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;CONTRACT&quot;,&quot;Договорные установки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;CONTRACT&quot;,&quot;Договорные установки&quot;)
    end if
    node.tag=&quot;CONTRACT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PLANCALL&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PLANCALL&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PLANCALL&quot;,&quot;План опроса устройств&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PLANCALL&quot;,&quot;План опроса устройств&quot;)
    end if
       node.tag=&quot;PLANCALL&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PLANCALL&quot;,&quot;План опроса устройств&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;PLANCALL&quot;,&quot;План опроса устройств&quot;)
    end if
    node.tag=&quot;PLANCALL&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;SETUPHAN&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;SETUPHAN&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;SETUPHAN&quot;,&quot;Настройки ручного опроса&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;SETUPHAN&quot;,&quot;Настройки ручного опроса&quot;)
    end if
       node.tag=&quot;SETUPHAN&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;SETUPHAN&quot;,&quot;Настройки ручного опроса&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;SETUPHAN&quot;,&quot;Настройки ручного опроса&quot;)
    end if
    node.tag=&quot;SETUPHAN&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if

end sub


'Раскрытие объекта при выборе узла в дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string =&quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 id = mid(key,39,38)
 on error resume next
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if trim(struct)=&quot;&quot;  then 
   set item =manager.GetInstanceObject(id)
   if  item is nothing then exit sub
   If Not item Is Me Then
     item.Expand tree, Key, mode,mask
     Exit Sub
   End If
 else
    set item =FindRowObject(struct,id)
    if  item is nothing then exit sub
    call item.Expand(tree,key,mode,mask)
    exit sub
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 case &quot;BDEVICES&quot; 
    item.BDEVICES.refresh
    for i=1 to item.BDEVICES.count
    nid =createguid2() &amp;  item.BDEVICES.item(i).id  
    tree.nodes.add( key,4,nid,  item.BDEVICES.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;BMODEMS&quot; 
    item.BMODEMS.refresh
    for i=1 to item.BMODEMS.count
    nid =createguid2() &amp;  item.BMODEMS.item(i).id  
    tree.nodes.add( key,4,nid,  item.BMODEMS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;CHARTSETTINGS&quot; 
    item.CHARTSETTINGS.refresh
    for i=1 to item.CHARTSETTINGS.count
    nid =createguid2() &amp;  item.CHARTSETTINGS.item(i).id  
    tree.nodes.add( key,4,nid,  item.CHARTSETTINGS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;VALUEBOUNDS&quot; 
    item.VALUEBOUNDS.refresh
    for i=1 to item.VALUEBOUNDS.count
    nid =createguid2() &amp;  item.VALUEBOUNDS.item(i).id  
    tree.nodes.add( key,4,nid,  item.VALUEBOUNDS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;CONTRACT&quot; 
    item.CONTRACT.refresh
    for i=1 to item.CONTRACT.count
    nid =createguid2() &amp;  item.CONTRACT.item(i).id  
    tree.nodes.add( key,4,nid,  item.CONTRACT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PLANCALL&quot; 
    item.PLANCALL.refresh
    for i=1 to item.PLANCALL.count
    nid =createguid2() &amp;  item.PLANCALL.item(i).id  
    tree.nodes.add( key,4,nid,  item.PLANCALL.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;SETUPHAN&quot; 
    item.SETUPHAN.refresh
    for i=1 to item.SETUPHAN.count
    nid =createguid2() &amp;  item.SETUPHAN.item(i).id  
    tree.nodes.add( key,4,nid,  item.SETUPHAN.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot;
end sub

'Получить дочерний раздел по имени
'Parameters:
'[IN][OUT]   Item , тип параметра: object, 
'[IN]   CollectionName , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ItemCollection(...параметры...)
public property Get ItemCollection( Item as object, byval CollectionName as string) as object
  set ItemCollection = CallByName(Item,CollectionName,vbGet)
end property

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
 ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, ID)
end function

'Массовое обновление строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
public sub BatchUpdate()
If not Application.WorkOffline Then
    BDEVICES.BatchUpdate
    BMODEMS.BatchUpdate
    CHARTSETTINGS.BatchUpdate
    VALUEBOUNDS.BatchUpdate
    CONTRACT.BatchUpdate
    PLANCALL.BatchUpdate
    SETUPHAN.BatchUpdate
End If
End sub

'Загрузка всех данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
public sub LoadAll()
dim prevAutoLoad as boolean
If not Application.WorkOffline Then
prevAutoLoad= Application.autoloadpart
Application.autoloadpart = true
    BDEVICES.LoadAll
    BMODEMS.LoadAll
    CHARTSETTINGS.LoadAll
    VALUEBOUNDS.LoadAll
    CONTRACT.LoadAll
    PLANCALL.LoadAll
    SETUPHAN.LoadAll
Application.autoloadpart = prevAutoLoad
End If
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="BDEVICES" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Подключенные к узлу устройства
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_ID_BU as object
Dim m_ID_BU_ID as string
Dim m_ID_BU_ID_BRIEF as string
private m_ID_DEV as object
Dim m_ID_DEV_ID as string
Dim m_ID_DEV_ID_BRIEF as string
private m_ID_MASK_CURR as object
Dim m_ID_MASK_CURR_ID as string
Dim m_ID_MASK_CURR_ID_BRIEF as string
private m_ID_MASK_HOUR as object
Dim m_ID_MASK_HOUR_ID as string
Dim m_ID_MASK_HOUR_ID_BRIEF as string
private m_ID_MASK_24 as object
Dim m_ID_MASK_24_ID as string
Dim m_ID_MASK_24_ID_BRIEF as string
private m_ID_MASK_SUM as object
Dim m_ID_MASK_SUM_ID as string
Dim m_ID_MASK_SUM_ID_BRIEF as string
private m_SCHEMA_ID as object
Dim m_SCHEMA_ID_ID as string
Dim m_SCHEMA_ID_ID_BRIEF as string
private m_report_hour as object
Dim m_report_hour_ID as string
Dim m_report_hour_ID_BRIEF as string
private m_report_day as object
Dim m_report_day_ID as string
Dim m_report_day_ID_BRIEF as string
private m_NPIP as String
private m_NPPASSWORD as String
private m_NPLOCK as DATE
private m_CONNECTED as enumBoolean
private m_ID_MD as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;BDEVICES&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;BDEVICES.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Здание

'Здание
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_BU(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_BU&quot;,ID_BU,newvalue
on error resume next
m_ID_BU_ID=&quot;&quot;
m_ID_BU_ID=newValue.id
'  set   m_ID_BU= newValue
end if
end property

'Здание
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_BU
public property Get ID_BU() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_BU as object
if  m_ID_BU_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_BU=Application.FindRowObject(&quot;BBUILDINGS&quot;,m_ID_BU_ID)
  if tmp_ID_BU is nothing then
    m_ID_BU_ID_BRIEF = &quot;&quot; 
  else
    m_ID_BU_ID_BRIEF = tmp_ID_BU.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;BBUILDINGS&quot; &amp; m_ID_BU_ID, tmp_ID_BU
  set ID_BU=tmp_ID_BU
  exit property
end if
  '  set ID_BU = m_ID_BU
end property
' let 
'Устройство

'Устройство
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_DEV(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_DEV&quot;,ID_DEV,newvalue
on error resume next
m_ID_DEV_ID=&quot;&quot;
m_ID_DEV_ID=newValue.id
'  set   m_ID_DEV= newValue
end if
end property

'Устройство
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_DEV
public property Get ID_DEV() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_DEV as object
if  m_ID_DEV_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_DEV=Application.FindRowObject(&quot;DEVICES&quot;,m_ID_DEV_ID)
  if tmp_ID_DEV is nothing then
    m_ID_DEV_ID_BRIEF = &quot;&quot; 
  else
    m_ID_DEV_ID_BRIEF = tmp_ID_DEV.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;DEVICES&quot; &amp; m_ID_DEV_ID, tmp_ID_DEV
  set ID_DEV=tmp_ID_DEV
  exit property
end if
  '  set ID_DEV = m_ID_DEV
end property
' let 
'Шаблон отображения текущих

'Шаблон отображения текущих
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_MASK_CURR(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_MASK_CURR&quot;,ID_MASK_CURR,newvalue
on error resume next
m_ID_MASK_CURR_ID=&quot;&quot;
m_ID_MASK_CURR_ID=newValue.id
'  set   m_ID_MASK_CURR= newValue
end if
end property

'Шаблон отображения текущих
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_MASK_CURR
public property Get ID_MASK_CURR() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_MASK_CURR as object
if  m_ID_MASK_CURR_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_MASK_CURR=Application.FindRowObject(&quot;MASKS&quot;,m_ID_MASK_CURR_ID)
  if tmp_ID_MASK_CURR is nothing then
    m_ID_MASK_CURR_ID_BRIEF = &quot;&quot; 
  else
    m_ID_MASK_CURR_ID_BRIEF = tmp_ID_MASK_CURR.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;MASKS&quot; &amp; m_ID_MASK_CURR_ID, tmp_ID_MASK_CURR
  set ID_MASK_CURR=tmp_ID_MASK_CURR
  exit property
end if
  '  set ID_MASK_CURR = m_ID_MASK_CURR
end property
' let 
'Шаблон отображения часовых

'Шаблон отображения часовых
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_MASK_HOUR(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_MASK_HOUR&quot;,ID_MASK_HOUR,newvalue
on error resume next
m_ID_MASK_HOUR_ID=&quot;&quot;
m_ID_MASK_HOUR_ID=newValue.id
'  set   m_ID_MASK_HOUR= newValue
end if
end property

'Шаблон отображения часовых
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_MASK_HOUR
public property Get ID_MASK_HOUR() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_MASK_HOUR as object
if  m_ID_MASK_HOUR_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_MASK_HOUR=Application.FindRowObject(&quot;MASKS&quot;,m_ID_MASK_HOUR_ID)
  if tmp_ID_MASK_HOUR is nothing then
    m_ID_MASK_HOUR_ID_BRIEF = &quot;&quot; 
  else
    m_ID_MASK_HOUR_ID_BRIEF = tmp_ID_MASK_HOUR.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;MASKS&quot; &amp; m_ID_MASK_HOUR_ID, tmp_ID_MASK_HOUR
  set ID_MASK_HOUR=tmp_ID_MASK_HOUR
  exit property
end if
  '  set ID_MASK_HOUR = m_ID_MASK_HOUR
end property
' let 
'Шаблон опроса суточных

'Шаблон опроса суточных
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_MASK_24(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_MASK_24&quot;,ID_MASK_24,newvalue
on error resume next
m_ID_MASK_24_ID=&quot;&quot;
m_ID_MASK_24_ID=newValue.id
'  set   m_ID_MASK_24= newValue
end if
end property

'Шаблон опроса суточных
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_MASK_24
public property Get ID_MASK_24() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_MASK_24 as object
if  m_ID_MASK_24_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_MASK_24=Application.FindRowObject(&quot;MASKS&quot;,m_ID_MASK_24_ID)
  if tmp_ID_MASK_24 is nothing then
    m_ID_MASK_24_ID_BRIEF = &quot;&quot; 
  else
    m_ID_MASK_24_ID_BRIEF = tmp_ID_MASK_24.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;MASKS&quot; &amp; m_ID_MASK_24_ID, tmp_ID_MASK_24
  set ID_MASK_24=tmp_ID_MASK_24
  exit property
end if
  '  set ID_MASK_24 = m_ID_MASK_24
end property
' let 
'Шаблон опроса итоговых 

'Шаблон опроса итоговых
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_MASK_SUM(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_MASK_SUM&quot;,ID_MASK_SUM,newvalue
on error resume next
m_ID_MASK_SUM_ID=&quot;&quot;
m_ID_MASK_SUM_ID=newValue.id
'  set   m_ID_MASK_SUM= newValue
end if
end property

'Шаблон опроса итоговых
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_MASK_SUM
public property Get ID_MASK_SUM() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_MASK_SUM as object
if  m_ID_MASK_SUM_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_MASK_SUM=Application.FindRowObject(&quot;MASKS&quot;,m_ID_MASK_SUM_ID)
  if tmp_ID_MASK_SUM is nothing then
    m_ID_MASK_SUM_ID_BRIEF = &quot;&quot; 
  else
    m_ID_MASK_SUM_ID_BRIEF = tmp_ID_MASK_SUM.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;MASKS&quot; &amp; m_ID_MASK_SUM_ID, tmp_ID_MASK_SUM
  set ID_MASK_SUM=tmp_ID_MASK_SUM
  exit property
end if
  '  set ID_MASK_SUM = m_ID_MASK_SUM
end property
' let 
'Схема подключения

'Схема подключения
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set SCHEMA_ID(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SCHEMA_ID&quot;,SCHEMA_ID,newvalue
on error resume next
m_SCHEMA_ID_ID=&quot;&quot;
m_SCHEMA_ID_ID=newValue.id
'  set   m_SCHEMA_ID= newValue
end if
end property

'Схема подключения
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. SCHEMA_ID
public property Get SCHEMA_ID() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_SCHEMA_ID as object
if  m_SCHEMA_ID_ID&lt;&gt;&quot;&quot; then 
  set tmp_SCHEMA_ID=Application.FindRowObject(&quot;DEVSCHEMA&quot;,m_SCHEMA_ID_ID)
  if tmp_SCHEMA_ID is nothing then
    m_SCHEMA_ID_ID_BRIEF = &quot;&quot; 
  else
    m_SCHEMA_ID_ID_BRIEF = tmp_SCHEMA_ID.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;DEVSCHEMA&quot; &amp; m_SCHEMA_ID_ID, tmp_SCHEMA_ID
  set SCHEMA_ID=tmp_SCHEMA_ID
  exit property
end if
  '  set SCHEMA_ID = m_SCHEMA_ID
end property
' let 
'Отчет по часовым

'Отчет по часовым
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set report_hour(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;report_hour&quot;,report_hour,newvalue
on error resume next
m_report_hour_ID=&quot;&quot;
m_report_hour_ID=newValue.id
'  set   m_report_hour= newValue
end if
end property

'Отчет по часовым
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. report_hour
public property Get report_hour() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_report_hour as object
if  m_report_hour_ID&lt;&gt;&quot;&quot; then 
  set tmp_report_hour=Application.FindRowObject(&quot;REPORT&quot;,m_report_hour_ID)
  if tmp_report_hour is nothing then
    m_report_hour_ID_BRIEF = &quot;&quot; 
  else
    m_report_hour_ID_BRIEF = tmp_report_hour.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;REPORT&quot; &amp; m_report_hour_ID, tmp_report_hour
  set report_hour=tmp_report_hour
  exit property
end if
  '  set report_hour = m_report_hour
end property
' let 
'Отчет по суточным

'Отчет по суточным
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set report_day(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;report_day&quot;,report_day,newvalue
on error resume next
m_report_day_ID=&quot;&quot;
m_report_day_ID=newValue.id
'  set   m_report_day= newValue
end if
end property

'Отчет по суточным
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. report_day
public property Get report_day() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_report_day as object
if  m_report_day_ID&lt;&gt;&quot;&quot; then 
  set tmp_report_day=Application.FindRowObject(&quot;REPORT&quot;,m_report_day_ID)
  if tmp_report_day is nothing then
    m_report_day_ID_BRIEF = &quot;&quot; 
  else
    m_report_day_ID_BRIEF = tmp_report_day.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;REPORT&quot; &amp; m_report_day_ID, tmp_report_day
  set report_day=tmp_report_day
  exit property
end if
  '  set report_day = m_report_day
end property
' let 
'IP адрес NPORT

'IP адрес NPORT
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NPIP(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NPIP&quot;,NPIP,newvalue

   m_NPIP= newValue
end if
end property

'IP адрес NPORT
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. NPIP
public property Get NPIP() as String
 LoadFromDatabase
 AccessTime=Now

   NPIP = m_NPIP
end property
' let 
'Пароль к NPORT

'Пароль к NPORT
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NPPASSWORD(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NPPASSWORD&quot;,NPPASSWORD,newvalue

   m_NPPASSWORD= newValue
end if
end property

'Пароль к NPORT
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. NPPASSWORD
public property Get NPPASSWORD() as String
 LoadFromDatabase
 AccessTime=Now

   NPPASSWORD = m_NPPASSWORD
end property
' let 
'Время до которого устройство считается заблокированным

'Время до которого устройство считается заблокированным
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NPLOCK(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NPLOCK&quot;,NPLOCK,newvalue

   m_NPLOCK= newValue
end if
end property

'Время до которого устройство считается заблокированным
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. NPLOCK
public property Get NPLOCK() as DATE
 LoadFromDatabase
 AccessTime=Now

   NPLOCK = m_NPLOCK
end property
' let 
'1 - подключен  0 - отключен

'1 - подключен  0 - отключен
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CONNECTED(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CONNECTED&quot;,CONNECTED,newvalue

   m_CONNECTED= newValue
end if
end property

'1 - подключен  0 - отключен
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CONNECTED
public property Get CONNECTED() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CONNECTED = m_CONNECTED
end property
' let 
'Автоматический опрос

'Автоматический опрос
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ID_MD(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_MD&quot;,ID_MD,newvalue

   m_ID_MD= newValue
end if
end property

'Автоматический опрос
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. ID_MD
public property Get ID_MD() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   ID_MD = m_ID_MD
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to BBUILDINGS
    if m_ID_BU_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_BU&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_BU&quot;,m_ID_BU_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to DEVICES
    if m_ID_DEV_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_DEV&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_DEV&quot;,m_ID_DEV_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to MASKS
    if m_ID_MASK_CURR_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_MASK_CURR&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_MASK_CURR&quot;,m_ID_MASK_CURR_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to MASKS
    if m_ID_MASK_HOUR_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_MASK_HOUR&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_MASK_HOUR&quot;,m_ID_MASK_HOUR_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to MASKS
    if m_ID_MASK_24_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_MASK_24&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_MASK_24&quot;,m_ID_MASK_24_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to MASKS
    if m_ID_MASK_SUM_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_MASK_SUM&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_MASK_SUM&quot;,m_ID_MASK_SUM_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to DEVSCHEMA
    if m_SCHEMA_ID_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;SCHEMA_ID&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;SCHEMA_ID&quot;,m_SCHEMA_ID_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to REPORT
    if m_report_hour_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;report_hour&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;report_hour&quot;,m_report_hour_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to REPORT
    if m_report_day_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;report_day&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;report_day&quot;,m_report_day_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;NPIP&quot;,m_NPIP)
nvi.ValueSize = 80
  set nvi=nv.Add( &quot;NPPASSWORD&quot;,m_NPPASSWORD)
nvi.ValueSize = 160
  set nvi=nv.Add( &quot;NPLOCK&quot;,m_NPLOCK)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;CONNECTED&quot;,m_CONNECTED)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ID_MD&quot;,m_ID_MD)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  ID_BU is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_ID_BU_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; ID_BU.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_ID_BU_ID=nv.item( &quot;ID_BU&quot;).Value
  m_ID_DEV_ID=nv.item( &quot;ID_DEV&quot;).Value
  m_ID_MASK_CURR_ID=nv.item( &quot;ID_MASK_CURR&quot;).Value
  m_ID_MASK_HOUR_ID=nv.item( &quot;ID_MASK_HOUR&quot;).Value
  m_ID_MASK_24_ID=nv.item( &quot;ID_MASK_24&quot;).Value
  m_ID_MASK_SUM_ID=nv.item( &quot;ID_MASK_SUM&quot;).Value
  m_SCHEMA_ID_ID=nv.item( &quot;SCHEMA_ID&quot;).Value
  m_report_hour_ID=nv.item( &quot;report_hour&quot;).Value
  m_report_day_ID=nv.item( &quot;report_day&quot;).Value
m_NPIP=nv.item( &quot;NPIP&quot;).Value
m_NPPASSWORD=nv.item( &quot;NPPASSWORD&quot;).Value
m_NPLOCK=nv.item( &quot;NPLOCK&quot;).Value
m_CONNECTED=nv.item( &quot;CONNECTED&quot;).Value
m_ID_MD=nv.item( &quot;ID_MD&quot;).Value
else

  m_ID_BU_ID=nv.fields( &quot;ID_BU&quot;).Value
  m_ID_DEV_ID=nv.fields( &quot;ID_DEV&quot;).Value
  m_ID_MASK_CURR_ID=nv.fields( &quot;ID_MASK_CURR&quot;).Value
  m_ID_MASK_HOUR_ID=nv.fields( &quot;ID_MASK_HOUR&quot;).Value
  m_ID_MASK_24_ID=nv.fields( &quot;ID_MASK_24&quot;).Value
  m_ID_MASK_SUM_ID=nv.fields( &quot;ID_MASK_SUM&quot;).Value
  m_SCHEMA_ID_ID=nv.fields( &quot;SCHEMA_ID&quot;).Value
  m_report_hour_ID=nv.fields( &quot;report_hour&quot;).Value
  m_report_day_ID=nv.fields( &quot;report_day&quot;).Value
m_NPIP=nv.fields( &quot;NPIP&quot;).Value
m_NPPASSWORD=nv.fields( &quot;NPPASSWORD&quot;).Value
m_NPLOCK=nv.fields( &quot;NPLOCK&quot;).Value
m_CONNECTED=nv.fields( &quot;CONNECTED&quot;).Value
m_ID_MD=nv.fields( &quot;ID_MD&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as BDEVICES
   set o = new BDEVICES
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;BDEVICES.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;BDEVICES.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;BDEVICES&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;BDEVICES.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;BDEVICES&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;BDEVICES.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_ID_BU_ID=&quot;&quot;
 set m_ID_BU= nothing
 m_ID_DEV_ID=&quot;&quot;
 set m_ID_DEV= nothing
 m_ID_MASK_CURR_ID=&quot;&quot;
 set m_ID_MASK_CURR= nothing
 m_ID_MASK_HOUR_ID=&quot;&quot;
 set m_ID_MASK_HOUR= nothing
 m_ID_MASK_24_ID=&quot;&quot;
 set m_ID_MASK_24= nothing
 m_ID_MASK_SUM_ID=&quot;&quot;
 set m_ID_MASK_SUM= nothing
 m_SCHEMA_ID_ID=&quot;&quot;
 set m_SCHEMA_ID= nothing
 m_report_hour_ID=&quot;&quot;
 set m_report_hour= nothing
 m_report_day_ID=&quot;&quot;
 set m_report_day= nothing
 if not Application is nothing then Application.Logger.Message &quot;BDEVICES.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set ID_BU=nothing
  m_ID_BU_ID=node.Attributes.getNamedItem(&quot;ID_BU&quot;).nodeValue
  m_ID_BU_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_BU_BRIEF&quot;).nodeValue
  set ID_DEV=nothing
  m_ID_DEV_ID=node.Attributes.getNamedItem(&quot;ID_DEV&quot;).nodeValue
  m_ID_DEV_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_DEV_BRIEF&quot;).nodeValue
  set ID_MASK_CURR=nothing
  m_ID_MASK_CURR_ID=node.Attributes.getNamedItem(&quot;ID_MASK_CURR&quot;).nodeValue
  m_ID_MASK_CURR_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_MASK_CURR_BRIEF&quot;).nodeValue
  set ID_MASK_HOUR=nothing
  m_ID_MASK_HOUR_ID=node.Attributes.getNamedItem(&quot;ID_MASK_HOUR&quot;).nodeValue
  m_ID_MASK_HOUR_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_MASK_HOUR_BRIEF&quot;).nodeValue
  set ID_MASK_24=nothing
  m_ID_MASK_24_ID=node.Attributes.getNamedItem(&quot;ID_MASK_24&quot;).nodeValue
  m_ID_MASK_24_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_MASK_24_BRIEF&quot;).nodeValue
  set ID_MASK_SUM=nothing
  m_ID_MASK_SUM_ID=node.Attributes.getNamedItem(&quot;ID_MASK_SUM&quot;).nodeValue
  m_ID_MASK_SUM_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_MASK_SUM_BRIEF&quot;).nodeValue
  set SCHEMA_ID=nothing
  m_SCHEMA_ID_ID=node.Attributes.getNamedItem(&quot;SCHEMA_ID&quot;).nodeValue
  m_SCHEMA_ID_ID_BRIEF=node.Attributes.getNamedItem(&quot;SCHEMA_ID_BRIEF&quot;).nodeValue
  set report_hour=nothing
  m_report_hour_ID=node.Attributes.getNamedItem(&quot;REPORT_HOUR&quot;).nodeValue
  m_report_hour_ID_BRIEF=node.Attributes.getNamedItem(&quot;REPORT_HOUR_BRIEF&quot;).nodeValue
  set report_day=nothing
  m_report_day_ID=node.Attributes.getNamedItem(&quot;REPORT_DAY&quot;).nodeValue
  m_report_day_ID_BRIEF=node.Attributes.getNamedItem(&quot;REPORT_DAY_BRIEF&quot;).nodeValue
  NPIP=Replace(node.Attributes.getNamedItem(&quot;NPIP&quot;).nodeValue,vbLf,vbcrlf)
  NPPASSWORD=Replace(node.Attributes.getNamedItem(&quot;NPPASSWORD&quot;).nodeValue,vbLf,vbcrlf)
  NPLOCK=node.Attributes.getNamedItem(&quot;NPLOCK&quot;).nodeValue
  CONNECTED=node.Attributes.getNamedItem(&quot;CONNECTED&quot;).nodeValue
  ID_MD=node.Attributes.getNamedItem(&quot;ID_MD&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;ID_BU&quot;, m_ID_BU_ID
  if not (ID_BU is nothing) then 
    node.setAttribute &quot;ID_BU_BRIEF&quot;, ID_BU.BRIEF
  else
    node.setAttribute &quot;ID_BU_BRIEF&quot;, m_ID_BU_ID_BRIEF
  end if
  node.setAttribute &quot;ID_DEV&quot;, m_ID_DEV_ID
  if not (ID_DEV is nothing) then 
    node.setAttribute &quot;ID_DEV_BRIEF&quot;, ID_DEV.BRIEF
  else
    node.setAttribute &quot;ID_DEV_BRIEF&quot;, m_ID_DEV_ID_BRIEF
  end if
  node.setAttribute &quot;ID_MASK_CURR&quot;, m_ID_MASK_CURR_ID
  if not (ID_MASK_CURR is nothing) then 
    node.setAttribute &quot;ID_MASK_CURR_BRIEF&quot;, ID_MASK_CURR.BRIEF
  else
    node.setAttribute &quot;ID_MASK_CURR_BRIEF&quot;, m_ID_MASK_CURR_ID_BRIEF
  end if
  node.setAttribute &quot;ID_MASK_HOUR&quot;, m_ID_MASK_HOUR_ID
  if not (ID_MASK_HOUR is nothing) then 
    node.setAttribute &quot;ID_MASK_HOUR_BRIEF&quot;, ID_MASK_HOUR.BRIEF
  else
    node.setAttribute &quot;ID_MASK_HOUR_BRIEF&quot;, m_ID_MASK_HOUR_ID_BRIEF
  end if
  node.setAttribute &quot;ID_MASK_24&quot;, m_ID_MASK_24_ID
  if not (ID_MASK_24 is nothing) then 
    node.setAttribute &quot;ID_MASK_24_BRIEF&quot;, ID_MASK_24.BRIEF
  else
    node.setAttribute &quot;ID_MASK_24_BRIEF&quot;, m_ID_MASK_24_ID_BRIEF
  end if
  node.setAttribute &quot;ID_MASK_SUM&quot;, m_ID_MASK_SUM_ID
  if not (ID_MASK_SUM is nothing) then 
    node.setAttribute &quot;ID_MASK_SUM_BRIEF&quot;, ID_MASK_SUM.BRIEF
  else
    node.setAttribute &quot;ID_MASK_SUM_BRIEF&quot;, m_ID_MASK_SUM_ID_BRIEF
  end if
  node.setAttribute &quot;SCHEMA_ID&quot;, m_SCHEMA_ID_ID
  if not (SCHEMA_ID is nothing) then 
    node.setAttribute &quot;SCHEMA_ID_BRIEF&quot;, SCHEMA_ID.BRIEF
  else
    node.setAttribute &quot;SCHEMA_ID_BRIEF&quot;, m_SCHEMA_ID_ID_BRIEF
  end if
  node.setAttribute &quot;REPORT_HOUR&quot;, m_report_hour_ID
  if not (report_hour is nothing) then 
    node.setAttribute &quot;REPORT_HOUR_BRIEF&quot;, report_hour.BRIEF
  else
    node.setAttribute &quot;REPORT_HOUR_BRIEF&quot;, m_report_hour_ID_BRIEF
  end if
  node.setAttribute &quot;REPORT_DAY&quot;, m_report_day_ID
  if not (report_day is nothing) then 
    node.setAttribute &quot;REPORT_DAY_BRIEF&quot;, report_day.BRIEF
  else
    node.setAttribute &quot;REPORT_DAY_BRIEF&quot;, m_report_day_ID_BRIEF
  end if
  node.setAttribute &quot;NPIP&quot;, NPIP
  node.setAttribute &quot;NPPASSWORD&quot;, NPPASSWORD
  node.setAttribute &quot;NPLOCK&quot;, Cdbl(NPLOCK)
  node.setAttribute &quot;CONNECTED&quot;, CONNECTED
  node.setAttribute &quot;ID_MD&quot;, ID_MD
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;BDEVICES&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;BDEVICES&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;BDEVICES&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;BDEVICES&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="BDEVICES_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Подключенные к узлу устройства
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;BDEVICES&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;BDEVICES.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as  BDEVICES
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  BDEVICES
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  BDEVICES
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  BDEVICES
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as BDEVICES
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as BDEVICES
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as BDEVICES
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as BDEVICES
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as BDEVICES
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as BDEVICES
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BDEVICES
'  ,или Nothing
'See Also:
'Example:
' dim variable as BDEVICES
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as BDEVICES
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  BDEVICES
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;BDEVICES.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As BDEVICES
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As BDEVICES
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!BDEVICESID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as BDEVICES
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;BDEVICES_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;BDEVICES&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as BDEVICES
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;BDEVICES&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Здание&quot;, 0, 0, &quot;ID_BU&quot;).SortType =1
  YGrid.Columns.Add(&quot;Устройство&quot;, 0, 0, &quot;ID_DEV&quot;).SortType =1
  YGrid.Columns.Add(&quot;Шаблон отображения текущих&quot;, 0, 0, &quot;ID_MASK_CURR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Шаблон отображения часовых&quot;, 0, 0, &quot;ID_MASK_HOUR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Шаблон опроса суточных&quot;, 0, 0, &quot;ID_MASK_24&quot;).SortType =1
  YGrid.Columns.Add(&quot;Шаблон опроса итоговых &quot;, 0, 0, &quot;ID_MASK_SUM&quot;).SortType =1
  YGrid.Columns.Add(&quot;Схема подключения&quot;, 0, 0, &quot;SCHEMA_ID&quot;).SortType =1
  YGrid.Columns.Add(&quot;Отчет по часовым&quot;, 0, 0, &quot;report_hour&quot;).SortType =1
  YGrid.Columns.Add(&quot;Отчет по суточным&quot;, 0, 0, &quot;report_day&quot;).SortType =1
  YGrid.Columns.Add(&quot;IP адрес NPORT&quot;, 0, 0, &quot;NPIP&quot;).SortType =1
  YGrid.Columns.Add(&quot;Пароль к NPORT&quot;, 0, 0, &quot;NPPASSWORD&quot;).SortType =1
  YGrid.Columns.Add(&quot;Время до которого устройство считается заблокированным&quot;, 0, 0, &quot;NPLOCK&quot;).SortType =4
  YGrid.Columns.Add(&quot;1 - подключен 0 - отключен&quot;, 0, 0, &quot;CONNECTED&quot;).SortType =1
  YGrid.Columns.Add(&quot;Автоматический опрос&quot;, 0, 0, &quot;ID_MD&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as BDEVICES
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.ID_BU is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.ID_BU.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ID_DEV is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.ID_DEV.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ID_MASK_CURR is nothing then
    Values.Value(3) = &quot;Не задано&quot;
   else 
    Values.Value(3) = Left(Replace(obj.ID_MASK_CURR.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ID_MASK_HOUR is nothing then
    Values.Value(4) = &quot;Не задано&quot;
   else 
    Values.Value(4) = Left(Replace(obj.ID_MASK_HOUR.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ID_MASK_24 is nothing then
    Values.Value(5) = &quot;Не задано&quot;
   else 
    Values.Value(5) = Left(Replace(obj.ID_MASK_24.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ID_MASK_SUM is nothing then
    Values.Value(6) = &quot;Не задано&quot;
   else 
    Values.Value(6) = Left(Replace(obj.ID_MASK_SUM.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.SCHEMA_ID is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.SCHEMA_ID.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.report_hour is nothing then
    Values.Value(8) = &quot;Не задано&quot;
   else 
    Values.Value(8) = Left(Replace(obj.report_hour.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.report_day is nothing then
    Values.Value(9) = &quot;Не задано&quot;
   else 
    Values.Value(9) = Left(Replace(obj.report_day.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(10) = Left(Replace(obj.NPIP, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.NPPASSWORD, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.NPLOCK, vbCrLf, &quot; &quot;), 255)
   if obj.CONNECTED =-1 then
     Values.Value(13) = &quot;Да&quot;
   end if
   if obj.CONNECTED =0 then
     Values.Value(13) = &quot;Нет&quot;
   end if
   if obj.ID_MD =-1 then
     Values.Value(14) = &quot;Да&quot;
   end if
   if obj.ID_MD =0 then
     Values.Value(14) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;BDEVICES&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="BMODEMS" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Модемы в узлах учета
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_CPHONE as String
private m_CSPEED as String
private m_CDATABIT as String
private m_CPARITY as enumBoolean
private m_CSTOPBITS as enumBoolean
private m_CPREFPHONE as String
private m_CONNECTLIMIT as double
private m_PARAMLIMIT as double
private m_ID_USR as object
Dim m_ID_USR_ID as string
Dim m_ID_USR_ID_BRIEF as string
private m_CTOWNCODE as String
private m_CDTR as enumBoolean
private m_CDSR as enumBoolean
private m_FlowControl as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;BMODEMS&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;BMODEMS.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Телефон

'Телефон
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CPHONE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CPHONE&quot;,CPHONE,newvalue

   m_CPHONE= newValue
end if
end property

'Телефон
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. CPHONE
public property Get CPHONE() as String
 LoadFromDatabase
 AccessTime=Now

   CPHONE = m_CPHONE
end property
' let 
'Скорость бод

'Скорость бод
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CSPEED(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CSPEED&quot;,CSPEED,newvalue

   m_CSPEED= newValue
end if
end property

'Скорость бод
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. CSPEED
public property Get CSPEED() as String
 LoadFromDatabase
 AccessTime=Now

   CSPEED = m_CSPEED
end property
' let 
'Биты данных

'Биты данных
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CDATABIT(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CDATABIT&quot;,CDATABIT,newvalue

   m_CDATABIT= newValue
end if
end property

'Биты данных
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. CDATABIT
public property Get CDATABIT() as String
 LoadFromDatabase
 AccessTime=Now

   CDATABIT = m_CDATABIT
end property
' let 
'Четность

'Четность
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CPARITY(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CPARITY&quot;,CPARITY,newvalue

   m_CPARITY= newValue
end if
end property

'Четность
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CPARITY
public property Get CPARITY() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CPARITY = m_CPARITY
end property
' let 
'Стоповые биты

'Стоповые биты
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CSTOPBITS(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CSTOPBITS&quot;,CSTOPBITS,newvalue

   m_CSTOPBITS= newValue
end if
end property

'Стоповые биты
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CSTOPBITS
public property Get CSTOPBITS() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CSTOPBITS = m_CSTOPBITS
end property
' let 
'Префикс местной АТС

'Префикс местной АТС
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CPREFPHONE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CPREFPHONE&quot;,CPREFPHONE,newvalue

   m_CPREFPHONE= newValue
end if
end property

'Префикс местной АТС
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. CPREFPHONE
public property Get CPREFPHONE() as String
 LoadFromDatabase
 AccessTime=Now

   CPREFPHONE = m_CPREFPHONE
end property
' let 
'Лимит времени на установку связи

'Лимит времени на установку связи
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CONNECTLIMIT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CONNECTLIMIT&quot;,CONNECTLIMIT,newvalue

   m_CONNECTLIMIT= newValue
end if
end property

'Лимит времени на установку связи
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CONNECTLIMIT
public property Get CONNECTLIMIT() as double
 LoadFromDatabase
 AccessTime=Now

   CONNECTLIMIT = m_CONNECTLIMIT
end property
' let 
'Лимит времени на опрос 1 параметра

'Лимит времени на опрос 1 параметра
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PARAMLIMIT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PARAMLIMIT&quot;,PARAMLIMIT,newvalue

   m_PARAMLIMIT= newValue
end if
end property

'Лимит времени на опрос 1 параметра
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PARAMLIMIT
public property Get PARAMLIMIT() as double
 LoadFromDatabase
 AccessTime=Now

   PARAMLIMIT = m_PARAMLIMIT
end property
' let 
'Пользователь

'Пользователь
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ID_USR(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ID_USR&quot;,ID_USR,newvalue
on error resume next
m_ID_USR_ID=&quot;&quot;
m_ID_USR_ID=newValue.id
'  set   m_ID_USR= newValue
end if
end property

'Пользователь
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ID_USR
public property Get ID_USR() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ID_USR as object
if  m_ID_USR_ID&lt;&gt;&quot;&quot; then 
  set tmp_ID_USR=Application.FindRowObject(&quot;Users&quot;,m_ID_USR_ID)
  if tmp_ID_USR is nothing then
    m_ID_USR_ID_BRIEF = &quot;&quot; 
  else
    m_ID_USR_ID_BRIEF = tmp_ID_USR.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;Users&quot; &amp; m_ID_USR_ID, tmp_ID_USR
  set ID_USR=tmp_ID_USR
  exit property
end if
  '  set ID_USR = m_ID_USR
end property
' let 
'Код города

'Код города
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CTOWNCODE(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CTOWNCODE&quot;,CTOWNCODE,newvalue

   m_CTOWNCODE= newValue
end if
end property

'Код города
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. CTOWNCODE
public property Get CTOWNCODE() as String
 LoadFromDatabase
 AccessTime=Now

   CTOWNCODE = m_CTOWNCODE
end property
' let 
' Сигнал DTR

' Сигнал DTR
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CDTR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CDTR&quot;,CDTR,newvalue

   m_CDTR= newValue
end if
end property

' Сигнал DTR
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CDTR
public property Get CDTR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CDTR = m_CDTR
end property
' let 
'Сигнал  DSR

'Сигнал  DSR
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CDSR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CDSR&quot;,CDSR,newvalue

   m_CDSR= newValue
end if
end property

'Сигнал  DSR
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CDSR
public property Get CDSR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CDSR = m_CDSR
end property
' let 
'FlowControl

'FlowControl
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FlowControl(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FlowControl&quot;,FlowControl,newvalue

   m_FlowControl= newValue
end if
end property

'FlowControl
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FlowControl
public property Get FlowControl() as String
 LoadFromDatabase
 AccessTime=Now

   FlowControl = m_FlowControl
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;CPHONE&quot;,m_CPHONE)
nvi.ValueSize = 48
  set nvi=nv.Add( &quot;CSPEED&quot;,m_CSPEED)
nvi.ValueSize = 12
  set nvi=nv.Add( &quot;CDATABIT&quot;,m_CDATABIT)
nvi.ValueSize = 2
  set nvi=nv.Add( &quot;CPARITY&quot;,m_CPARITY)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CSTOPBITS&quot;,m_CSTOPBITS)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CPREFPHONE&quot;,m_CPREFPHONE)
nvi.ValueSize = 20
  set nvi=nv.Add( &quot;CONNECTLIMIT&quot;,m_CONNECTLIMIT)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PARAMLIMIT&quot;,m_PARAMLIMIT)
nvi.ValueType =  adDouble 
 ' Reference to Users
    if m_ID_USR_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ID_USR&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ID_USR&quot;,m_ID_USR_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;CTOWNCODE&quot;,m_CTOWNCODE)
nvi.ValueSize = 32
  set nvi=nv.Add( &quot;CDTR&quot;,m_CDTR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CDSR&quot;,m_CDSR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;FlowControl&quot;,m_FlowControl)
nvi.ValueSize = 2
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; CSPEED &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_CPHONE=nv.item( &quot;CPHONE&quot;).Value
m_CSPEED=nv.item( &quot;CSPEED&quot;).Value
m_CDATABIT=nv.item( &quot;CDATABIT&quot;).Value
m_CPARITY=nv.item( &quot;CPARITY&quot;).Value
m_CSTOPBITS=nv.item( &quot;CSTOPBITS&quot;).Value
m_CPREFPHONE=nv.item( &quot;CPREFPHONE&quot;).Value
m_CONNECTLIMIT=nv.item( &quot;CONNECTLIMIT&quot;).Value
m_PARAMLIMIT=nv.item( &quot;PARAMLIMIT&quot;).Value
  m_ID_USR_ID=nv.item( &quot;ID_USR&quot;).Value
m_CTOWNCODE=nv.item( &quot;CTOWNCODE&quot;).Value
m_CDTR=nv.item( &quot;CDTR&quot;).Value
m_CDSR=nv.item( &quot;CDSR&quot;).Value
m_FlowControl=nv.item( &quot;FlowControl&quot;).Value
else

m_CPHONE=nv.fields( &quot;CPHONE&quot;).Value
m_CSPEED=nv.fields( &quot;CSPEED&quot;).Value
m_CDATABIT=nv.fields( &quot;CDATABIT&quot;).Value
m_CPARITY=nv.fields( &quot;CPARITY&quot;).Value
m_CSTOPBITS=nv.fields( &quot;CSTOPBITS&quot;).Value
m_CPREFPHONE=nv.fields( &quot;CPREFPHONE&quot;).Value
m_CONNECTLIMIT=nv.fields( &quot;CONNECTLIMIT&quot;).Value
m_PARAMLIMIT=nv.fields( &quot;PARAMLIMIT&quot;).Value
  m_ID_USR_ID=nv.fields( &quot;ID_USR&quot;).Value
m_CTOWNCODE=nv.fields( &quot;CTOWNCODE&quot;).Value
m_CDTR=nv.fields( &quot;CDTR&quot;).Value
m_CDSR=nv.fields( &quot;CDSR&quot;).Value
m_FlowControl=nv.fields( &quot;FlowControl&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as BMODEMS
   set o = new BMODEMS
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;BMODEMS.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;BMODEMS.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;BMODEMS&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;BMODEMS.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;BMODEMS&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;BMODEMS.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_ID_USR_ID=&quot;&quot;
 set m_ID_USR= nothing
 if not Application is nothing then Application.Logger.Message &quot;BMODEMS.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  CPHONE=Replace(node.Attributes.getNamedItem(&quot;CPHONE&quot;).nodeValue,vbLf,vbcrlf)
  CSPEED=Replace(node.Attributes.getNamedItem(&quot;CSPEED&quot;).nodeValue,vbLf,vbcrlf)
  CDATABIT=Replace(node.Attributes.getNamedItem(&quot;CDATABIT&quot;).nodeValue,vbLf,vbcrlf)
  CPARITY=node.Attributes.getNamedItem(&quot;CPARITY&quot;).nodeValue
  CSTOPBITS=node.Attributes.getNamedItem(&quot;CSTOPBITS&quot;).nodeValue
  CPREFPHONE=Replace(node.Attributes.getNamedItem(&quot;CPREFPHONE&quot;).nodeValue,vbLf,vbcrlf)
  CONNECTLIMIT=val(Replace(node.Attributes.getNamedItem(&quot;CONNECTLIMIT&quot;).nodeValue,vbLf,vbcrlf))
  PARAMLIMIT=val(Replace(node.Attributes.getNamedItem(&quot;PARAMLIMIT&quot;).nodeValue,vbLf,vbcrlf))
  set ID_USR=nothing
  m_ID_USR_ID=node.Attributes.getNamedItem(&quot;ID_USR&quot;).nodeValue
  m_ID_USR_ID_BRIEF=node.Attributes.getNamedItem(&quot;ID_USR_BRIEF&quot;).nodeValue
  CTOWNCODE=Replace(node.Attributes.getNamedItem(&quot;CTOWNCODE&quot;).nodeValue,vbLf,vbcrlf)
  CDTR=node.Attributes.getNamedItem(&quot;CDTR&quot;).nodeValue
  CDSR=node.Attributes.getNamedItem(&quot;CDSR&quot;).nodeValue
  FlowControl=Replace(node.Attributes.getNamedItem(&quot;FLOWCONTROL&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;CPHONE&quot;, CPHONE
  node.setAttribute &quot;CSPEED&quot;, CSPEED
  node.setAttribute &quot;CDATABIT&quot;, CDATABIT
  node.setAttribute &quot;CPARITY&quot;, CPARITY
  node.setAttribute &quot;CSTOPBITS&quot;, CSTOPBITS
  node.setAttribute &quot;CPREFPHONE&quot;, CPREFPHONE
  node.setAttribute &quot;CONNECTLIMIT&quot;, replace(cstr(CONNECTLIMIT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PARAMLIMIT&quot;, replace(cstr(PARAMLIMIT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ID_USR&quot;, m_ID_USR_ID
  if not (ID_USR is nothing) then 
    node.setAttribute &quot;ID_USR_BRIEF&quot;, ID_USR.BRIEF
  else
    node.setAttribute &quot;ID_USR_BRIEF&quot;, m_ID_USR_ID_BRIEF
  end if
  node.setAttribute &quot;CTOWNCODE&quot;, CTOWNCODE
  node.setAttribute &quot;CDTR&quot;, CDTR
  node.setAttribute &quot;CDSR&quot;, CDSR
  node.setAttribute &quot;FLOWCONTROL&quot;, FlowControl
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;BMODEMS&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;BMODEMS&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;BMODEMS&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;BMODEMS&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="BMODEMS_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Модемы в узлах учета
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;BMODEMS&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;BMODEMS.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as  BMODEMS
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  BMODEMS
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  BMODEMS
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  BMODEMS
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as BMODEMS
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as BMODEMS
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as BMODEMS
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as BMODEMS
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as BMODEMS
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as BMODEMS
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса BMODEMS
'  ,или Nothing
'See Also:
'Example:
' dim variable as BMODEMS
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as BMODEMS
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  BMODEMS
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;BMODEMS.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As BMODEMS
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As BMODEMS
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!BMODEMSID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as BMODEMS
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;BMODEMS_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;BMODEMS&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as BMODEMS
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;BMODEMS&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Телефон&quot;, 0, 0, &quot;CPHONE&quot;).SortType =1
  YGrid.Columns.Add(&quot;Скорость бод&quot;, 0, 0, &quot;CSPEED&quot;).SortType =1
  YGrid.Columns.Add(&quot;Биты данных&quot;, 0, 0, &quot;CDATABIT&quot;).SortType =1
  YGrid.Columns.Add(&quot;Четность&quot;, 0, 0, &quot;CPARITY&quot;).SortType =1
  YGrid.Columns.Add(&quot;Стоповые биты&quot;, 0, 0, &quot;CSTOPBITS&quot;).SortType =1
  YGrid.Columns.Add(&quot;Префикс местной АТС&quot;, 0, 0, &quot;CPREFPHONE&quot;).SortType =1
  YGrid.Columns.Add(&quot;Лимит времени на установку связи&quot;, 0, 0, &quot;CONNECTLIMIT&quot;).SortType =2
  YGrid.Columns.Add(&quot;Лимит времени на опрос 1 параметра&quot;, 0, 0, &quot;PARAMLIMIT&quot;).SortType =2
  YGrid.Columns.Add(&quot;Пользователь&quot;, 0, 0, &quot;ID_USR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код города&quot;, 0, 0, &quot;CTOWNCODE&quot;).SortType =1
  YGrid.Columns.Add(&quot; Сигнал DTR&quot;, 0, 0, &quot;CDTR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сигнал DSR&quot;, 0, 0, &quot;CDSR&quot;).SortType =1
  YGrid.Columns.Add(&quot;FlowControl&quot;, 0, 0, &quot;FlowControl&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as BMODEMS
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.CPHONE, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.CSPEED, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.CDATABIT, vbCrLf, &quot; &quot;), 255)
   if obj.CPARITY =-1 then
     Values.Value(4) = &quot;Да&quot;
   end if
   if obj.CPARITY =0 then
     Values.Value(4) = &quot;Нет&quot;
   end if
   if obj.CSTOPBITS =-1 then
     Values.Value(5) = &quot;Да&quot;
   end if
   if obj.CSTOPBITS =0 then
     Values.Value(5) = &quot;Нет&quot;
   end if
    Values.Value(6) = Left(Replace(obj.CPREFPHONE, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.CONNECTLIMIT, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.PARAMLIMIT, vbCrLf, &quot; &quot;), 255)
   if obj.ID_USR is nothing then
    Values.Value(9) = &quot;Не задано&quot;
   else 
    Values.Value(9) = Left(Replace(obj.ID_USR.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(10) = Left(Replace(obj.CTOWNCODE, vbCrLf, &quot; &quot;), 255)
   if obj.CDTR =-1 then
     Values.Value(11) = &quot;Да&quot;
   end if
   if obj.CDTR =0 then
     Values.Value(11) = &quot;Нет&quot;
   end if
   if obj.CDSR =-1 then
     Values.Value(12) = &quot;Да&quot;
   end if
   if obj.CDSR =0 then
     Values.Value(12) = &quot;Нет&quot;
   end if
    Values.Value(13) = Left(Replace(obj.FlowControl, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;BMODEMS&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="CHARTSETTINGS" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Настройки графиков
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_PTYPE as double
private m_PNAME as String
private m_CHARTNUM as double
private m_VARNUM as double
private m_VALCOUNT as double
private m_WIDTH as double
private m_COLOR as double
private m_PARAM_ENABLE as enumBoolean
private m_COLORMIN as double
private m_COLORMAX as double
private m_WIDTHMIN as double
private m_WIDTHMAX as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;CHARTSETTINGS&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;CHARTSETTINGS.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Тип архива

'Тип архива
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PTYPE(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PTYPE&quot;,PTYPE,newvalue

   m_PTYPE= newValue
end if
end property

'Тип архива
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PTYPE
public property Get PTYPE() as double
 LoadFromDatabase
 AccessTime=Now

   PTYPE = m_PTYPE
end property
' let 
'Название параметра

'Название параметра
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PNAME(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PNAME&quot;,PNAME,newvalue

   m_PNAME= newValue
end if
end property

'Название параметра
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PNAME
public property Get PNAME() as String
 LoadFromDatabase
 AccessTime=Now

   PNAME = m_PNAME
end property
' let 
'Номер графика 0-2

'Номер графика 0-2
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHARTNUM(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHARTNUM&quot;,CHARTNUM,newvalue

   m_CHARTNUM= newValue
end if
end property

'Номер графика 0-2
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. CHARTNUM
public property Get CHARTNUM() as double
 LoadFromDatabase
 AccessTime=Now

   CHARTNUM = m_CHARTNUM
end property
' let 
'Количество значений

'Количество значений
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VARNUM(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VARNUM&quot;,VARNUM,newvalue

   m_VARNUM= newValue
end if
end property

'Количество значений
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. VARNUM
public property Get VARNUM() as double
 LoadFromDatabase
 AccessTime=Now

   VARNUM = m_VARNUM
end property
' let 
'Количество значений

'Количество значений
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VALCOUNT(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VALCOUNT&quot;,VALCOUNT,newvalue

   m_VALCOUNT= newValue
end if
end property

'Количество значений
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. VALCOUNT
public property Get VALCOUNT() as double
 LoadFromDatabase
 AccessTime=Now

   VALCOUNT = m_VALCOUNT
end property
' let 
'Толщина

'Толщина
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WIDTH(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WIDTH&quot;,WIDTH,newvalue

   m_WIDTH= newValue
end if
end property

'Толщина
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WIDTH
public property Get WIDTH() as double
 LoadFromDatabase
 AccessTime=Now

   WIDTH = m_WIDTH
end property
' let 
'Цвет

'Цвет
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let COLOR(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;COLOR&quot;,COLOR,newvalue

   m_COLOR= newValue
end if
end property

'Цвет
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. COLOR
public property Get COLOR() as double
 LoadFromDatabase
 AccessTime=Now

   COLOR = m_COLOR
end property
' let 
'Разрешена

'Разрешена
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PARAM_ENABLE(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PARAM_ENABLE&quot;,PARAM_ENABLE,newvalue

   m_PARAM_ENABLE= newValue
end if
end property

'Разрешена
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. PARAM_ENABLE
public property Get PARAM_ENABLE() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   PARAM_ENABLE = m_PARAM_ENABLE
end property
' let 
'Цвет минимума

'Цвет минимума
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let COLORMIN(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;COLORMIN&quot;,COLORMIN,newvalue

   m_COLORMIN= newValue
end if
end property

'Цвет минимума
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. COLORMIN
public property Get COLORMIN() as double
 LoadFromDatabase
 AccessTime=Now

   COLORMIN = m_COLORMIN
end property
' let 
'Цвет максимума

'Цвет максимума
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let COLORMAX(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;COLORMAX&quot;,COLORMAX,newvalue

   m_COLORMAX= newValue
end if
end property

'Цвет максимума
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. COLORMAX
public property Get COLORMAX() as double
 LoadFromDatabase
 AccessTime=Now

   COLORMAX = m_COLORMAX
end property
' let 
'Толщина минимума

'Толщина минимума
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WIDTHMIN(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WIDTHMIN&quot;,WIDTHMIN,newvalue

   m_WIDTHMIN= newValue
end if
end property

'Толщина минимума
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WIDTHMIN
public property Get WIDTHMIN() as double
 LoadFromDatabase
 AccessTime=Now

   WIDTHMIN = m_WIDTHMIN
end property
' let 
'Толщина максимума

'Толщина максимума
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WIDTHMAX(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WIDTHMAX&quot;,WIDTHMAX,newvalue

   m_WIDTHMAX= newValue
end if
end property

'Толщина максимума
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WIDTHMAX
public property Get WIDTHMAX() as double
 LoadFromDatabase
 AccessTime=Now

   WIDTHMAX = m_WIDTHMAX
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;PTYPE&quot;,m_PTYPE)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PNAME&quot;,m_PNAME)
nvi.ValueSize = 128
  set nvi=nv.Add( &quot;CHARTNUM&quot;,m_CHARTNUM)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;VARNUM&quot;,m_VARNUM)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;VALCOUNT&quot;,m_VALCOUNT)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WIDTH&quot;,m_WIDTH)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;COLOR&quot;,m_COLOR)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PARAM_ENABLE&quot;,m_PARAM_ENABLE)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;COLORMIN&quot;,m_COLORMIN)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;COLORMAX&quot;,m_COLORMAX)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WIDTHMIN&quot;,m_WIDTHMIN)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;WIDTHMAX&quot;,m_WIDTHMAX)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; PTYPE &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_PTYPE=nv.item( &quot;PTYPE&quot;).Value
m_PNAME=nv.item( &quot;PNAME&quot;).Value
m_CHARTNUM=nv.item( &quot;CHARTNUM&quot;).Value
m_VARNUM=nv.item( &quot;VARNUM&quot;).Value
m_VALCOUNT=nv.item( &quot;VALCOUNT&quot;).Value
m_WIDTH=nv.item( &quot;WIDTH&quot;).Value
m_COLOR=nv.item( &quot;COLOR&quot;).Value
m_PARAM_ENABLE=nv.item( &quot;PARAM_ENABLE&quot;).Value
m_COLORMIN=nv.item( &quot;COLORMIN&quot;).Value
m_COLORMAX=nv.item( &quot;COLORMAX&quot;).Value
m_WIDTHMIN=nv.item( &quot;WIDTHMIN&quot;).Value
m_WIDTHMAX=nv.item( &quot;WIDTHMAX&quot;).Value
else

m_PTYPE=nv.fields( &quot;PTYPE&quot;).Value
m_PNAME=nv.fields( &quot;PNAME&quot;).Value
m_CHARTNUM=nv.fields( &quot;CHARTNUM&quot;).Value
m_VARNUM=nv.fields( &quot;VARNUM&quot;).Value
m_VALCOUNT=nv.fields( &quot;VALCOUNT&quot;).Value
m_WIDTH=nv.fields( &quot;WIDTH&quot;).Value
m_COLOR=nv.fields( &quot;COLOR&quot;).Value
m_PARAM_ENABLE=nv.fields( &quot;PARAM_ENABLE&quot;).Value
m_COLORMIN=nv.fields( &quot;COLORMIN&quot;).Value
m_COLORMAX=nv.fields( &quot;COLORMAX&quot;).Value
m_WIDTHMIN=nv.fields( &quot;WIDTHMIN&quot;).Value
m_WIDTHMAX=nv.fields( &quot;WIDTHMAX&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as CHARTSETTINGS
   set o = new CHARTSETTINGS
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;CHARTSETTINGS.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;CHARTSETTINGS.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;CHARTSETTINGS&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;CHARTSETTINGS.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;CHARTSETTINGS&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;CHARTSETTINGS.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;CHARTSETTINGS.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  PTYPE=val(Replace(node.Attributes.getNamedItem(&quot;PTYPE&quot;).nodeValue,vbLf,vbcrlf))
  PNAME=Replace(node.Attributes.getNamedItem(&quot;PNAME&quot;).nodeValue,vbLf,vbcrlf)
  CHARTNUM=val(Replace(node.Attributes.getNamedItem(&quot;CHARTNUM&quot;).nodeValue,vbLf,vbcrlf))
  VARNUM=val(Replace(node.Attributes.getNamedItem(&quot;VARNUM&quot;).nodeValue,vbLf,vbcrlf))
  VALCOUNT=val(Replace(node.Attributes.getNamedItem(&quot;VALCOUNT&quot;).nodeValue,vbLf,vbcrlf))
  WIDTH=val(Replace(node.Attributes.getNamedItem(&quot;WIDTH&quot;).nodeValue,vbLf,vbcrlf))
  COLOR=val(Replace(node.Attributes.getNamedItem(&quot;COLOR&quot;).nodeValue,vbLf,vbcrlf))
  PARAM_ENABLE=node.Attributes.getNamedItem(&quot;PARAM_ENABLE&quot;).nodeValue
  COLORMIN=val(Replace(node.Attributes.getNamedItem(&quot;COLORMIN&quot;).nodeValue,vbLf,vbcrlf))
  COLORMAX=val(Replace(node.Attributes.getNamedItem(&quot;COLORMAX&quot;).nodeValue,vbLf,vbcrlf))
  WIDTHMIN=val(Replace(node.Attributes.getNamedItem(&quot;WIDTHMIN&quot;).nodeValue,vbLf,vbcrlf))
  WIDTHMAX=val(Replace(node.Attributes.getNamedItem(&quot;WIDTHMAX&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;PTYPE&quot;, replace(cstr(PTYPE),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PNAME&quot;, PNAME
  node.setAttribute &quot;CHARTNUM&quot;, replace(cstr(CHARTNUM),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;VARNUM&quot;, replace(cstr(VARNUM),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;VALCOUNT&quot;, replace(cstr(VALCOUNT),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WIDTH&quot;, replace(cstr(WIDTH),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;COLOR&quot;, replace(cstr(COLOR),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PARAM_ENABLE&quot;, PARAM_ENABLE
  node.setAttribute &quot;COLORMIN&quot;, replace(cstr(COLORMIN),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;COLORMAX&quot;, replace(cstr(COLORMAX),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WIDTHMIN&quot;, replace(cstr(WIDTHMIN),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WIDTHMAX&quot;, replace(cstr(WIDTHMAX),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;CHARTSETTINGS&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;CHARTSETTINGS&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;CHARTSETTINGS&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;CHARTSETTINGS&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="CHARTSETTINGS_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Настройки графиков
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;CHARTSETTINGS&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;CHARTSETTINGS.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as  CHARTSETTINGS
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  CHARTSETTINGS
 dim LID as  string
 dim o as  CHARTSETTINGS
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  CHARTSETTINGS
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as CHARTSETTINGS
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as CHARTSETTINGS
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as CHARTSETTINGS
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as CHARTSETTINGS
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as CHARTSETTINGS
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as CHARTSETTINGS
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CHARTSETTINGS
'  ,или Nothing
'See Also:
'Example:
' dim variable as CHARTSETTINGS
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as CHARTSETTINGS
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  CHARTSETTINGS
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;CHARTSETTINGS.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As CHARTSETTINGS
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As CHARTSETTINGS
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!CHARTSETTINGSID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as CHARTSETTINGS
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;CHARTSETTINGS_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;CHARTSETTINGS&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as CHARTSETTINGS
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;CHARTSETTINGS&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Тип архива&quot;, 0, 0, &quot;PTYPE&quot;).SortType =2
  YGrid.Columns.Add(&quot;Название параметра&quot;, 0, 0, &quot;PNAME&quot;).SortType =1
  YGrid.Columns.Add(&quot;Номер графика 0-2&quot;, 0, 0, &quot;CHARTNUM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Количество значений&quot;, 0, 0, &quot;VARNUM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Количество значений&quot;, 0, 0, &quot;VALCOUNT&quot;).SortType =2
  YGrid.Columns.Add(&quot;Толщина&quot;, 0, 0, &quot;WIDTH&quot;).SortType =2
  YGrid.Columns.Add(&quot;Цвет&quot;, 0, 0, &quot;COLOR&quot;).SortType =2
  YGrid.Columns.Add(&quot;Разрешена&quot;, 0, 0, &quot;PARAM_ENABLE&quot;).SortType =1
  YGrid.Columns.Add(&quot;Цвет минимума&quot;, 0, 0, &quot;COLORMIN&quot;).SortType =2
  YGrid.Columns.Add(&quot;Цвет максимума&quot;, 0, 0, &quot;COLORMAX&quot;).SortType =2
  YGrid.Columns.Add(&quot;Толщина минимума&quot;, 0, 0, &quot;WIDTHMIN&quot;).SortType =2
  YGrid.Columns.Add(&quot;Толщина максимума&quot;, 0, 0, &quot;WIDTHMAX&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as CHARTSETTINGS
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.PTYPE, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.PNAME, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.CHARTNUM, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.VARNUM, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.VALCOUNT, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.WIDTH, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.COLOR, vbCrLf, &quot; &quot;), 255)
   if obj.PARAM_ENABLE =-1 then
     Values.Value(8) = &quot;Да&quot;
   end if
   if obj.PARAM_ENABLE =0 then
     Values.Value(8) = &quot;Нет&quot;
   end if
    Values.Value(9) = Left(Replace(obj.COLORMIN, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.COLORMAX, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.WIDTHMIN, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.WIDTHMAX, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;CHARTSETTINGS&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VALUEBOUNDS" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Граничные значения проверяемых параметров
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_PNAME as String
private m_PTYPE as object
Dim m_PTYPE_ID as string
Dim m_PTYPE_ID_BRIEF as string
private m_PMIN as double
private m_PMAX as double
private m_ISMIN as enumBoolean
private m_ISMAX as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;VALUEBOUNDS&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;VALUEBOUNDS.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Имя параметра

'Имя параметра
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PNAME(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PNAME&quot;,PNAME,newvalue

   m_PNAME= newValue
end if
end property

'Имя параметра
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PNAME
public property Get PNAME() as String
 LoadFromDatabase
 AccessTime=Now

   PNAME = m_PNAME
end property
' let 
'Тип архива

'Тип архива
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PTYPE(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PTYPE&quot;,PTYPE,newvalue
on error resume next
m_PTYPE_ID=&quot;&quot;
m_PTYPE_ID=newValue.id
'  set   m_PTYPE= newValue
end if
end property

'Тип архива
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PTYPE
public property Get PTYPE() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PTYPE as object
if  m_PTYPE_ID&lt;&gt;&quot;&quot; then 
  set tmp_PTYPE=Application.FindRowObject(&quot;PARAMTYPE&quot;,m_PTYPE_ID)
  if tmp_PTYPE is nothing then
    m_PTYPE_ID_BRIEF = &quot;&quot; 
  else
    m_PTYPE_ID_BRIEF = tmp_PTYPE.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PARAMTYPE&quot; &amp; m_PTYPE_ID, tmp_PTYPE
  set PTYPE=tmp_PTYPE
  exit property
end if
  '  set PTYPE = m_PTYPE
end property
' let 
'Минимальное значение

'Минимальное значение
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PMIN(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PMIN&quot;,PMIN,newvalue

   m_PMIN= newValue
end if
end property

'Минимальное значение
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PMIN
public property Get PMIN() as double
 LoadFromDatabase
 AccessTime=Now

   PMIN = m_PMIN
end property
' let 
'Максимальное значение

'Максимальное значение
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PMAX(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PMAX&quot;,PMAX,newvalue

   m_PMAX= newValue
end if
end property

'Максимальное значение
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PMAX
public property Get PMAX() as double
 LoadFromDatabase
 AccessTime=Now

   PMAX = m_PMAX
end property
' let 
'Проверять на минимум

'Проверять на минимум
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ISMIN(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ISMIN&quot;,ISMIN,newvalue

   m_ISMIN= newValue
end if
end property

'Проверять на минимум
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. ISMIN
public property Get ISMIN() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   ISMIN = m_ISMIN
end property
' let 
'Проверять на максимум

'Проверять на максимум
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ISMAX(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ISMAX&quot;,ISMAX,newvalue

   m_ISMAX= newValue
end if
end property

'Проверять на максимум
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. ISMAX
public property Get ISMAX() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   ISMAX = m_ISMAX
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;PNAME&quot;,m_PNAME)
nvi.ValueSize = 128
 ' Reference to PARAMTYPE
    if m_PTYPE_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PTYPE&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PTYPE&quot;,m_PTYPE_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;PMIN&quot;,m_PMIN)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;PMAX&quot;,m_PMAX)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;ISMIN&quot;,m_ISMIN)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ISMAX&quot;,m_ISMAX)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; PNAME &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_PNAME=nv.item( &quot;PNAME&quot;).Value
  m_PTYPE_ID=nv.item( &quot;PTYPE&quot;).Value
m_PMIN=nv.item( &quot;PMIN&quot;).Value
m_PMAX=nv.item( &quot;PMAX&quot;).Value
m_ISMIN=nv.item( &quot;ISMIN&quot;).Value
m_ISMAX=nv.item( &quot;ISMAX&quot;).Value
else

m_PNAME=nv.fields( &quot;PNAME&quot;).Value
  m_PTYPE_ID=nv.fields( &quot;PTYPE&quot;).Value
m_PMIN=nv.fields( &quot;PMIN&quot;).Value
m_PMAX=nv.fields( &quot;PMAX&quot;).Value
m_ISMIN=nv.fields( &quot;ISMIN&quot;).Value
m_ISMAX=nv.fields( &quot;ISMAX&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as VALUEBOUNDS
   set o = new VALUEBOUNDS
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;VALUEBOUNDS.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;VALUEBOUNDS.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;VALUEBOUNDS&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;VALUEBOUNDS.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;VALUEBOUNDS&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;VALUEBOUNDS.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_PTYPE_ID=&quot;&quot;
 set m_PTYPE= nothing
 if not Application is nothing then Application.Logger.Message &quot;VALUEBOUNDS.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  PNAME=Replace(node.Attributes.getNamedItem(&quot;PNAME&quot;).nodeValue,vbLf,vbcrlf)
  set PTYPE=nothing
  m_PTYPE_ID=node.Attributes.getNamedItem(&quot;PTYPE&quot;).nodeValue
  m_PTYPE_ID_BRIEF=node.Attributes.getNamedItem(&quot;PTYPE_BRIEF&quot;).nodeValue
  PMIN=val(Replace(node.Attributes.getNamedItem(&quot;PMIN&quot;).nodeValue,vbLf,vbcrlf))
  PMAX=val(Replace(node.Attributes.getNamedItem(&quot;PMAX&quot;).nodeValue,vbLf,vbcrlf))
  ISMIN=node.Attributes.getNamedItem(&quot;ISMIN&quot;).nodeValue
  ISMAX=node.Attributes.getNamedItem(&quot;ISMAX&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;PNAME&quot;, PNAME
  node.setAttribute &quot;PTYPE&quot;, m_PTYPE_ID
  if not (PTYPE is nothing) then 
    node.setAttribute &quot;PTYPE_BRIEF&quot;, PTYPE.BRIEF
  else
    node.setAttribute &quot;PTYPE_BRIEF&quot;, m_PTYPE_ID_BRIEF
  end if
  node.setAttribute &quot;PMIN&quot;, replace(cstr(PMIN),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;PMAX&quot;, replace(cstr(PMAX),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;ISMIN&quot;, ISMIN
  node.setAttribute &quot;ISMAX&quot;, ISMAX
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;VALUEBOUNDS&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;VALUEBOUNDS&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;VALUEBOUNDS&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;VALUEBOUNDS&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="VALUEBOUNDS_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Граничные значения проверяемых параметров
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;VALUEBOUNDS&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;VALUEBOUNDS.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as  VALUEBOUNDS
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  VALUEBOUNDS
 dim LID as  string
 dim o as  VALUEBOUNDS
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  VALUEBOUNDS
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as VALUEBOUNDS
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as VALUEBOUNDS
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as VALUEBOUNDS
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as VALUEBOUNDS
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as VALUEBOUNDS
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as VALUEBOUNDS
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса VALUEBOUNDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as VALUEBOUNDS
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as VALUEBOUNDS
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  VALUEBOUNDS
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;VALUEBOUNDS.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As VALUEBOUNDS
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As VALUEBOUNDS
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!VALUEBOUNDSID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as VALUEBOUNDS
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;VALUEBOUNDS_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;VALUEBOUNDS&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as VALUEBOUNDS
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;VALUEBOUNDS&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Имя параметра&quot;, 0, 0, &quot;PNAME&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тип архива&quot;, 0, 0, &quot;PTYPE&quot;).SortType =1
  YGrid.Columns.Add(&quot;Минимальное значение&quot;, 0, 0, &quot;PMIN&quot;).SortType =2
  YGrid.Columns.Add(&quot;Максимальное значение&quot;, 0, 0, &quot;PMAX&quot;).SortType =2
  YGrid.Columns.Add(&quot;Проверять на минимум&quot;, 0, 0, &quot;ISMIN&quot;).SortType =1
  YGrid.Columns.Add(&quot;Проверять на максимум&quot;, 0, 0, &quot;ISMAX&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as VALUEBOUNDS
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.PNAME, vbCrLf, &quot; &quot;), 255)
   if obj.PTYPE is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.PTYPE.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.PMIN, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.PMAX, vbCrLf, &quot; &quot;), 255)
   if obj.ISMIN =-1 then
     Values.Value(5) = &quot;Да&quot;
   end if
   if obj.ISMIN =0 then
     Values.Value(5) = &quot;Нет&quot;
   end if
   if obj.ISMAX =-1 then
     Values.Value(6) = &quot;Да&quot;
   end if
   if obj.ISMAX =0 then
     Values.Value(6) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;VALUEBOUNDS&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="CONTRACT" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Договорные установки
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_FLD12 as String
private m_FLD13 as String
private m_FLD14 as String
private m_FLD15 as String
private m_FLD16 as String
private m_FLD17 as String
private m_FLD18 as String
private m_FLD19 as String
private m_FLD20 as String
private m_FLD21 as String
private m_FLD22 as String
private m_FLD23 as String
private m_FLD24 as String
private m_FLD25 as String
private m_FLD26 as String
private m_FLD27 as String
private m_FLD28 as String
private m_FLD29 as String
private m_FLD30 as String
private m_FLD31 as String
private m_FLD32 as String
private m_FLD33 as String
private m_FLD34 as String
private m_FLD35 as String
private m_FLD36 as String
private m_FLD37 as String
private m_FLD40 as String
private m_FLD41 as String
private m_FLD42 as String
private m_FLD43 as String
private m_FLD45 as String
private m_FLD46 as String
private m_FLD47 as String
private m_FLD48 as String
private m_FLD49 as String
private m_FLD50 as String
private m_FLD51 as String
private m_FLD52 as String
private m_FLD53 as String
private m_FLD54 as String
private m_FLD55 as String
private m_FLD56 as String
private m_FLD57 as String
private m_FLD58 as String
private m_FLD59 as String
private m_FLD60 as String
private m_FLD61 as String
private m_FLD62 as String
private m_FLD63 as String
private m_FLD64 as String
private m_FLD65 as String
private m_FLD66 as String
private m_FLD67 as String
private m_FLD68 as String
private m_FLD69 as String
private m_FLD70 as String
private m_FLD71 as String
private m_FLD72 as String
private m_FLD73 as String
private m_FLD81 as String
private m_FLD82 as String
private m_FLD83 as String
private m_FLD84 as String
private m_FLD85 as String
private m_FLD86 as String
private m_FLD87 as String
private m_FLD88 as String
private m_FLD89 as String
private m_FLD90 as String
private m_FLD92 as String
private m_FLD93 as String
private m_FLD94 as String
private m_FLD95 as String
private m_FLD96 as String
private m_FLD97 as String
private m_FLD98 as String
private m_FLD99 as String
private m_FLD100 as String
private m_FLD101 as String
private m_FLD102 as String
private m_FLD103 as String
private m_FLD104 as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;CONTRACT&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;CONTRACT.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'№ прибора

'№ прибора
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD12(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD12&quot;,FLD12,newvalue

   m_FLD12= newValue
end if
end property

'№ прибора
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD12
public property Get FLD12() as String
 LoadFromDatabase
 AccessTime=Now

   FLD12 = m_FLD12
end property
' let 
'№ключа

'№ключа
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD13(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD13&quot;,FLD13,newvalue

   m_FLD13= newValue
end if
end property

'№ключа
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD13
public property Get FLD13() as String
 LoadFromDatabase
 AccessTime=Now

   FLD13 = m_FLD13
end property
' let 
'D20ОБ

'D20ОБ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD14(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD14&quot;,FLD14,newvalue

   m_FLD14= newValue
end if
end property

'D20ОБ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD14
public property Get FLD14() as String
 LoadFromDatabase
 AccessTime=Now

   FLD14 = m_FLD14
end property
' let 
'D20ПР

'D20ПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD15(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD15&quot;,FLD15,newvalue

   m_FLD15= newValue
end if
end property

'D20ПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD15
public property Get FLD15() as String
 LoadFromDatabase
 AccessTime=Now

   FLD15 = m_FLD15
end property
' let 
'DyГВС

'DyГВС
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD16(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD16&quot;,FLD16,newvalue

   m_FLD16= newValue
end if
end property

'DyГВС
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD16
public property Get FLD16() as String
 LoadFromDatabase
 AccessTime=Now

   FLD16 = m_FLD16
end property
' let 
'DyОБР

'DyОБР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD17(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD17&quot;,FLD17,newvalue

   m_FLD17= newValue
end if
end property

'DyОБР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD17
public property Get FLD17() as String
 LoadFromDatabase
 AccessTime=Now

   FLD17 = m_FLD17
end property
' let 
'DyПР

'DyПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD18(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD18&quot;,FLD18,newvalue

   m_FLD18= newValue
end if
end property

'DyПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD18
public property Get FLD18() as String
 LoadFromDatabase
 AccessTime=Now

   FLD18 = m_FLD18
end property
' let 
'dРпрОБ

'dРпрОБ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD19(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD19&quot;,FLD19,newvalue

   m_FLD19= newValue
end if
end property

'dРпрОБ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD19
public property Get FLD19() as String
 LoadFromDatabase
 AccessTime=Now

   FLD19 = m_FLD19
end property
' let 
'dРпрПР

'dРпрПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD20(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD20&quot;,FLD20,newvalue

   m_FLD20= newValue
end if
end property

'dРпрПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD20
public property Get FLD20() as String
 LoadFromDatabase
 AccessTime=Now

   FLD20 = m_FLD20
end property
' let 
'G(гвс)ПР

'G(гвс)ПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD21(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD21&quot;,FLD21,newvalue

   m_FLD21= newValue
end if
end property

'G(гвс)ПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD21
public property Get FLD21() as String
 LoadFromDatabase
 AccessTime=Now

   FLD21 = m_FLD21
end property
' let 
'Gгвс

'Gгвс
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD22(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD22&quot;,FLD22,newvalue

   m_FLD22= newValue
end if
end property

'Gгвс
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD22
public property Get FLD22() as String
 LoadFromDatabase
 AccessTime=Now

   FLD22 = m_FLD22
end property
' let 
'Gоб(гвс min)

'Gоб(гвс min)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD23(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD23&quot;,FLD23,newvalue

   m_FLD23= newValue
end if
end property

'Gоб(гвс min)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD23
public property Get FLD23() as String
 LoadFromDatabase
 AccessTime=Now

   FLD23 = m_FLD23
end property
' let 
'Gов

'Gов
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD24(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD24&quot;,FLD24,newvalue

   m_FLD24= newValue
end if
end property

'Gов
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD24
public property Get FLD24() as String
 LoadFromDatabase
 AccessTime=Now

   FLD24 = m_FLD24
end property
' let 
'Gпр(гвс min)

'Gпр(гвс min)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD25(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD25&quot;,FLD25,newvalue

   m_FLD25= newValue
end if
end property

'Gпр(гвс min)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD25
public property Get FLD25() as String
 LoadFromDatabase
 AccessTime=Now

   FLD25 = m_FLD25
end property
' let 
'Gпр_minОБ

'Gпр_minОБ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD26(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD26&quot;,FLD26,newvalue

   m_FLD26= newValue
end if
end property

'Gпр_minОБ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD26
public property Get FLD26() as String
 LoadFromDatabase
 AccessTime=Now

   FLD26 = m_FLD26
end property
' let 
'Gпр_minПР

'Gпр_minПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD27(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD27&quot;,FLD27,newvalue

   m_FLD27= newValue
end if
end property

'Gпр_minПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD27
public property Get FLD27() as String
 LoadFromDatabase
 AccessTime=Now

   FLD27 = m_FLD27
end property
' let 
'GпрОБ

'GпрОБ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD28(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD28&quot;,FLD28,newvalue

   m_FLD28= newValue
end if
end property

'GпрОБ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD28
public property Get FLD28() as String
 LoadFromDatabase
 AccessTime=Now

   FLD28 = m_FLD28
end property
' let 
'GпрПР

'GпрПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD29(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD29&quot;,FLD29,newvalue

   m_FLD29= newValue
end if
end property

'GпрПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD29
public property Get FLD29() as String
 LoadFromDatabase
 AccessTime=Now

   FLD29 = m_FLD29
end property
' let 
'Gут

'Gут
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD30(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD30&quot;,FLD30,newvalue

   m_FLD30= newValue
end if
end property

'Gут
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD30
public property Get FLD30() as String
 LoadFromDatabase
 AccessTime=Now

   FLD30 = m_FLD30
end property
' let 
'д20ОБ

'д20ОБ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD31(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD31&quot;,FLD31,newvalue

   m_FLD31= newValue
end if
end property

'д20ОБ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD31
public property Get FLD31() as String
 LoadFromDatabase
 AccessTime=Now

   FLD31 = m_FLD31
end property
' let 
'д20ПР

'д20ПР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD32(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD32&quot;,FLD32,newvalue

   m_FLD32= newValue
end if
end property

'д20ПР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD32
public property Get FLD32() as String
 LoadFromDatabase
 AccessTime=Now

   FLD32 = m_FLD32
end property
' let 
'Договор

'Договор
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD33(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD33&quot;,FLD33,newvalue

   m_FLD33= newValue
end if
end property

'Договор
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD33
public property Get FLD33() as String
 LoadFromDatabase
 AccessTime=Now

   FLD33 = m_FLD33
end property
' let 
'Договор G2

'Договор G2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD34(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD34&quot;,FLD34,newvalue

   m_FLD34= newValue
end if
end property

'Договор G2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD34
public property Get FLD34() as String
 LoadFromDatabase
 AccessTime=Now

   FLD34 = m_FLD34
end property
' let 
'Договор G1

'Договор G1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD35(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD35&quot;,FLD35,newvalue

   m_FLD35= newValue
end if
end property

'Договор G1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD35
public property Get FLD35() as String
 LoadFromDatabase
 AccessTime=Now

   FLD35 = m_FLD35
end property
' let 
'Источник

'Источник
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD36(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD36&quot;,FLD36,newvalue

   m_FLD36= newValue
end if
end property

'Источник
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD36
public property Get FLD36() as String
 LoadFromDatabase
 AccessTime=Now

   FLD36 = m_FLD36
end property
' let 
'Магистраль

'Магистраль
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD37(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD37&quot;,FLD37,newvalue

   m_FLD37= newValue
end if
end property

'Магистраль
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD37
public property Get FLD37() as String
 LoadFromDatabase
 AccessTime=Now

   FLD37 = m_FLD37
end property
' let 
'Расходомер

'Расходомер
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD40(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD40&quot;,FLD40,newvalue

   m_FLD40= newValue
end if
end property

'Расходомер
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD40
public property Get FLD40() as String
 LoadFromDatabase
 AccessTime=Now

   FLD40 = m_FLD40
end property
' let 
'Расходомер ГВС

'Расходомер ГВС
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD41(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD41&quot;,FLD41,newvalue

   m_FLD41= newValue
end if
end property

'Расходомер ГВС
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD41
public property Get FLD41() as String
 LoadFromDatabase
 AccessTime=Now

   FLD41 = m_FLD41
end property
' let 
'Робр

'Робр
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD42(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD42&quot;,FLD42,newvalue

   m_FLD42= newValue
end if
end property

'Робр
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD42
public property Get FLD42() as String
 LoadFromDatabase
 AccessTime=Now

   FLD42 = m_FLD42
end property
' let 
'Рпр

'Рпр
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD43(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD43&quot;,FLD43,newvalue

   m_FLD43= newValue
end if
end property

'Рпр
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD43
public property Get FLD43() as String
 LoadFromDatabase
 AccessTime=Now

   FLD43 = m_FLD43
end property
' let 
'Способ отбора

'Способ отбора
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD45(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD45&quot;,FLD45,newvalue

   m_FLD45= newValue
end if
end property

'Способ отбора
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD45
public property Get FLD45() as String
 LoadFromDatabase
 AccessTime=Now

   FLD45 = m_FLD45
end property
' let 
'Т_график

'Т_график
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD46(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD46&quot;,FLD46,newvalue

   m_FLD46= newValue
end if
end property

'Т_график
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD46
public property Get FLD46() as String
 LoadFromDatabase
 AccessTime=Now

   FLD46 = m_FLD46
end property
' let 
'Теп_камера

'Теп_камера
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD47(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD47&quot;,FLD47,newvalue

   m_FLD47= newValue
end if
end property

'Теп_камера
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD47
public property Get FLD47() as String
 LoadFromDatabase
 AccessTime=Now

   FLD47 = m_FLD47
end property
' let 
'Тип расходомера

'Тип расходомера
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD48(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD48&quot;,FLD48,newvalue

   m_FLD48= newValue
end if
end property

'Тип расходомера
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD48
public property Get FLD48() as String
 LoadFromDatabase
 AccessTime=Now

   FLD48 = m_FLD48
end property
' let 
'тип термометра

'тип термометра
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD49(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD49&quot;,FLD49,newvalue

   m_FLD49= newValue
end if
end property

'тип термометра
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD49
public property Get FLD49() as String
 LoadFromDatabase
 AccessTime=Now

   FLD49 = m_FLD49
end property
' let 
'Формула

'Формула
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD50(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD50&quot;,FLD50,newvalue

   m_FLD50= newValue
end if
end property

'Формула
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD50
public property Get FLD50() as String
 LoadFromDatabase
 AccessTime=Now

   FLD50 = m_FLD50
end property
' let 
'Наименование счетчика

'Наименование счетчика
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD51(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD51&quot;,FLD51,newvalue

   m_FLD51= newValue
end if
end property

'Наименование счетчика
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD51
public property Get FLD51() as String
 LoadFromDatabase
 AccessTime=Now

   FLD51 = m_FLD51
end property
' let 
'Схема

'Схема
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD52(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD52&quot;,FLD52,newvalue

   m_FLD52= newValue
end if
end property

'Схема
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD52
public property Get FLD52() as String
 LoadFromDatabase
 AccessTime=Now

   FLD52 = m_FLD52
end property
' let 
'Qот

'Qот
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD53(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD53&quot;,FLD53,newvalue

   m_FLD53= newValue
end if
end property

'Qот
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD53
public property Get FLD53() as String
 LoadFromDatabase
 AccessTime=Now

   FLD53 = m_FLD53
end property
' let 
'Qв

'Qв
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD54(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD54&quot;,FLD54,newvalue

   m_FLD54= newValue
end if
end property

'Qв
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD54
public property Get FLD54() as String
 LoadFromDatabase
 AccessTime=Now

   FLD54 = m_FLD54
end property
' let 
'Qгвс

'Qгвс
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD55(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD55&quot;,FLD55,newvalue

   m_FLD55= newValue
end if
end property

'Qгвс
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD55
public property Get FLD55() as String
 LoadFromDatabase
 AccessTime=Now

   FLD55 = m_FLD55
end property
' let 
'Qну

'Qну
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD56(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD56&quot;,FLD56,newvalue

   m_FLD56= newValue
end if
end property

'Qну
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD56
public property Get FLD56() as String
 LoadFromDatabase
 AccessTime=Now

   FLD56 = m_FLD56
end property
' let 
'Gот

'Gот
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD57(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD57&quot;,FLD57,newvalue

   m_FLD57= newValue
end if
end property

'Gот
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD57
public property Get FLD57() as String
 LoadFromDatabase
 AccessTime=Now

   FLD57 = m_FLD57
end property
' let 
'Gв

'Gв
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD58(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD58&quot;,FLD58,newvalue

   m_FLD58= newValue
end if
end property

'Gв
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD58
public property Get FLD58() as String
 LoadFromDatabase
 AccessTime=Now

   FLD58 = m_FLD58
end property
' let 
'Gну

'Gну
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD59(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD59&quot;,FLD59,newvalue

   m_FLD59= newValue
end if
end property

'Gну
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD59
public property Get FLD59() as String
 LoadFromDatabase
 AccessTime=Now

   FLD59 = m_FLD59
end property
' let 
'Часов_архив

'Часов_архив
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD60(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD60&quot;,FLD60,newvalue

   m_FLD60= newValue
end if
end property

'Часов_архив
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD60
public property Get FLD60() as String
 LoadFromDatabase
 AccessTime=Now

   FLD60 = m_FLD60
end property
' let 
'Сут_архив

'Сут_архив
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD61(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD61&quot;,FLD61,newvalue

   m_FLD61= newValue
end if
end property

'Сут_архив
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD61
public property Get FLD61() as String
 LoadFromDatabase
 AccessTime=Now

   FLD61 = m_FLD61
end property
' let 
'Термопреобр ГВС

'Термопреобр ГВС
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD62(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD62&quot;,FLD62,newvalue

   m_FLD62= newValue
end if
end property

'Термопреобр ГВС
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD62
public property Get FLD62() as String
 LoadFromDatabase
 AccessTime=Now

   FLD62 = m_FLD62
end property
' let 
'Т1

'Т1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD63(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD63&quot;,FLD63,newvalue

   m_FLD63= newValue
end if
end property

'Т1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD63
public property Get FLD63() as String
 LoadFromDatabase
 AccessTime=Now

   FLD63 = m_FLD63
end property
' let 
'Т2

'Т2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD64(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD64&quot;,FLD64,newvalue

   m_FLD64= newValue
end if
end property

'Т2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD64
public property Get FLD64() as String
 LoadFromDatabase
 AccessTime=Now

   FLD64 = m_FLD64
end property
' let 
'Т3

'Т3
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD65(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD65&quot;,FLD65,newvalue

   m_FLD65= newValue
end if
end property

'Т3
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD65
public property Get FLD65() as String
 LoadFromDatabase
 AccessTime=Now

   FLD65 = m_FLD65
end property
' let 
'Т4

'Т4
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD66(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD66&quot;,FLD66,newvalue

   m_FLD66= newValue
end if
end property

'Т4
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD66
public property Get FLD66() as String
 LoadFromDatabase
 AccessTime=Now

   FLD66 = m_FLD66
end property
' let 
'Gтех

'Gтех
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD67(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD67&quot;,FLD67,newvalue

   m_FLD67= newValue
end if
end property

'Gтех
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD67
public property Get FLD67() as String
 LoadFromDatabase
 AccessTime=Now

   FLD67 = m_FLD67
end property
' let 
'Gтех_гвс

'Gтех_гвс
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD68(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD68&quot;,FLD68,newvalue

   m_FLD68= newValue
end if
end property

'Gтех_гвс
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD68
public property Get FLD68() as String
 LoadFromDatabase
 AccessTime=Now

   FLD68 = m_FLD68
end property
' let 
'Gгвс_м

'Gгвс_м
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD69(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD69&quot;,FLD69,newvalue

   m_FLD69= newValue
end if
end property

'Gгвс_м
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD69
public property Get FLD69() as String
 LoadFromDatabase
 AccessTime=Now

   FLD69 = m_FLD69
end property
' let 
'Qтех

'Qтех
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD70(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD70&quot;,FLD70,newvalue

   m_FLD70= newValue
end if
end property

'Qтех
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD70
public property Get FLD70() as String
 LoadFromDatabase
 AccessTime=Now

   FLD70 = m_FLD70
end property
' let 
'Qвент

'Qвент
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD71(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD71&quot;,FLD71,newvalue

   m_FLD71= newValue
end if
end property

'Qвент
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD71
public property Get FLD71() as String
 LoadFromDatabase
 AccessTime=Now

   FLD71 = m_FLD71
end property
' let 
'Тхв

'Тхв
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD72(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD72&quot;,FLD72,newvalue

   m_FLD72= newValue
end if
end property

'Тхв
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD72
public property Get FLD72() as String
 LoadFromDatabase
 AccessTime=Now

   FLD72 = m_FLD72
end property
' let 
'Расходомер ГВСц

'Расходомер ГВСц
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD73(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD73&quot;,FLD73,newvalue

   m_FLD73= newValue
end if
end property

'Расходомер ГВСц
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD73
public property Get FLD73() as String
 LoadFromDatabase
 AccessTime=Now

   FLD73 = m_FLD73
end property
' let 
'Формула2

'Формула2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD81(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD81&quot;,FLD81,newvalue

   m_FLD81= newValue
end if
end property

'Формула2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD81
public property Get FLD81() as String
 LoadFromDatabase
 AccessTime=Now

   FLD81 = m_FLD81
end property
' let 
'Термопреобр

'Термопреобр
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD82(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD82&quot;,FLD82,newvalue

   m_FLD82= newValue
end if
end property

'Термопреобр
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD82
public property Get FLD82() as String
 LoadFromDatabase
 AccessTime=Now

   FLD82 = m_FLD82
end property
' let 
'Gвент

'Gвент
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD83(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD83&quot;,FLD83,newvalue

   m_FLD83= newValue
end if
end property

'Gвент
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD83
public property Get FLD83() as String
 LoadFromDatabase
 AccessTime=Now

   FLD83 = m_FLD83
end property
' let 
'Код УУТЭ

'Код УУТЭ
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD84(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD84&quot;,FLD84,newvalue

   m_FLD84= newValue
end if
end property

'Код УУТЭ
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD84
public property Get FLD84() as String
 LoadFromDatabase
 AccessTime=Now

   FLD84 = m_FLD84
end property
' let 
'Сист_теплопотребления

'Сист_теплопотребления
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD85(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD85&quot;,FLD85,newvalue

   m_FLD85= newValue
end if
end property

'Сист_теплопотребления
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD85
public property Get FLD85() as String
 LoadFromDatabase
 AccessTime=Now

   FLD85 = m_FLD85
end property
' let 
'Qтех_гвс

'Qтех_гвс
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD86(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD86&quot;,FLD86,newvalue

   m_FLD86= newValue
end if
end property

'Qтех_гвс
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD86
public property Get FLD86() as String
 LoadFromDatabase
 AccessTime=Now

   FLD86 = m_FLD86
end property
' let 
'Qтех_гвс ср

'Qтех_гвс ср
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD87(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD87&quot;,FLD87,newvalue

   m_FLD87= newValue
end if
end property

'Qтех_гвс ср
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD87
public property Get FLD87() as String
 LoadFromDatabase
 AccessTime=Now

   FLD87 = m_FLD87
end property
' let 
'Qгвс ср

'Qгвс ср
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD88(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD88&quot;,FLD88,newvalue

   m_FLD88= newValue
end if
end property

'Qгвс ср
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD88
public property Get FLD88() as String
 LoadFromDatabase
 AccessTime=Now

   FLD88 = m_FLD88
end property
' let 
'Дата поверки

'Дата поверки
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD89(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD89&quot;,FLD89,newvalue

   m_FLD89= newValue
end if
end property

'Дата поверки
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD89
public property Get FLD89() as String
 LoadFromDatabase
 AccessTime=Now

   FLD89 = m_FLD89
end property
' let 
'Фамилия

'Фамилия
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD90(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD90&quot;,FLD90,newvalue

   m_FLD90= newValue
end if
end property

'Фамилия
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD90
public property Get FLD90() as String
 LoadFromDatabase
 AccessTime=Now

   FLD90 = m_FLD90
end property
' let 
'Узел учета

'Узел учета
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD92(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD92&quot;,FLD92,newvalue

   m_FLD92= newValue
end if
end property

'Узел учета
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD92
public property Get FLD92() as String
 LoadFromDatabase
 AccessTime=Now

   FLD92 = m_FLD92
end property
' let 
'Стр.адрес

'Стр.адрес
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD93(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD93&quot;,FLD93,newvalue

   m_FLD93= newValue
end if
end property

'Стр.адрес
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD93
public property Get FLD93() as String
 LoadFromDatabase
 AccessTime=Now

   FLD93 = m_FLD93
end property
' let 
'G(гвс)ОБР

'G(гвс)ОБР
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD94(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD94&quot;,FLD94,newvalue

   m_FLD94= newValue
end if
end property

'G(гвс)ОБР
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD94
public property Get FLD94() as String
 LoadFromDatabase
 AccessTime=Now

   FLD94 = m_FLD94
end property
' let 
'DyГВСц

'DyГВСц
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD95(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD95&quot;,FLD95,newvalue

   m_FLD95= newValue
end if
end property

'DyГВСц
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD95
public property Get FLD95() as String
 LoadFromDatabase
 AccessTime=Now

   FLD95 = m_FLD95
end property
' let 
'Цена_имп_M1

'Цена_имп_M1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD96(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD96&quot;,FLD96,newvalue

   m_FLD96= newValue
end if
end property

'Цена_имп_M1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD96
public property Get FLD96() as String
 LoadFromDatabase
 AccessTime=Now

   FLD96 = m_FLD96
end property
' let 
'Цена_имп_M2

'Цена_имп_M2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD97(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD97&quot;,FLD97,newvalue

   m_FLD97= newValue
end if
end property

'Цена_имп_M2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD97
public property Get FLD97() as String
 LoadFromDatabase
 AccessTime=Now

   FLD97 = m_FLD97
end property
' let 
'Цена_имп_M1гв

'Цена_имп_M1гв
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD98(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD98&quot;,FLD98,newvalue

   m_FLD98= newValue
end if
end property

'Цена_имп_M1гв
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD98
public property Get FLD98() as String
 LoadFromDatabase
 AccessTime=Now

   FLD98 = m_FLD98
end property
' let 
'Цена_имп_M2гв

'Цена_имп_M2гв
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD99(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD99&quot;,FLD99,newvalue

   m_FLD99= newValue
end if
end property

'Цена_имп_M2гв
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD99
public property Get FLD99() as String
 LoadFromDatabase
 AccessTime=Now

   FLD99 = m_FLD99
end property
' let 
'Доп_погр_изм_M1%

'Доп_погр_изм_M1%
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD100(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD100&quot;,FLD100,newvalue

   m_FLD100= newValue
end if
end property

'Доп_погр_изм_M1%
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD100
public property Get FLD100() as String
 LoadFromDatabase
 AccessTime=Now

   FLD100 = m_FLD100
end property
' let 
'Доп_погр_изм_M2%

'Доп_погр_изм_M2%
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD101(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD101&quot;,FLD101,newvalue

   m_FLD101= newValue
end if
end property

'Доп_погр_изм_M2%
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD101
public property Get FLD101() as String
 LoadFromDatabase
 AccessTime=Now

   FLD101 = m_FLD101
end property
' let 
'Доп_погр_изм_M1гв%

'Доп_погр_изм_M1гв%
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD102(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD102&quot;,FLD102,newvalue

   m_FLD102= newValue
end if
end property

'Доп_погр_изм_M1гв%
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD102
public property Get FLD102() as String
 LoadFromDatabase
 AccessTime=Now

   FLD102 = m_FLD102
end property
' let 
'Доп_погр_изм_M2гв%

'Доп_погр_изм_M2гв%
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD103(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD103&quot;,FLD103,newvalue

   m_FLD103= newValue
end if
end property

'Доп_погр_изм_M2гв%
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD103
public property Get FLD103() as String
 LoadFromDatabase
 AccessTime=Now

   FLD103 = m_FLD103
end property
' let 
'Расходомер M2

'Расходомер M2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FLD104(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FLD104&quot;,FLD104,newvalue

   m_FLD104= newValue
end if
end property

'Расходомер M2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FLD104
public property Get FLD104() as String
 LoadFromDatabase
 AccessTime=Now

   FLD104 = m_FLD104
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;FLD12&quot;,m_FLD12)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD13&quot;,m_FLD13)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD14&quot;,m_FLD14)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD15&quot;,m_FLD15)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD16&quot;,m_FLD16)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD17&quot;,m_FLD17)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD18&quot;,m_FLD18)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD19&quot;,m_FLD19)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD20&quot;,m_FLD20)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD21&quot;,m_FLD21)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD22&quot;,m_FLD22)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD23&quot;,m_FLD23)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD24&quot;,m_FLD24)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD25&quot;,m_FLD25)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD26&quot;,m_FLD26)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD27&quot;,m_FLD27)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD28&quot;,m_FLD28)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD29&quot;,m_FLD29)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD30&quot;,m_FLD30)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD31&quot;,m_FLD31)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD32&quot;,m_FLD32)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD33&quot;,m_FLD33)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD34&quot;,m_FLD34)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD35&quot;,m_FLD35)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD36&quot;,m_FLD36)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD37&quot;,m_FLD37)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD40&quot;,m_FLD40)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD41&quot;,m_FLD41)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD42&quot;,m_FLD42)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD43&quot;,m_FLD43)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD45&quot;,m_FLD45)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD46&quot;,m_FLD46)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD47&quot;,m_FLD47)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD48&quot;,m_FLD48)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD49&quot;,m_FLD49)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD50&quot;,m_FLD50)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD51&quot;,m_FLD51)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD52&quot;,m_FLD52)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD53&quot;,m_FLD53)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD54&quot;,m_FLD54)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD55&quot;,m_FLD55)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD56&quot;,m_FLD56)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD57&quot;,m_FLD57)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD58&quot;,m_FLD58)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD59&quot;,m_FLD59)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD60&quot;,m_FLD60)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD61&quot;,m_FLD61)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD62&quot;,m_FLD62)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD63&quot;,m_FLD63)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD64&quot;,m_FLD64)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD65&quot;,m_FLD65)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD66&quot;,m_FLD66)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD67&quot;,m_FLD67)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD68&quot;,m_FLD68)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD69&quot;,m_FLD69)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD70&quot;,m_FLD70)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD71&quot;,m_FLD71)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD72&quot;,m_FLD72)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD73&quot;,m_FLD73)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD81&quot;,m_FLD81)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD82&quot;,m_FLD82)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD83&quot;,m_FLD83)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD84&quot;,m_FLD84)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD85&quot;,m_FLD85)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD86&quot;,m_FLD86)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD87&quot;,m_FLD87)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD88&quot;,m_FLD88)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD89&quot;,m_FLD89)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD90&quot;,m_FLD90)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD92&quot;,m_FLD92)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD93&quot;,m_FLD93)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD94&quot;,m_FLD94)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD95&quot;,m_FLD95)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD96&quot;,m_FLD96)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD97&quot;,m_FLD97)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD98&quot;,m_FLD98)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD99&quot;,m_FLD99)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD100&quot;,m_FLD100)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD101&quot;,m_FLD101)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD102&quot;,m_FLD102)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD103&quot;,m_FLD103)
nvi.ValueSize = 96
  set nvi=nv.Add( &quot;FLD104&quot;,m_FLD104)
nvi.ValueSize = 96
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; FLD12 &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_FLD12=nv.item( &quot;FLD12&quot;).Value
m_FLD13=nv.item( &quot;FLD13&quot;).Value
m_FLD14=nv.item( &quot;FLD14&quot;).Value
m_FLD15=nv.item( &quot;FLD15&quot;).Value
m_FLD16=nv.item( &quot;FLD16&quot;).Value
m_FLD17=nv.item( &quot;FLD17&quot;).Value
m_FLD18=nv.item( &quot;FLD18&quot;).Value
m_FLD19=nv.item( &quot;FLD19&quot;).Value
m_FLD20=nv.item( &quot;FLD20&quot;).Value
m_FLD21=nv.item( &quot;FLD21&quot;).Value
m_FLD22=nv.item( &quot;FLD22&quot;).Value
m_FLD23=nv.item( &quot;FLD23&quot;).Value
m_FLD24=nv.item( &quot;FLD24&quot;).Value
m_FLD25=nv.item( &quot;FLD25&quot;).Value
m_FLD26=nv.item( &quot;FLD26&quot;).Value
m_FLD27=nv.item( &quot;FLD27&quot;).Value
m_FLD28=nv.item( &quot;FLD28&quot;).Value
m_FLD29=nv.item( &quot;FLD29&quot;).Value
m_FLD30=nv.item( &quot;FLD30&quot;).Value
m_FLD31=nv.item( &quot;FLD31&quot;).Value
m_FLD32=nv.item( &quot;FLD32&quot;).Value
m_FLD33=nv.item( &quot;FLD33&quot;).Value
m_FLD34=nv.item( &quot;FLD34&quot;).Value
m_FLD35=nv.item( &quot;FLD35&quot;).Value
m_FLD36=nv.item( &quot;FLD36&quot;).Value
m_FLD37=nv.item( &quot;FLD37&quot;).Value
m_FLD40=nv.item( &quot;FLD40&quot;).Value
m_FLD41=nv.item( &quot;FLD41&quot;).Value
m_FLD42=nv.item( &quot;FLD42&quot;).Value
m_FLD43=nv.item( &quot;FLD43&quot;).Value
m_FLD45=nv.item( &quot;FLD45&quot;).Value
m_FLD46=nv.item( &quot;FLD46&quot;).Value
m_FLD47=nv.item( &quot;FLD47&quot;).Value
m_FLD48=nv.item( &quot;FLD48&quot;).Value
m_FLD49=nv.item( &quot;FLD49&quot;).Value
m_FLD50=nv.item( &quot;FLD50&quot;).Value
m_FLD51=nv.item( &quot;FLD51&quot;).Value
m_FLD52=nv.item( &quot;FLD52&quot;).Value
m_FLD53=nv.item( &quot;FLD53&quot;).Value
m_FLD54=nv.item( &quot;FLD54&quot;).Value
m_FLD55=nv.item( &quot;FLD55&quot;).Value
m_FLD56=nv.item( &quot;FLD56&quot;).Value
m_FLD57=nv.item( &quot;FLD57&quot;).Value
m_FLD58=nv.item( &quot;FLD58&quot;).Value
m_FLD59=nv.item( &quot;FLD59&quot;).Value
m_FLD60=nv.item( &quot;FLD60&quot;).Value
m_FLD61=nv.item( &quot;FLD61&quot;).Value
m_FLD62=nv.item( &quot;FLD62&quot;).Value
m_FLD63=nv.item( &quot;FLD63&quot;).Value
m_FLD64=nv.item( &quot;FLD64&quot;).Value
m_FLD65=nv.item( &quot;FLD65&quot;).Value
m_FLD66=nv.item( &quot;FLD66&quot;).Value
m_FLD67=nv.item( &quot;FLD67&quot;).Value
m_FLD68=nv.item( &quot;FLD68&quot;).Value
m_FLD69=nv.item( &quot;FLD69&quot;).Value
m_FLD70=nv.item( &quot;FLD70&quot;).Value
m_FLD71=nv.item( &quot;FLD71&quot;).Value
m_FLD72=nv.item( &quot;FLD72&quot;).Value
m_FLD73=nv.item( &quot;FLD73&quot;).Value
m_FLD81=nv.item( &quot;FLD81&quot;).Value
m_FLD82=nv.item( &quot;FLD82&quot;).Value
m_FLD83=nv.item( &quot;FLD83&quot;).Value
m_FLD84=nv.item( &quot;FLD84&quot;).Value
m_FLD85=nv.item( &quot;FLD85&quot;).Value
m_FLD86=nv.item( &quot;FLD86&quot;).Value
m_FLD87=nv.item( &quot;FLD87&quot;).Value
m_FLD88=nv.item( &quot;FLD88&quot;).Value
m_FLD89=nv.item( &quot;FLD89&quot;).Value
m_FLD90=nv.item( &quot;FLD90&quot;).Value
m_FLD92=nv.item( &quot;FLD92&quot;).Value
m_FLD93=nv.item( &quot;FLD93&quot;).Value
m_FLD94=nv.item( &quot;FLD94&quot;).Value
m_FLD95=nv.item( &quot;FLD95&quot;).Value
m_FLD96=nv.item( &quot;FLD96&quot;).Value
m_FLD97=nv.item( &quot;FLD97&quot;).Value
m_FLD98=nv.item( &quot;FLD98&quot;).Value
m_FLD99=nv.item( &quot;FLD99&quot;).Value
m_FLD100=nv.item( &quot;FLD100&quot;).Value
m_FLD101=nv.item( &quot;FLD101&quot;).Value
m_FLD102=nv.item( &quot;FLD102&quot;).Value
m_FLD103=nv.item( &quot;FLD103&quot;).Value
m_FLD104=nv.item( &quot;FLD104&quot;).Value
else

m_FLD12=nv.fields( &quot;FLD12&quot;).Value
m_FLD13=nv.fields( &quot;FLD13&quot;).Value
m_FLD14=nv.fields( &quot;FLD14&quot;).Value
m_FLD15=nv.fields( &quot;FLD15&quot;).Value
m_FLD16=nv.fields( &quot;FLD16&quot;).Value
m_FLD17=nv.fields( &quot;FLD17&quot;).Value
m_FLD18=nv.fields( &quot;FLD18&quot;).Value
m_FLD19=nv.fields( &quot;FLD19&quot;).Value
m_FLD20=nv.fields( &quot;FLD20&quot;).Value
m_FLD21=nv.fields( &quot;FLD21&quot;).Value
m_FLD22=nv.fields( &quot;FLD22&quot;).Value
m_FLD23=nv.fields( &quot;FLD23&quot;).Value
m_FLD24=nv.fields( &quot;FLD24&quot;).Value
m_FLD25=nv.fields( &quot;FLD25&quot;).Value
m_FLD26=nv.fields( &quot;FLD26&quot;).Value
m_FLD27=nv.fields( &quot;FLD27&quot;).Value
m_FLD28=nv.fields( &quot;FLD28&quot;).Value
m_FLD29=nv.fields( &quot;FLD29&quot;).Value
m_FLD30=nv.fields( &quot;FLD30&quot;).Value
m_FLD31=nv.fields( &quot;FLD31&quot;).Value
m_FLD32=nv.fields( &quot;FLD32&quot;).Value
m_FLD33=nv.fields( &quot;FLD33&quot;).Value
m_FLD34=nv.fields( &quot;FLD34&quot;).Value
m_FLD35=nv.fields( &quot;FLD35&quot;).Value
m_FLD36=nv.fields( &quot;FLD36&quot;).Value
m_FLD37=nv.fields( &quot;FLD37&quot;).Value
m_FLD40=nv.fields( &quot;FLD40&quot;).Value
m_FLD41=nv.fields( &quot;FLD41&quot;).Value
m_FLD42=nv.fields( &quot;FLD42&quot;).Value
m_FLD43=nv.fields( &quot;FLD43&quot;).Value
m_FLD45=nv.fields( &quot;FLD45&quot;).Value
m_FLD46=nv.fields( &quot;FLD46&quot;).Value
m_FLD47=nv.fields( &quot;FLD47&quot;).Value
m_FLD48=nv.fields( &quot;FLD48&quot;).Value
m_FLD49=nv.fields( &quot;FLD49&quot;).Value
m_FLD50=nv.fields( &quot;FLD50&quot;).Value
m_FLD51=nv.fields( &quot;FLD51&quot;).Value
m_FLD52=nv.fields( &quot;FLD52&quot;).Value
m_FLD53=nv.fields( &quot;FLD53&quot;).Value
m_FLD54=nv.fields( &quot;FLD54&quot;).Value
m_FLD55=nv.fields( &quot;FLD55&quot;).Value
m_FLD56=nv.fields( &quot;FLD56&quot;).Value
m_FLD57=nv.fields( &quot;FLD57&quot;).Value
m_FLD58=nv.fields( &quot;FLD58&quot;).Value
m_FLD59=nv.fields( &quot;FLD59&quot;).Value
m_FLD60=nv.fields( &quot;FLD60&quot;).Value
m_FLD61=nv.fields( &quot;FLD61&quot;).Value
m_FLD62=nv.fields( &quot;FLD62&quot;).Value
m_FLD63=nv.fields( &quot;FLD63&quot;).Value
m_FLD64=nv.fields( &quot;FLD64&quot;).Value
m_FLD65=nv.fields( &quot;FLD65&quot;).Value
m_FLD66=nv.fields( &quot;FLD66&quot;).Value
m_FLD67=nv.fields( &quot;FLD67&quot;).Value
m_FLD68=nv.fields( &quot;FLD68&quot;).Value
m_FLD69=nv.fields( &quot;FLD69&quot;).Value
m_FLD70=nv.fields( &quot;FLD70&quot;).Value
m_FLD71=nv.fields( &quot;FLD71&quot;).Value
m_FLD72=nv.fields( &quot;FLD72&quot;).Value
m_FLD73=nv.fields( &quot;FLD73&quot;).Value
m_FLD81=nv.fields( &quot;FLD81&quot;).Value
m_FLD82=nv.fields( &quot;FLD82&quot;).Value
m_FLD83=nv.fields( &quot;FLD83&quot;).Value
m_FLD84=nv.fields( &quot;FLD84&quot;).Value
m_FLD85=nv.fields( &quot;FLD85&quot;).Value
m_FLD86=nv.fields( &quot;FLD86&quot;).Value
m_FLD87=nv.fields( &quot;FLD87&quot;).Value
m_FLD88=nv.fields( &quot;FLD88&quot;).Value
m_FLD89=nv.fields( &quot;FLD89&quot;).Value
m_FLD90=nv.fields( &quot;FLD90&quot;).Value
m_FLD92=nv.fields( &quot;FLD92&quot;).Value
m_FLD93=nv.fields( &quot;FLD93&quot;).Value
m_FLD94=nv.fields( &quot;FLD94&quot;).Value
m_FLD95=nv.fields( &quot;FLD95&quot;).Value
m_FLD96=nv.fields( &quot;FLD96&quot;).Value
m_FLD97=nv.fields( &quot;FLD97&quot;).Value
m_FLD98=nv.fields( &quot;FLD98&quot;).Value
m_FLD99=nv.fields( &quot;FLD99&quot;).Value
m_FLD100=nv.fields( &quot;FLD100&quot;).Value
m_FLD101=nv.fields( &quot;FLD101&quot;).Value
m_FLD102=nv.fields( &quot;FLD102&quot;).Value
m_FLD103=nv.fields( &quot;FLD103&quot;).Value
m_FLD104=nv.fields( &quot;FLD104&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as CONTRACT
   set o = new CONTRACT
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;CONTRACT.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;CONTRACT.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;CONTRACT&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;CONTRACT.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;CONTRACT&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;CONTRACT.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;CONTRACT.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  FLD12=Replace(node.Attributes.getNamedItem(&quot;FLD12&quot;).nodeValue,vbLf,vbcrlf)
  FLD13=Replace(node.Attributes.getNamedItem(&quot;FLD13&quot;).nodeValue,vbLf,vbcrlf)
  FLD14=Replace(node.Attributes.getNamedItem(&quot;FLD14&quot;).nodeValue,vbLf,vbcrlf)
  FLD15=Replace(node.Attributes.getNamedItem(&quot;FLD15&quot;).nodeValue,vbLf,vbcrlf)
  FLD16=Replace(node.Attributes.getNamedItem(&quot;FLD16&quot;).nodeValue,vbLf,vbcrlf)
  FLD17=Replace(node.Attributes.getNamedItem(&quot;FLD17&quot;).nodeValue,vbLf,vbcrlf)
  FLD18=Replace(node.Attributes.getNamedItem(&quot;FLD18&quot;).nodeValue,vbLf,vbcrlf)
  FLD19=Replace(node.Attributes.getNamedItem(&quot;FLD19&quot;).nodeValue,vbLf,vbcrlf)
  FLD20=Replace(node.Attributes.getNamedItem(&quot;FLD20&quot;).nodeValue,vbLf,vbcrlf)
  FLD21=Replace(node.Attributes.getNamedItem(&quot;FLD21&quot;).nodeValue,vbLf,vbcrlf)
  FLD22=Replace(node.Attributes.getNamedItem(&quot;FLD22&quot;).nodeValue,vbLf,vbcrlf)
  FLD23=Replace(node.Attributes.getNamedItem(&quot;FLD23&quot;).nodeValue,vbLf,vbcrlf)
  FLD24=Replace(node.Attributes.getNamedItem(&quot;FLD24&quot;).nodeValue,vbLf,vbcrlf)
  FLD25=Replace(node.Attributes.getNamedItem(&quot;FLD25&quot;).nodeValue,vbLf,vbcrlf)
  FLD26=Replace(node.Attributes.getNamedItem(&quot;FLD26&quot;).nodeValue,vbLf,vbcrlf)
  FLD27=Replace(node.Attributes.getNamedItem(&quot;FLD27&quot;).nodeValue,vbLf,vbcrlf)
  FLD28=Replace(node.Attributes.getNamedItem(&quot;FLD28&quot;).nodeValue,vbLf,vbcrlf)
  FLD29=Replace(node.Attributes.getNamedItem(&quot;FLD29&quot;).nodeValue,vbLf,vbcrlf)
  FLD30=Replace(node.Attributes.getNamedItem(&quot;FLD30&quot;).nodeValue,vbLf,vbcrlf)
  FLD31=Replace(node.Attributes.getNamedItem(&quot;FLD31&quot;).nodeValue,vbLf,vbcrlf)
  FLD32=Replace(node.Attributes.getNamedItem(&quot;FLD32&quot;).nodeValue,vbLf,vbcrlf)
  FLD33=Replace(node.Attributes.getNamedItem(&quot;FLD33&quot;).nodeValue,vbLf,vbcrlf)
  FLD34=Replace(node.Attributes.getNamedItem(&quot;FLD34&quot;).nodeValue,vbLf,vbcrlf)
  FLD35=Replace(node.Attributes.getNamedItem(&quot;FLD35&quot;).nodeValue,vbLf,vbcrlf)
  FLD36=Replace(node.Attributes.getNamedItem(&quot;FLD36&quot;).nodeValue,vbLf,vbcrlf)
  FLD37=Replace(node.Attributes.getNamedItem(&quot;FLD37&quot;).nodeValue,vbLf,vbcrlf)
  FLD40=Replace(node.Attributes.getNamedItem(&quot;FLD40&quot;).nodeValue,vbLf,vbcrlf)
  FLD41=Replace(node.Attributes.getNamedItem(&quot;FLD41&quot;).nodeValue,vbLf,vbcrlf)
  FLD42=Replace(node.Attributes.getNamedItem(&quot;FLD42&quot;).nodeValue,vbLf,vbcrlf)
  FLD43=Replace(node.Attributes.getNamedItem(&quot;FLD43&quot;).nodeValue,vbLf,vbcrlf)
  FLD45=Replace(node.Attributes.getNamedItem(&quot;FLD45&quot;).nodeValue,vbLf,vbcrlf)
  FLD46=Replace(node.Attributes.getNamedItem(&quot;FLD46&quot;).nodeValue,vbLf,vbcrlf)
  FLD47=Replace(node.Attributes.getNamedItem(&quot;FLD47&quot;).nodeValue,vbLf,vbcrlf)
  FLD48=Replace(node.Attributes.getNamedItem(&quot;FLD48&quot;).nodeValue,vbLf,vbcrlf)
  FLD49=Replace(node.Attributes.getNamedItem(&quot;FLD49&quot;).nodeValue,vbLf,vbcrlf)
  FLD50=Replace(node.Attributes.getNamedItem(&quot;FLD50&quot;).nodeValue,vbLf,vbcrlf)
  FLD51=Replace(node.Attributes.getNamedItem(&quot;FLD51&quot;).nodeValue,vbLf,vbcrlf)
  FLD52=Replace(node.Attributes.getNamedItem(&quot;FLD52&quot;).nodeValue,vbLf,vbcrlf)
  FLD53=Replace(node.Attributes.getNamedItem(&quot;FLD53&quot;).nodeValue,vbLf,vbcrlf)
  FLD54=Replace(node.Attributes.getNamedItem(&quot;FLD54&quot;).nodeValue,vbLf,vbcrlf)
  FLD55=Replace(node.Attributes.getNamedItem(&quot;FLD55&quot;).nodeValue,vbLf,vbcrlf)
  FLD56=Replace(node.Attributes.getNamedItem(&quot;FLD56&quot;).nodeValue,vbLf,vbcrlf)
  FLD57=Replace(node.Attributes.getNamedItem(&quot;FLD57&quot;).nodeValue,vbLf,vbcrlf)
  FLD58=Replace(node.Attributes.getNamedItem(&quot;FLD58&quot;).nodeValue,vbLf,vbcrlf)
  FLD59=Replace(node.Attributes.getNamedItem(&quot;FLD59&quot;).nodeValue,vbLf,vbcrlf)
  FLD60=Replace(node.Attributes.getNamedItem(&quot;FLD60&quot;).nodeValue,vbLf,vbcrlf)
  FLD61=Replace(node.Attributes.getNamedItem(&quot;FLD61&quot;).nodeValue,vbLf,vbcrlf)
  FLD62=Replace(node.Attributes.getNamedItem(&quot;FLD62&quot;).nodeValue,vbLf,vbcrlf)
  FLD63=Replace(node.Attributes.getNamedItem(&quot;FLD63&quot;).nodeValue,vbLf,vbcrlf)
  FLD64=Replace(node.Attributes.getNamedItem(&quot;FLD64&quot;).nodeValue,vbLf,vbcrlf)
  FLD65=Replace(node.Attributes.getNamedItem(&quot;FLD65&quot;).nodeValue,vbLf,vbcrlf)
  FLD66=Replace(node.Attributes.getNamedItem(&quot;FLD66&quot;).nodeValue,vbLf,vbcrlf)
  FLD67=Replace(node.Attributes.getNamedItem(&quot;FLD67&quot;).nodeValue,vbLf,vbcrlf)
  FLD68=Replace(node.Attributes.getNamedItem(&quot;FLD68&quot;).nodeValue,vbLf,vbcrlf)
  FLD69=Replace(node.Attributes.getNamedItem(&quot;FLD69&quot;).nodeValue,vbLf,vbcrlf)
  FLD70=Replace(node.Attributes.getNamedItem(&quot;FLD70&quot;).nodeValue,vbLf,vbcrlf)
  FLD71=Replace(node.Attributes.getNamedItem(&quot;FLD71&quot;).nodeValue,vbLf,vbcrlf)
  FLD72=Replace(node.Attributes.getNamedItem(&quot;FLD72&quot;).nodeValue,vbLf,vbcrlf)
  FLD73=Replace(node.Attributes.getNamedItem(&quot;FLD73&quot;).nodeValue,vbLf,vbcrlf)
  FLD81=Replace(node.Attributes.getNamedItem(&quot;FLD81&quot;).nodeValue,vbLf,vbcrlf)
  FLD82=Replace(node.Attributes.getNamedItem(&quot;FLD82&quot;).nodeValue,vbLf,vbcrlf)
  FLD83=Replace(node.Attributes.getNamedItem(&quot;FLD83&quot;).nodeValue,vbLf,vbcrlf)
  FLD84=Replace(node.Attributes.getNamedItem(&quot;FLD84&quot;).nodeValue,vbLf,vbcrlf)
  FLD85=Replace(node.Attributes.getNamedItem(&quot;FLD85&quot;).nodeValue,vbLf,vbcrlf)
  FLD86=Replace(node.Attributes.getNamedItem(&quot;FLD86&quot;).nodeValue,vbLf,vbcrlf)
  FLD87=Replace(node.Attributes.getNamedItem(&quot;FLD87&quot;).nodeValue,vbLf,vbcrlf)
  FLD88=Replace(node.Attributes.getNamedItem(&quot;FLD88&quot;).nodeValue,vbLf,vbcrlf)
  FLD89=Replace(node.Attributes.getNamedItem(&quot;FLD89&quot;).nodeValue,vbLf,vbcrlf)
  FLD90=Replace(node.Attributes.getNamedItem(&quot;FLD90&quot;).nodeValue,vbLf,vbcrlf)
  FLD92=Replace(node.Attributes.getNamedItem(&quot;FLD92&quot;).nodeValue,vbLf,vbcrlf)
  FLD93=Replace(node.Attributes.getNamedItem(&quot;FLD93&quot;).nodeValue,vbLf,vbcrlf)
  FLD94=Replace(node.Attributes.getNamedItem(&quot;FLD94&quot;).nodeValue,vbLf,vbcrlf)
  FLD95=Replace(node.Attributes.getNamedItem(&quot;FLD95&quot;).nodeValue,vbLf,vbcrlf)
  FLD96=Replace(node.Attributes.getNamedItem(&quot;FLD96&quot;).nodeValue,vbLf,vbcrlf)
  FLD97=Replace(node.Attributes.getNamedItem(&quot;FLD97&quot;).nodeValue,vbLf,vbcrlf)
  FLD98=Replace(node.Attributes.getNamedItem(&quot;FLD98&quot;).nodeValue,vbLf,vbcrlf)
  FLD99=Replace(node.Attributes.getNamedItem(&quot;FLD99&quot;).nodeValue,vbLf,vbcrlf)
  FLD100=Replace(node.Attributes.getNamedItem(&quot;FLD100&quot;).nodeValue,vbLf,vbcrlf)
  FLD101=Replace(node.Attributes.getNamedItem(&quot;FLD101&quot;).nodeValue,vbLf,vbcrlf)
  FLD102=Replace(node.Attributes.getNamedItem(&quot;FLD102&quot;).nodeValue,vbLf,vbcrlf)
  FLD103=Replace(node.Attributes.getNamedItem(&quot;FLD103&quot;).nodeValue,vbLf,vbcrlf)
  FLD104=Replace(node.Attributes.getNamedItem(&quot;FLD104&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;FLD12&quot;, FLD12
  node.setAttribute &quot;FLD13&quot;, FLD13
  node.setAttribute &quot;FLD14&quot;, FLD14
  node.setAttribute &quot;FLD15&quot;, FLD15
  node.setAttribute &quot;FLD16&quot;, FLD16
  node.setAttribute &quot;FLD17&quot;, FLD17
  node.setAttribute &quot;FLD18&quot;, FLD18
  node.setAttribute &quot;FLD19&quot;, FLD19
  node.setAttribute &quot;FLD20&quot;, FLD20
  node.setAttribute &quot;FLD21&quot;, FLD21
  node.setAttribute &quot;FLD22&quot;, FLD22
  node.setAttribute &quot;FLD23&quot;, FLD23
  node.setAttribute &quot;FLD24&quot;, FLD24
  node.setAttribute &quot;FLD25&quot;, FLD25
  node.setAttribute &quot;FLD26&quot;, FLD26
  node.setAttribute &quot;FLD27&quot;, FLD27
  node.setAttribute &quot;FLD28&quot;, FLD28
  node.setAttribute &quot;FLD29&quot;, FLD29
  node.setAttribute &quot;FLD30&quot;, FLD30
  node.setAttribute &quot;FLD31&quot;, FLD31
  node.setAttribute &quot;FLD32&quot;, FLD32
  node.setAttribute &quot;FLD33&quot;, FLD33
  node.setAttribute &quot;FLD34&quot;, FLD34
  node.setAttribute &quot;FLD35&quot;, FLD35
  node.setAttribute &quot;FLD36&quot;, FLD36
  node.setAttribute &quot;FLD37&quot;, FLD37
  node.setAttribute &quot;FLD40&quot;, FLD40
  node.setAttribute &quot;FLD41&quot;, FLD41
  node.setAttribute &quot;FLD42&quot;, FLD42
  node.setAttribute &quot;FLD43&quot;, FLD43
  node.setAttribute &quot;FLD45&quot;, FLD45
  node.setAttribute &quot;FLD46&quot;, FLD46
  node.setAttribute &quot;FLD47&quot;, FLD47
  node.setAttribute &quot;FLD48&quot;, FLD48
  node.setAttribute &quot;FLD49&quot;, FLD49
  node.setAttribute &quot;FLD50&quot;, FLD50
  node.setAttribute &quot;FLD51&quot;, FLD51
  node.setAttribute &quot;FLD52&quot;, FLD52
  node.setAttribute &quot;FLD53&quot;, FLD53
  node.setAttribute &quot;FLD54&quot;, FLD54
  node.setAttribute &quot;FLD55&quot;, FLD55
  node.setAttribute &quot;FLD56&quot;, FLD56
  node.setAttribute &quot;FLD57&quot;, FLD57
  node.setAttribute &quot;FLD58&quot;, FLD58
  node.setAttribute &quot;FLD59&quot;, FLD59
  node.setAttribute &quot;FLD60&quot;, FLD60
  node.setAttribute &quot;FLD61&quot;, FLD61
  node.setAttribute &quot;FLD62&quot;, FLD62
  node.setAttribute &quot;FLD63&quot;, FLD63
  node.setAttribute &quot;FLD64&quot;, FLD64
  node.setAttribute &quot;FLD65&quot;, FLD65
  node.setAttribute &quot;FLD66&quot;, FLD66
  node.setAttribute &quot;FLD67&quot;, FLD67
  node.setAttribute &quot;FLD68&quot;, FLD68
  node.setAttribute &quot;FLD69&quot;, FLD69
  node.setAttribute &quot;FLD70&quot;, FLD70
  node.setAttribute &quot;FLD71&quot;, FLD71
  node.setAttribute &quot;FLD72&quot;, FLD72
  node.setAttribute &quot;FLD73&quot;, FLD73
  node.setAttribute &quot;FLD81&quot;, FLD81
  node.setAttribute &quot;FLD82&quot;, FLD82
  node.setAttribute &quot;FLD83&quot;, FLD83
  node.setAttribute &quot;FLD84&quot;, FLD84
  node.setAttribute &quot;FLD85&quot;, FLD85
  node.setAttribute &quot;FLD86&quot;, FLD86
  node.setAttribute &quot;FLD87&quot;, FLD87
  node.setAttribute &quot;FLD88&quot;, FLD88
  node.setAttribute &quot;FLD89&quot;, FLD89
  node.setAttribute &quot;FLD90&quot;, FLD90
  node.setAttribute &quot;FLD92&quot;, FLD92
  node.setAttribute &quot;FLD93&quot;, FLD93
  node.setAttribute &quot;FLD94&quot;, FLD94
  node.setAttribute &quot;FLD95&quot;, FLD95
  node.setAttribute &quot;FLD96&quot;, FLD96
  node.setAttribute &quot;FLD97&quot;, FLD97
  node.setAttribute &quot;FLD98&quot;, FLD98
  node.setAttribute &quot;FLD99&quot;, FLD99
  node.setAttribute &quot;FLD100&quot;, FLD100
  node.setAttribute &quot;FLD101&quot;, FLD101
  node.setAttribute &quot;FLD102&quot;, FLD102
  node.setAttribute &quot;FLD103&quot;, FLD103
  node.setAttribute &quot;FLD104&quot;, FLD104
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;CONTRACT&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;CONTRACT&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;CONTRACT&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;CONTRACT&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="CONTRACT_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Договорные установки
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;CONTRACT&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;CONTRACT.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as  CONTRACT
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  CONTRACT
 dim LID as  string
 dim o as  CONTRACT
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  CONTRACT
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as CONTRACT
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as CONTRACT
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as CONTRACT
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as CONTRACT
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as CONTRACT
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as CONTRACT
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса CONTRACT
'  ,или Nothing
'See Also:
'Example:
' dim variable as CONTRACT
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as CONTRACT
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  CONTRACT
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;CONTRACT.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As CONTRACT
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As CONTRACT
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!CONTRACTID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as CONTRACT
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;CONTRACT_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;CONTRACT&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as CONTRACT
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;CONTRACT&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;№ прибора&quot;, 0, 0, &quot;FLD12&quot;).SortType =1
  YGrid.Columns.Add(&quot;№ключа&quot;, 0, 0, &quot;FLD13&quot;).SortType =1
  YGrid.Columns.Add(&quot;D20ОБ&quot;, 0, 0, &quot;FLD14&quot;).SortType =1
  YGrid.Columns.Add(&quot;D20ПР&quot;, 0, 0, &quot;FLD15&quot;).SortType =1
  YGrid.Columns.Add(&quot;DyГВС&quot;, 0, 0, &quot;FLD16&quot;).SortType =1
  YGrid.Columns.Add(&quot;DyОБР&quot;, 0, 0, &quot;FLD17&quot;).SortType =1
  YGrid.Columns.Add(&quot;DyПР&quot;, 0, 0, &quot;FLD18&quot;).SortType =1
  YGrid.Columns.Add(&quot;dРпрОБ&quot;, 0, 0, &quot;FLD19&quot;).SortType =1
  YGrid.Columns.Add(&quot;dРпрПР&quot;, 0, 0, &quot;FLD20&quot;).SortType =1
  YGrid.Columns.Add(&quot;G(гвс)ПР&quot;, 0, 0, &quot;FLD21&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gгвс&quot;, 0, 0, &quot;FLD22&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gоб(гвс min)&quot;, 0, 0, &quot;FLD23&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gов&quot;, 0, 0, &quot;FLD24&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gпр(гвс min)&quot;, 0, 0, &quot;FLD25&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gпр_minОБ&quot;, 0, 0, &quot;FLD26&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gпр_minПР&quot;, 0, 0, &quot;FLD27&quot;).SortType =1
  YGrid.Columns.Add(&quot;GпрОБ&quot;, 0, 0, &quot;FLD28&quot;).SortType =1
  YGrid.Columns.Add(&quot;GпрПР&quot;, 0, 0, &quot;FLD29&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gут&quot;, 0, 0, &quot;FLD30&quot;).SortType =1
  YGrid.Columns.Add(&quot;д20ОБ&quot;, 0, 0, &quot;FLD31&quot;).SortType =1
  YGrid.Columns.Add(&quot;д20ПР&quot;, 0, 0, &quot;FLD32&quot;).SortType =1
  YGrid.Columns.Add(&quot;Договор&quot;, 0, 0, &quot;FLD33&quot;).SortType =1
  YGrid.Columns.Add(&quot;Договор G2&quot;, 0, 0, &quot;FLD34&quot;).SortType =1
  YGrid.Columns.Add(&quot;Договор G1&quot;, 0, 0, &quot;FLD35&quot;).SortType =1
  YGrid.Columns.Add(&quot;Источник&quot;, 0, 0, &quot;FLD36&quot;).SortType =1
  YGrid.Columns.Add(&quot;Магистраль&quot;, 0, 0, &quot;FLD37&quot;).SortType =1
  YGrid.Columns.Add(&quot;Расходомер&quot;, 0, 0, &quot;FLD40&quot;).SortType =1
  YGrid.Columns.Add(&quot;Расходомер ГВС&quot;, 0, 0, &quot;FLD41&quot;).SortType =1
  YGrid.Columns.Add(&quot;Робр&quot;, 0, 0, &quot;FLD42&quot;).SortType =1
  YGrid.Columns.Add(&quot;Рпр&quot;, 0, 0, &quot;FLD43&quot;).SortType =1
  YGrid.Columns.Add(&quot;Способ отбора&quot;, 0, 0, &quot;FLD45&quot;).SortType =1
  YGrid.Columns.Add(&quot;Т_график&quot;, 0, 0, &quot;FLD46&quot;).SortType =1
  YGrid.Columns.Add(&quot;Теп_камера&quot;, 0, 0, &quot;FLD47&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тип расходомера&quot;, 0, 0, &quot;FLD48&quot;).SortType =1
  YGrid.Columns.Add(&quot;тип термометра&quot;, 0, 0, &quot;FLD49&quot;).SortType =1
  YGrid.Columns.Add(&quot;Формула&quot;, 0, 0, &quot;FLD50&quot;).SortType =1
  YGrid.Columns.Add(&quot;Наименование счетчика&quot;, 0, 0, &quot;FLD51&quot;).SortType =1
  YGrid.Columns.Add(&quot;Схема&quot;, 0, 0, &quot;FLD52&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qот&quot;, 0, 0, &quot;FLD53&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qв&quot;, 0, 0, &quot;FLD54&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qгвс&quot;, 0, 0, &quot;FLD55&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qну&quot;, 0, 0, &quot;FLD56&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gот&quot;, 0, 0, &quot;FLD57&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gв&quot;, 0, 0, &quot;FLD58&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gну&quot;, 0, 0, &quot;FLD59&quot;).SortType =1
  YGrid.Columns.Add(&quot;Часов_архив&quot;, 0, 0, &quot;FLD60&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сут_архив&quot;, 0, 0, &quot;FLD61&quot;).SortType =1
  YGrid.Columns.Add(&quot;Термопреобр ГВС&quot;, 0, 0, &quot;FLD62&quot;).SortType =1
  YGrid.Columns.Add(&quot;Т1&quot;, 0, 0, &quot;FLD63&quot;).SortType =1
  YGrid.Columns.Add(&quot;Т2&quot;, 0, 0, &quot;FLD64&quot;).SortType =1
  YGrid.Columns.Add(&quot;Т3&quot;, 0, 0, &quot;FLD65&quot;).SortType =1
  YGrid.Columns.Add(&quot;Т4&quot;, 0, 0, &quot;FLD66&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gтех&quot;, 0, 0, &quot;FLD67&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gтех_гвс&quot;, 0, 0, &quot;FLD68&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gгвс_м&quot;, 0, 0, &quot;FLD69&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qтех&quot;, 0, 0, &quot;FLD70&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qвент&quot;, 0, 0, &quot;FLD71&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тхв&quot;, 0, 0, &quot;FLD72&quot;).SortType =1
  YGrid.Columns.Add(&quot;Расходомер ГВСц&quot;, 0, 0, &quot;FLD73&quot;).SortType =1
  YGrid.Columns.Add(&quot;Формула2&quot;, 0, 0, &quot;FLD81&quot;).SortType =1
  YGrid.Columns.Add(&quot;Термопреобр&quot;, 0, 0, &quot;FLD82&quot;).SortType =1
  YGrid.Columns.Add(&quot;Gвент&quot;, 0, 0, &quot;FLD83&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код УУТЭ&quot;, 0, 0, &quot;FLD84&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сист_теплопотребления&quot;, 0, 0, &quot;FLD85&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qтех_гвс&quot;, 0, 0, &quot;FLD86&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qтех_гвс ср&quot;, 0, 0, &quot;FLD87&quot;).SortType =1
  YGrid.Columns.Add(&quot;Qгвс ср&quot;, 0, 0, &quot;FLD88&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата поверки&quot;, 0, 0, &quot;FLD89&quot;).SortType =1
  YGrid.Columns.Add(&quot;Фамилия&quot;, 0, 0, &quot;FLD90&quot;).SortType =1
  YGrid.Columns.Add(&quot;Узел учета&quot;, 0, 0, &quot;FLD92&quot;).SortType =1
  YGrid.Columns.Add(&quot;Стр.адрес&quot;, 0, 0, &quot;FLD93&quot;).SortType =1
  YGrid.Columns.Add(&quot;G(гвс)ОБР&quot;, 0, 0, &quot;FLD94&quot;).SortType =1
  YGrid.Columns.Add(&quot;DyГВСц&quot;, 0, 0, &quot;FLD95&quot;).SortType =1
  YGrid.Columns.Add(&quot;Цена_имп_M1&quot;, 0, 0, &quot;FLD96&quot;).SortType =1
  YGrid.Columns.Add(&quot;Цена_имп_M2&quot;, 0, 0, &quot;FLD97&quot;).SortType =1
  YGrid.Columns.Add(&quot;Цена_имп_M1гв&quot;, 0, 0, &quot;FLD98&quot;).SortType =1
  YGrid.Columns.Add(&quot;Цена_имп_M2гв&quot;, 0, 0, &quot;FLD99&quot;).SortType =1
  YGrid.Columns.Add(&quot;Доп_погр_изм_M1%&quot;, 0, 0, &quot;FLD100&quot;).SortType =1
  YGrid.Columns.Add(&quot;Доп_погр_изм_M2%&quot;, 0, 0, &quot;FLD101&quot;).SortType =1
  YGrid.Columns.Add(&quot;Доп_погр_изм_M1гв%&quot;, 0, 0, &quot;FLD102&quot;).SortType =1
  YGrid.Columns.Add(&quot;Доп_погр_изм_M2гв%&quot;, 0, 0, &quot;FLD103&quot;).SortType =1
  YGrid.Columns.Add(&quot;Расходомер M2&quot;, 0, 0, &quot;FLD104&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as CONTRACT
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.FLD12, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.FLD13, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.FLD14, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.FLD15, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.FLD16, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.FLD17, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.FLD18, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.FLD19, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.FLD20, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.FLD21, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.FLD22, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.FLD23, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.FLD24, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.FLD25, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.FLD26, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.FLD27, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.FLD28, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.FLD29, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.FLD30, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.FLD31, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.FLD32, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.FLD33, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.FLD34, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.FLD35, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.FLD36, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.FLD37, vbCrLf, &quot; &quot;), 255)
    Values.Value(27) = Left(Replace(obj.FLD40, vbCrLf, &quot; &quot;), 255)
    Values.Value(28) = Left(Replace(obj.FLD41, vbCrLf, &quot; &quot;), 255)
    Values.Value(29) = Left(Replace(obj.FLD42, vbCrLf, &quot; &quot;), 255)
    Values.Value(30) = Left(Replace(obj.FLD43, vbCrLf, &quot; &quot;), 255)
    Values.Value(31) = Left(Replace(obj.FLD45, vbCrLf, &quot; &quot;), 255)
    Values.Value(32) = Left(Replace(obj.FLD46, vbCrLf, &quot; &quot;), 255)
    Values.Value(33) = Left(Replace(obj.FLD47, vbCrLf, &quot; &quot;), 255)
    Values.Value(34) = Left(Replace(obj.FLD48, vbCrLf, &quot; &quot;), 255)
    Values.Value(35) = Left(Replace(obj.FLD49, vbCrLf, &quot; &quot;), 255)
    Values.Value(36) = Left(Replace(obj.FLD50, vbCrLf, &quot; &quot;), 255)
    Values.Value(37) = Left(Replace(obj.FLD51, vbCrLf, &quot; &quot;), 255)
    Values.Value(38) = Left(Replace(obj.FLD52, vbCrLf, &quot; &quot;), 255)
    Values.Value(39) = Left(Replace(obj.FLD53, vbCrLf, &quot; &quot;), 255)
    Values.Value(40) = Left(Replace(obj.FLD54, vbCrLf, &quot; &quot;), 255)
    Values.Value(41) = Left(Replace(obj.FLD55, vbCrLf, &quot; &quot;), 255)
    Values.Value(42) = Left(Replace(obj.FLD56, vbCrLf, &quot; &quot;), 255)
    Values.Value(43) = Left(Replace(obj.FLD57, vbCrLf, &quot; &quot;), 255)
    Values.Value(44) = Left(Replace(obj.FLD58, vbCrLf, &quot; &quot;), 255)
    Values.Value(45) = Left(Replace(obj.FLD59, vbCrLf, &quot; &quot;), 255)
    Values.Value(46) = Left(Replace(obj.FLD60, vbCrLf, &quot; &quot;), 255)
    Values.Value(47) = Left(Replace(obj.FLD61, vbCrLf, &quot; &quot;), 255)
    Values.Value(48) = Left(Replace(obj.FLD62, vbCrLf, &quot; &quot;), 255)
    Values.Value(49) = Left(Replace(obj.FLD63, vbCrLf, &quot; &quot;), 255)
    Values.Value(50) = Left(Replace(obj.FLD64, vbCrLf, &quot; &quot;), 255)
    Values.Value(51) = Left(Replace(obj.FLD65, vbCrLf, &quot; &quot;), 255)
    Values.Value(52) = Left(Replace(obj.FLD66, vbCrLf, &quot; &quot;), 255)
    Values.Value(53) = Left(Replace(obj.FLD67, vbCrLf, &quot; &quot;), 255)
    Values.Value(54) = Left(Replace(obj.FLD68, vbCrLf, &quot; &quot;), 255)
    Values.Value(55) = Left(Replace(obj.FLD69, vbCrLf, &quot; &quot;), 255)
    Values.Value(56) = Left(Replace(obj.FLD70, vbCrLf, &quot; &quot;), 255)
    Values.Value(57) = Left(Replace(obj.FLD71, vbCrLf, &quot; &quot;), 255)
    Values.Value(58) = Left(Replace(obj.FLD72, vbCrLf, &quot; &quot;), 255)
    Values.Value(59) = Left(Replace(obj.FLD73, vbCrLf, &quot; &quot;), 255)
    Values.Value(60) = Left(Replace(obj.FLD81, vbCrLf, &quot; &quot;), 255)
    Values.Value(61) = Left(Replace(obj.FLD82, vbCrLf, &quot; &quot;), 255)
    Values.Value(62) = Left(Replace(obj.FLD83, vbCrLf, &quot; &quot;), 255)
    Values.Value(63) = Left(Replace(obj.FLD84, vbCrLf, &quot; &quot;), 255)
    Values.Value(64) = Left(Replace(obj.FLD85, vbCrLf, &quot; &quot;), 255)
    Values.Value(65) = Left(Replace(obj.FLD86, vbCrLf, &quot; &quot;), 255)
    Values.Value(66) = Left(Replace(obj.FLD87, vbCrLf, &quot; &quot;), 255)
    Values.Value(67) = Left(Replace(obj.FLD88, vbCrLf, &quot; &quot;), 255)
    Values.Value(68) = Left(Replace(obj.FLD89, vbCrLf, &quot; &quot;), 255)
    Values.Value(69) = Left(Replace(obj.FLD90, vbCrLf, &quot; &quot;), 255)
    Values.Value(70) = Left(Replace(obj.FLD92, vbCrLf, &quot; &quot;), 255)
    Values.Value(71) = Left(Replace(obj.FLD93, vbCrLf, &quot; &quot;), 255)
    Values.Value(72) = Left(Replace(obj.FLD94, vbCrLf, &quot; &quot;), 255)
    Values.Value(73) = Left(Replace(obj.FLD95, vbCrLf, &quot; &quot;), 255)
    Values.Value(74) = Left(Replace(obj.FLD96, vbCrLf, &quot; &quot;), 255)
    Values.Value(75) = Left(Replace(obj.FLD97, vbCrLf, &quot; &quot;), 255)
    Values.Value(76) = Left(Replace(obj.FLD98, vbCrLf, &quot; &quot;), 255)
    Values.Value(77) = Left(Replace(obj.FLD99, vbCrLf, &quot; &quot;), 255)
    Values.Value(78) = Left(Replace(obj.FLD100, vbCrLf, &quot; &quot;), 255)
    Values.Value(79) = Left(Replace(obj.FLD101, vbCrLf, &quot; &quot;), 255)
    Values.Value(80) = Left(Replace(obj.FLD102, vbCrLf, &quot; &quot;), 255)
    Values.Value(81) = Left(Replace(obj.FLD103, vbCrLf, &quot; &quot;), 255)
    Values.Value(82) = Left(Replace(obj.FLD104, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;CONTRACT&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PLANCALL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела План опроса устройств
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_CSTATUS as long
private m_ICALL as long
private m_NUMCALL as long
private m_CCURR as enumBoolean
private m_CHOUR as enumBoolean
private m_C24 as enumBoolean
private m_CSUM as enumBoolean
private m_NUMHOUR as long
private m_NUM24 as long
private m_NMAXCALL as long
private m_MINREPEAT as long
private m_DLOCK as DATE
private m_ICALL24 as long
private m_ICALLCURR as long
private m_ICALLSUM as long
private m_CHNRONLY as enumBoolean
private m_C24NRONLY as enumBoolean
private m_DNEXTHOUR as DATE
private m_DNEXT24 as DATE
private m_DNEXTCURR as DATE
private m_DNEXTSUM as DATE
private m_DLASTCALL as DATE
private m_DLASTDAY as DATE
private m_DLASTHOUR as DATE
private m_MUSTREPEATDAY as enumBoolean
private m_MUSTREPEATHOUR as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PLANCALL&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PLANCALL.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Блокировка

'Блокировка
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CSTATUS(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CSTATUS&quot;,CSTATUS,newvalue

   m_CSTATUS= newValue
end if
end property

'Блокировка
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. CSTATUS
public property Get CSTATUS() as long
 LoadFromDatabase
 AccessTime=Now

   CSTATUS = m_CSTATUS
end property
' let 
'Интервал опроса (минут) часовых

'Интервал опроса (минут) часовых
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ICALL(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ICALL&quot;,ICALL,newvalue

   m_ICALL= newValue
end if
end property

'Интервал опроса (минут) часовых
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. ICALL
public property Get ICALL() as long
 LoadFromDatabase
 AccessTime=Now

   ICALL = m_ICALL
end property
' let 
'Сколько раз опросить (0 - циклический опрос)

'Сколько раз опросить (0 - циклический опрос)
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NUMCALL(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NUMCALL&quot;,NUMCALL,newvalue

   m_NUMCALL= newValue
end if
end property

'Сколько раз опросить (0 - циклический опрос)
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. NUMCALL
public property Get NUMCALL() as long
 LoadFromDatabase
 AccessTime=Now

   NUMCALL = m_NUMCALL
end property
' let 
'опрашивать текущие

'опрашивать текущие
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CCURR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CCURR&quot;,CCURR,newvalue

   m_CCURR= newValue
end if
end property

'опрашивать текущие
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CCURR
public property Get CCURR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CCURR = m_CCURR
end property
' let 
'опрашивать часовые

'опрашивать часовые
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHOUR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHOUR&quot;,CHOUR,newvalue

   m_CHOUR= newValue
end if
end property

'опрашивать часовые
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CHOUR
public property Get CHOUR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CHOUR = m_CHOUR
end property
' let 
'опрашивать суточные

'опрашивать суточные
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let C24(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;C24&quot;,C24,newvalue

   m_C24= newValue
end if
end property

'опрашивать суточные
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. C24
public property Get C24() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   C24 = m_C24
end property
' let 
'опрашивать итоговые

'опрашивать итоговые
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CSUM(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CSUM&quot;,CSUM,newvalue

   m_CSUM= newValue
end if
end property

'опрашивать итоговые
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CSUM
public property Get CSUM() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CSUM = m_CSUM
end property
' let 
'За сколько часов опрашивать часовые

'За сколько часов опрашивать часовые
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NUMHOUR(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NUMHOUR&quot;,NUMHOUR,newvalue

   m_NUMHOUR= newValue
end if
end property

'За сколько часов опрашивать часовые
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. NUMHOUR
public property Get NUMHOUR() as long
 LoadFromDatabase
 AccessTime=Now

   NUMHOUR = m_NUMHOUR
end property
' let 
'За сколько суток опрашивать суточные

'За сколько суток опрашивать суточные
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NUM24(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NUM24&quot;,NUM24,newvalue

   m_NUM24= newValue
end if
end property

'За сколько суток опрашивать суточные
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. NUM24
public property Get NUM24() as long
 LoadFromDatabase
 AccessTime=Now

   NUM24 = m_NUM24
end property
' let 
'Max число попыток дозвона

'Max число попыток дозвона
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NMAXCALL(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NMAXCALL&quot;,NMAXCALL,newvalue

   m_NMAXCALL= newValue
end if
end property

'Max число попыток дозвона
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. NMAXCALL
public property Get NMAXCALL() as long
 LoadFromDatabase
 AccessTime=Now

   NMAXCALL = m_NMAXCALL
end property
' let 
'При неудачом дозвоне повторить через (минут)

'При неудачом дозвоне повторить через (минут)
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let MINREPEAT(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;MINREPEAT&quot;,MINREPEAT,newvalue

   m_MINREPEAT= newValue
end if
end property

'При неудачом дозвоне повторить через (минут)
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. MINREPEAT
public property Get MINREPEAT() as long
 LoadFromDatabase
 AccessTime=Now

   MINREPEAT = m_MINREPEAT
end property
' let 
'Когда заблокирован

'Когда заблокирован
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DLOCK(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DLOCK&quot;,DLOCK,newvalue

   m_DLOCK= newValue
end if
end property

'Когда заблокирован
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DLOCK
public property Get DLOCK() as DATE
 LoadFromDatabase
 AccessTime=Now

   DLOCK = m_DLOCK
end property
' let 
'Интервал опроса (часов) суточных

'Интервал опроса (часов) суточных
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ICALL24(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ICALL24&quot;,ICALL24,newvalue

   m_ICALL24= newValue
end if
end property

'Интервал опроса (часов) суточных
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. ICALL24
public property Get ICALL24() as long
 LoadFromDatabase
 AccessTime=Now

   ICALL24 = m_ICALL24
end property
' let 
'Интервал опроса (минут) мгновенных

'Интервал опроса (минут) мгновенных
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ICALLCURR(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ICALLCURR&quot;,ICALLCURR,newvalue

   m_ICALLCURR= newValue
end if
end property

'Интервал опроса (минут) мгновенных
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. ICALLCURR
public property Get ICALLCURR() as long
 LoadFromDatabase
 AccessTime=Now

   ICALLCURR = m_ICALLCURR
end property
' let 
'Интервал опроса (минут) тотальных

'Интервал опроса (минут) тотальных
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ICALLSUM(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ICALLSUM&quot;,ICALLSUM,newvalue

   m_ICALLSUM= newValue
end if
end property

'Интервал опроса (минут) тотальных
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. ICALLSUM
public property Get ICALLSUM() as long
 LoadFromDatabase
 AccessTime=Now

   ICALLSUM = m_ICALLSUM
end property
' let 
'Только непрочитанные суточные

'Только непрочитанные суточные
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CHNRONLY(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CHNRONLY&quot;,CHNRONLY,newvalue

   m_CHNRONLY= newValue
end if
end property

'Только непрочитанные суточные
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CHNRONLY
public property Get CHNRONLY() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CHNRONLY = m_CHNRONLY
end property
' let 
'Только непрочитанные часовые

'Только непрочитанные часовые
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let C24NRONLY(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;C24NRONLY&quot;,C24NRONLY,newvalue

   m_C24NRONLY= newValue
end if
end property

'Только непрочитанные часовые
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. C24NRONLY
public property Get C24NRONLY() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   C24NRONLY = m_C24NRONLY
end property
' let 
'Дата следующего опроса часовых

'Дата следующего опроса часовых
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DNEXTHOUR(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DNEXTHOUR&quot;,DNEXTHOUR,newvalue

   m_DNEXTHOUR= newValue
end if
end property

'Дата следующего опроса часовых
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DNEXTHOUR
public property Get DNEXTHOUR() as DATE
 LoadFromDatabase
 AccessTime=Now

   DNEXTHOUR = m_DNEXTHOUR
end property
' let 
'Дата следующего опроса суточных

'Дата следующего опроса суточных
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DNEXT24(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DNEXT24&quot;,DNEXT24,newvalue

   m_DNEXT24= newValue
end if
end property

'Дата следующего опроса суточных
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DNEXT24
public property Get DNEXT24() as DATE
 LoadFromDatabase
 AccessTime=Now

   DNEXT24 = m_DNEXT24
end property
' let 
'Дата следующего опроса мгновенных

'Дата следующего опроса мгновенных
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DNEXTCURR(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DNEXTCURR&quot;,DNEXTCURR,newvalue

   m_DNEXTCURR= newValue
end if
end property

'Дата следующего опроса мгновенных
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DNEXTCURR
public property Get DNEXTCURR() as DATE
 LoadFromDatabase
 AccessTime=Now

   DNEXTCURR = m_DNEXTCURR
end property
' let 
'Дата следующего опроса тотальных

'Дата следующего опроса тотальных
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DNEXTSUM(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DNEXTSUM&quot;,DNEXTSUM,newvalue

   m_DNEXTSUM= newValue
end if
end property

'Дата следующего опроса тотальных
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DNEXTSUM
public property Get DNEXTSUM() as DATE
 LoadFromDatabase
 AccessTime=Now

   DNEXTSUM = m_DNEXTSUM
end property
' let 
'Дата последнего опроса счетчика

'Дата последнего опроса счетчика
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DLASTCALL(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DLASTCALL&quot;,DLASTCALL,newvalue

   m_DLASTCALL= newValue
end if
end property

'Дата последнего опроса счетчика
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DLASTCALL
public property Get DLASTCALL() as DATE
 LoadFromDatabase
 AccessTime=Now

   DLASTCALL = m_DLASTCALL
end property
' let 
'Дата последнего опроса суточных

'Дата последнего опроса суточных
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DLASTDAY(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DLASTDAY&quot;,DLASTDAY,newvalue

   m_DLASTDAY= newValue
end if
end property

'Дата последнего опроса суточных
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DLASTDAY
public property Get DLASTDAY() as DATE
 LoadFromDatabase
 AccessTime=Now

   DLASTDAY = m_DLASTDAY
end property
' let 
'Дата последнего опроса часовых

'Дата последнего опроса часовых
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DLASTHOUR(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DLASTHOUR&quot;,DLASTHOUR,newvalue

   m_DLASTHOUR= newValue
end if
end property

'Дата последнего опроса часовых
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DLASTHOUR
public property Get DLASTHOUR() as DATE
 LoadFromDatabase
 AccessTime=Now

   DLASTHOUR = m_DLASTHOUR
end property
' let 
'Требование повтора съема суточных

'Требование повтора съема суточных
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let MUSTREPEATDAY(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;MUSTREPEATDAY&quot;,MUSTREPEATDAY,newvalue

   m_MUSTREPEATDAY= newValue
end if
end property

'Требование повтора съема суточных
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. MUSTREPEATDAY
public property Get MUSTREPEATDAY() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   MUSTREPEATDAY = m_MUSTREPEATDAY
end property
' let 
'Требование повтора съема часовых

'Требование повтора съема часовых
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let MUSTREPEATHOUR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;MUSTREPEATHOUR&quot;,MUSTREPEATHOUR,newvalue

   m_MUSTREPEATHOUR= newValue
end if
end property

'Требование повтора съема часовых
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. MUSTREPEATHOUR
public property Get MUSTREPEATHOUR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   MUSTREPEATHOUR = m_MUSTREPEATHOUR
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;CSTATUS&quot;,m_CSTATUS)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ICALL&quot;,m_ICALL)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;NUMCALL&quot;,m_NUMCALL)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CCURR&quot;,m_CCURR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CHOUR&quot;,m_CHOUR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;C24&quot;,m_C24)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CSUM&quot;,m_CSUM)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;NUMHOUR&quot;,m_NUMHOUR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;NUM24&quot;,m_NUM24)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;NMAXCALL&quot;,m_NMAXCALL)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;MINREPEAT&quot;,m_MINREPEAT)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;DLOCK&quot;,m_DLOCK)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;ICALL24&quot;,m_ICALL24)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ICALLCURR&quot;,m_ICALLCURR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ICALLSUM&quot;,m_ICALLSUM)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;CHNRONLY&quot;,m_CHNRONLY)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;C24NRONLY&quot;,m_C24NRONLY)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;DNEXTHOUR&quot;,m_DNEXTHOUR)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DNEXT24&quot;,m_DNEXT24)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DNEXTCURR&quot;,m_DNEXTCURR)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DNEXTSUM&quot;,m_DNEXTSUM)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DLASTCALL&quot;,m_DLASTCALL)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DLASTDAY&quot;,m_DLASTDAY)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;DLASTHOUR&quot;,m_DLASTHOUR)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;MUSTREPEATDAY&quot;,m_MUSTREPEATDAY)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;MUSTREPEATHOUR&quot;,m_MUSTREPEATHOUR)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; ICALL &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_CSTATUS=nv.item( &quot;CSTATUS&quot;).Value
m_ICALL=nv.item( &quot;ICALL&quot;).Value
m_NUMCALL=nv.item( &quot;NUMCALL&quot;).Value
m_CCURR=nv.item( &quot;CCURR&quot;).Value
m_CHOUR=nv.item( &quot;CHOUR&quot;).Value
m_C24=nv.item( &quot;C24&quot;).Value
m_CSUM=nv.item( &quot;CSUM&quot;).Value
m_NUMHOUR=nv.item( &quot;NUMHOUR&quot;).Value
m_NUM24=nv.item( &quot;NUM24&quot;).Value
m_NMAXCALL=nv.item( &quot;NMAXCALL&quot;).Value
m_MINREPEAT=nv.item( &quot;MINREPEAT&quot;).Value
m_DLOCK=nv.item( &quot;DLOCK&quot;).Value
m_ICALL24=nv.item( &quot;ICALL24&quot;).Value
m_ICALLCURR=nv.item( &quot;ICALLCURR&quot;).Value
m_ICALLSUM=nv.item( &quot;ICALLSUM&quot;).Value
m_CHNRONLY=nv.item( &quot;CHNRONLY&quot;).Value
m_C24NRONLY=nv.item( &quot;C24NRONLY&quot;).Value
m_DNEXTHOUR=nv.item( &quot;DNEXTHOUR&quot;).Value
m_DNEXT24=nv.item( &quot;DNEXT24&quot;).Value
m_DNEXTCURR=nv.item( &quot;DNEXTCURR&quot;).Value
m_DNEXTSUM=nv.item( &quot;DNEXTSUM&quot;).Value
m_DLASTCALL=nv.item( &quot;DLASTCALL&quot;).Value
m_DLASTDAY=nv.item( &quot;DLASTDAY&quot;).Value
m_DLASTHOUR=nv.item( &quot;DLASTHOUR&quot;).Value
m_MUSTREPEATDAY=nv.item( &quot;MUSTREPEATDAY&quot;).Value
m_MUSTREPEATHOUR=nv.item( &quot;MUSTREPEATHOUR&quot;).Value
else

m_CSTATUS=nv.fields( &quot;CSTATUS&quot;).Value
m_ICALL=nv.fields( &quot;ICALL&quot;).Value
m_NUMCALL=nv.fields( &quot;NUMCALL&quot;).Value
m_CCURR=nv.fields( &quot;CCURR&quot;).Value
m_CHOUR=nv.fields( &quot;CHOUR&quot;).Value
m_C24=nv.fields( &quot;C24&quot;).Value
m_CSUM=nv.fields( &quot;CSUM&quot;).Value
m_NUMHOUR=nv.fields( &quot;NUMHOUR&quot;).Value
m_NUM24=nv.fields( &quot;NUM24&quot;).Value
m_NMAXCALL=nv.fields( &quot;NMAXCALL&quot;).Value
m_MINREPEAT=nv.fields( &quot;MINREPEAT&quot;).Value
m_DLOCK=nv.fields( &quot;DLOCK&quot;).Value
m_ICALL24=nv.fields( &quot;ICALL24&quot;).Value
m_ICALLCURR=nv.fields( &quot;ICALLCURR&quot;).Value
m_ICALLSUM=nv.fields( &quot;ICALLSUM&quot;).Value
m_CHNRONLY=nv.fields( &quot;CHNRONLY&quot;).Value
m_C24NRONLY=nv.fields( &quot;C24NRONLY&quot;).Value
m_DNEXTHOUR=nv.fields( &quot;DNEXTHOUR&quot;).Value
m_DNEXT24=nv.fields( &quot;DNEXT24&quot;).Value
m_DNEXTCURR=nv.fields( &quot;DNEXTCURR&quot;).Value
m_DNEXTSUM=nv.fields( &quot;DNEXTSUM&quot;).Value
m_DLASTCALL=nv.fields( &quot;DLASTCALL&quot;).Value
m_DLASTDAY=nv.fields( &quot;DLASTDAY&quot;).Value
m_DLASTHOUR=nv.fields( &quot;DLASTHOUR&quot;).Value
m_MUSTREPEATDAY=nv.fields( &quot;MUSTREPEATDAY&quot;).Value
m_MUSTREPEATHOUR=nv.fields( &quot;MUSTREPEATHOUR&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PLANCALL
   set o = new PLANCALL
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PLANCALL.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PLANCALL.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PLANCALL&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PLANCALL.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PLANCALL&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PLANCALL.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;PLANCALL.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  CSTATUS=node.Attributes.getNamedItem(&quot;CSTATUS&quot;).nodeValue
  ICALL=node.Attributes.getNamedItem(&quot;ICALL&quot;).nodeValue
  NUMCALL=node.Attributes.getNamedItem(&quot;NUMCALL&quot;).nodeValue
  CCURR=node.Attributes.getNamedItem(&quot;CCURR&quot;).nodeValue
  CHOUR=node.Attributes.getNamedItem(&quot;CHOUR&quot;).nodeValue
  C24=node.Attributes.getNamedItem(&quot;C24&quot;).nodeValue
  CSUM=node.Attributes.getNamedItem(&quot;CSUM&quot;).nodeValue
  NUMHOUR=node.Attributes.getNamedItem(&quot;NUMHOUR&quot;).nodeValue
  NUM24=node.Attributes.getNamedItem(&quot;NUM24&quot;).nodeValue
  NMAXCALL=node.Attributes.getNamedItem(&quot;NMAXCALL&quot;).nodeValue
  MINREPEAT=node.Attributes.getNamedItem(&quot;MINREPEAT&quot;).nodeValue
  DLOCK=node.Attributes.getNamedItem(&quot;DLOCK&quot;).nodeValue
  ICALL24=node.Attributes.getNamedItem(&quot;ICALL24&quot;).nodeValue
  ICALLCURR=node.Attributes.getNamedItem(&quot;ICALLCURR&quot;).nodeValue
  ICALLSUM=node.Attributes.getNamedItem(&quot;ICALLSUM&quot;).nodeValue
  CHNRONLY=node.Attributes.getNamedItem(&quot;CHNRONLY&quot;).nodeValue
  C24NRONLY=node.Attributes.getNamedItem(&quot;C24NRONLY&quot;).nodeValue
  DNEXTHOUR=node.Attributes.getNamedItem(&quot;DNEXTHOUR&quot;).nodeValue
  DNEXT24=node.Attributes.getNamedItem(&quot;DNEXT24&quot;).nodeValue
  DNEXTCURR=node.Attributes.getNamedItem(&quot;DNEXTCURR&quot;).nodeValue
  DNEXTSUM=node.Attributes.getNamedItem(&quot;DNEXTSUM&quot;).nodeValue
  DLASTCALL=node.Attributes.getNamedItem(&quot;DLASTCALL&quot;).nodeValue
  DLASTDAY=node.Attributes.getNamedItem(&quot;DLASTDAY&quot;).nodeValue
  DLASTHOUR=node.Attributes.getNamedItem(&quot;DLASTHOUR&quot;).nodeValue
  MUSTREPEATDAY=node.Attributes.getNamedItem(&quot;MUSTREPEATDAY&quot;).nodeValue
  MUSTREPEATHOUR=node.Attributes.getNamedItem(&quot;MUSTREPEATHOUR&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;CSTATUS&quot;, CSTATUS
  node.setAttribute &quot;ICALL&quot;, ICALL
  node.setAttribute &quot;NUMCALL&quot;, NUMCALL
  node.setAttribute &quot;CCURR&quot;, CCURR
  node.setAttribute &quot;CHOUR&quot;, CHOUR
  node.setAttribute &quot;C24&quot;, C24
  node.setAttribute &quot;CSUM&quot;, CSUM
  node.setAttribute &quot;NUMHOUR&quot;, NUMHOUR
  node.setAttribute &quot;NUM24&quot;, NUM24
  node.setAttribute &quot;NMAXCALL&quot;, NMAXCALL
  node.setAttribute &quot;MINREPEAT&quot;, MINREPEAT
  node.setAttribute &quot;DLOCK&quot;, Cdbl(DLOCK)
  node.setAttribute &quot;ICALL24&quot;, ICALL24
  node.setAttribute &quot;ICALLCURR&quot;, ICALLCURR
  node.setAttribute &quot;ICALLSUM&quot;, ICALLSUM
  node.setAttribute &quot;CHNRONLY&quot;, CHNRONLY
  node.setAttribute &quot;C24NRONLY&quot;, C24NRONLY
  node.setAttribute &quot;DNEXTHOUR&quot;, Cdbl(DNEXTHOUR)
  node.setAttribute &quot;DNEXT24&quot;, Cdbl(DNEXT24)
  node.setAttribute &quot;DNEXTCURR&quot;, Cdbl(DNEXTCURR)
  node.setAttribute &quot;DNEXTSUM&quot;, Cdbl(DNEXTSUM)
  node.setAttribute &quot;DLASTCALL&quot;, Cdbl(DLASTCALL)
  node.setAttribute &quot;DLASTDAY&quot;, Cdbl(DLASTDAY)
  node.setAttribute &quot;DLASTHOUR&quot;, Cdbl(DLASTHOUR)
  node.setAttribute &quot;MUSTREPEATDAY&quot;, MUSTREPEATDAY
  node.setAttribute &quot;MUSTREPEATHOUR&quot;, MUSTREPEATHOUR
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PLANCALL&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PLANCALL&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PLANCALL&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PLANCALL&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PLANCALL_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел План опроса устройств
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PLANCALL&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PLANCALL.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PLANCALL
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PLANCALL
 dim LID as  string
 dim o as  PLANCALL
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PLANCALL
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PLANCALL
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PLANCALL
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PLANCALL
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PLANCALL
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PLANCALL
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PLANCALL
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PLANCALL
'  ,или Nothing
'See Also:
'Example:
' dim variable as PLANCALL
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PLANCALL
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PLANCALL
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PLANCALL.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PLANCALL
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PLANCALL
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PLANCALLID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PLANCALL
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PLANCALL_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PLANCALL&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PLANCALL
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PLANCALL&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Блокировка&quot;, 0, 0, &quot;CSTATUS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Интервал опроса (минут) часовых&quot;, 0, 0, &quot;ICALL&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сколько раз опросить (0 - циклический опрос)&quot;, 0, 0, &quot;NUMCALL&quot;).SortType =2
  YGrid.Columns.Add(&quot;опрашивать текущие&quot;, 0, 0, &quot;CCURR&quot;).SortType =1
  YGrid.Columns.Add(&quot;опрашивать часовые&quot;, 0, 0, &quot;CHOUR&quot;).SortType =1
  YGrid.Columns.Add(&quot;опрашивать суточные&quot;, 0, 0, &quot;C24&quot;).SortType =1
  YGrid.Columns.Add(&quot;опрашивать итоговые&quot;, 0, 0, &quot;CSUM&quot;).SortType =1
  YGrid.Columns.Add(&quot;За сколько часов опрашивать часовые&quot;, 0, 0, &quot;NUMHOUR&quot;).SortType =2
  YGrid.Columns.Add(&quot;За сколько суток опрашивать суточные&quot;, 0, 0, &quot;NUM24&quot;).SortType =2
  YGrid.Columns.Add(&quot;Max число попыток дозвона&quot;, 0, 0, &quot;NMAXCALL&quot;).SortType =2
  YGrid.Columns.Add(&quot;При неудачом дозвоне повторить через (минут)&quot;, 0, 0, &quot;MINREPEAT&quot;).SortType =2
  YGrid.Columns.Add(&quot;Когда заблокирован&quot;, 0, 0, &quot;DLOCK&quot;).SortType =4
  YGrid.Columns.Add(&quot;Интервал опроса (часов) суточных&quot;, 0, 0, &quot;ICALL24&quot;).SortType =2
  YGrid.Columns.Add(&quot;Интервал опроса (минут) мгновенных&quot;, 0, 0, &quot;ICALLCURR&quot;).SortType =2
  YGrid.Columns.Add(&quot;Интервал опроса (минут) тотальных&quot;, 0, 0, &quot;ICALLSUM&quot;).SortType =2
  YGrid.Columns.Add(&quot;Только непрочитанные суточные&quot;, 0, 0, &quot;CHNRONLY&quot;).SortType =1
  YGrid.Columns.Add(&quot;Только непрочитанные часовые&quot;, 0, 0, &quot;C24NRONLY&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата следующего опроса часовых&quot;, 0, 0, &quot;DNEXTHOUR&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата следующего опроса суточных&quot;, 0, 0, &quot;DNEXT24&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата следующего опроса мгновенных&quot;, 0, 0, &quot;DNEXTCURR&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата следующего опроса тотальных&quot;, 0, 0, &quot;DNEXTSUM&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата последнего опроса счетчика&quot;, 0, 0, &quot;DLASTCALL&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата последнего опроса суточных&quot;, 0, 0, &quot;DLASTDAY&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата последнего опроса часовых&quot;, 0, 0, &quot;DLASTHOUR&quot;).SortType =4
  YGrid.Columns.Add(&quot;Требование повтора съема суточных&quot;, 0, 0, &quot;MUSTREPEATDAY&quot;).SortType =1
  YGrid.Columns.Add(&quot;Требование повтора съема часовых&quot;, 0, 0, &quot;MUSTREPEATHOUR&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PLANCALL
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.CSTATUS, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.ICALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.NUMCALL, vbCrLf, &quot; &quot;), 255)
   if obj.CCURR =-1 then
     Values.Value(4) = &quot;Да&quot;
   end if
   if obj.CCURR =0 then
     Values.Value(4) = &quot;Нет&quot;
   end if
   if obj.CHOUR =-1 then
     Values.Value(5) = &quot;Да&quot;
   end if
   if obj.CHOUR =0 then
     Values.Value(5) = &quot;Нет&quot;
   end if
   if obj.C24 =-1 then
     Values.Value(6) = &quot;Да&quot;
   end if
   if obj.C24 =0 then
     Values.Value(6) = &quot;Нет&quot;
   end if
   if obj.CSUM =-1 then
     Values.Value(7) = &quot;Да&quot;
   end if
   if obj.CSUM =0 then
     Values.Value(7) = &quot;Нет&quot;
   end if
    Values.Value(8) = Left(Replace(obj.NUMHOUR, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.NUM24, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.NMAXCALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.MINREPEAT, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.DLOCK, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.ICALL24, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.ICALLCURR, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.ICALLSUM, vbCrLf, &quot; &quot;), 255)
   if obj.CHNRONLY =-1 then
     Values.Value(16) = &quot;Да&quot;
   end if
   if obj.CHNRONLY =0 then
     Values.Value(16) = &quot;Нет&quot;
   end if
   if obj.C24NRONLY =-1 then
     Values.Value(17) = &quot;Да&quot;
   end if
   if obj.C24NRONLY =0 then
     Values.Value(17) = &quot;Нет&quot;
   end if
    Values.Value(18) = Left(Replace(obj.DNEXTHOUR, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.DNEXT24, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.DNEXTCURR, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.DNEXTSUM, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.DLASTCALL, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.DLASTDAY, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.DLASTHOUR, vbCrLf, &quot; &quot;), 255)
   if obj.MUSTREPEATDAY =-1 then
     Values.Value(25) = &quot;Да&quot;
   end if
   if obj.MUSTREPEATDAY =0 then
     Values.Value(25) = &quot;Нет&quot;
   end if
   if obj.MUSTREPEATHOUR =-1 then
     Values.Value(26) = &quot;Да&quot;
   end if
   if obj.MUSTREPEATHOUR =0 then
     Values.Value(26) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PLANCALL&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="SETUPHAN" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Настройки ручного опроса
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_MAXREAD1 as double
private m_DISTSEC as double
private m_SAVE24 as enumBoolean
private m_SAVEHOUR as enumBoolean
private m_SAVECURR as enumBoolean
private m_SAVESUM as enumBoolean
private m_NUMHOUR as double
private m_NUM24 as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;SETUPHAN&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;SETUPHAN.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'К-во попыток считывания 1 параметра

'К-во попыток считывания 1 параметра
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let MAXREAD1(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;MAXREAD1&quot;,MAXREAD1,newvalue

   m_MAXREAD1= newValue
end if
end property

'К-во попыток считывания 1 параметра
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. MAXREAD1
public property Get MAXREAD1() as double
 LoadFromDatabase
 AccessTime=Now

   MAXREAD1 = m_MAXREAD1
end property
' let 
'Интервал опроса мгновенных

'Интервал опроса мгновенных
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DISTSEC(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DISTSEC&quot;,DISTSEC,newvalue

   m_DISTSEC= newValue
end if
end property

'Интервал опроса мгновенных
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. DISTSEC
public property Get DISTSEC() as double
 LoadFromDatabase
 AccessTime=Now

   DISTSEC = m_DISTSEC
end property
' let 
'Сохранять суточные

'Сохранять суточные
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SAVE24(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SAVE24&quot;,SAVE24,newvalue

   m_SAVE24= newValue
end if
end property

'Сохранять суточные
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. SAVE24
public property Get SAVE24() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   SAVE24 = m_SAVE24
end property
' let 
'Сохранять часовые

'Сохранять часовые
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SAVEHOUR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SAVEHOUR&quot;,SAVEHOUR,newvalue

   m_SAVEHOUR= newValue
end if
end property

'Сохранять часовые
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. SAVEHOUR
public property Get SAVEHOUR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   SAVEHOUR = m_SAVEHOUR
end property
' let 
'Сохранять мгновенные

'Сохранять мгновенные
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SAVECURR(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SAVECURR&quot;,SAVECURR,newvalue

   m_SAVECURR= newValue
end if
end property

'Сохранять мгновенные
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. SAVECURR
public property Get SAVECURR() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   SAVECURR = m_SAVECURR
end property
' let 
'Сохранять итоговые

'Сохранять итоговые
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SAVESUM(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SAVESUM&quot;,SAVESUM,newvalue

   m_SAVESUM= newValue
end if
end property

'Сохранять итоговые
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. SAVESUM
public property Get SAVESUM() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   SAVESUM = m_SAVESUM
end property
' let 
'За сколько часов опрашивать часовые

'За сколько часов опрашивать часовые
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NUMHOUR(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NUMHOUR&quot;,NUMHOUR,newvalue

   m_NUMHOUR= newValue
end if
end property

'За сколько часов опрашивать часовые
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. NUMHOUR
public property Get NUMHOUR() as double
 LoadFromDatabase
 AccessTime=Now

   NUMHOUR = m_NUMHOUR
end property
' let 
'За сколько суток опрашивать суточные

'За сколько суток опрашивать суточные
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NUM24(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NUM24&quot;,NUM24,newvalue

   m_NUM24= newValue
end if
end property

'За сколько суток опрашивать суточные
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. NUM24
public property Get NUM24() as double
 LoadFromDatabase
 AccessTime=Now

   NUM24 = m_NUM24
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;MAXREAD1&quot;,m_MAXREAD1)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;DISTSEC&quot;,m_DISTSEC)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SAVE24&quot;,m_SAVE24)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SAVEHOUR&quot;,m_SAVEHOUR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SAVECURR&quot;,m_SAVECURR)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SAVESUM&quot;,m_SAVESUM)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;NUMHOUR&quot;,m_NUMHOUR)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;NUM24&quot;,m_NUM24)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; MAXREAD1 &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_MAXREAD1=nv.item( &quot;MAXREAD1&quot;).Value
m_DISTSEC=nv.item( &quot;DISTSEC&quot;).Value
m_SAVE24=nv.item( &quot;SAVE24&quot;).Value
m_SAVEHOUR=nv.item( &quot;SAVEHOUR&quot;).Value
m_SAVECURR=nv.item( &quot;SAVECURR&quot;).Value
m_SAVESUM=nv.item( &quot;SAVESUM&quot;).Value
m_NUMHOUR=nv.item( &quot;NUMHOUR&quot;).Value
m_NUM24=nv.item( &quot;NUM24&quot;).Value
else

m_MAXREAD1=nv.fields( &quot;MAXREAD1&quot;).Value
m_DISTSEC=nv.fields( &quot;DISTSEC&quot;).Value
m_SAVE24=nv.fields( &quot;SAVE24&quot;).Value
m_SAVEHOUR=nv.fields( &quot;SAVEHOUR&quot;).Value
m_SAVECURR=nv.fields( &quot;SAVECURR&quot;).Value
m_SAVESUM=nv.fields( &quot;SAVESUM&quot;).Value
m_NUMHOUR=nv.fields( &quot;NUMHOUR&quot;).Value
m_NUM24=nv.fields( &quot;NUM24&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as SETUPHAN
   set o = new SETUPHAN
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;SETUPHAN.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;SETUPHAN.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;SETUPHAN&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;SETUPHAN.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;SETUPHAN&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;SETUPHAN.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;SETUPHAN.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  MAXREAD1=val(Replace(node.Attributes.getNamedItem(&quot;MAXREAD1&quot;).nodeValue,vbLf,vbcrlf))
  DISTSEC=val(Replace(node.Attributes.getNamedItem(&quot;DISTSEC&quot;).nodeValue,vbLf,vbcrlf))
  SAVE24=node.Attributes.getNamedItem(&quot;SAVE24&quot;).nodeValue
  SAVEHOUR=node.Attributes.getNamedItem(&quot;SAVEHOUR&quot;).nodeValue
  SAVECURR=node.Attributes.getNamedItem(&quot;SAVECURR&quot;).nodeValue
  SAVESUM=node.Attributes.getNamedItem(&quot;SAVESUM&quot;).nodeValue
  NUMHOUR=val(Replace(node.Attributes.getNamedItem(&quot;NUMHOUR&quot;).nodeValue,vbLf,vbcrlf))
  NUM24=val(Replace(node.Attributes.getNamedItem(&quot;NUM24&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;MAXREAD1&quot;, replace(cstr(MAXREAD1),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;DISTSEC&quot;, replace(cstr(DISTSEC),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SAVE24&quot;, SAVE24
  node.setAttribute &quot;SAVEHOUR&quot;, SAVEHOUR
  node.setAttribute &quot;SAVECURR&quot;, SAVECURR
  node.setAttribute &quot;SAVESUM&quot;, SAVESUM
  node.setAttribute &quot;NUMHOUR&quot;, replace(cstr(NUMHOUR),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;NUM24&quot;, replace(cstr(NUM24),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;SETUPHAN&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;SETUPHAN&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;SETUPHAN&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;SETUPHAN&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="SETUPHAN_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Настройки ручного опроса
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;SETUPHAN&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;SETUPHAN.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as  SETUPHAN
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  SETUPHAN
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  SETUPHAN
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  SETUPHAN
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as SETUPHAN
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as SETUPHAN
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as SETUPHAN
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as SETUPHAN
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as SETUPHAN
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as SETUPHAN
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса SETUPHAN
'  ,или Nothing
'See Also:
'Example:
' dim variable as SETUPHAN
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as SETUPHAN
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  SETUPHAN
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;SETUPHAN.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As SETUPHAN
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As SETUPHAN
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!SETUPHANID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as SETUPHAN
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;SETUPHAN_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;SETUPHAN&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as SETUPHAN
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;SETUPHAN&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;К-во попыток считывания 1 параметра&quot;, 0, 0, &quot;MAXREAD1&quot;).SortType =2
  YGrid.Columns.Add(&quot;Интервал опроса мгновенных&quot;, 0, 0, &quot;DISTSEC&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сохранять суточные&quot;, 0, 0, &quot;SAVE24&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сохранять часовые&quot;, 0, 0, &quot;SAVEHOUR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сохранять мгновенные&quot;, 0, 0, &quot;SAVECURR&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сохранять итоговые&quot;, 0, 0, &quot;SAVESUM&quot;).SortType =1
  YGrid.Columns.Add(&quot;За сколько часов опрашивать часовые&quot;, 0, 0, &quot;NUMHOUR&quot;).SortType =2
  YGrid.Columns.Add(&quot;За сколько суток опрашивать суточные&quot;, 0, 0, &quot;NUM24&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as SETUPHAN
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.MAXREAD1, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.DISTSEC, vbCrLf, &quot; &quot;), 255)
   if obj.SAVE24 =-1 then
     Values.Value(3) = &quot;Да&quot;
   end if
   if obj.SAVE24 =0 then
     Values.Value(3) = &quot;Нет&quot;
   end if
   if obj.SAVEHOUR =-1 then
     Values.Value(4) = &quot;Да&quot;
   end if
   if obj.SAVEHOUR =0 then
     Values.Value(4) = &quot;Нет&quot;
   end if
   if obj.SAVECURR =-1 then
     Values.Value(5) = &quot;Да&quot;
   end if
   if obj.SAVECURR =0 then
     Values.Value(5) = &quot;Нет&quot;
   end if
   if obj.SAVESUM =-1 then
     Values.Value(6) = &quot;Да&quot;
   end if
   if obj.SAVESUM =0 then
     Values.Value(6) = &quot;Нет&quot;
   end if
    Values.Value(7) = Left(Replace(obj.NUMHOUR, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.NUM24, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;SETUPHAN&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
