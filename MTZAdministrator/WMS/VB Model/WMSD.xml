<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="dll"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221}"/><AttributeHolder Name="Name" Value="WMSD"/><AttributeHolder Name="Description" Value="Справочник"/><ModuleHolder ModuleName="Application" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="multiuse"/><BlockHolder BlockName="'description" BlockCode="'корневой интерфейс документа (Справочник)
private m_Logger as MTZUtil.Logger
private m_MTZSession as MTZSession.Session
private m_Manager as MTZManager.Main
Private findCash As Collection
private m_ID as string
private m_SecureStyleID as string
private m_StatusID as string
private m_Name as string
private const m_TypeName as string=&quot;WMSD&quot;
private m_WorkOffline as boolean
private m_AutoLoadPart as boolean


enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
enum enumPCB_FileType'Тип файла
  PCB_FileType_Proekt_PP=0'Проект ПП
  PCB_FileType_HZ=1'ХЗ
end enum 
enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
enum enumtypeFace'Физическое лицо \ Юрифическое лицо
  typeFace_FizLico=0'ФизЛицо
  typeFace_UrLico=1'ЮрЛицо
end enum 
enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Element_oformleniy=5'Элемент оформления
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
end enum 
enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
enum enumtypePackage'Тип отправления
  typePackage_Vse=-1'Все
  typePackage_Tovar=1'Товар
  typePackage_Dokumenti=0'Документы
end enum 
enum enumPCB_HoleType'Тип отверстия
  PCB_HoleType_Gluhoe=2'Глухое
  PCB_HoleType_Metalizirovannoe=0'Метализированное
  PCB_HoleType_Nemetallizirovannoe=1'Неметаллизированное
end enum 
enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
enum enumTypeSempling'Тип выборки
  TypeSempling_Klienti=-1'Клиенты
  TypeSempling_Adresati_operatorov=0'Адресаты операторов
  TypeSempling_Spisok_adresov_SPb=2'Список адресов СПб
  TypeSempling_Spisok_adresatov=1'Список адресатов
end enum 
enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
enum enumDeliveryOn'
  DeliveryOn_Gorod=4'Город
  DeliveryOn_Strana=1'Страна
  DeliveryOn_Megdunarodnay=0'Международная
  DeliveryOn_Strana2=2'Страна2
  DeliveryOn_Sub_ekt=3'Субъект
end enum 
enum enumtypeOperatorSystem'
  typeOperatorSystem_Menedger=2'Менеджер
  typeOperatorSystem_Procee=0'Прочее
  typeOperatorSystem_Operator=1'Оператор
end enum 
enum enumstateNomen'
  stateNomen_Pereadresaciy=6'Переадресация
  stateNomen_Oformlyetsy=0'Оформляется
  stateNomen_Dostavleno=4'Доставлено
  stateNomen_V_processe=3'В процессе
  stateNomen_Vozvrat=5'Возврат
  stateNomen_Prinyto=2'Принято
end enum 
enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_cls__=0'cls__
  FolderType_Kalendar_=5'Календарь
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
enum enummsgState'Состояние заявки
  msgState_Sostoynie_zayvki=0'Состояние заявки
  msgState_Soobseno_abonentu=1'Сообщено абоненту
  msgState_Abonent_ne_otvetil=2'Абонент не ответил
  msgState_Promegutocniy_otvet=3'Промежуточный ответ
end enum 
enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Na_istocnik_dannih=3'На источник данных
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
enum enumtypeOrder'
  typeOrder_Bezadresniy_zakaz=0'Безадресный заказ
  typeOrder_Adresniy_zakaz=1'Адресный заказ
end enum 
enum enummsgResult'Результат
  msgResult_Vipolneno=2'Выполнено
  msgResult_V_rabote=1'В работе
  msgResult_Rezul_tat=0'Результат
end enum 
enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
enum enumtypeDocOrder'Тип документов для печати заказчику
  typeDocOrder_Nalicniy_OPNPKO_PLS_kasDOTcekCLS=1'Наличный (ПКО + кас.чек)
  typeDocOrder_Nalicniy_OPNtovarniy_cek_PLS_kasDOTcekCLS=0'Наличный (товарный чек + кас.чек)
  typeDocOrder_Beznalicniy_rascet=3'Безналичный расчет
end enum 
enum enumPCB_LayerP'Представление поля
  PCB_LayerP_Negativ=2'Негатив
  PCB_LayerP_Ne_imeet_znaceniy=0'Не имеет значения
  PCB_LayerP_Pozitiv=1'Позитив
end enum 
enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
enum enumPartType'PartType
  PartType_Rassirenie=3'Расширение
  PartType_Kollekciy=1'Коллекция
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
  PartType_Rassirenie_s_dannimi=4'Расширение с данными
end enum 
enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
enum enumtypeClient'Тип заказчика
  typeClient_Razoviy=0'Разовый
end enum 
enum enumtypeNomen'Тип номенкатуры
  typeNomen_Listovki=2'Листовки
  typeNomen_Tovar=1'Товар
  typeNomen_GazetiCOMA_gurnaliCOMA_brosuri=4'Газеты, журналы, брошюры
  typeNomen_Pis_mo=3'Письмо
  typeNomen_Dokument=0'Документ
end enum 
enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
enum enumtypePersonPay'
  typePersonPay_Otpravitel_=0'Отправитель
  typePersonPay_Polucatel_=1'Получатель
end enum 
enum enumJournalLinkType'Для связи журналов друг с другом
  JournalLinkType_Ssilka_na_stroku=2'Ссылка на строку
  JournalLinkType_Ssilka_na_ob_ekt=1'Ссылка на объект
  JournalLinkType_Svyzka_InstanceID_OPNv_peredlah_ob_ektaCLS=3'Связка InstanceID (в передлах объекта)
  JournalLinkType_Svyzka_ParentStructRowID__OPNv_peredlah_ob_ektaCLS=4'Связка ParentStructRowID  (в передлах объекта)
  JournalLinkType_Net=0'Нет
end enum 
enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
enum enumtypePay'Сдельная \ Ставка
  typePay_Stavka=1'Ставка
  typePay_Sdel_nay=0'Сдельная
end enum 
enum enumPCB_TaskType'Тип задачи
  PCB_TaskType_Dostavka=4'Доставка
  PCB_TaskType_Izgotovlenie_PP=1'Изготовление ПП
  PCB_TaskType_Postavka_komplektuusih=2'Поставка комплектующих
  PCB_TaskType_Montag_PP=0'Монтаж ПП
  PCB_TaskType_Proektirovanie_PP=3'Проектирование ПП
end enum 
enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
enum enumtypeReceiv'
  typeReceiv_PTS=1'ПТС
  typeReceiv_SVS=0'СВС
end enum 
enum enumPCB_CustomerType'Статус заказчика
  PCB_CustomerType_Real_niy=1'Реальный
  PCB_CustomerType_Potencial_niy=0'Потенциальный
end enum 
enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
enum enumtypeRowCheque'Тип строки чека
  typeRowCheque_PO=1'ПО
  typeRowCheque_Procee=0'Прочее
  typeRowCheque_Prostoe_PO=4'Простое ПО
  typeRowCheque_dopDOTusluga_PO=2'доп.услуга ПО
  typeRowCheque_dopDOTusluga_zakaza=3'доп.услуга заказа
  typeRowCheque_Tovar=5'Товар
end enum 
enum enumPCB_clear'Тип задачи
  PCB_clear_Zadaca_1=1'Задача 1
  PCB_clear_Zadaca_2=0'Задача 2
end enum 
enum enumtypeTariff'
  typeTariff_Usluga=1'Услуга
  typeTariff_Dostavka=0'Доставка
end enum 
enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
enum enumtypeTRF'Тип тарифа СС
  typeTRF_Tarif_podrydcika=0'Тариф подрядчика
  typeTRF_Tarif_klienta=1'Тариф клиента
  typeTRF_Obsiy_tarif=-1'Общий тариф
end enum 
enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
enum enumtypeCourier'Договор \ ТрудКнижка
  typeCourier_Trudovay_knigka=1'Трудовая книжка
  typeCourier_Dogovor_podryda=0'Договор подряда
end enum 
enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 
private m_WMSD_GTYPE as WMSD_GTYPE_col
private m_WMSD_ZTYPE as WMSD_ZTYPE_col
private m_WMSD_PLTYPE as WMSD_PLTYPE_col
private m_WMSD_QTYPE as WMSD_QTYPE_col
private m_WMSD_ATYPE as WMSD_ATYPE_col
private m_WMSD_SRV as WMSD_SRV_col
private m_WMSD_PART as WMSD_PART_col
private m_WMSD_FACTORY as WMSD_FACTORY_col
private m_WMSD_KILLPLACE as WMSD_KILLPLACE_col
private m_WMSD_COUNTRY as WMSD_COUNTRY_col
private m_WMSD_CAMERA as WMSD_CAMERA_col
private m_WMSD_RULE as WMSD_RULE_col
private m_WMSD_OPTTYPE as WMSD_OPTTYPE_col
private m_WMSD_MOROZ as WMSD_MOROZ_col
private m_WMSD_WH as WMSD_WH_col
private m_WMSD_EI as WMSD_EI_col
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="


'Название типа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TypeName
public property get TypeName() as string
  TypeName = m_TypeName
end property


'Отладочный компонент
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZUtil.Logger
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZUtil.Logger
' Set variable = me. Logger
public property get Logger() as MTZUtil.Logger
  if m_Logger is nothing then
    set m_Logger = new MTZUtil.Logger
    m_Logger.CreateLog TypeName &amp; &quot;_&quot; &amp; ID ,TypeName
  end if
  set Logger = m_Logger
end property


'Получить Название документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Name
public property get Name() as string
  Name = m_Name
end property


'Задать название документа
'Parameters:
'[IN][OUT]  n , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Name = value
public property Let Name(n as string)
  m_Name = n
end property


'Получить корневой объект системы - менеджер документов
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZManager.Main
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZManager.Main
' Set variable = me. Manager
public property get Manager() as MTZManager.Main
  set Manager = m_Manager
end property


'Задать менеджер документов
'Parameters:
'[IN][OUT]  m , тип параметра: MTZManager.Main  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Manager = value
public property Set Manager(m as MTZManager.Main)
  if not m_Manager is nothing then exit property
  set m_Manager = m
  Logger.Message &quot;Manager defined&quot;
end property


'Получить текущую сессию пользователя
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZSession.Session
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZSession.Session
' Set variable = me. MTZSession
public property get MTZSession() as MTZSession.Session
  set MTZSession = m_MTZSession
end property


'Задть текущую сессию пользователя
'Parameters:
'[IN][OUT]  m , тип параметра: MTZSession.Session  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. MTZSession = value
public property Set MTZSession(m as MTZSession.Session)
  if not m_MTZSession is nothing then exit property
  set m_MTZSession = m
  Logger.Message &quot;Session defined&quot;
  m_AutoLoadPart=true
end property


'Признак - работа без соединения с базой
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. WorkOffline
public property Get WorkOffline() as boolean
    WorkOffline = m_WorkOffline
end property


'Получить значение признака работы без соединения
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. WorkOffline = value
public property Let WorkOffline(v as boolean)
  if MTZSession is nothing then 
    m_WorkOffline = false
  else 
    m_WorkOffline = v
  end if 
end property


'Получить признак автоматической загрузки всеех полей
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. AutoLoadPart
public property Get AutoLoadPart() as boolean
    AutoLoadPart = m_AutoLoadPart
end property


'Признак загрузки всех полей (не только идентификатора)
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AutoLoadPart = value
public property Let AutoLoadPart(v as boolean)
    m_AutoLoadPart = v
end property


'Идентификатор документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  ID = m_ID
end property


'Задать идентификатор документа
'Parameters:
'[IN][OUT]  v , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
public property Let ID(v as string)
  m_ID=v
end property


'Родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = nothing
end property


'Корневой объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = me
end property


'Добавить в оптимизтор поиска строку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string, 
'[IN]   Item , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.AddToCash({параметры})
public Sub AddToCash( byval Key as string, byval Item as Object)
  on error resume next
  findCash.Add Item,Key
end sub


'Исключить из оптимизатора сторку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string  - ...
'See Also:
'Example:
'  call me.RemoveFromCash({параметры})
public Sub RemoveFromCash( byval Key as string)
  on error resume next
  findCash.Remove Key
end sub

'Задать идентификатор стиля защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
public property let SecureStyleID(byval newID as string)
  Secure newID
  GetStatus
end property

'Получить идентификатор стиля защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  GetStatus
  SecureStyleID = m_SecureStyleID
end property

'Задать идентификатор сосотяния документа
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. StatusID = value
public property let StatusID(byval newID as string)
    SetStatus newID
    GetStatus
end property

'Получить идентификатор состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusID
public property Get StatusID() as string
  GetStatus
  StatusID = m_StatusID
end property

'Получить название состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusName
public property Get StatusName() as string
  GetStatus
  StatusName=&quot;&quot;
end property

'Даные раздела Тип товара
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_GTYPE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE_col
' Set variable = me. WMSD_GTYPE (...параметры...)
public property Get WMSD_GTYPE (optional byval Refresh as boolean = true) as WMSD_GTYPE_col
 if m_WMSD_GTYPE is nothing then
   set  m_WMSD_GTYPE = new WMSD_GTYPE_col
   set m_WMSD_GTYPE.Parent = me
   set m_WMSD_GTYPE.Application = me.Application
   if Refresh then m_WMSD_GTYPE.Refresh
 end if
 set  WMSD_GTYPE = m_WMSD_GTYPE
end property

'Даные раздела Тип зоны
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_ZTYPE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE_col
' Set variable = me. WMSD_ZTYPE (...параметры...)
public property Get WMSD_ZTYPE (optional byval Refresh as boolean = true) as WMSD_ZTYPE_col
 if m_WMSD_ZTYPE is nothing then
   set  m_WMSD_ZTYPE = new WMSD_ZTYPE_col
   set m_WMSD_ZTYPE.Parent = me
   set m_WMSD_ZTYPE.Application = me.Application
   if Refresh then m_WMSD_ZTYPE.Refresh
 end if
 set  WMSD_ZTYPE = m_WMSD_ZTYPE
end property

'Даные раздела Тип палеты
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_PLTYPE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE_col
' Set variable = me. WMSD_PLTYPE (...параметры...)
public property Get WMSD_PLTYPE (optional byval Refresh as boolean = true) as WMSD_PLTYPE_col
 if m_WMSD_PLTYPE is nothing then
   set  m_WMSD_PLTYPE = new WMSD_PLTYPE_col
   set m_WMSD_PLTYPE.Parent = me
   set m_WMSD_PLTYPE.Application = me.Application
   if Refresh then m_WMSD_PLTYPE.Refresh
 end if
 set  WMSD_PLTYPE = m_WMSD_PLTYPE
end property

'Даные раздела Тип заявки
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_QTYPE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE_col
' Set variable = me. WMSD_QTYPE (...параметры...)
public property Get WMSD_QTYPE (optional byval Refresh as boolean = true) as WMSD_QTYPE_col
 if m_WMSD_QTYPE is nothing then
   set  m_WMSD_QTYPE = new WMSD_QTYPE_col
   set m_WMSD_QTYPE.Parent = me
   set m_WMSD_QTYPE.Application = me.Application
   if Refresh then m_WMSD_QTYPE.Refresh
 end if
 set  WMSD_QTYPE = m_WMSD_QTYPE
end property

'Даные раздела Тип операции
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_ATYPE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE_col
' Set variable = me. WMSD_ATYPE (...параметры...)
public property Get WMSD_ATYPE (optional byval Refresh as boolean = true) as WMSD_ATYPE_col
 if m_WMSD_ATYPE is nothing then
   set  m_WMSD_ATYPE = new WMSD_ATYPE_col
   set m_WMSD_ATYPE.Parent = me
   set m_WMSD_ATYPE.Application = me.Application
   if Refresh then m_WMSD_ATYPE.Refresh
 end if
 set  WMSD_ATYPE = m_WMSD_ATYPE
end property

'Даные раздела Услуги
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_SRV_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV_col
' Set variable = me. WMSD_SRV (...параметры...)
public property Get WMSD_SRV (optional byval Refresh as boolean = true) as WMSD_SRV_col
 if m_WMSD_SRV is nothing then
   set  m_WMSD_SRV = new WMSD_SRV_col
   set m_WMSD_SRV.Parent = me
   set m_WMSD_SRV.Application = me.Application
   if Refresh then m_WMSD_SRV.Refresh
 end if
 set  WMSD_SRV = m_WMSD_SRV
end property

'Даные раздела Партия товара
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_PART_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART_col
' Set variable = me. WMSD_PART (...параметры...)
public property Get WMSD_PART (optional byval Refresh as boolean = true) as WMSD_PART_col
 if m_WMSD_PART is nothing then
   set  m_WMSD_PART = new WMSD_PART_col
   set m_WMSD_PART.Parent = me
   set m_WMSD_PART.Application = me.Application
   if Refresh then m_WMSD_PART.Refresh
 end if
 set  WMSD_PART = m_WMSD_PART
end property

'Даные раздела Завод
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_FACTORY_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY_col
' Set variable = me. WMSD_FACTORY (...параметры...)
public property Get WMSD_FACTORY (optional byval Refresh as boolean = true) as WMSD_FACTORY_col
 if m_WMSD_FACTORY is nothing then
   set  m_WMSD_FACTORY = new WMSD_FACTORY_col
   set m_WMSD_FACTORY.Parent = me
   set m_WMSD_FACTORY.Application = me.Application
   if Refresh then m_WMSD_FACTORY.Refresh
 end if
 set  WMSD_FACTORY = m_WMSD_FACTORY
end property

'Даные раздела Бойня
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_KILLPLACE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE_col
' Set variable = me. WMSD_KILLPLACE (...параметры...)
public property Get WMSD_KILLPLACE (optional byval Refresh as boolean = true) as WMSD_KILLPLACE_col
 if m_WMSD_KILLPLACE is nothing then
   set  m_WMSD_KILLPLACE = new WMSD_KILLPLACE_col
   set m_WMSD_KILLPLACE.Parent = me
   set m_WMSD_KILLPLACE.Application = me.Application
   if Refresh then m_WMSD_KILLPLACE.Refresh
 end if
 set  WMSD_KILLPLACE = m_WMSD_KILLPLACE
end property

'Даные раздела Страна
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_COUNTRY_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY_col
' Set variable = me. WMSD_COUNTRY (...параметры...)
public property Get WMSD_COUNTRY (optional byval Refresh as boolean = true) as WMSD_COUNTRY_col
 if m_WMSD_COUNTRY is nothing then
   set  m_WMSD_COUNTRY = new WMSD_COUNTRY_col
   set m_WMSD_COUNTRY.Parent = me
   set m_WMSD_COUNTRY.Application = me.Application
   if Refresh then m_WMSD_COUNTRY.Refresh
 end if
 set  WMSD_COUNTRY = m_WMSD_COUNTRY
end property

'Даные раздела Камеры
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_CAMERA_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA_col
' Set variable = me. WMSD_CAMERA (...параметры...)
public property Get WMSD_CAMERA (optional byval Refresh as boolean = true) as WMSD_CAMERA_col
 if m_WMSD_CAMERA is nothing then
   set  m_WMSD_CAMERA = new WMSD_CAMERA_col
   set m_WMSD_CAMERA.Parent = me
   set m_WMSD_CAMERA.Application = me.Application
   if Refresh then m_WMSD_CAMERA.Refresh
 end if
 set  WMSD_CAMERA = m_WMSD_CAMERA
end property

'Даные раздела Правило формирования партии
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_RULE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE_col
' Set variable = me. WMSD_RULE (...параметры...)
public property Get WMSD_RULE (optional byval Refresh as boolean = true) as WMSD_RULE_col
 if m_WMSD_RULE is nothing then
   set  m_WMSD_RULE = new WMSD_RULE_col
   set m_WMSD_RULE.Parent = me
   set m_WMSD_RULE.Application = me.Application
   if Refresh then m_WMSD_RULE.Refresh
 end if
 set  WMSD_RULE = m_WMSD_RULE
end property

'Даные раздела Тип оптимизации
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_OPTTYPE_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE_col
' Set variable = me. WMSD_OPTTYPE (...параметры...)
public property Get WMSD_OPTTYPE (optional byval Refresh as boolean = true) as WMSD_OPTTYPE_col
 if m_WMSD_OPTTYPE is nothing then
   set  m_WMSD_OPTTYPE = new WMSD_OPTTYPE_col
   set m_WMSD_OPTTYPE.Parent = me
   set m_WMSD_OPTTYPE.Application = me.Application
   if Refresh then m_WMSD_OPTTYPE.Refresh
 end if
 set  WMSD_OPTTYPE = m_WMSD_OPTTYPE
end property

'Даные раздела Параметры выморозки
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_MOROZ_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ_col
' Set variable = me. WMSD_MOROZ (...параметры...)
public property Get WMSD_MOROZ (optional byval Refresh as boolean = true) as WMSD_MOROZ_col
 if m_WMSD_MOROZ is nothing then
   set  m_WMSD_MOROZ = new WMSD_MOROZ_col
   set m_WMSD_MOROZ.Parent = me
   set m_WMSD_MOROZ.Application = me.Application
   if Refresh then m_WMSD_MOROZ.Refresh
 end if
 set  WMSD_MOROZ = m_WMSD_MOROZ
end property

'Даные раздела Склад
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_WH_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH_col
' Set variable = me. WMSD_WH (...параметры...)
public property Get WMSD_WH (optional byval Refresh as boolean = true) as WMSD_WH_col
 if m_WMSD_WH is nothing then
   set  m_WMSD_WH = new WMSD_WH_col
   set m_WMSD_WH.Parent = me
   set m_WMSD_WH.Application = me.Application
   if Refresh then m_WMSD_WH.Refresh
 end if
 set  WMSD_WH = m_WMSD_WH
end property

'Даные раздела Единица измерения
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса WMSD_EI_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI_col
' Set variable = me. WMSD_EI (...параметры...)
public property Get WMSD_EI (optional byval Refresh as boolean = true) as WMSD_EI_col
 if m_WMSD_EI is nothing then
   set  m_WMSD_EI = new WMSD_EI_col
   set m_WMSD_EI.Parent = me
   set m_WMSD_EI.Application = me.Application
   if Refresh then m_WMSD_EI.Refresh
 end if
 set  WMSD_EI = m_WMSD_EI
end property

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public sub CloseClass()
 on error resume next
 Set findCash = Nothing

  if not m_WMSD_GTYPE is nothing then 
    m_WMSD_GTYPE.CloseClass 
    set m_WMSD_GTYPE = nothing 
  end if
  if not m_WMSD_ZTYPE is nothing then 
    m_WMSD_ZTYPE.CloseClass 
    set m_WMSD_ZTYPE = nothing 
  end if
  if not m_WMSD_PLTYPE is nothing then 
    m_WMSD_PLTYPE.CloseClass 
    set m_WMSD_PLTYPE = nothing 
  end if
  if not m_WMSD_QTYPE is nothing then 
    m_WMSD_QTYPE.CloseClass 
    set m_WMSD_QTYPE = nothing 
  end if
  if not m_WMSD_ATYPE is nothing then 
    m_WMSD_ATYPE.CloseClass 
    set m_WMSD_ATYPE = nothing 
  end if
  if not m_WMSD_SRV is nothing then 
    m_WMSD_SRV.CloseClass 
    set m_WMSD_SRV = nothing 
  end if
  if not m_WMSD_PART is nothing then 
    m_WMSD_PART.CloseClass 
    set m_WMSD_PART = nothing 
  end if
  if not m_WMSD_FACTORY is nothing then 
    m_WMSD_FACTORY.CloseClass 
    set m_WMSD_FACTORY = nothing 
  end if
  if not m_WMSD_KILLPLACE is nothing then 
    m_WMSD_KILLPLACE.CloseClass 
    set m_WMSD_KILLPLACE = nothing 
  end if
  if not m_WMSD_COUNTRY is nothing then 
    m_WMSD_COUNTRY.CloseClass 
    set m_WMSD_COUNTRY = nothing 
  end if
  if not m_WMSD_CAMERA is nothing then 
    m_WMSD_CAMERA.CloseClass 
    set m_WMSD_CAMERA = nothing 
  end if
  if not m_WMSD_RULE is nothing then 
    m_WMSD_RULE.CloseClass 
    set m_WMSD_RULE = nothing 
  end if
  if not m_WMSD_OPTTYPE is nothing then 
    m_WMSD_OPTTYPE.CloseClass 
    set m_WMSD_OPTTYPE = nothing 
  end if
  if not m_WMSD_MOROZ is nothing then 
    m_WMSD_MOROZ.CloseClass 
    set m_WMSD_MOROZ = nothing 
  end if
  if not m_WMSD_WH is nothing then 
    m_WMSD_WH.CloseClass 
    set m_WMSD_WH = nothing 
  end if
  if not m_WMSD_EI is nothing then 
    m_WMSD_EI.CloseClass 
    set m_WMSD_EI = nothing 
  end if
  if not m_manager is nothing then
    set m_manager = nothing
  end if
  if not m_MTZSession is nothing then
    set m_MTZSession = nothing
  end if
  if not m_Logger is nothing then
    m_Logger.Message &quot;Application.CloseClass&quot; 
    set m_Logger = nothing
  end if
end sub

'Поиск  строки раздела по ключу и названию раздела во всех документах
'Parameters:
'[IN]   StrID , тип параметра: String, 
'[IN]   RowID , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as Object
' Set variable = me.FindRowObject(...параметры...)
Public Function FindRowObject(ByVal StrID As String, ByVal RowID As String) As Object
  Dim obj As Object
  Dim Rowobj As Object
  Dim i As Long
Dim m_FindObject As Object

If StrID = &quot;&quot; Then Exit Function
If RowID = &quot;&quot; Then Exit Function
If findCash Is Nothing Then
 Set findCash = New Collection
End If
On Error Resume Next
Set m_FindObject = findCash.Item(StrID &amp; RowID)
If Not m_FindObject Is Nothing Then
  If m_FindObject.Application Is Nothing Then
    Set m_FindObject = Nothing
    findCash.Remove StrID &amp; RowID
  Else
   Set FindRowObject = m_FindObject
   Exit Function
  End If
End If

  Dim rpl As RowParentList
  Set rpl = MTZSession.TheFinder.RowParents(StrID, RowID)
  If rpl.Count &gt; 0 Then

 If rpl.Item(1).RowID = ID Then
    Set Rowobj = Me
    For i = 2 To rpl.Count
     Set Rowobj = Rowobj.FindObject(rpl.Item(i).PartName, rpl.Item(i).RowID)
    Next

' reference from another object
 Else
   Set obj = Manager.GetInstanceObject(rpl.Item(1).RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindRowObject(StrID, RowID)
 End If

  Else
' use old search style
 Set Rowobj = FindObject(StrID, RowID)
 If Rowobj Is Nothing Then
   Set obj = Manager.FindInstanceByRow(StrID, RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindObject(StrID, RowID)
 End If
  End If
  If Rowobj Is Nothing Then Exit Function
  Set FindRowObject = Rowobj
  Set Rowobj = Nothing
  Set obj = Nothing
End Function


'Поиск строки только в текщем документе
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
  If findCash Is Nothing Then
  Set findCash = New Collection
 End If
 On Error Resume Next
 Set m_FindObject = findCash.item(StrID &amp; InstID)
 if  not m_FindObject is nothing then
   if  m_FindObject.application is nothing then
     set m_FindObject = nothing
     findCash.remove StrID &amp; InstID
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  WMSD_GTYPE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_ZTYPE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_PLTYPE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_QTYPE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_ATYPE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_SRV.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_PART.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_FACTORY.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_KILLPLACE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_COUNTRY.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_CAMERA.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_RULE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_OPTTYPE.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_MOROZ.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_WH.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  WMSD_EI.FindObject(StrID,InstID)
 end if
 If findCash.item(StrID &amp; InstID) Is Nothing Then
   findCash.Add m_FindObject, StrID &amp; InstID
 End If
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function


'Оптимизировать объем занятой памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()

WMSD_GTYPE.Compact
WMSD_ZTYPE.Compact
WMSD_PLTYPE.Compact
WMSD_QTYPE.Compact
WMSD_ATYPE.Compact
WMSD_SRV.Compact
WMSD_PART.Compact
WMSD_FACTORY.Compact
WMSD_KILLPLACE.Compact
WMSD_COUNTRY.Compact
WMSD_CAMERA.Compact
WMSD_RULE.Compact
WMSD_OPTTYPE.Compact
WMSD_MOROZ.Compact
WMSD_WH.Compact
WMSD_EI.Compact
end sub

'Задать стиль защиты документа
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;INSTANCE&quot; ,ID,SecurityStyleID)
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Secure&quot;,err.description
end sub

'Распространить стиль защиты на все строки документа
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.Propagate &quot;INSTANCE&quot;, ID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Propagate&quot;,err.description
end sub

'Сохранить изменения (новое имя)
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save()
public sub Save()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.NewInstance ID, TypeName, Name
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Save&quot;,err.description
end sub

'Задать состояние
'Parameters:
'[IN]   StatusID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.SetStatus({параметры})
private sub SetStatus(byval StatusID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.SetStatus id,StatusID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub

'Получтиь актуальное состояние
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.GetStatus()
private sub GetStatus() 
if application.WorkOffline then exit sub
Dim rs as adodb.recordset
On Error goto bye
set rs =application.MTZSession.GetRow( &quot;INSTANCE&quot;, ID)
m_statusid=rs!status &amp; &quot;&quot; 
m_SecureStyleID = rs!SecurityStyleID &amp; &quot;&quot; 
exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
 on error resume next
  Dim anode As IXMLDOMElement
  Dim e_list As IXMLDOMNodeList
 on error resume next
  set anode = node.firstchild  
  if m_typename &lt;&gt; anode.Attributes.getNamedItem(&quot;TYPENAME&quot;).nodeValue then exit sub
  m_IsLocked=anode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  if LoadMode &lt;&gt;2 then 
    m_ID=anode.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    SetStatus anode.Attributes.getNamedItem(&quot;STATUSID&quot;).nodeValue
    Secure anode.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
    WorkOffline =anode.Attributes.getNamedItem(&quot;WorkOffline&quot;).nodevalue
    if workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  end if 
  m_Name=anode.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue
Set e_list = anode.selectNodes(&quot;WMSD_GTYPE_COL&quot;)
  WMSD_GTYPE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_ZTYPE_COL&quot;)
  WMSD_ZTYPE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_PLTYPE_COL&quot;)
  WMSD_PLTYPE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_QTYPE_COL&quot;)
  WMSD_QTYPE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_ATYPE_COL&quot;)
  WMSD_ATYPE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_SRV_COL&quot;)
  WMSD_SRV.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_PART_COL&quot;)
  WMSD_PART.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_FACTORY_COL&quot;)
  WMSD_FACTORY.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_KILLPLACE_COL&quot;)
  WMSD_KILLPLACE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_COUNTRY_COL&quot;)
  WMSD_COUNTRY.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_CAMERA_COL&quot;)
  WMSD_CAMERA.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_RULE_COL&quot;)
  WMSD_RULE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_OPTTYPE_COL&quot;)
  WMSD_OPTTYPE.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_MOROZ_COL&quot;)
  WMSD_MOROZ.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_WH_COL&quot;)
  WMSD_WH.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;WMSD_EI_COL&quot;)
  WMSD_EI.XMLLoad e_list, LoadMode
end sub



'Сохранить данные в XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
  dim anode as IXMLDOMElement
  set anode = xdom.CreateElement(&quot;APPLICATION&quot;)
  anode.setAttribute &quot;ID&quot;, m_ID
  anode.setAttribute &quot;TYPENAME&quot;, m_TypeName
  anode.setAttribute &quot;NAME&quot;, m_Name
  anode.setAttribute &quot;STATUSID&quot;, m_StatusID
  anode.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  anode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  anode.setAttribute &quot;WorkOffline&quot;, WorkOffline
  node.appendChild anode
  WMSD_GTYPE.XMLSave anode,xdom
  WMSD_ZTYPE.XMLSave anode,xdom
  WMSD_PLTYPE.XMLSave anode,xdom
  WMSD_QTYPE.XMLSave anode,xdom
  WMSD_ATYPE.XMLSave anode,xdom
  WMSD_SRV.XMLSave anode,xdom
  WMSD_PART.XMLSave anode,xdom
  WMSD_FACTORY.XMLSave anode,xdom
  WMSD_KILLPLACE.XMLSave anode,xdom
  WMSD_COUNTRY.XMLSave anode,xdom
  WMSD_CAMERA.XMLSave anode,xdom
  WMSD_RULE.XMLSave anode,xdom
  WMSD_OPTTYPE.XMLSave anode,xdom
  WMSD_MOROZ.XMLSave anode,xdom
  WMSD_WH.XMLSave anode,xdom
  WMSD_EI.XMLSave anode,xdom
end sub


'Краткое название
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.Brief() 
public function Brief() as string
 Brief= Name 
end function

'Загрузка корня объекта в дерево
'Parameters:
'[IN][OUT]   tree , тип параметра: object, 
'[IN]   pkey , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;, 
'[IN][OUT]   optional CollectionName , тип параметра: string=&quot;&quot;   - ...
'See Also:
'Example:
'  call me.FillTree({параметры})
public sub FillTree( tree as object, byval pkey as string, byval mode as string, optional Mask as string =&quot;&quot;, optional CollectionName as string=&quot;&quot; )
 dim node as object,key as string
If CollectionName = &quot;&quot; Then
 key = createguid2() &amp; ID
 if pkey =&quot;&quot; then
   set node=tree.nodes.add(,0,key,Brief)
 else
   set node=tree.nodes.add(pkey,4,key,Brief)
 end if
 node.tag=&quot;object&quot;
else
 key=&quot;&quot; 
end if
  if mode = &quot;main&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_GTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_GTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
       end if
       node.tag=&quot;WMSD_GTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    end if
    node.tag=&quot;WMSD_GTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_ZTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_ZTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
       end if
       node.tag=&quot;WMSD_ZTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    end if
    node.tag=&quot;WMSD_ZTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_PLTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_PLTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
       end if
       node.tag=&quot;WMSD_PLTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    end if
    node.tag=&quot;WMSD_PLTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_QTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_QTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
       end if
       node.tag=&quot;WMSD_QTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    end if
    node.tag=&quot;WMSD_QTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_ATYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_ATYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
       end if
       node.tag=&quot;WMSD_ATYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    end if
    node.tag=&quot;WMSD_ATYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_SRV&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
       end if
       node.tag=&quot;WMSD_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    end if
    node.tag=&quot;WMSD_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_PART&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_PART&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
       end if
       node.tag=&quot;WMSD_PART&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    end if
    node.tag=&quot;WMSD_PART&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_FACTORY&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_FACTORY&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
       end if
       node.tag=&quot;WMSD_FACTORY&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    end if
    node.tag=&quot;WMSD_FACTORY&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_KILLPLACE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_KILLPLACE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
       end if
       node.tag=&quot;WMSD_KILLPLACE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    end if
    node.tag=&quot;WMSD_KILLPLACE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_COUNTRY&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_COUNTRY&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
       end if
       node.tag=&quot;WMSD_COUNTRY&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    end if
    node.tag=&quot;WMSD_COUNTRY&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_CAMERA&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_CAMERA&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
       end if
       node.tag=&quot;WMSD_CAMERA&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    end if
    node.tag=&quot;WMSD_CAMERA&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_RULE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_RULE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
       end if
       node.tag=&quot;WMSD_RULE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    end if
    node.tag=&quot;WMSD_RULE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_OPTTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_OPTTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
       end if
       node.tag=&quot;WMSD_OPTTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    end if
    node.tag=&quot;WMSD_OPTTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_MOROZ&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_MOROZ&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
       end if
       node.tag=&quot;WMSD_MOROZ&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    end if
    node.tag=&quot;WMSD_MOROZ&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_WH&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_WH&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_WH&quot;,&quot;Склад&quot;)
       end if
       node.tag=&quot;WMSD_WH&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    end if
    node.tag=&quot;WMSD_WH&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_EI&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_EI&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
       end if
       node.tag=&quot;WMSD_EI&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    end if
    node.tag=&quot;WMSD_EI&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;admi&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_GTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_GTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
       end if
       node.tag=&quot;WMSD_GTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    end if
    node.tag=&quot;WMSD_GTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_ZTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_ZTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
       end if
       node.tag=&quot;WMSD_ZTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    end if
    node.tag=&quot;WMSD_ZTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_PLTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_PLTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
       end if
       node.tag=&quot;WMSD_PLTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    end if
    node.tag=&quot;WMSD_PLTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_QTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_QTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
       end if
       node.tag=&quot;WMSD_QTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    end if
    node.tag=&quot;WMSD_QTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_ATYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_ATYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
       end if
       node.tag=&quot;WMSD_ATYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    end if
    node.tag=&quot;WMSD_ATYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_SRV&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
       end if
       node.tag=&quot;WMSD_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    end if
    node.tag=&quot;WMSD_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_PART&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_PART&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
       end if
       node.tag=&quot;WMSD_PART&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    end if
    node.tag=&quot;WMSD_PART&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_FACTORY&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_FACTORY&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
       end if
       node.tag=&quot;WMSD_FACTORY&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    end if
    node.tag=&quot;WMSD_FACTORY&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_KILLPLACE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_KILLPLACE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
       end if
       node.tag=&quot;WMSD_KILLPLACE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    end if
    node.tag=&quot;WMSD_KILLPLACE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_COUNTRY&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_COUNTRY&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
       end if
       node.tag=&quot;WMSD_COUNTRY&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    end if
    node.tag=&quot;WMSD_COUNTRY&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_CAMERA&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_CAMERA&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
       end if
       node.tag=&quot;WMSD_CAMERA&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    end if
    node.tag=&quot;WMSD_CAMERA&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_RULE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_RULE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
       end if
       node.tag=&quot;WMSD_RULE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    end if
    node.tag=&quot;WMSD_RULE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_OPTTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_OPTTYPE&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
       end if
       node.tag=&quot;WMSD_OPTTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    end if
    node.tag=&quot;WMSD_OPTTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_MOROZ&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_MOROZ&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
       end if
       node.tag=&quot;WMSD_MOROZ&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    end if
    node.tag=&quot;WMSD_MOROZ&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_WH&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_WH&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_WH&quot;,&quot;Склад&quot;)
       end if
       node.tag=&quot;WMSD_WH&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    end if
    node.tag=&quot;WMSD_WH&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_EI&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_EI&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
       end if
       node.tag=&quot;WMSD_EI&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    end if
    node.tag=&quot;WMSD_EI&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_GTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_GTYPE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    end if
       node.tag=&quot;WMSD_GTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_GTYPE&quot;,&quot;Тип товара&quot;)
    end if
    node.tag=&quot;WMSD_GTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_ZTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_ZTYPE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    end if
       node.tag=&quot;WMSD_ZTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_ZTYPE&quot;,&quot;Тип зоны&quot;)
    end if
    node.tag=&quot;WMSD_ZTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_PLTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_PLTYPE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    end if
       node.tag=&quot;WMSD_PLTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_PLTYPE&quot;,&quot;Тип палеты&quot;)
    end if
    node.tag=&quot;WMSD_PLTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_QTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_QTYPE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    end if
       node.tag=&quot;WMSD_QTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_QTYPE&quot;,&quot;Тип заявки&quot;)
    end if
    node.tag=&quot;WMSD_QTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_ATYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_ATYPE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    end if
       node.tag=&quot;WMSD_ATYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_ATYPE&quot;,&quot;Тип операции&quot;)
    end if
    node.tag=&quot;WMSD_ATYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_SRV&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_SRV&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    end if
       node.tag=&quot;WMSD_SRV&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_SRV&quot;,&quot;Услуги&quot;)
    end if
    node.tag=&quot;WMSD_SRV&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_PART&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_PART&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    end if
       node.tag=&quot;WMSD_PART&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_PART&quot;,&quot;Партия товара&quot;)
    end if
    node.tag=&quot;WMSD_PART&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_FACTORY&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_FACTORY&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    end if
       node.tag=&quot;WMSD_FACTORY&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_FACTORY&quot;,&quot;Завод&quot;)
    end if
    node.tag=&quot;WMSD_FACTORY&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_KILLPLACE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_KILLPLACE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    end if
       node.tag=&quot;WMSD_KILLPLACE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_KILLPLACE&quot;,&quot;Бойня&quot;)
    end if
    node.tag=&quot;WMSD_KILLPLACE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_COUNTRY&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_COUNTRY&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    end if
       node.tag=&quot;WMSD_COUNTRY&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_COUNTRY&quot;,&quot;Страна&quot;)
    end if
    node.tag=&quot;WMSD_COUNTRY&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_CAMERA&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_CAMERA&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    end if
       node.tag=&quot;WMSD_CAMERA&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_CAMERA&quot;,&quot;Камеры&quot;)
    end if
    node.tag=&quot;WMSD_CAMERA&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_RULE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_RULE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    end if
       node.tag=&quot;WMSD_RULE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_RULE&quot;,&quot;Правило формирования партии&quot;)
    end if
    node.tag=&quot;WMSD_RULE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_OPTTYPE&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_OPTTYPE&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    end if
       node.tag=&quot;WMSD_OPTTYPE&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_OPTTYPE&quot;,&quot;Тип оптимизации&quot;)
    end if
    node.tag=&quot;WMSD_OPTTYPE&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_MOROZ&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_MOROZ&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    end if
       node.tag=&quot;WMSD_MOROZ&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_MOROZ&quot;,&quot;Параметры выморозки&quot;)
    end if
    node.tag=&quot;WMSD_MOROZ&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_WH&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_WH&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    end if
       node.tag=&quot;WMSD_WH&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_WH&quot;,&quot;Склад&quot;)
    end if
    node.tag=&quot;WMSD_WH&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;WMSD_EI&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;WMSD_EI&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    end if
       node.tag=&quot;WMSD_EI&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;WMSD_EI&quot;,&quot;Единица измерения&quot;)
    end if
    node.tag=&quot;WMSD_EI&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if

end sub


'Раскрытие объекта при выборе узла в дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string =&quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 id = mid(key,39,38)
 on error resume next
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if trim(struct)=&quot;&quot;  then 
   set item =manager.GetInstanceObject(id)
   if  item is nothing then exit sub
   If Not item Is Me Then
     item.Expand tree, Key, mode,mask
     Exit Sub
   End If
 else
    set item =FindRowObject(struct,id)
    if  item is nothing then exit sub
    call item.Expand(tree,key,mode,mask)
    exit sub
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
 case &quot;WMSD_GTYPE&quot; 
    item.WMSD_GTYPE.refresh
    for i=1 to item.WMSD_GTYPE.count
    nid =createguid2() &amp;  item.WMSD_GTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_GTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_ZTYPE&quot; 
    item.WMSD_ZTYPE.refresh
    for i=1 to item.WMSD_ZTYPE.count
    nid =createguid2() &amp;  item.WMSD_ZTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_ZTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_PLTYPE&quot; 
    item.WMSD_PLTYPE.refresh
    for i=1 to item.WMSD_PLTYPE.count
    nid =createguid2() &amp;  item.WMSD_PLTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_PLTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_QTYPE&quot; 
    item.WMSD_QTYPE.refresh
    for i=1 to item.WMSD_QTYPE.count
    nid =createguid2() &amp;  item.WMSD_QTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_QTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_ATYPE&quot; 
    item.WMSD_ATYPE.refresh
    for i=1 to item.WMSD_ATYPE.count
    nid =createguid2() &amp;  item.WMSD_ATYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_ATYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_SRV&quot; 
    item.WMSD_SRV.refresh
    for i=1 to item.WMSD_SRV.count
    nid =createguid2() &amp;  item.WMSD_SRV.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_PART&quot; 
    item.WMSD_PART.refresh
    for i=1 to item.WMSD_PART.count
    nid =createguid2() &amp;  item.WMSD_PART.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_PART.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_FACTORY&quot; 
    item.WMSD_FACTORY.refresh
    for i=1 to item.WMSD_FACTORY.count
    nid =createguid2() &amp;  item.WMSD_FACTORY.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_FACTORY.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_KILLPLACE&quot; 
    item.WMSD_KILLPLACE.refresh
    for i=1 to item.WMSD_KILLPLACE.count
    nid =createguid2() &amp;  item.WMSD_KILLPLACE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_KILLPLACE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_COUNTRY&quot; 
    item.WMSD_COUNTRY.refresh
    for i=1 to item.WMSD_COUNTRY.count
    nid =createguid2() &amp;  item.WMSD_COUNTRY.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_COUNTRY.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_CAMERA&quot; 
    item.WMSD_CAMERA.refresh
    for i=1 to item.WMSD_CAMERA.count
    nid =createguid2() &amp;  item.WMSD_CAMERA.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_CAMERA.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_RULE&quot; 
    item.WMSD_RULE.refresh
    for i=1 to item.WMSD_RULE.count
    nid =createguid2() &amp;  item.WMSD_RULE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_RULE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_OPTTYPE&quot; 
    item.WMSD_OPTTYPE.refresh
    for i=1 to item.WMSD_OPTTYPE.count
    nid =createguid2() &amp;  item.WMSD_OPTTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_OPTTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_MOROZ&quot; 
    item.WMSD_MOROZ.refresh
    for i=1 to item.WMSD_MOROZ.count
    nid =createguid2() &amp;  item.WMSD_MOROZ.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_MOROZ.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_WH&quot; 
    item.WMSD_WH.refresh
    for i=1 to item.WMSD_WH.count
    nid =createguid2() &amp;  item.WMSD_WH.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_WH.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_EI&quot; 
    item.WMSD_EI.refresh
    for i=1 to item.WMSD_EI.count
    nid =createguid2() &amp;  item.WMSD_EI.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_EI.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
 case &quot;WMSD_GTYPE&quot; 
    item.WMSD_GTYPE.refresh
    for i=1 to item.WMSD_GTYPE.count
    nid =createguid2() &amp;  item.WMSD_GTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_GTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_ZTYPE&quot; 
    item.WMSD_ZTYPE.refresh
    for i=1 to item.WMSD_ZTYPE.count
    nid =createguid2() &amp;  item.WMSD_ZTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_ZTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_PLTYPE&quot; 
    item.WMSD_PLTYPE.refresh
    for i=1 to item.WMSD_PLTYPE.count
    nid =createguid2() &amp;  item.WMSD_PLTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_PLTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_QTYPE&quot; 
    item.WMSD_QTYPE.refresh
    for i=1 to item.WMSD_QTYPE.count
    nid =createguid2() &amp;  item.WMSD_QTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_QTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_ATYPE&quot; 
    item.WMSD_ATYPE.refresh
    for i=1 to item.WMSD_ATYPE.count
    nid =createguid2() &amp;  item.WMSD_ATYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_ATYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_SRV&quot; 
    item.WMSD_SRV.refresh
    for i=1 to item.WMSD_SRV.count
    nid =createguid2() &amp;  item.WMSD_SRV.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_PART&quot; 
    item.WMSD_PART.refresh
    for i=1 to item.WMSD_PART.count
    nid =createguid2() &amp;  item.WMSD_PART.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_PART.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_FACTORY&quot; 
    item.WMSD_FACTORY.refresh
    for i=1 to item.WMSD_FACTORY.count
    nid =createguid2() &amp;  item.WMSD_FACTORY.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_FACTORY.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_KILLPLACE&quot; 
    item.WMSD_KILLPLACE.refresh
    for i=1 to item.WMSD_KILLPLACE.count
    nid =createguid2() &amp;  item.WMSD_KILLPLACE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_KILLPLACE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_COUNTRY&quot; 
    item.WMSD_COUNTRY.refresh
    for i=1 to item.WMSD_COUNTRY.count
    nid =createguid2() &amp;  item.WMSD_COUNTRY.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_COUNTRY.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_CAMERA&quot; 
    item.WMSD_CAMERA.refresh
    for i=1 to item.WMSD_CAMERA.count
    nid =createguid2() &amp;  item.WMSD_CAMERA.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_CAMERA.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_RULE&quot; 
    item.WMSD_RULE.refresh
    for i=1 to item.WMSD_RULE.count
    nid =createguid2() &amp;  item.WMSD_RULE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_RULE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_OPTTYPE&quot; 
    item.WMSD_OPTTYPE.refresh
    for i=1 to item.WMSD_OPTTYPE.count
    nid =createguid2() &amp;  item.WMSD_OPTTYPE.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_OPTTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_MOROZ&quot; 
    item.WMSD_MOROZ.refresh
    for i=1 to item.WMSD_MOROZ.count
    nid =createguid2() &amp;  item.WMSD_MOROZ.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_MOROZ.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_WH&quot; 
    item.WMSD_WH.refresh
    for i=1 to item.WMSD_WH.count
    nid =createguid2() &amp;  item.WMSD_WH.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_WH.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_EI&quot; 
    item.WMSD_EI.refresh
    for i=1 to item.WMSD_EI.count
    nid =createguid2() &amp;  item.WMSD_EI.item(i).id
    tree.nodes.add( key,4,nid,  item.WMSD_EI.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 case &quot;WMSD_GTYPE&quot; 
    item.WMSD_GTYPE.refresh
    for i=1 to item.WMSD_GTYPE.count
    nid =createguid2() &amp;  item.WMSD_GTYPE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_GTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_ZTYPE&quot; 
    item.WMSD_ZTYPE.refresh
    for i=1 to item.WMSD_ZTYPE.count
    nid =createguid2() &amp;  item.WMSD_ZTYPE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_ZTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_PLTYPE&quot; 
    item.WMSD_PLTYPE.refresh
    for i=1 to item.WMSD_PLTYPE.count
    nid =createguid2() &amp;  item.WMSD_PLTYPE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_PLTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_QTYPE&quot; 
    item.WMSD_QTYPE.refresh
    for i=1 to item.WMSD_QTYPE.count
    nid =createguid2() &amp;  item.WMSD_QTYPE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_QTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_ATYPE&quot; 
    item.WMSD_ATYPE.refresh
    for i=1 to item.WMSD_ATYPE.count
    nid =createguid2() &amp;  item.WMSD_ATYPE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_ATYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_SRV&quot; 
    item.WMSD_SRV.refresh
    for i=1 to item.WMSD_SRV.count
    nid =createguid2() &amp;  item.WMSD_SRV.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_SRV.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_PART&quot; 
    item.WMSD_PART.refresh
    for i=1 to item.WMSD_PART.count
    nid =createguid2() &amp;  item.WMSD_PART.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_PART.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_FACTORY&quot; 
    item.WMSD_FACTORY.refresh
    for i=1 to item.WMSD_FACTORY.count
    nid =createguid2() &amp;  item.WMSD_FACTORY.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_FACTORY.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_KILLPLACE&quot; 
    item.WMSD_KILLPLACE.refresh
    for i=1 to item.WMSD_KILLPLACE.count
    nid =createguid2() &amp;  item.WMSD_KILLPLACE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_KILLPLACE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_COUNTRY&quot; 
    item.WMSD_COUNTRY.refresh
    for i=1 to item.WMSD_COUNTRY.count
    nid =createguid2() &amp;  item.WMSD_COUNTRY.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_COUNTRY.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_CAMERA&quot; 
    item.WMSD_CAMERA.refresh
    for i=1 to item.WMSD_CAMERA.count
    nid =createguid2() &amp;  item.WMSD_CAMERA.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_CAMERA.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_RULE&quot; 
    item.WMSD_RULE.refresh
    for i=1 to item.WMSD_RULE.count
    nid =createguid2() &amp;  item.WMSD_RULE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_RULE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_OPTTYPE&quot; 
    item.WMSD_OPTTYPE.refresh
    for i=1 to item.WMSD_OPTTYPE.count
    nid =createguid2() &amp;  item.WMSD_OPTTYPE.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_OPTTYPE.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_MOROZ&quot; 
    item.WMSD_MOROZ.refresh
    for i=1 to item.WMSD_MOROZ.count
    nid =createguid2() &amp;  item.WMSD_MOROZ.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_MOROZ.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_WH&quot; 
    item.WMSD_WH.refresh
    for i=1 to item.WMSD_WH.count
    nid =createguid2() &amp;  item.WMSD_WH.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_WH.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;WMSD_EI&quot; 
    item.WMSD_EI.refresh
    for i=1 to item.WMSD_EI.count
    nid =createguid2() &amp;  item.WMSD_EI.item(i).id  
    tree.nodes.add( key,4,nid,  item.WMSD_EI.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot;
end sub

'Получить дочерний раздел по имени
'Parameters:
'[IN][OUT]   Item , тип параметра: object, 
'[IN]   CollectionName , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ItemCollection(...параметры...)
public property Get ItemCollection( Item as object, byval CollectionName as string) as object
  set ItemCollection = CallByName(Item,CollectionName,vbGet)
end property

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
 ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, ID)
end function

'Массовое обновление строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
public sub BatchUpdate()
If not Application.WorkOffline Then
    WMSD_GTYPE.BatchUpdate
    WMSD_ZTYPE.BatchUpdate
    WMSD_PLTYPE.BatchUpdate
    WMSD_QTYPE.BatchUpdate
    WMSD_ATYPE.BatchUpdate
    WMSD_SRV.BatchUpdate
    WMSD_PART.BatchUpdate
    WMSD_FACTORY.BatchUpdate
    WMSD_KILLPLACE.BatchUpdate
    WMSD_COUNTRY.BatchUpdate
    WMSD_CAMERA.BatchUpdate
    WMSD_RULE.BatchUpdate
    WMSD_OPTTYPE.BatchUpdate
    WMSD_MOROZ.BatchUpdate
    WMSD_WH.BatchUpdate
    WMSD_EI.BatchUpdate
End If
End sub

'Загрузка всех данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
public sub LoadAll()
dim prevAutoLoad as boolean
If not Application.WorkOffline Then
prevAutoLoad= Application.autoloadpart
Application.autoloadpart = true
    WMSD_GTYPE.LoadAll
    WMSD_ZTYPE.LoadAll
    WMSD_PLTYPE.LoadAll
    WMSD_QTYPE.LoadAll
    WMSD_ATYPE.LoadAll
    WMSD_SRV.LoadAll
    WMSD_PART.LoadAll
    WMSD_FACTORY.LoadAll
    WMSD_KILLPLACE.LoadAll
    WMSD_COUNTRY.LoadAll
    WMSD_CAMERA.LoadAll
    WMSD_RULE.LoadAll
    WMSD_OPTTYPE.LoadAll
    WMSD_MOROZ.LoadAll
    WMSD_WH.LoadAll
    WMSD_EI.LoadAll
Application.autoloadpart = prevAutoLoad
End If
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_GTYPE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_GTYPE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_GTYPE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_GTYPE
   set o = new WMSD_GTYPE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_GTYPE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_GTYPE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_GTYPE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_GTYPE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_GTYPE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_GTYPE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_GTYPE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_GTYPE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_GTYPE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_GTYPE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_GTYPE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_GTYPE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_GTYPE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_GTYPE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_GTYPE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_GTYPE
 dim LID as  string
 dim o as  WMSD_GTYPE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_GTYPE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_GTYPE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_GTYPE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_GTYPE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_GTYPE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_GTYPE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_GTYPE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_GTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_GTYPE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_GTYPE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_GTYPE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_GTYPE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_GTYPE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_GTYPE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_GTYPEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_GTYPE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_GTYPE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_GTYPE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_GTYPE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_GTYPE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_GTYPE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_GTYPE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_ZTYPE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_ZTYPE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_ZTYPE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_ZTYPE
   set o = new WMSD_ZTYPE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_ZTYPE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_ZTYPE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_ZTYPE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_ZTYPE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_ZTYPE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_ZTYPE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_ZTYPE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_ZTYPE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_ZTYPE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_ZTYPE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_ZTYPE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_ZTYPE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_ZTYPE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_ZTYPE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_ZTYPE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_ZTYPE
 dim LID as  string
 dim o as  WMSD_ZTYPE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_ZTYPE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_ZTYPE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_ZTYPE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_ZTYPE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_ZTYPE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_ZTYPE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_ZTYPE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ZTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ZTYPE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_ZTYPE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_ZTYPE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_ZTYPE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_ZTYPE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_ZTYPE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_ZTYPEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_ZTYPE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_ZTYPE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_ZTYPE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_ZTYPE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_ZTYPE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_ZTYPE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_ZTYPE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_PLTYPE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_PLTYPE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_PLTYPE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_PLTYPE
   set o = new WMSD_PLTYPE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_PLTYPE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_PLTYPE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_PLTYPE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_PLTYPE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_PLTYPE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_PLTYPE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_PLTYPE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_PLTYPE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_PLTYPE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_PLTYPE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_PLTYPE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_PLTYPE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_PLTYPE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_PLTYPE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_PLTYPE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_PLTYPE
 dim LID as  string
 dim o as  WMSD_PLTYPE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_PLTYPE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_PLTYPE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_PLTYPE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_PLTYPE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_PLTYPE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_PLTYPE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_PLTYPE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PLTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PLTYPE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_PLTYPE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_PLTYPE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_PLTYPE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_PLTYPE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_PLTYPE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_PLTYPEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_PLTYPE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_PLTYPE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_PLTYPE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_PLTYPE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_PLTYPE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_PLTYPE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_PLTYPE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_QTYPE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_QTYPE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_QTYPE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_QTYPE
   set o = new WMSD_QTYPE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_QTYPE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_QTYPE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_QTYPE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_QTYPE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_QTYPE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_QTYPE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_QTYPE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_QTYPE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_QTYPE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_QTYPE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_QTYPE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_QTYPE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_QTYPE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_QTYPE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_QTYPE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_QTYPE
 dim LID as  string
 dim o as  WMSD_QTYPE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_QTYPE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_QTYPE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_QTYPE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_QTYPE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_QTYPE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_QTYPE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_QTYPE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_QTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_QTYPE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_QTYPE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_QTYPE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_QTYPE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_QTYPE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_QTYPE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_QTYPEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_QTYPE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_QTYPE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_QTYPE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_QTYPE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_QTYPE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_QTYPE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_QTYPE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_ATYPE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_ATYPE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_ATYPE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_ATYPE
   set o = new WMSD_ATYPE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_ATYPE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_ATYPE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_ATYPE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_ATYPE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_ATYPE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_ATYPE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_ATYPE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_ATYPE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_ATYPE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_ATYPE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_ATYPE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_ATYPE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_ATYPE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_ATYPE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_ATYPE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_ATYPE
 dim LID as  string
 dim o as  WMSD_ATYPE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_ATYPE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_ATYPE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_ATYPE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_ATYPE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_ATYPE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_ATYPE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_ATYPE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_ATYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_ATYPE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_ATYPE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_ATYPE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_ATYPE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_ATYPE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_ATYPE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_ATYPEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_ATYPE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_ATYPE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_ATYPE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_ATYPE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_ATYPE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_ATYPE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_ATYPE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_SRV" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_ForShipping as enumBoolean
private m_ForReceiving as enumBoolean
private m_LinkCode as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_SRV&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_SRV.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Для отгрузки

'Для отгрузки
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ForShipping(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ForShipping&quot;,ForShipping,newvalue

   m_ForShipping= newValue
end if
end property

'Для отгрузки
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. ForShipping
public property Get ForShipping() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   ForShipping = m_ForShipping
end property
' let 
'Для приема товара

'Для приема товара
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ForReceiving(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ForReceiving&quot;,ForReceiving,newvalue

   m_ForReceiving= newValue
end if
end property

'Для приема товара
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. ForReceiving
public property Get ForReceiving() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   ForReceiving = m_ForReceiving
end property
' let 
'Код привязки

'Код привязки
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let LinkCode(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;LinkCode&quot;,LinkCode,newvalue

   m_LinkCode= newValue
end if
end property

'Код привязки
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. LinkCode
public property Get LinkCode() as String
 LoadFromDatabase
 AccessTime=Now

   LinkCode = m_LinkCode
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;ForShipping&quot;,m_ForShipping)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ForReceiving&quot;,m_ForReceiving)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;LinkCode&quot;,m_LinkCode)
nvi.ValueSize = 30
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
m_ForShipping=nv.item( &quot;ForShipping&quot;).Value
m_ForReceiving=nv.item( &quot;ForReceiving&quot;).Value
m_LinkCode=nv.item( &quot;LinkCode&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
m_ForShipping=nv.fields( &quot;ForShipping&quot;).Value
m_ForReceiving=nv.fields( &quot;ForReceiving&quot;).Value
m_LinkCode=nv.fields( &quot;LinkCode&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_SRV
   set o = new WMSD_SRV
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_SRV.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_SRV.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_SRV&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_SRV.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_SRV&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_SRV.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_SRV.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  ForShipping=node.Attributes.getNamedItem(&quot;FORSHIPPING&quot;).nodeValue
  ForReceiving=node.Attributes.getNamedItem(&quot;FORRECEIVING&quot;).nodeValue
  LinkCode=Replace(node.Attributes.getNamedItem(&quot;LINKCODE&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;FORSHIPPING&quot;, ForShipping
  node.setAttribute &quot;FORRECEIVING&quot;, ForReceiving
  node.setAttribute &quot;LINKCODE&quot;, LinkCode
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_SRV&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_SRV&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_SRV&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_SRV&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_SRV_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_SRV&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_SRV.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_SRV
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_SRV
 dim LID as  string
 dim o as  WMSD_SRV
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_SRV
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_SRV
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_SRV
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_SRV
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_SRV
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_SRV
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_SRV
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_SRV
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_SRV
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_SRV
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_SRV
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_SRV.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_SRV
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_SRV
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_SRVID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_SRV
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_SRV_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_SRV&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_SRV
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_SRV&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Для отгрузки&quot;, 0, 0, &quot;ForShipping&quot;).SortType =1
  YGrid.Columns.Add(&quot;Для приема товара&quot;, 0, 0, &quot;ForReceiving&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код привязки&quot;, 0, 0, &quot;LinkCode&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_SRV
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   if obj.ForShipping =-1 then
     Values.Value(2) = &quot;Да&quot;
   end if
   if obj.ForShipping =0 then
     Values.Value(2) = &quot;Нет&quot;
   end if
   if obj.ForReceiving =-1 then
     Values.Value(3) = &quot;Да&quot;
   end if
   if obj.ForReceiving =0 then
     Values.Value(3) = &quot;Нет&quot;
   end if
    Values.Value(4) = Left(Replace(obj.LinkCode, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_SRV&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_PART" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Supplier as object
Dim m_Supplier_ID as string
Dim m_Supplier_ID_BRIEF as string
private m_TheDogovor as object
Dim m_TheDogovor_ID as string
Dim m_TheDogovor_ID_BRIEF as string
private m_Name as String
private m_Info as STRING
private m_Made_date as DATE
private m_exp_date as DATE
private m_Article as object
Dim m_Article_ID as string
Dim m_Article_ID_BRIEF as string
private m_TheCountry as object
Dim m_TheCountry_ID as string
Dim m_TheCountry_ID_BRIEF as string
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_PART&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_PART.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Поклажедатель

'Поклажедатель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Supplier(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Supplier&quot;,Supplier,newvalue
on error resume next
m_Supplier_ID=&quot;&quot;
m_Supplier_ID=newValue.id
'  set   m_Supplier= newValue
end if
end property

'Поклажедатель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Supplier
public property Get Supplier() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Supplier as object
if  m_Supplier_ID&lt;&gt;&quot;&quot; then 
  set tmp_Supplier=Application.FindRowObject(&quot;WMSK_DEF&quot;,m_Supplier_ID)
  if tmp_Supplier is nothing then
    m_Supplier_ID_BRIEF = &quot;&quot; 
  else
    m_Supplier_ID_BRIEF = tmp_Supplier.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSK_DEF&quot; &amp; m_Supplier_ID, tmp_Supplier
  set Supplier=tmp_Supplier
  exit property
end if
  '  set Supplier = m_Supplier
end property
' let 
'Договор

'Договор
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheDogovor(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDogovor&quot;,TheDogovor,newvalue
on error resume next
m_TheDogovor_ID=&quot;&quot;
m_TheDogovor_ID=newValue.id
'  set   m_TheDogovor= newValue
end if
end property

'Договор
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheDogovor
public property Get TheDogovor() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheDogovor as object
if  m_TheDogovor_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheDogovor=Application.FindRowObject(&quot;WMSCT_DEF&quot;,m_TheDogovor_ID)
  if tmp_TheDogovor is nothing then
    m_TheDogovor_ID_BRIEF = &quot;&quot; 
  else
    m_TheDogovor_ID_BRIEF = tmp_TheDogovor.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSCT_DEF&quot; &amp; m_TheDogovor_ID, tmp_TheDogovor
  set TheDogovor=tmp_TheDogovor
  exit property
end if
  '  set TheDogovor = m_TheDogovor
end property
' let 
'Наименование партии

'Наименование партии
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Наименование партии
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Параметры

'Параметры
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Info(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Info&quot;,Info,newvalue

   m_Info= newValue
end if
end property

'Параметры
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. Info
public property Get Info() as STRING
 LoadFromDatabase
 AccessTime=Now

   Info = m_Info
end property
' let 
'Дата производства

'Дата производства
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Made_date(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Made_date&quot;,Made_date,newvalue

   m_Made_date= newValue
end if
end property

'Дата производства
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. Made_date
public property Get Made_date() as DATE
 LoadFromDatabase
 AccessTime=Now

   Made_date = m_Made_date
end property
' let 
'Срок годности

'Срок годности
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let exp_date(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;exp_date&quot;,exp_date,newvalue

   m_exp_date= newValue
end if
end property

'Срок годности
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. exp_date
public property Get exp_date() as DATE
 LoadFromDatabase
 AccessTime=Now

   exp_date = m_exp_date
end property
' let 
'Артикул

'Артикул
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Article(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Article&quot;,Article,newvalue
on error resume next
m_Article_ID=&quot;&quot;
m_Article_ID=newValue.id
'  set   m_Article= newValue
end if
end property

'Артикул
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Article
public property Get Article() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Article as object
if  m_Article_ID&lt;&gt;&quot;&quot; then 
  set tmp_Article=Application.FindRowObject(&quot;WMSG_ARTICUL&quot;,m_Article_ID)
  if tmp_Article is nothing then
    m_Article_ID_BRIEF = &quot;&quot; 
  else
    m_Article_ID_BRIEF = tmp_Article.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSG_ARTICUL&quot; &amp; m_Article_ID, tmp_Article
  set Article=tmp_Article
  exit property
end if
  '  set Article = m_Article
end property
' let 
'Страна

'Страна
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheCountry(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheCountry&quot;,TheCountry,newvalue
on error resume next
m_TheCountry_ID=&quot;&quot;
m_TheCountry_ID=newValue.id
'  set   m_TheCountry= newValue
end if
end property

'Страна
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheCountry
public property Get TheCountry() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheCountry as object
if  m_TheCountry_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheCountry=Application.FindRowObject(&quot;WMSD_COUNTRY&quot;,m_TheCountry_ID)
  if tmp_TheCountry is nothing then
    m_TheCountry_ID_BRIEF = &quot;&quot; 
  else
    m_TheCountry_ID_BRIEF = tmp_TheCountry.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSD_COUNTRY&quot; &amp; m_TheCountry_ID, tmp_TheCountry
  set TheCountry=tmp_TheCountry
  exit property
end if
  '  set TheCountry = m_TheCountry
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to WMSK_DEF
    if m_Supplier_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Supplier&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Supplier&quot;,m_Supplier_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to WMSCT_DEF
    if m_TheDogovor_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheDogovor&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheDogovor&quot;,m_TheDogovor_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Info&quot;,m_Info)
  set nvi=nv.Add( &quot;Made_date&quot;,m_Made_date)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;exp_date&quot;,m_exp_date)
nvi.ValueType = adDate 
 ' Reference to WMSG_ARTICUL
    if m_Article_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Article&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Article&quot;,m_Article_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to WMSD_COUNTRY
    if m_TheCountry_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheCountry&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheCountry&quot;,m_TheCountry_ID)
    end if 
    nvi.ORACLE_GUID 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  Supplier is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_Supplier_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; Supplier.Brief  &amp; &quot;}; &quot;
   end if
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_Supplier_ID=nv.item( &quot;Supplier&quot;).Value
  m_TheDogovor_ID=nv.item( &quot;TheDogovor&quot;).Value
m_Name=nv.item( &quot;Name&quot;).Value
m_Info=nv.item( &quot;Info&quot;).Value
m_Made_date=nv.item( &quot;Made_date&quot;).Value
m_exp_date=nv.item( &quot;exp_date&quot;).Value
  m_Article_ID=nv.item( &quot;Article&quot;).Value
  m_TheCountry_ID=nv.item( &quot;TheCountry&quot;).Value
else

  m_Supplier_ID=nv.fields( &quot;Supplier&quot;).Value
  m_TheDogovor_ID=nv.fields( &quot;TheDogovor&quot;).Value
m_Name=nv.fields( &quot;Name&quot;).Value
m_Info=nv.fields( &quot;Info&quot;).Value
m_Made_date=nv.fields( &quot;Made_date&quot;).Value
m_exp_date=nv.fields( &quot;exp_date&quot;).Value
  m_Article_ID=nv.fields( &quot;Article&quot;).Value
  m_TheCountry_ID=nv.fields( &quot;TheCountry&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_PART
   set o = new WMSD_PART
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_PART.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_PART.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_PART&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_PART.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_PART&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_PART.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_Supplier_ID=&quot;&quot;
 set m_Supplier= nothing
 m_TheDogovor_ID=&quot;&quot;
 set m_TheDogovor= nothing
 m_Article_ID=&quot;&quot;
 set m_Article= nothing
 m_TheCountry_ID=&quot;&quot;
 set m_TheCountry= nothing
 if not Application is nothing then Application.Logger.Message &quot;WMSD_PART.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set Supplier=nothing
  m_Supplier_ID=node.Attributes.getNamedItem(&quot;SUPPLIER&quot;).nodeValue
  m_Supplier_ID_BRIEF=node.Attributes.getNamedItem(&quot;SUPPLIER_BRIEF&quot;).nodeValue
  set TheDogovor=nothing
  m_TheDogovor_ID=node.Attributes.getNamedItem(&quot;THEDOGOVOR&quot;).nodeValue
  m_TheDogovor_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEDOGOVOR_BRIEF&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  Info=Replace(node.Attributes.getNamedItem(&quot;INFO&quot;).nodeValue,vbLf,vbcrlf)
  Made_date=node.Attributes.getNamedItem(&quot;MADE_DATE&quot;).nodeValue
  exp_date=node.Attributes.getNamedItem(&quot;EXP_DATE&quot;).nodeValue
  set Article=nothing
  m_Article_ID=node.Attributes.getNamedItem(&quot;ARTICLE&quot;).nodeValue
  m_Article_ID_BRIEF=node.Attributes.getNamedItem(&quot;ARTICLE_BRIEF&quot;).nodeValue
  set TheCountry=nothing
  m_TheCountry_ID=node.Attributes.getNamedItem(&quot;THECOUNTRY&quot;).nodeValue
  m_TheCountry_ID_BRIEF=node.Attributes.getNamedItem(&quot;THECOUNTRY_BRIEF&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SUPPLIER&quot;, m_Supplier_ID
  if not (Supplier is nothing) then 
    node.setAttribute &quot;SUPPLIER_BRIEF&quot;, Supplier.BRIEF
  else
    node.setAttribute &quot;SUPPLIER_BRIEF&quot;, m_Supplier_ID_BRIEF
  end if
  node.setAttribute &quot;THEDOGOVOR&quot;, m_TheDogovor_ID
  if not (TheDogovor is nothing) then 
    node.setAttribute &quot;THEDOGOVOR_BRIEF&quot;, TheDogovor.BRIEF
  else
    node.setAttribute &quot;THEDOGOVOR_BRIEF&quot;, m_TheDogovor_ID_BRIEF
  end if
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;INFO&quot;, Info
  node.setAttribute &quot;MADE_DATE&quot;, Cdbl(Made_date)
  node.setAttribute &quot;EXP_DATE&quot;, Cdbl(exp_date)
  node.setAttribute &quot;ARTICLE&quot;, m_Article_ID
  if not (Article is nothing) then 
    node.setAttribute &quot;ARTICLE_BRIEF&quot;, Article.BRIEF
  else
    node.setAttribute &quot;ARTICLE_BRIEF&quot;, m_Article_ID_BRIEF
  end if
  node.setAttribute &quot;THECOUNTRY&quot;, m_TheCountry_ID
  if not (TheCountry is nothing) then 
    node.setAttribute &quot;THECOUNTRY_BRIEF&quot;, TheCountry.BRIEF
  else
    node.setAttribute &quot;THECOUNTRY_BRIEF&quot;, m_TheCountry_ID_BRIEF
  end if
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_PART&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_PART&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_PART&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_PART&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_PART_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_PART&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_PART.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_PART
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_PART
 dim LID as  string
 dim o as  WMSD_PART
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_PART
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_PART
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_PART
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_PART
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_PART
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_PART
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_PART
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_PART
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_PART
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_PART
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_PART
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_PART.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_PART
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_PART
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_PARTID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_PART
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_PART_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_PART&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_PART
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_PART&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Поклажедатель&quot;, 0, 0, &quot;Supplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Договор&quot;, 0, 0, &quot;TheDogovor&quot;).SortType =1
  YGrid.Columns.Add(&quot;Наименование партии&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Параметры&quot;, 0, 0, &quot;Info&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата производства&quot;, 0, 0, &quot;Made_date&quot;).SortType =4
  YGrid.Columns.Add(&quot;Срок годности&quot;, 0, 0, &quot;exp_date&quot;).SortType =4
  YGrid.Columns.Add(&quot;Артикул&quot;, 0, 0, &quot;Article&quot;).SortType =1
  YGrid.Columns.Add(&quot;Страна&quot;, 0, 0, &quot;TheCountry&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_PART
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.Supplier is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.Supplier.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.TheDogovor is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.TheDogovor.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Info, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.Made_date, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.exp_date, vbCrLf, &quot; &quot;), 255)
   if obj.Article is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.Article.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.TheCountry is nothing then
    Values.Value(8) = &quot;Не задано&quot;
   else 
    Values.Value(8) = Left(Replace(obj.TheCountry.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_PART&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_FACTORY" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Country as object
Dim m_Country_ID as string
Dim m_Country_ID_BRIEF as string
private m_Name as String
private m_Code1 as String
private m_Code2 as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_FACTORY&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_FACTORY.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Страна

'Страна
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Country(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Country&quot;,Country,newvalue
on error resume next
m_Country_ID=&quot;&quot;
m_Country_ID=newValue.id
'  set   m_Country= newValue
end if
end property

'Страна
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Country
public property Get Country() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Country as object
if  m_Country_ID&lt;&gt;&quot;&quot; then 
  set tmp_Country=Application.FindRowObject(&quot;WMSD_COUNTRY&quot;,m_Country_ID)
  if tmp_Country is nothing then
    m_Country_ID_BRIEF = &quot;&quot; 
  else
    m_Country_ID_BRIEF = tmp_Country.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSD_COUNTRY&quot; &amp; m_Country_ID, tmp_Country
  set Country=tmp_Country
  exit property
end if
  '  set Country = m_Country
end property
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Код1

'Код1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code1&quot;,Code1,newvalue

   m_Code1= newValue
end if
end property

'Код1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code1
public property Get Code1() as String
 LoadFromDatabase
 AccessTime=Now

   Code1 = m_Code1
end property
' let 
'Код 2

'Код 2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code2&quot;,Code2,newvalue

   m_Code2= newValue
end if
end property

'Код 2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code2
public property Get Code2() as String
 LoadFromDatabase
 AccessTime=Now

   Code2 = m_Code2
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to WMSD_COUNTRY
    if m_Country_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Country&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Country&quot;,m_Country_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Code1&quot;,m_Code1)
nvi.ValueSize = 10
  set nvi=nv.Add( &quot;Code2&quot;,m_Code2)
nvi.ValueSize = 10
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_Country_ID=nv.item( &quot;Country&quot;).Value
m_Name=nv.item( &quot;Name&quot;).Value
m_Code1=nv.item( &quot;Code1&quot;).Value
m_Code2=nv.item( &quot;Code2&quot;).Value
else

  m_Country_ID=nv.fields( &quot;Country&quot;).Value
m_Name=nv.fields( &quot;Name&quot;).Value
m_Code1=nv.fields( &quot;Code1&quot;).Value
m_Code2=nv.fields( &quot;Code2&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_FACTORY
   set o = new WMSD_FACTORY
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_FACTORY.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_FACTORY.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_FACTORY&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_FACTORY.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_FACTORY&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_FACTORY.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_Country_ID=&quot;&quot;
 set m_Country= nothing
 if not Application is nothing then Application.Logger.Message &quot;WMSD_FACTORY.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set Country=nothing
  m_Country_ID=node.Attributes.getNamedItem(&quot;COUNTRY&quot;).nodeValue
  m_Country_ID_BRIEF=node.Attributes.getNamedItem(&quot;COUNTRY_BRIEF&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  Code1=Replace(node.Attributes.getNamedItem(&quot;CODE1&quot;).nodeValue,vbLf,vbcrlf)
  Code2=Replace(node.Attributes.getNamedItem(&quot;CODE2&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;COUNTRY&quot;, m_Country_ID
  if not (Country is nothing) then 
    node.setAttribute &quot;COUNTRY_BRIEF&quot;, Country.BRIEF
  else
    node.setAttribute &quot;COUNTRY_BRIEF&quot;, m_Country_ID_BRIEF
  end if
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;CODE1&quot;, Code1
  node.setAttribute &quot;CODE2&quot;, Code2
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_FACTORY&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_FACTORY&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_FACTORY&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_FACTORY&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_FACTORY_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_FACTORY&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_FACTORY.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_FACTORY
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_FACTORY
 dim LID as  string
 dim o as  WMSD_FACTORY
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_FACTORY
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_FACTORY
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_FACTORY
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_FACTORY
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_FACTORY
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_FACTORY
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_FACTORY
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_FACTORY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_FACTORY
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_FACTORY
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_FACTORY
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_FACTORY.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_FACTORY
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_FACTORY
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_FACTORYID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_FACTORY
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_FACTORY_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_FACTORY&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_FACTORY
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_FACTORY&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Страна&quot;, 0, 0, &quot;Country&quot;).SortType =1
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код1&quot;, 0, 0, &quot;Code1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код 2&quot;, 0, 0, &quot;Code2&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_FACTORY
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.Country is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.Country.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(2) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Code1, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Code2, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_FACTORY&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_KILLPLACE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Factory as object
Dim m_Factory_ID as string
Dim m_Factory_ID_BRIEF as string
private m_Name as String
private m_Code1 as String
private m_Code2 as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_KILLPLACE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_KILLPLACE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Производитель

'Производитель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Factory(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Factory&quot;,Factory,newvalue
on error resume next
m_Factory_ID=&quot;&quot;
m_Factory_ID=newValue.id
'  set   m_Factory= newValue
end if
end property

'Производитель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Factory
public property Get Factory() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Factory as object
if  m_Factory_ID&lt;&gt;&quot;&quot; then 
  set tmp_Factory=Application.FindRowObject(&quot;WMSD_FACTORY&quot;,m_Factory_ID)
  if tmp_Factory is nothing then
    m_Factory_ID_BRIEF = &quot;&quot; 
  else
    m_Factory_ID_BRIEF = tmp_Factory.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSD_FACTORY&quot; &amp; m_Factory_ID, tmp_Factory
  set Factory=tmp_Factory
  exit property
end if
  '  set Factory = m_Factory
end property
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Код1

'Код1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code1&quot;,Code1,newvalue

   m_Code1= newValue
end if
end property

'Код1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code1
public property Get Code1() as String
 LoadFromDatabase
 AccessTime=Now

   Code1 = m_Code1
end property
' let 
'Код 2

'Код 2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code2&quot;,Code2,newvalue

   m_Code2= newValue
end if
end property

'Код 2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code2
public property Get Code2() as String
 LoadFromDatabase
 AccessTime=Now

   Code2 = m_Code2
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to WMSD_FACTORY
    if m_Factory_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Factory&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Factory&quot;,m_Factory_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Code1&quot;,m_Code1)
nvi.ValueSize = 10
  set nvi=nv.Add( &quot;Code2&quot;,m_Code2)
nvi.ValueSize = 10
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_Factory_ID=nv.item( &quot;Factory&quot;).Value
m_Name=nv.item( &quot;Name&quot;).Value
m_Code1=nv.item( &quot;Code1&quot;).Value
m_Code2=nv.item( &quot;Code2&quot;).Value
else

  m_Factory_ID=nv.fields( &quot;Factory&quot;).Value
m_Name=nv.fields( &quot;Name&quot;).Value
m_Code1=nv.fields( &quot;Code1&quot;).Value
m_Code2=nv.fields( &quot;Code2&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_KILLPLACE
   set o = new WMSD_KILLPLACE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_KILLPLACE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_KILLPLACE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_KILLPLACE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_KILLPLACE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_KILLPLACE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_KILLPLACE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_Factory_ID=&quot;&quot;
 set m_Factory= nothing
 if not Application is nothing then Application.Logger.Message &quot;WMSD_KILLPLACE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set Factory=nothing
  m_Factory_ID=node.Attributes.getNamedItem(&quot;FACTORY&quot;).nodeValue
  m_Factory_ID_BRIEF=node.Attributes.getNamedItem(&quot;FACTORY_BRIEF&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  Code1=Replace(node.Attributes.getNamedItem(&quot;CODE1&quot;).nodeValue,vbLf,vbcrlf)
  Code2=Replace(node.Attributes.getNamedItem(&quot;CODE2&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;FACTORY&quot;, m_Factory_ID
  if not (Factory is nothing) then 
    node.setAttribute &quot;FACTORY_BRIEF&quot;, Factory.BRIEF
  else
    node.setAttribute &quot;FACTORY_BRIEF&quot;, m_Factory_ID_BRIEF
  end if
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;CODE1&quot;, Code1
  node.setAttribute &quot;CODE2&quot;, Code2
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_KILLPLACE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_KILLPLACE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_KILLPLACE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_KILLPLACE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_KILLPLACE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_KILLPLACE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_KILLPLACE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_KILLPLACE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_KILLPLACE
 dim LID as  string
 dim o as  WMSD_KILLPLACE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_KILLPLACE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_KILLPLACE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_KILLPLACE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_KILLPLACE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_KILLPLACE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_KILLPLACE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_KILLPLACE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_KILLPLACE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_KILLPLACE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_KILLPLACE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_KILLPLACE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_KILLPLACE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_KILLPLACE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_KILLPLACE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_KILLPLACEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_KILLPLACE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_KILLPLACE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_KILLPLACE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_KILLPLACE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_KILLPLACE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Производитель&quot;, 0, 0, &quot;Factory&quot;).SortType =1
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код1&quot;, 0, 0, &quot;Code1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код 2&quot;, 0, 0, &quot;Code2&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_KILLPLACE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.Factory is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.Factory.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(2) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Code1, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Code2, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_KILLPLACE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_COUNTRY" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Code1 as String
private m_Code2 as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_COUNTRY&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_COUNTRY.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Код1

'Код1
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code1(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code1&quot;,Code1,newvalue

   m_Code1= newValue
end if
end property

'Код1
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code1
public property Get Code1() as String
 LoadFromDatabase
 AccessTime=Now

   Code1 = m_Code1
end property
' let 
'Код 2

'Код 2
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code2(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code2&quot;,Code2,newvalue

   m_Code2= newValue
end if
end property

'Код 2
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code2
public property Get Code2() as String
 LoadFromDatabase
 AccessTime=Now

   Code2 = m_Code2
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Code1&quot;,m_Code1)
nvi.ValueSize = 10
  set nvi=nv.Add( &quot;Code2&quot;,m_Code2)
nvi.ValueSize = 10
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
m_Code1=nv.item( &quot;Code1&quot;).Value
m_Code2=nv.item( &quot;Code2&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
m_Code1=nv.fields( &quot;Code1&quot;).Value
m_Code2=nv.fields( &quot;Code2&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_COUNTRY
   set o = new WMSD_COUNTRY
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_COUNTRY.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_COUNTRY.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_COUNTRY&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_COUNTRY.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_COUNTRY&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_COUNTRY.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_COUNTRY.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  Code1=Replace(node.Attributes.getNamedItem(&quot;CODE1&quot;).nodeValue,vbLf,vbcrlf)
  Code2=Replace(node.Attributes.getNamedItem(&quot;CODE2&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;CODE1&quot;, Code1
  node.setAttribute &quot;CODE2&quot;, Code2
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_COUNTRY&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_COUNTRY&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_COUNTRY&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_COUNTRY&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_COUNTRY_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_COUNTRY&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_COUNTRY.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_COUNTRY
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_COUNTRY
 dim LID as  string
 dim o as  WMSD_COUNTRY
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_COUNTRY
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_COUNTRY
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_COUNTRY
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_COUNTRY
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_COUNTRY
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_COUNTRY
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_COUNTRY
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_COUNTRY
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_COUNTRY
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_COUNTRY
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_COUNTRY
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_COUNTRY.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_COUNTRY
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_COUNTRY
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_COUNTRYID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_COUNTRY
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_COUNTRY_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_COUNTRY&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_COUNTRY
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_COUNTRY&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код1&quot;, 0, 0, &quot;Code1&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код 2&quot;, 0, 0, &quot;Code2&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_COUNTRY
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.Code1, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.Code2, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_COUNTRY&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_CAMERA" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Камеры
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_CameraMask as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_CAMERA&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_CAMERA.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Маска номера ячеек

'Маска номера ячеек
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CameraMask(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CameraMask&quot;,CameraMask,newvalue

   m_CameraMask= newValue
end if
end property

'Маска номера ячеек
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. CameraMask
public property Get CameraMask() as String
 LoadFromDatabase
 AccessTime=Now

   CameraMask = m_CameraMask
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;CameraMask&quot;,m_CameraMask)
nvi.ValueSize = 12
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
m_CameraMask=nv.item( &quot;CameraMask&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
m_CameraMask=nv.fields( &quot;CameraMask&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_CAMERA
   set o = new WMSD_CAMERA
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_CAMERA.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_CAMERA.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_CAMERA&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_CAMERA.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_CAMERA&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_CAMERA.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_CAMERA.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  CameraMask=Replace(node.Attributes.getNamedItem(&quot;CAMERAMASK&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;CAMERAMASK&quot;, CameraMask
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_CAMERA&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_CAMERA&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_CAMERA&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_CAMERA&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_CAMERA_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Камеры
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_CAMERA&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_CAMERA.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_CAMERA
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_CAMERA
 dim LID as  string
 dim o as  WMSD_CAMERA
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_CAMERA
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_CAMERA
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_CAMERA
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_CAMERA
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_CAMERA
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_CAMERA
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_CAMERA
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_CAMERA
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_CAMERA
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_CAMERA
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_CAMERA
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_CAMERA.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_CAMERA
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_CAMERA
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_CAMERAID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_CAMERA
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_CAMERA_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_CAMERA&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_CAMERA
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_CAMERA&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Маска номера ячеек&quot;, 0, 0, &quot;CameraMask&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_CAMERA
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.CameraMask, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_CAMERA&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_RULE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Правило по которому зполняются обязательные поля и составляется код партии
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_UseProduct as enumBoolean
private m_TheCountry as enumBoolean
private m_TheFactory as enumBoolean
private m_KillPlace as enumBoolean
private m_UseBrak as enumBoolean
private m_UseExpDate as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_RULE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_RULE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Товар

'Товар
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UseProduct(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UseProduct&quot;,UseProduct,newvalue

   m_UseProduct= newValue
end if
end property

'Товар
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. UseProduct
public property Get UseProduct() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   UseProduct = m_UseProduct
end property
' let 
'Страна

'Страна
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheCountry(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheCountry&quot;,TheCountry,newvalue

   m_TheCountry= newValue
end if
end property

'Страна
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. TheCountry
public property Get TheCountry() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   TheCountry = m_TheCountry
end property
' let 
'Завод

'Завод
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheFactory(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheFactory&quot;,TheFactory,newvalue

   m_TheFactory= newValue
end if
end property

'Завод
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. TheFactory
public property Get TheFactory() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   TheFactory = m_TheFactory
end property
' let 
'Бойня

'Бойня
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KillPlace(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KillPlace&quot;,KillPlace,newvalue

   m_KillPlace= newValue
end if
end property

'Бойня
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. KillPlace
public property Get KillPlace() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   KillPlace = m_KillPlace
end property
' let 
'Брак

'Брак
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UseBrak(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UseBrak&quot;,UseBrak,newvalue

   m_UseBrak= newValue
end if
end property

'Брак
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. UseBrak
public property Get UseBrak() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   UseBrak = m_UseBrak
end property
' let 
'Срок годности

'Срок годности
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let UseExpDate(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;UseExpDate&quot;,UseExpDate,newvalue

   m_UseExpDate= newValue
end if
end property

'Срок годности
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. UseExpDate
public property Get UseExpDate() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   UseExpDate = m_UseExpDate
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;UseProduct&quot;,m_UseProduct)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;TheCountry&quot;,m_TheCountry)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;TheFactory&quot;,m_TheFactory)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;KillPlace&quot;,m_KillPlace)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;UseBrak&quot;,m_UseBrak)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;UseExpDate&quot;,m_UseExpDate)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
m_UseProduct=nv.item( &quot;UseProduct&quot;).Value
m_TheCountry=nv.item( &quot;TheCountry&quot;).Value
m_TheFactory=nv.item( &quot;TheFactory&quot;).Value
m_KillPlace=nv.item( &quot;KillPlace&quot;).Value
m_UseBrak=nv.item( &quot;UseBrak&quot;).Value
m_UseExpDate=nv.item( &quot;UseExpDate&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
m_UseProduct=nv.fields( &quot;UseProduct&quot;).Value
m_TheCountry=nv.fields( &quot;TheCountry&quot;).Value
m_TheFactory=nv.fields( &quot;TheFactory&quot;).Value
m_KillPlace=nv.fields( &quot;KillPlace&quot;).Value
m_UseBrak=nv.fields( &quot;UseBrak&quot;).Value
m_UseExpDate=nv.fields( &quot;UseExpDate&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_RULE
   set o = new WMSD_RULE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_RULE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_RULE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_RULE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_RULE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_RULE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_RULE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_RULE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  UseProduct=node.Attributes.getNamedItem(&quot;USEPRODUCT&quot;).nodeValue
  TheCountry=node.Attributes.getNamedItem(&quot;THECOUNTRY&quot;).nodeValue
  TheFactory=node.Attributes.getNamedItem(&quot;THEFACTORY&quot;).nodeValue
  KillPlace=node.Attributes.getNamedItem(&quot;KILLPLACE&quot;).nodeValue
  UseBrak=node.Attributes.getNamedItem(&quot;USEBRAK&quot;).nodeValue
  UseExpDate=node.Attributes.getNamedItem(&quot;USEEXPDATE&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;USEPRODUCT&quot;, UseProduct
  node.setAttribute &quot;THECOUNTRY&quot;, TheCountry
  node.setAttribute &quot;THEFACTORY&quot;, TheFactory
  node.setAttribute &quot;KILLPLACE&quot;, KillPlace
  node.setAttribute &quot;USEBRAK&quot;, UseBrak
  node.setAttribute &quot;USEEXPDATE&quot;, UseExpDate
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_RULE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_RULE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_RULE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_RULE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_RULE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Правило по которому зполняются обязательные поля и составляется код партии
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_RULE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_RULE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_RULE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_RULE
 dim LID as  string
 dim o as  WMSD_RULE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_RULE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_RULE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_RULE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_RULE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_RULE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_RULE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_RULE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_RULE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_RULE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_RULE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_RULE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_RULE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_RULE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_RULE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_RULEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_RULE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_RULE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_RULE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_RULE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_RULE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Товар&quot;, 0, 0, &quot;UseProduct&quot;).SortType =1
  YGrid.Columns.Add(&quot;Страна&quot;, 0, 0, &quot;TheCountry&quot;).SortType =1
  YGrid.Columns.Add(&quot;Завод&quot;, 0, 0, &quot;TheFactory&quot;).SortType =1
  YGrid.Columns.Add(&quot;Бойня&quot;, 0, 0, &quot;KillPlace&quot;).SortType =1
  YGrid.Columns.Add(&quot;Брак&quot;, 0, 0, &quot;UseBrak&quot;).SortType =1
  YGrid.Columns.Add(&quot;Срок годности&quot;, 0, 0, &quot;UseExpDate&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_RULE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   if obj.UseProduct =-1 then
     Values.Value(2) = &quot;Да&quot;
   end if
   if obj.UseProduct =0 then
     Values.Value(2) = &quot;Нет&quot;
   end if
   if obj.TheCountry =-1 then
     Values.Value(3) = &quot;Да&quot;
   end if
   if obj.TheCountry =0 then
     Values.Value(3) = &quot;Нет&quot;
   end if
   if obj.TheFactory =-1 then
     Values.Value(4) = &quot;Да&quot;
   end if
   if obj.TheFactory =0 then
     Values.Value(4) = &quot;Нет&quot;
   end if
   if obj.KillPlace =-1 then
     Values.Value(5) = &quot;Да&quot;
   end if
   if obj.KillPlace =0 then
     Values.Value(5) = &quot;Нет&quot;
   end if
   if obj.UseBrak =-1 then
     Values.Value(6) = &quot;Да&quot;
   end if
   if obj.UseBrak =0 then
     Values.Value(6) = &quot;Нет&quot;
   end if
   if obj.UseExpDate =-1 then
     Values.Value(7) = &quot;Да&quot;
   end if
   if obj.UseExpDate =0 then
     Values.Value(7) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_RULE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_OPTTYPE" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Тип оптимизации склада
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Code as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_OPTTYPE&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_OPTTYPE.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Код варианта

'Код варианта
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code&quot;,Code,newvalue

   m_Code= newValue
end if
end property

'Код варианта
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code
public property Get Code() as String
 LoadFromDatabase
 AccessTime=Now

   Code = m_Code
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Code&quot;,m_Code)
nvi.ValueSize = 1
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
m_Code=nv.item( &quot;Code&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
m_Code=nv.fields( &quot;Code&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_OPTTYPE
   set o = new WMSD_OPTTYPE
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_OPTTYPE.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_OPTTYPE.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_OPTTYPE&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_OPTTYPE.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_OPTTYPE&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_OPTTYPE.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_OPTTYPE.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  Code=Replace(node.Attributes.getNamedItem(&quot;CODE&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;CODE&quot;, Code
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_OPTTYPE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_OPTTYPE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_OPTTYPE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_OPTTYPE&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_OPTTYPE_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Тип оптимизации склада
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_OPTTYPE&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_OPTTYPE.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_OPTTYPE
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_OPTTYPE
 dim LID as  string
 dim o as  WMSD_OPTTYPE
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_OPTTYPE
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_OPTTYPE
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_OPTTYPE
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_OPTTYPE
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_OPTTYPE
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_OPTTYPE
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_OPTTYPE
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_OPTTYPE
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_OPTTYPE
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_OPTTYPE
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_OPTTYPE
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_OPTTYPE.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_OPTTYPE
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_OPTTYPE
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_OPTTYPEID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_OPTTYPE
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_OPTTYPE_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_OPTTYPE&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_OPTTYPE
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_OPTTYPE&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код варианта&quot;, 0, 0, &quot;Code&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_OPTTYPE
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.Code, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_OPTTYPE&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_MOROZ" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Параметры выморозки
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheClient as object
Dim m_TheClient_ID as string
Dim m_TheClient_ID_BRIEF as string
private m_WeightConst as double
private m_MorozConst as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_MOROZ&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_MOROZ.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Клиент

'Клиент
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheClient(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheClient&quot;,TheClient,newvalue
on error resume next
m_TheClient_ID=&quot;&quot;
m_TheClient_ID=newValue.id
'  set   m_TheClient= newValue
end if
end property

'Клиент
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheClient
public property Get TheClient() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheClient as object
if  m_TheClient_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheClient=Application.FindRowObject(&quot;WMSK_DEF&quot;,m_TheClient_ID)
  if tmp_TheClient is nothing then
    m_TheClient_ID_BRIEF = &quot;&quot; 
  else
    m_TheClient_ID_BRIEF = tmp_TheClient.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;WMSK_DEF&quot; &amp; m_TheClient_ID, tmp_TheClient
  set TheClient=tmp_TheClient
  exit property
end if
  '  set TheClient = m_TheClient
end property
' let 
'Точность весов

'Точность весов
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let WeightConst(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WeightConst&quot;,WeightConst,newvalue

   m_WeightConst= newValue
end if
end property

'Точность весов
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. WeightConst
public property Get WeightConst() as double
 LoadFromDatabase
 AccessTime=Now

   WeightConst = m_WeightConst
end property
' let 
'Коэффициент выморозки

'Коэффициент выморозки
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let MorozConst(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;MorozConst&quot;,MorozConst,newvalue

   m_MorozConst= newValue
end if
end property

'Коэффициент выморозки
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. MorozConst
public property Get MorozConst() as double
 LoadFromDatabase
 AccessTime=Now

   MorozConst = m_MorozConst
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to WMSK_DEF
    if m_TheClient_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheClient&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheClient&quot;,m_TheClient_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;WeightConst&quot;,m_WeightConst)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;MorozConst&quot;,m_MorozConst)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheClient is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheClient_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheClient.Brief  &amp; &quot;}; &quot;
   end if
 m_BRIEF= m_BRIEF &amp; MorozConst &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheClient_ID=nv.item( &quot;TheClient&quot;).Value
m_WeightConst=nv.item( &quot;WeightConst&quot;).Value
m_MorozConst=nv.item( &quot;MorozConst&quot;).Value
else

  m_TheClient_ID=nv.fields( &quot;TheClient&quot;).Value
m_WeightConst=nv.fields( &quot;WeightConst&quot;).Value
m_MorozConst=nv.fields( &quot;MorozConst&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_MOROZ
   set o = new WMSD_MOROZ
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_MOROZ.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_MOROZ.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_MOROZ&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_MOROZ.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_MOROZ&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_MOROZ.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheClient_ID=&quot;&quot;
 set m_TheClient= nothing
 if not Application is nothing then Application.Logger.Message &quot;WMSD_MOROZ.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheClient=nothing
  m_TheClient_ID=node.Attributes.getNamedItem(&quot;THECLIENT&quot;).nodeValue
  m_TheClient_ID_BRIEF=node.Attributes.getNamedItem(&quot;THECLIENT_BRIEF&quot;).nodeValue
  WeightConst=val(Replace(node.Attributes.getNamedItem(&quot;WEIGHTCONST&quot;).nodeValue,vbLf,vbcrlf))
  MorozConst=val(Replace(node.Attributes.getNamedItem(&quot;MOROZCONST&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THECLIENT&quot;, m_TheClient_ID
  if not (TheClient is nothing) then 
    node.setAttribute &quot;THECLIENT_BRIEF&quot;, TheClient.BRIEF
  else
    node.setAttribute &quot;THECLIENT_BRIEF&quot;, m_TheClient_ID_BRIEF
  end if
  node.setAttribute &quot;WEIGHTCONST&quot;, replace(cstr(WeightConst),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;MOROZCONST&quot;, replace(cstr(MorozConst),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_MOROZ&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_MOROZ&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_MOROZ&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_MOROZ&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_MOROZ_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Параметры выморозки
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_MOROZ&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_MOROZ.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_MOROZ
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_MOROZ
 dim LID as  string
 dim o as  WMSD_MOROZ
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_MOROZ
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_MOROZ
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_MOROZ
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_MOROZ
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_MOROZ
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_MOROZ
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_MOROZ
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_MOROZ
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_MOROZ
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_MOROZ
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_MOROZ
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_MOROZ.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_MOROZ
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_MOROZ
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_MOROZID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_MOROZ
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_MOROZ_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_MOROZ&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_MOROZ
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_MOROZ&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Клиент&quot;, 0, 0, &quot;TheClient&quot;).SortType =1
  YGrid.Columns.Add(&quot;Точность весов&quot;, 0, 0, &quot;WeightConst&quot;).SortType =2
  YGrid.Columns.Add(&quot;Коэффициент выморозки&quot;, 0, 0, &quot;MorozConst&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_MOROZ
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheClient is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheClient.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(2) = Left(Replace(obj.WeightConst, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.MorozConst, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_MOROZ&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_WH" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_WH&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_WH.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Название

'Название
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Название
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_WH
   set o = new WMSD_WH
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_WH.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_WH.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_WH&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_WH.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_WH&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_WH.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_WH.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_WH&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_WH&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_WH&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_WH&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_WH_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_WH&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_WH.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_WH
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_WH
 dim LID as  string
 dim o as  WMSD_WH
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_WH
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_WH
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_WH
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_WH
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_WH
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_WH
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_WH
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_WH
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_WH
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_WH
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_WH
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_WH.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_WH
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_WH
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_WHID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_WH
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_WH_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_WH&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_WH
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_WH&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Название&quot;, 0, 0, &quot;Name&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_WH
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_WH&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_EI" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Единица измерения
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Name as String
private m_Quantity as long
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;WMSD_EI&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_EI.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Наименование

'Наименование
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Name(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Name&quot;,Name,newvalue

   m_Name= newValue
end if
end property

'Наименование
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Name
public property Get Name() as String
 LoadFromDatabase
 AccessTime=Now

   Name = m_Name
end property
' let 
'Количество

'Количество
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Quantity(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Quantity&quot;,Quantity,newvalue

   m_Quantity= newValue
end if
end property

'Количество
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. Quantity
public property Get Quantity() as long
 LoadFromDatabase
 AccessTime=Now

   Quantity = m_Quantity
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Name&quot;,m_Name)
nvi.ValueSize = 40
  set nvi=nv.Add( &quot;Quantity&quot;,m_Quantity)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Name &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Name=nv.item( &quot;Name&quot;).Value
m_Quantity=nv.item( &quot;Quantity&quot;).Value
else

m_Name=nv.fields( &quot;Name&quot;).Value
m_Quantity=nv.fields( &quot;Quantity&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as WMSD_EI
   set o = new WMSD_EI
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;WMSD_EI.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;WMSD_EI.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;WMSD_EI&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;WMSD_EI.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;WMSD_EI&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;WMSD_EI.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;WMSD_EI.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Name=Replace(node.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue,vbLf,vbcrlf)
  Quantity=node.Attributes.getNamedItem(&quot;QUANTITY&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NAME&quot;, Name
  node.setAttribute &quot;QUANTITY&quot;, Quantity
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;WMSD_EI&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;WMSD_EI&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;WMSD_EI&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;WMSD_EI&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;admi&quot; then
 select case child
end select
end if ' mode=&quot;admi&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="WMSD_EI_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Единица измерения
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;WMSD_EI&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;WMSD_EI.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as  WMSD_EI
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  WMSD_EI
 dim LID as  string
 dim o as  WMSD_EI
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  WMSD_EI
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as WMSD_EI
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as WMSD_EI
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as WMSD_EI
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as WMSD_EI
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as WMSD_EI
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as WMSD_EI
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса WMSD_EI
'  ,или Nothing
'See Also:
'Example:
' dim variable as WMSD_EI
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as WMSD_EI
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  WMSD_EI
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;WMSD_EI.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As WMSD_EI
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As WMSD_EI
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!WMSD_EIID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as WMSD_EI
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;WMSD_EI_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;WMSD_EI&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as WMSD_EI
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;WMSD_EI&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Наименование&quot;, 0, 0, &quot;Name&quot;).SortType =1
  YGrid.Columns.Add(&quot;Количество&quot;, 0, 0, &quot;Quantity&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as WMSD_EI
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Name, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.Quantity, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;WMSD_EI&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
