<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Справочник: общие классификаторы"/><AttributeHolder Name="Name" Value="ENTDIC2GUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Справочник: общие классификаторы&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Справочник: общие классификаторы)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ENTDIC2:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ENTDIC2:admi&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ENTDIC2:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочник: общие классификаторы&quot; 
  end if
end if
if OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ENTDIC2:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ENTDIC2:admi&quot;)) then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;ENTDIC2:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочник: общие классификаторы&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ENTDIC_BANK&quot; Then
    Set f = New frmENTDIC_BANK_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ENTDIC_1CLINK&quot; Then
    Set f = New frmENTDIC_1CLINK_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ENTDIC_DOST&quot; Then
    Set f = New frmENTDIC_DOST_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_TOWN&quot; Then
    Set f = New frmENTDIC_TOWN_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_TRANSPORTTYPE&quot; Then
    Set f = New frmENTDIC_TransportType_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_OPF&quot; Then
    Set f = New frmENTDIC_OPF_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_EDIZM&quot; Then
    Set f = New frmENTDIC_EDIZM_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_CURRENCY&quot; Then
    Set f = New frmENTDIC_CURRENCY_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;ENTDIC_CURCOURCE&quot; Then
    Set f = New frmENTDIC_CURCOURCE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ENTDIC_COUNTRY&quot; Then
    Set f = New frmENTDIC_COUNTRY_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_REGION&quot; Then
    Set f = New frmENTDIC_REGION_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ENTDIC_BANK&quot; Then
    Set f = New frmENTDIC_BANK_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ENTDIC_1CLINK&quot; Then
    Set f = New frmENTDIC_1CLINK_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ENTDIC_DOST&quot; Then
    Set f = New frmENTDIC_DOST_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_TOWN&quot; Then
    Set f = New frmENTDIC_TOWN_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_TRANSPORTTYPE&quot; Then
    Set f = New frmENTDIC_TransportType_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_OPF&quot; Then
    Set f = New frmENTDIC_OPF_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_EDIZM&quot; Then
    Set f = New frmENTDIC_EDIZM_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_CURRENCY&quot; Then
    Set f = New frmENTDIC_CURRENCY_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;ENTDIC_CURCOURCE&quot; Then
    Set f = New frmENTDIC_CURCOURCE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ENTDIC_COUNTRY&quot; Then
    Set f = New frmENTDIC_COUNTRY_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_REGION&quot; Then
    Set f = New frmENTDIC_REGION_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ENTDIC_BANK&quot; Then
    Set f = New frmENTDIC_BANK_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ENTDIC_1CLINK&quot; Then
    Set f = New frmENTDIC_1CLINK_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ENTDIC_DOST&quot; Then
    Set f = New frmENTDIC_DOST_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_TOWN&quot; Then
    Set f = New frmENTDIC_TOWN_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_TRANSPORTTYPE&quot; Then
    Set f = New frmENTDIC_TransportType_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_OPF&quot; Then
    Set f = New frmENTDIC_OPF_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_EDIZM&quot; Then
    Set f = New frmENTDIC_EDIZM_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_CURRENCY&quot; Then
    Set f = New frmENTDIC_CURRENCY_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;ENTDIC_CURCOURCE&quot; Then
    Set f = New frmENTDIC_CURCOURCE_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;ENTDIC_COUNTRY&quot; Then
    Set f = New frmENTDIC_COUNTRY_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;ENTDIC_REGION&quot; Then
    Set f = New frmENTDIC_REGION_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_BANK" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBIC"/><Properties Name="Caption" PropValue="БИК:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBIC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="11"/><Properties Name="ToolTipText" PropValue="БИК"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblRKC"/><Properties Name="Caption" PropValue="РКЦ:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtRKC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="11"/><Properties Name="ToolTipText" PropValue="РКЦ"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblACC"/><Properties Name="Caption" PropValue="Счет:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKORACC"/><Properties Name="Caption" PropValue="Кор. счет:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKORACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Кор. счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSUBKORACC"/><Properties Name="Caption" PropValue="Суб кор счет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSUBKORACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Суб кор счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddr"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddr"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtBIC_Change()
  Changing

end sub
private sub txtRKC_Change()
  Changing

end sub
private sub txtACC_Change()
  Changing

end sub
private sub txtKORACC_Change()
  Changing

end sub
private sub txtSUBKORACC_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
private sub txtAddr_Change()
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtBIC.text)
if mIsOK then mIsOK =IsSet(txtRKC.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtBIC = item.BIC
  on error resume next
txtRKC = item.RKC
  on error resume next
txtACC = item.ACC
  on error resume next
txtKORACC = item.KORACC
  on error resume next
txtSUBKORACC = item.SUBKORACC
  on error resume next
txtname = item.name
  on error resume next
txtAddr = item.Addr
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.BIC = txtBIC
item.RKC = txtRKC
item.ACC = txtACC
item.KORACC = txtKORACC
item.SUBKORACC = txtSUBKORACC
item.name = txtname
item.Addr = txtAddr
item.Code1C = txtCode1C
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_1CLINK" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheDept.Tag = Left(id, 38)
          txtTheDept = brief
        End If
end sub
private sub cmdTheDept_MenuClick(ByVal sCaption As String)
          txtTheDept.Tag = &quot;&quot;
          txtTheDept = &quot;&quot;
End sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheDept.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheDept Is Nothing Then
  txtTheDept.Tag = item.TheDept.id
  txtTheDept = item.TheDept.brief
else
  txtTheDept.Tag = &quot;&quot; 
  txtTheDept = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDept,cmdTheDept.tag
  cmdTheDept.RemoveAllMenu
  cmdTheDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTheDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheDept.Tag)
Else
  Set item.TheDept = Nothing
End If
item.Code1C = txtCode1C
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_DOST" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_TOWN" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblcountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtcountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdcountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtcountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdcountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_COUNTRY&quot;, id, brief) Then
          txtcountry.Tag = Left(id, 38)
          txtcountry = brief
        End If
end sub
private sub cmdcountry_MenuClick(ByVal sCaption As String)
          txtcountry.Tag = &quot;&quot;
          txtcountry = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK = txtcountry.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
If Not item.country Is Nothing Then
  txtcountry.Tag = item.country.id
  txtcountry = item.country.brief
else
  txtcountry.Tag = &quot;&quot; 
  txtcountry = &quot;&quot; 
End If
 LoadBtnPictures cmdcountry,cmdcountry.tag
  cmdcountry.RemoveAllMenu
  cmdcountry.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
If txtcountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.country = Item.Application.FindRowObject(&quot;ENTDIC_COUNTRY&quot;,txtcountry.Tag)
Else
  Set item.country = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_TransportType" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheName"/><Properties Name="Caption" PropValue="Название типа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название типа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTheName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheName = item.TheName
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.TheName = txtTheName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_OPF" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_EDIZM" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblcode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtcode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNetto"/><Properties Name="Caption" PropValue="Базовых единиц:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Базовых единиц"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblbaseEDIZM"/><Properties Name="Caption" PropValue="Базовая единица изм.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtbaseEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Базовая единица изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdbaseEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Базовая единица изм."/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtcode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
private sub txtNetto_Validate(cancel as boolean)
if txtNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNetto.SetFocus 
  elseif Val(txtNetto.text) &lt; -922337203685477.5808 or Val(txtNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNetto.SetFocus 
  end if
end if
end sub
Private Sub txtNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtNetto_Change()
  Changing

end sub
private sub txtbaseEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdbaseEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtbaseEDIZM.Tag = Left(id, 38)
          txtbaseEDIZM = brief
        End If
end sub
private sub cmdbaseEDIZM_MenuClick(ByVal sCaption As String)
          txtbaseEDIZM.Tag = &quot;&quot;
          txtbaseEDIZM = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtcode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtcode = item.code
  on error resume next
txtname = item.name
txtNetto = item.Netto
If Not item.baseEDIZM Is Nothing Then
  txtbaseEDIZM.Tag = item.baseEDIZM.id
  txtbaseEDIZM = item.baseEDIZM.brief
else
  txtbaseEDIZM.Tag = &quot;&quot; 
  txtbaseEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdbaseEDIZM,cmdbaseEDIZM.tag
  cmdbaseEDIZM.RemoveAllMenu
  cmdbaseEDIZM.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.code = txtcode
item.name = txtname
item.Netto = cdbl(txtNetto)
If txtbaseEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.baseEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtbaseEDIZM.Tag)
Else
  Set item.baseEDIZM = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_CURRENCY" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK =IsSet(txtCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.Code = txtCode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_CURCOURCE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCourceDate"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpCourceDate"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Value"/><Properties Name="Caption" PropValue="Курс:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtthe_Value"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Курс"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpCourceDate_Change()
  Changing

end sub
private sub txtthe_Value_Validate(cancel as boolean)
if txtthe_Value.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtthe_Value.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtthe_Value.SetFocus 
  elseif Val(txtthe_Value.text) &lt; -922337203685477.5808 or Val(txtthe_Value.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtthe_Value.SetFocus 
  end if
end if
end sub
Private Sub txtthe_Value_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtthe_Value_Change()
  Changing

end sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpCourceDate.value)
if mIsOK then mIsOK = IsSet(txtthe_Value.text)
if mIsOK then mIsOK = IsSet(txtQuantity.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpCourceDate = date
if item.CourceDate &lt;&gt; 0 then
 dtpCourceDate = item.CourceDate
end if
txtthe_Value = item.the_Value
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpCourceDate) then
    item.CourceDate = 0
  else
    item.CourceDate = dtpCourceDate.value
  end if
item.the_Value = cdbl(txtthe_Value)
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_COUNTRY" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_REGION" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_BANKmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBIC"/><Properties Name="Caption" PropValue="БИК:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBIC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="11"/><Properties Name="ToolTipText" PropValue="БИК"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblRKC"/><Properties Name="Caption" PropValue="РКЦ:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtRKC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="11"/><Properties Name="ToolTipText" PropValue="РКЦ"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblACC"/><Properties Name="Caption" PropValue="Счет:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKORACC"/><Properties Name="Caption" PropValue="Кор. счет:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKORACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Кор. счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSUBKORACC"/><Properties Name="Caption" PropValue="Суб кор счет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSUBKORACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Суб кор счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddr"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddr"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtBIC_Change()
  Changing

end sub
private sub txtRKC_Change()
  Changing

end sub
private sub txtACC_Change()
  Changing

end sub
private sub txtKORACC_Change()
  Changing

end sub
private sub txtSUBKORACC_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
private sub txtAddr_Change()
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtBIC.text)
if mIsOK then mIsOK =IsSet(txtRKC.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtBIC = item.BIC
  on error resume next
txtRKC = item.RKC
  on error resume next
txtACC = item.ACC
  on error resume next
txtKORACC = item.KORACC
  on error resume next
txtSUBKORACC = item.SUBKORACC
  on error resume next
txtname = item.name
  on error resume next
txtAddr = item.Addr
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.BIC = txtBIC
item.RKC = txtRKC
item.ACC = txtACC
item.KORACC = txtKORACC
item.SUBKORACC = txtSUBKORACC
item.name = txtname
item.Addr = txtAddr
item.Code1C = txtCode1C
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_1CLINKmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheDept.Tag = Left(id, 38)
          txtTheDept = brief
        End If
end sub
private sub cmdTheDept_MenuClick(ByVal sCaption As String)
          txtTheDept.Tag = &quot;&quot;
          txtTheDept = &quot;&quot;
End sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheDept.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheDept Is Nothing Then
  txtTheDept.Tag = item.TheDept.id
  txtTheDept = item.TheDept.brief
else
  txtTheDept.Tag = &quot;&quot; 
  txtTheDept = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDept,cmdTheDept.tag
  cmdTheDept.RemoveAllMenu
  cmdTheDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTheDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheDept.Tag)
Else
  Set item.TheDept = Nothing
End If
item.Code1C = txtCode1C
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_DOSTmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_TOWNmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblcountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtcountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdcountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtcountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdcountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_COUNTRY&quot;, id, brief) Then
          txtcountry.Tag = Left(id, 38)
          txtcountry = brief
        End If
end sub
private sub cmdcountry_MenuClick(ByVal sCaption As String)
          txtcountry.Tag = &quot;&quot;
          txtcountry = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK = txtcountry.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
If Not item.country Is Nothing Then
  txtcountry.Tag = item.country.id
  txtcountry = item.country.brief
else
  txtcountry.Tag = &quot;&quot; 
  txtcountry = &quot;&quot; 
End If
 LoadBtnPictures cmdcountry,cmdcountry.tag
  cmdcountry.RemoveAllMenu
  cmdcountry.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
If txtcountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.country = Item.Application.FindRowObject(&quot;ENTDIC_COUNTRY&quot;,txtcountry.Tag)
Else
  Set item.country = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_TransportTypemain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheName"/><Properties Name="Caption" PropValue="Название типа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название типа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTheName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheName = item.TheName
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.TheName = txtTheName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_OPFmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_EDIZMmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblcode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtcode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNetto"/><Properties Name="Caption" PropValue="Базовых единиц:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Базовых единиц"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblbaseEDIZM"/><Properties Name="Caption" PropValue="Базовая единица изм.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtbaseEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Базовая единица изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdbaseEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Базовая единица изм."/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtcode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
private sub txtNetto_Validate(cancel as boolean)
if txtNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNetto.SetFocus 
  elseif Val(txtNetto.text) &lt; -922337203685477.5808 or Val(txtNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNetto.SetFocus 
  end if
end if
end sub
Private Sub txtNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtNetto_Change()
  Changing

end sub
private sub txtbaseEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdbaseEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtbaseEDIZM.Tag = Left(id, 38)
          txtbaseEDIZM = brief
        End If
end sub
private sub cmdbaseEDIZM_MenuClick(ByVal sCaption As String)
          txtbaseEDIZM.Tag = &quot;&quot;
          txtbaseEDIZM = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtcode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtcode = item.code
  on error resume next
txtname = item.name
txtNetto = item.Netto
If Not item.baseEDIZM Is Nothing Then
  txtbaseEDIZM.Tag = item.baseEDIZM.id
  txtbaseEDIZM = item.baseEDIZM.brief
else
  txtbaseEDIZM.Tag = &quot;&quot; 
  txtbaseEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdbaseEDIZM,cmdbaseEDIZM.tag
  cmdbaseEDIZM.RemoveAllMenu
  cmdbaseEDIZM.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.code = txtcode
item.name = txtname
item.Netto = cdbl(txtNetto)
If txtbaseEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.baseEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtbaseEDIZM.Tag)
Else
  Set item.baseEDIZM = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_CURRENCYmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK =IsSet(txtCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.Code = txtCode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_CURCOURCEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCourceDate"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpCourceDate"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Value"/><Properties Name="Caption" PropValue="Курс:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtthe_Value"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Курс"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpCourceDate_Change()
  Changing

end sub
private sub txtthe_Value_Validate(cancel as boolean)
if txtthe_Value.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtthe_Value.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtthe_Value.SetFocus 
  elseif Val(txtthe_Value.text) &lt; -922337203685477.5808 or Val(txtthe_Value.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtthe_Value.SetFocus 
  end if
end if
end sub
Private Sub txtthe_Value_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtthe_Value_Change()
  Changing

end sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpCourceDate.value)
if mIsOK then mIsOK = IsSet(txtthe_Value.text)
if mIsOK then mIsOK = IsSet(txtQuantity.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpCourceDate = date
if item.CourceDate &lt;&gt; 0 then
 dtpCourceDate = item.CourceDate
end if
txtthe_Value = item.the_Value
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpCourceDate) then
    item.CourceDate = 0
  else
    item.CourceDate = dtpCourceDate.value
  end if
item.the_Value = cdbl(txtthe_Value)
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_COUNTRYmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_REGIONmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_BANKadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblBIC"/><Properties Name="Caption" PropValue="БИК:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtBIC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="11"/><Properties Name="ToolTipText" PropValue="БИК"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblRKC"/><Properties Name="Caption" PropValue="РКЦ:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtRKC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="11"/><Properties Name="ToolTipText" PropValue="РКЦ"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblACC"/><Properties Name="Caption" PropValue="Счет:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblKORACC"/><Properties Name="Caption" PropValue="Кор. счет:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtKORACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Кор. счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSUBKORACC"/><Properties Name="Caption" PropValue="Суб кор счет:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSUBKORACC"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Суб кор счет"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddr"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddr"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtBIC_Change()
  Changing

end sub
private sub txtRKC_Change()
  Changing

end sub
private sub txtACC_Change()
  Changing

end sub
private sub txtKORACC_Change()
  Changing

end sub
private sub txtSUBKORACC_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
private sub txtAddr_Change()
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtBIC.text)
if mIsOK then mIsOK =IsSet(txtRKC.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtBIC = item.BIC
  on error resume next
txtRKC = item.RKC
  on error resume next
txtACC = item.ACC
  on error resume next
txtKORACC = item.KORACC
  on error resume next
txtSUBKORACC = item.SUBKORACC
  on error resume next
txtname = item.name
  on error resume next
txtAddr = item.Addr
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.BIC = txtBIC
item.RKC = txtRKC
item.ACC = txtACC
item.KORACC = txtKORACC
item.SUBKORACC = txtSUBKORACC
item.name = txtname
item.Addr = txtAddr
item.Code1C = txtCode1C
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_1CLINKadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheDept.Tag = Left(id, 38)
          txtTheDept = brief
        End If
end sub
private sub cmdTheDept_MenuClick(ByVal sCaption As String)
          txtTheDept.Tag = &quot;&quot;
          txtTheDept = &quot;&quot;
End sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheDept.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheDept Is Nothing Then
  txtTheDept.Tag = item.TheDept.id
  txtTheDept = item.TheDept.brief
else
  txtTheDept.Tag = &quot;&quot; 
  txtTheDept = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDept,cmdTheDept.tag
  cmdTheDept.RemoveAllMenu
  cmdTheDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTheDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheDept.Tag)
Else
  Set item.TheDept = Nothing
End If
item.Code1C = txtCode1C
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_DOSTadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_TOWNadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblcountry"/><Properties Name="Caption" PropValue="Страна:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtcountry"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdcountry"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Страна"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtcountry_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdcountry_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_COUNTRY&quot;, id, brief) Then
          txtcountry.Tag = Left(id, 38)
          txtcountry = brief
        End If
end sub
private sub cmdcountry_MenuClick(ByVal sCaption As String)
          txtcountry.Tag = &quot;&quot;
          txtcountry = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK = txtcountry.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
If Not item.country Is Nothing Then
  txtcountry.Tag = item.country.id
  txtcountry = item.country.brief
else
  txtcountry.Tag = &quot;&quot; 
  txtcountry = &quot;&quot; 
End If
 LoadBtnPictures cmdcountry,cmdcountry.tag
  cmdcountry.RemoveAllMenu
  cmdcountry.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
If txtcountry.Tag &lt;&gt; &quot;&quot; Then
  Set item.country = Item.Application.FindRowObject(&quot;ENTDIC_COUNTRY&quot;,txtcountry.Tag)
Else
  Set item.country = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_TransportTypeadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheName"/><Properties Name="Caption" PropValue="Название типа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название типа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTheName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheName = item.TheName
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.TheName = txtTheName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_OPFadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_EDIZMadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblcode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtcode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNetto"/><Properties Name="Caption" PropValue="Базовых единиц:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtNetto"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Базовых единиц"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblbaseEDIZM"/><Properties Name="Caption" PropValue="Базовая единица изм.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtbaseEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Базовая единица изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdbaseEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Базовая единица изм."/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtcode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
private sub txtNetto_Validate(cancel as boolean)
if txtNetto.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtNetto.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNetto.SetFocus 
  elseif Val(txtNetto.text) &lt; -922337203685477.5808 or Val(txtNetto.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNetto.SetFocus 
  end if
end if
end sub
Private Sub txtNetto_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtNetto_Change()
  Changing

end sub
private sub txtbaseEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdbaseEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtbaseEDIZM.Tag = Left(id, 38)
          txtbaseEDIZM = brief
        End If
end sub
private sub cmdbaseEDIZM_MenuClick(ByVal sCaption As String)
          txtbaseEDIZM.Tag = &quot;&quot;
          txtbaseEDIZM = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtcode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtcode = item.code
  on error resume next
txtname = item.name
txtNetto = item.Netto
If Not item.baseEDIZM Is Nothing Then
  txtbaseEDIZM.Tag = item.baseEDIZM.id
  txtbaseEDIZM = item.baseEDIZM.brief
else
  txtbaseEDIZM.Tag = &quot;&quot; 
  txtbaseEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdbaseEDIZM,cmdbaseEDIZM.tag
  cmdbaseEDIZM.RemoveAllMenu
  cmdbaseEDIZM.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.code = txtcode
item.name = txtname
item.Netto = cdbl(txtNetto)
If txtbaseEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.baseEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtbaseEDIZM.Tag)
Else
  Set item.baseEDIZM = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_CURRENCYadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK =IsSet(txtCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
  on error resume next
txtCode = item.Code
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.Code = txtCode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_CURCOURCEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCourceDate"/><Properties Name="Caption" PropValue="Дата:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpCourceDate"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Дата"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Value"/><Properties Name="Caption" PropValue="Курс:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtthe_Value"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Курс"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuantity"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpCourceDate_Change()
  Changing

end sub
private sub txtthe_Value_Validate(cancel as boolean)
if txtthe_Value.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtthe_Value.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtthe_Value.SetFocus 
  elseif Val(txtthe_Value.text) &lt; -922337203685477.5808 or Val(txtthe_Value.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtthe_Value.SetFocus 
  end if
end if
end sub
Private Sub txtthe_Value_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtthe_Value_Change()
  Changing

end sub
private sub txtQuantity_Validate(cancel as boolean)
if txtQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  elseif Val(txtQuantity.text) &lt; -922337203685477.5808 or Val(txtQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuantity_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpCourceDate.value)
if mIsOK then mIsOK = IsSet(txtthe_Value.text)
if mIsOK then mIsOK = IsSet(txtQuantity.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpCourceDate = date
if item.CourceDate &lt;&gt; 0 then
 dtpCourceDate = item.CourceDate
end if
txtthe_Value = item.the_Value
txtQuantity = item.Quantity
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpCourceDate) then
    item.CourceDate = 0
  else
    item.CourceDate = dtpCourceDate.value
  end if
item.the_Value = cdbl(txtthe_Value)
item.Quantity = cdbl(txtQuantity)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_COUNTRYadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ENTDIC_REGIONadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode"/><Properties Name="Caption" PropValue="Код:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="10"/><Properties Name="ToolTipText" PropValue="Код"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtCode_Change()
  Changing

end sub
private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtCode.text)
if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtCode = item.Code
  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Code = txtCode
item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_BANK_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_BANK"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Банки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Банки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot;
  Open s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_1CLINK_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_1CLINK"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Раздел для хранения информации о привязки к 1С на уровне филиала"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Связь с 1С"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot;
  Open s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_DOST_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_DOST"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип доставки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип доставки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot;
  Open s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_TOWN_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_TOWN"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Города"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Города"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot;
  Open s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_TransportType_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_TransportType"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы транспорта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип транспорта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot;
  Open s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_OPF_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_OPF"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Организационно-правовая форма"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Организационно-правовая форма"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot;
  Open s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_EDIZM_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_EDIZM"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Единицы измерения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Единицы измерения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot;
  Open s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_CURRENCY_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_CURRENCY"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Валюта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Валюта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot;
  Open s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_CURCOURCE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_CURCOURCE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Курс валюты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Курс валюты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot;
  Open s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_COUNTRY_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_COUNTRY"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Страны"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot;
  Open s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_REGION_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_REGION"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Название областей"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Название областей"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot;
  Open s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_BANK_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_BANKmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Банки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Банки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot;
  Open s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_1CLINK_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_1CLINKmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Раздел для хранения информации о привязки к 1С на уровне филиала"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Связь с 1С"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot;
  Open s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_DOST_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_DOSTmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип доставки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип доставки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot;
  Open s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_TOWN_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_TOWNmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Города"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Города"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot;
  Open s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_TransportType_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_TransportTypemain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы транспорта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип транспорта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot;
  Open s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_OPF_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_OPFmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Организационно-правовая форма"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Организационно-правовая форма"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot;
  Open s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_EDIZM_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_EDIZMmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Единицы измерения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Единицы измерения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot;
  Open s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_CURRENCY_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_CURRENCYmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Валюта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Валюта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot;
  Open s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_CURCOURCE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_CURCOURCEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Курс валюты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Курс валюты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot;
  Open s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_COUNTRY_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_COUNTRYmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Страны"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot;
  Open s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_REGION_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_REGIONmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Название областей"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Название областей"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot;
  Open s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_EDIZM_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_EDIZM"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_EDIZM" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_EDIZM"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_EDIZMAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_EDIZMRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_EDIZMPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_EDIZMFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Единицы измерения"/><Properties Name="Name" PropValue="mnuPopupENTDIC_EDIZM"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_EDIZMAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_EDIZMOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMOpen"/></ControlData><ControlData Name="mnuENTDIC_EDIZMRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMRef"/></ControlData><ControlData Name="mnuENTDIC_EDIZMPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMPrn"/></ControlData><ControlData Name="mnuENTDIC_EDIZMCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_EDIZM"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_EDIZM as object
private menuActionENTDIC_EDIZM as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_EDIZMCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_EDIZM,&quot;gridENTDIC_EDIZM&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_EDIZMPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_EDIZM,&quot;Единицы измерения&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_EDIZMRef_Click()
  on error resume next
  item.ENTDIC_EDIZM.Refresh
  gridENTDIC_EDIZM.itemCount = item.ENTDIC_EDIZM.count
  gridENTDIC_EDIZM.Refetch
  gridENTDIC_EDIZM.Refresh
End Sub
Private Sub cmdENTDIC_EDIZMAcc_Click()
On Error Resume Next
If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
If gridENTDIC_EDIZM.Row &gt; 0 Then
 If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_EDIZMEdit_Click()
  on error resume next
If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
If gridENTDIC_EDIZM.Row &gt; 0 then
 If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_EDIZM_main.Item = u
    again: frmENTDIC_EDIZM_main.NotFirstTime = False
    frmENTDIC_EDIZM_main.OnInit
    frmENTDIC_EDIZM_main.Show vbModal
    If frmENTDIC_EDIZM_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_EDIZM.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_EDIZMDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_EDIZMAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_EDIZM.Add()

      Set frmENTDIC_EDIZM_main.Item = u
      again: frmENTDIC_EDIZM_main.NotFirstTime = False
      frmENTDIC_EDIZM_main.OnInit
      frmENTDIC_EDIZM_main.Show vbModal
      If frmENTDIC_EDIZM_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_EDIZM.ItemCount = Item.ENTDIC_EDIZM.Count
        gridENTDIC_EDIZM.Refresh
        gridENTDIC_EDIZM.RefreshGroups
        gridENTDIC_EDIZM.Refreshsort
        gridENTDIC_EDIZM.MoveToBookmark u.ID &amp; &quot;ENTDIC_EDIZM&quot;
      Else
        Item.ENTDIC_EDIZM.Delete u.ID
        Item.ENTDIC_EDIZM.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_EDIZMFnd_Click()
  on error resume next
  fndENTDIC_EDIZM.ShowForm
End Sub
Private Sub cmdENTDIC_EDIZMRun_Click()
  on error resume next
  gridENTDIC_EDIZM_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_EDIZM_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_EDIZM.LoadRow gridENTDIC_EDIZM, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_EDIZM_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_EDIZM_DblClick()
  cmdENTDIC_EDIZMEdit_Click
End Sub
Private Sub gridENTDIC_EDIZM_KeyPress(KeyAscii As Integer)
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_EDIZM.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_EDIZM_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_EDIZM.Row And LastRow &gt; 0 Then
  gridENTDIC_EDIZM.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_EDIZM.GetRowData(gridENTDIC_EDIZM.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_EDIZMPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_EDIZM.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_EDIZM.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_EDIZM_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_EDIZMCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_EDIZM_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_EDIZM
End If
end sub
private sub mnuENTDIC_EDIZMAdd_click()
   menuActionENTDIC_EDIZM =&quot;ADD&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMEdit_click()
   menuActionENTDIC_EDIZM =&quot;EDIT&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMDelete_click()
   menuActionENTDIC_EDIZM =&quot;DEL&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMOpen_click()
   menuActionENTDIC_EDIZM =&quot;RUN&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMRef_click()
   menuActionENTDIC_EDIZM =&quot;REF&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
  Private Sub mnuENTDIC_EDIZMCOPY_Click()
    On Error Resume Next
    If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
    If gridENTDIC_EDIZM.Row &gt; 0 Then
     If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_EDIZMCUT_Click()
    On Error Resume Next
    If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
    If gridENTDIC_EDIZM.Row &gt; 0 Then
     If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_EDIZM.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_EDIZMCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  If gridENTDIC_EDIZM.Row &gt; 0 Then
   If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_EDIZM.ItemCount = u.parent.Count
      gridENTDIC_EDIZM.RefreshRowIndex gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_EDIZMCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_EDIZMPrn_click()
   menuActionENTDIC_EDIZM =&quot;PRN&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMCfg_click()
   menuActionENTDIC_EDIZM =&quot;CFG&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMFind_click()
   menuActionENTDIC_EDIZM =&quot;FND&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMAcc_click()
   menuActionENTDIC_EDIZM =&quot;ACC&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub menuTimerENTDIC_EDIZM_timer()
   menuTimerENTDIC_EDIZM.enabled = false
   if menuActionENTDIC_EDIZM =&quot;ADD&quot; then cmdENTDIC_EDIZMADD_CLick
   if menuActionENTDIC_EDIZM =&quot;EDIT&quot; then cmdENTDIC_EDIZMEDIT_CLick
   if menuActionENTDIC_EDIZM =&quot;DEL&quot; then cmdENTDIC_EDIZMDEL_CLick
   if menuActionENTDIC_EDIZM =&quot;RUN&quot; then cmdENTDIC_EDIZMRUN_CLick
   if menuActionENTDIC_EDIZM =&quot;REF&quot; then cmdENTDIC_EDIZMREF_CLick
   if menuActionENTDIC_EDIZM =&quot;PRN&quot; then cmdENTDIC_EDIZMPRN_CLick
   if menuActionENTDIC_EDIZM =&quot;CFG&quot; then cmdENTDIC_EDIZMCFG_CLick
   if menuActionENTDIC_EDIZM =&quot;FND&quot; then cmdENTDIC_EDIZMFND_CLick
   if menuActionENTDIC_EDIZM =&quot;ACC&quot; then cmdENTDIC_EDIZMACC_CLick
   menuActionENTDIC_EDIZM =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_EDIZMAdd,cmdENTDIC_EDIZMAdd.tag
  LoadBtnPictures cmdENTDIC_EDIZMEdit,cmdENTDIC_EDIZMEdit.tag
  LoadBtnPictures cmdENTDIC_EDIZMDel,cmdENTDIC_EDIZMDel.tag
  LoadBtnPictures cmdENTDIC_EDIZMRef,cmdENTDIC_EDIZMRef.tag
  LoadBtnPictures cmdENTDIC_EDIZMPrn,cmdENTDIC_EDIZMPrn.tag
  LoadBtnPictures cmdENTDIC_EDIZMFnd,cmdENTDIC_EDIZMFnd.tag
  item.ENTDIC_EDIZM.PrepareGrid gridENTDIC_EDIZM
  LoadGridLayout gridENTDIC_EDIZM
  Set fndENTDIC_EDIZM = Nothing
  On Error Resume Next
  Set fndENTDIC_EDIZM = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_EDIZM.Init gridENTDIC_EDIZM
end sub
private sub OnTabClick()

      gridENTDIC_EDIZM.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_EDIZM.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_EDIZM.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_EDIZM = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_BANK_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_BANK" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlENTDIC_BANK"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridENTDIC_BANK" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_BANK"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_BANKAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_BANKRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_BANKPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_BANKFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridENTDIC_1CLINK" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_1CLINK"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_1CLINKAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_1CLINKPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_1CLINKFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_BANK" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Банки"/><Properties Name="Name" PropValue="mnuPopupENTDIC_BANK"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_BANKAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_BANKAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_BANKEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_BANKOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_BANKOpen"/></ControlData><ControlData Name="mnuENTDIC_BANKRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKRef"/></ControlData><ControlData Name="mnuENTDIC_BANKPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_BANKPrn"/></ControlData><ControlData Name="mnuENTDIC_BANKCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_BANK" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_BANK"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupENTDIC_1CLINK" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Связь с 1С"/><Properties Name="Name" PropValue="mnuPopupENTDIC_1CLINK"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_1CLINKAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKOpen"/></ControlData><ControlData Name="mnuENTDIC_1CLINKRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKRef"/></ControlData><ControlData Name="mnuENTDIC_1CLINKPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKPrn"/></ControlData><ControlData Name="mnuENTDIC_1CLINKCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_1CLINK" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_1CLINK"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_BANK as object
private menuActionENTDIC_BANK as string
private fndENTDIC_1CLINK as object
private menuActionENTDIC_1CLINK as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlENTDIC_BANK_PositionChanged()
  pnlENTDIC_BANK.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_BANK_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_BANKCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_BANK_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_BANK
End If
end sub
private sub mnuENTDIC_BANKAdd_click()
   menuActionENTDIC_BANK =&quot;ADD&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKEdit_click()
   menuActionENTDIC_BANK =&quot;EDIT&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKDelete_click()
   menuActionENTDIC_BANK =&quot;DEL&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKOpen_click()
   menuActionENTDIC_BANK =&quot;RUN&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKRef_click()
   menuActionENTDIC_BANK =&quot;REF&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
  Private Sub mnuENTDIC_BANKCOPY_Click()
    On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_BANK.Row &gt; 0 Then
     If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_BANKCUT_Click()
    On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_BANK.Row &gt; 0 Then
     If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_BANK.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_BANKCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  If gridENTDIC_BANK.Row &gt; 0 Then
   If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_BANK.ItemCount = u.parent.Count
      gridENTDIC_BANK.RefreshRowIndex gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_BANKCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_BANKPrn_click()
   menuActionENTDIC_BANK =&quot;PRN&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKCfg_click()
   menuActionENTDIC_BANK =&quot;CFG&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKFind_click()
   menuActionENTDIC_BANK =&quot;FND&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKAcc_click()
   menuActionENTDIC_BANK =&quot;ACC&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub menuTimerENTDIC_BANK_timer()
   menuTimerENTDIC_BANK.enabled = false
   if menuActionENTDIC_BANK =&quot;ADD&quot; then cmdENTDIC_BANKADD_CLick
   if menuActionENTDIC_BANK =&quot;EDIT&quot; then cmdENTDIC_BANKEDIT_CLick
   if menuActionENTDIC_BANK =&quot;DEL&quot; then cmdENTDIC_BANKDEL_CLick
   if menuActionENTDIC_BANK =&quot;RUN&quot; then cmdENTDIC_BANKRUN_CLick
   if menuActionENTDIC_BANK =&quot;REF&quot; then cmdENTDIC_BANKREF_CLick
   if menuActionENTDIC_BANK =&quot;PRN&quot; then cmdENTDIC_BANKPRN_CLick
   if menuActionENTDIC_BANK =&quot;CFG&quot; then cmdENTDIC_BANKCFG_CLick
   if menuActionENTDIC_BANK =&quot;FND&quot; then cmdENTDIC_BANKFND_CLick
   if menuActionENTDIC_BANK =&quot;ACC&quot; then cmdENTDIC_BANKACC_CLick
   menuActionENTDIC_BANK =&quot;&quot;
end sub
Private Sub cmdENTDIC_BANKCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_BANK,&quot;gridENTDIC_BANK&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_BANKPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_BANK,&quot;Банки&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_BANKRef_Click()
  on error resume next
  item.ENTDIC_BANK.Refresh
  gridENTDIC_BANK.itemCount = item.ENTDIC_BANK.count
  gridENTDIC_BANK.Refetch
  gridENTDIC_BANK.Refresh
End Sub
Private Sub cmdENTDIC_BANKAcc_Click()
On Error Resume Next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 Then
 If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_BANKEdit_Click()
  on error resume next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 then
 If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_BANK_main.Item = u
    again: frmENTDIC_BANK_main.NotFirstTime = False
    frmENTDIC_BANK_main.OnInit
    frmENTDIC_BANK_main.Show vbModal
    If frmENTDIC_BANK_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_BANK.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_BANKDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_BANKAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_BANK.Add()

      Set frmENTDIC_BANK_main.Item = u
      again: frmENTDIC_BANK_main.NotFirstTime = False
      frmENTDIC_BANK_main.OnInit
      frmENTDIC_BANK_main.Show vbModal
      If frmENTDIC_BANK_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_BANK.ItemCount = Item.ENTDIC_BANK.Count
        gridENTDIC_BANK.Refresh
        gridENTDIC_BANK.RefreshGroups
        gridENTDIC_BANK.Refreshsort
        gridENTDIC_BANK.MoveToBookmark u.ID &amp; &quot;ENTDIC_BANK&quot;
      Else
        Item.ENTDIC_BANK.Delete u.ID
        Item.ENTDIC_BANK.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_BANKFnd_Click()
  on error resume next
  fndENTDIC_BANK.ShowForm
End Sub
Private Sub cmdENTDIC_BANKRun_Click()
  on error resume next
  gridENTDIC_BANK_DblClick
End Sub
Private Sub gridENTDIC_BANK_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_BANK.LoadRow gridENTDIC_BANK, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_BANK_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_BANK_DblClick()
  cmdENTDIC_BANKEdit_Click
End Sub
Private Sub gridENTDIC_BANK_KeyPress(KeyAscii As Integer)
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_BANK.FindOnPress KeyAscii
End Sub

Private Sub pnlENTDIC_BANK_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridENTDIC_BANK.Left = Left
  gridENTDIC_BANK.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_BANK.Width = Width
  gridENTDIC_BANK.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_BANKAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdENTDIC_BANKEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_BANKDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_BANKRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_BANKPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_BANKFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuENTDIC_BANKPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_BANK.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_BANK.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdENTDIC_1CLINKCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_1CLINK,&quot;gridENTDIC_1CLINK&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_1CLINKPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_1CLINK,&quot;Связь с 1С&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_1CLINKAcc_Click()
On Error Resume Next
If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
If gridENTDIC_1CLINK.Row &gt; 0 Then
 If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_1CLINKFnd_Click()
  on error resume next
  fndENTDIC_1CLINK.ShowForm
End Sub
Private Sub cmdENTDIC_1CLINKRun_Click()
  on error resume next
  gridENTDIC_1CLINK_DblClick
End Sub
Private Sub pnlENTDIC_BANK_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridENTDIC_1CLINK.Left = Left
  gridENTDIC_1CLINK.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_1CLINK.Width = Width
  gridENTDIC_1CLINK.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_1CLINKAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdENTDIC_1CLINKEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdENTDIC_1CLINKRef_Click()
  on error resume next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 Then
 If gridENTDIC_BANK.RowIndex ( gridENTDIC_BANK.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_1CLINK.refresh
   gridENTDIC_1CLINK.itemcount=gu.ENTDIC_1CLINK.count
   gridENTDIC_1CLINK.refetch
   gridENTDIC_1CLINK.refresh
 else
  gridENTDIC_1CLINK.columns.clear
  gridENTDIC_1CLINK.itemcount=0
 End If
else
 gridENTDIC_1CLINK.columns.clear
 gridENTDIC_1CLINK.itemcount=0
End If
End Sub
Private Sub cmdENTDIC_1CLINKEdit_Click()
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmENTDIC_1CLINK_main.Item = u
    again: frmENTDIC_1CLINK_main.NotFirstTime = False
    frmENTDIC_1CLINK_main.OnInit
    frmENTDIC_1CLINK_main.Show vbModal
    If frmENTDIC_1CLINK_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_1CLINK.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdENTDIC_1CLINKDel_Click()
  on error resume next
  gridENTDIC_1CLINK.Delete
End Sub
Private Sub cmdENTDIC_1CLINKAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ENTDIC_1CLINK.Add()

      Set frmENTDIC_1CLINK_main.Item = u
      again: frmENTDIC_1CLINK_main.NotFirstTime = False
      frmENTDIC_1CLINK_main.OnInit
      frmENTDIC_1CLINK_main.Show vbModal
      If frmENTDIC_1CLINK_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_1CLINK.ItemCount = gu.ENTDIC_1CLINK.Count
        gridENTDIC_1CLINK.Refresh
        gridENTDIC_1CLINK.RefreshGroups
        gridENTDIC_1CLINK.Refreshsort
        gridENTDIC_1CLINK.MoveToBookmark u.ID &amp; &quot;ENTDIC_1CLINK&quot;
      Else
        gu.ENTDIC_1CLINK.Delete u.ID
        gu.ENTDIC_1CLINK.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridENTDIC_BANK_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridENTDIC_BANK.ItemCount = 0 Then 
  gridENTDIC_1CLINK.ItemCount=0
  Exit Sub
End If
If gridENTDIC_BANK.Row &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_BANK.Row And LastRow &gt; 0 Then
    gridENTDIC_BANK.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridENTDIC_BANK.GetRowData(gridENTDIC_BANK.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridENTDIC_BANK.RowIndex ( gridENTDIC_BANK.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_BANK.Row or gridENTDIC_1CLINK.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_1CLINK.Preparegrid gridENTDIC_1CLINK
  gridENTDIC_1CLINK.ItemCount=0
    LoadGridLayout gridENTDIC_1CLINK
    Set fndENTDIC_1CLINK = Nothing
    Set fndENTDIC_1CLINK = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndENTDIC_1CLINK.Init gridENTDIC_1CLINK
  gridENTDIC_1CLINK.ItemCount=gu.ENTDIC_1CLINK.Count
  End If
 End If
End If
End Sub
Private Sub gridENTDIC_1CLINK_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ENTDIC_1CLINK.LoadRow gridENTDIC_1CLINK, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridENTDIC_1CLINK_KeyPress(KeyAscii As Integer)
  If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_1CLINK.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_1CLINK_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridENTDIC_1CLINK_DblClick()
    cmdENTDIC_1CLINKEdit_click
End Sub
Private Sub gridENTDIC_1CLINK_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
 If gridENTDIC_1CLINK.Row &gt; 0 Then
   If LastRow &lt;&gt; gridENTDIC_1CLINK.Row And LastRow &gt; 0 Then
     gridENTDIC_1CLINK.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridENTDIC_1CLINK.GetRowData(gridENTDIC_1CLINK.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuENTDIC_1CLINKPASTE_Click()
On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ENTDIC_1CLINK.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_1CLINK.ItemCount = u.parent.Count
    ELSE
      GU.ENTDIC_1CLINK.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_1CLINK_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_1CLINKCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_1CLINK_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_1CLINK
End If
end sub
private sub mnuENTDIC_1CLINKAdd_click()
   menuActionENTDIC_1CLINK =&quot;ADD&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKEdit_click()
   menuActionENTDIC_1CLINK =&quot;EDIT&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKDelete_click()
   menuActionENTDIC_1CLINK =&quot;DEL&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKOpen_click()
   menuActionENTDIC_1CLINK =&quot;RUN&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKRef_click()
   menuActionENTDIC_1CLINK =&quot;REF&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
  Private Sub mnuENTDIC_1CLINKCOPY_Click()
    On Error Resume Next
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.Row &gt; 0 Then
     If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_1CLINKCUT_Click()
    On Error Resume Next
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.Row &gt; 0 Then
     If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_1CLINK.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_1CLINKCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
  If gridENTDIC_1CLINK.Row &gt; 0 Then
   If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_1CLINK.ItemCount = u.parent.Count
      gridENTDIC_1CLINK.RefreshRowIndex gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_1CLINKCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_1CLINKPrn_click()
   menuActionENTDIC_1CLINK =&quot;PRN&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKCfg_click()
   menuActionENTDIC_1CLINK =&quot;CFG&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKFind_click()
   menuActionENTDIC_1CLINK =&quot;FND&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKAcc_click()
   menuActionENTDIC_1CLINK =&quot;ACC&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub menuTimerENTDIC_1CLINK_timer()
   menuTimerENTDIC_1CLINK.enabled = false
   if menuActionENTDIC_1CLINK =&quot;ADD&quot; then cmdENTDIC_1CLINKADD_CLick
   if menuActionENTDIC_1CLINK =&quot;EDIT&quot; then cmdENTDIC_1CLINKEDIT_CLick
   if menuActionENTDIC_1CLINK =&quot;DEL&quot; then cmdENTDIC_1CLINKDEL_CLick
   if menuActionENTDIC_1CLINK =&quot;RUN&quot; then cmdENTDIC_1CLINKRUN_CLick
   if menuActionENTDIC_1CLINK =&quot;REF&quot; then cmdENTDIC_1CLINKREF_CLick
   if menuActionENTDIC_1CLINK =&quot;PRN&quot; then cmdENTDIC_1CLINKPRN_CLick
   if menuActionENTDIC_1CLINK =&quot;CFG&quot; then cmdENTDIC_1CLINKCFG_CLick
   if menuActionENTDIC_1CLINK =&quot;FND&quot; then cmdENTDIC_1CLINKFND_CLick
   if menuActionENTDIC_1CLINK =&quot;ACC&quot; then cmdENTDIC_1CLINKACC_CLick
   menuActionENTDIC_1CLINK =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_BANKAdd,cmdENTDIC_BANKAdd.tag
  LoadBtnPictures cmdENTDIC_BANKEdit,cmdENTDIC_BANKEdit.tag
  LoadBtnPictures cmdENTDIC_BANKDel,cmdENTDIC_BANKDel.tag
  LoadBtnPictures cmdENTDIC_BANKRef,cmdENTDIC_BANKRef.tag
  LoadBtnPictures cmdENTDIC_BANKPrn,cmdENTDIC_BANKPrn.tag
  LoadBtnPictures cmdENTDIC_BANKFnd,cmdENTDIC_BANKFnd.tag
  item.ENTDIC_BANK.PrepareGrid gridENTDIC_BANK
  LoadGridLayout gridENTDIC_BANK
  Set fndENTDIC_BANK = Nothing
  On Error Resume Next
  Set fndENTDIC_BANK = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_BANK.Init gridENTDIC_BANK
  LoadBtnPictures cmdENTDIC_1CLINKAdd,cmdENTDIC_1CLINKAdd.tag
  LoadBtnPictures cmdENTDIC_1CLINKEdit,cmdENTDIC_1CLINKEdit.tag
  LoadBtnPictures cmdENTDIC_1CLINKDel,cmdENTDIC_1CLINKDel.tag
  LoadBtnPictures cmdENTDIC_1CLINKRef,cmdENTDIC_1CLINKRef.tag
  LoadBtnPictures cmdENTDIC_1CLINKPrn,cmdENTDIC_1CLINKPrn.tag
  LoadBtnPictures cmdENTDIC_1CLINKFnd,cmdENTDIC_1CLINKFnd.Tag
  gridENTDIC_1CLINK.Columns.Clear
  gridENTDIC_1CLINK.ItemCount=0
  cmdENTDIC_1CLINKRef_Click
end sub
private sub OnTabClick()

pnlENTDIC_BANK.RestorePosition
  gridENTDIC_BANK_RowColChange gridENTDIC_BANK.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_BANK.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_BANK = nothing
  set fndENTDIC_1CLINK = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_CURRENCY_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_CURRENCY" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlENTDIC_CURRENCY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridENTDIC_CURRENCY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_CURRENCY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridENTDIC_CURCOURCE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_CURCOURCE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_CURRENCY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Валюта"/><Properties Name="Name" PropValue="mnuPopupENTDIC_CURRENCY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_CURRENCYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYOpen"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYRef"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYPrn"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_CURRENCY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_CURRENCY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupENTDIC_CURCOURCE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Курс валюты"/><Properties Name="Name" PropValue="mnuPopupENTDIC_CURCOURCE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_CURCOURCEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEOpen"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCERef"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEPrn"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCECfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_CURCOURCE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_CURCOURCE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_CURRENCY as object
private menuActionENTDIC_CURRENCY as string
private fndENTDIC_CURCOURCE as object
private menuActionENTDIC_CURCOURCE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlENTDIC_CURRENCY_PositionChanged()
  pnlENTDIC_CURRENCY.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_CURRENCY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_CURRENCYCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_CURRENCY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_CURRENCY
End If
end sub
private sub mnuENTDIC_CURRENCYAdd_click()
   menuActionENTDIC_CURRENCY =&quot;ADD&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYEdit_click()
   menuActionENTDIC_CURRENCY =&quot;EDIT&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYDelete_click()
   menuActionENTDIC_CURRENCY =&quot;DEL&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYOpen_click()
   menuActionENTDIC_CURRENCY =&quot;RUN&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYRef_click()
   menuActionENTDIC_CURRENCY =&quot;REF&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
  Private Sub mnuENTDIC_CURRENCYCOPY_Click()
    On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURRENCY.Row &gt; 0 Then
     If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_CURRENCYCUT_Click()
    On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURRENCY.Row &gt; 0 Then
     If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_CURRENCY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_CURRENCYCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  If gridENTDIC_CURRENCY.Row &gt; 0 Then
   If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_CURRENCY.ItemCount = u.parent.Count
      gridENTDIC_CURRENCY.RefreshRowIndex gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_CURRENCYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_CURRENCYPrn_click()
   menuActionENTDIC_CURRENCY =&quot;PRN&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYCfg_click()
   menuActionENTDIC_CURRENCY =&quot;CFG&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYFind_click()
   menuActionENTDIC_CURRENCY =&quot;FND&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYAcc_click()
   menuActionENTDIC_CURRENCY =&quot;ACC&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub menuTimerENTDIC_CURRENCY_timer()
   menuTimerENTDIC_CURRENCY.enabled = false
   if menuActionENTDIC_CURRENCY =&quot;ADD&quot; then cmdENTDIC_CURRENCYADD_CLick
   if menuActionENTDIC_CURRENCY =&quot;EDIT&quot; then cmdENTDIC_CURRENCYEDIT_CLick
   if menuActionENTDIC_CURRENCY =&quot;DEL&quot; then cmdENTDIC_CURRENCYDEL_CLick
   if menuActionENTDIC_CURRENCY =&quot;RUN&quot; then cmdENTDIC_CURRENCYRUN_CLick
   if menuActionENTDIC_CURRENCY =&quot;REF&quot; then cmdENTDIC_CURRENCYREF_CLick
   if menuActionENTDIC_CURRENCY =&quot;PRN&quot; then cmdENTDIC_CURRENCYPRN_CLick
   if menuActionENTDIC_CURRENCY =&quot;CFG&quot; then cmdENTDIC_CURRENCYCFG_CLick
   if menuActionENTDIC_CURRENCY =&quot;FND&quot; then cmdENTDIC_CURRENCYFND_CLick
   if menuActionENTDIC_CURRENCY =&quot;ACC&quot; then cmdENTDIC_CURRENCYACC_CLick
   menuActionENTDIC_CURRENCY =&quot;&quot;
end sub
Private Sub cmdENTDIC_CURRENCYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_CURRENCY,&quot;gridENTDIC_CURRENCY&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURRENCYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_CURRENCY,&quot;Валюта&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURRENCYRef_Click()
  on error resume next
  item.ENTDIC_CURRENCY.Refresh
  gridENTDIC_CURRENCY.itemCount = item.ENTDIC_CURRENCY.count
  gridENTDIC_CURRENCY.Refetch
  gridENTDIC_CURRENCY.Refresh
End Sub
Private Sub cmdENTDIC_CURRENCYAcc_Click()
On Error Resume Next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 Then
 If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_CURRENCYEdit_Click()
  on error resume next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 then
 If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_CURRENCY_main.Item = u
    again: frmENTDIC_CURRENCY_main.NotFirstTime = False
    frmENTDIC_CURRENCY_main.OnInit
    frmENTDIC_CURRENCY_main.Show vbModal
    If frmENTDIC_CURRENCY_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_CURRENCY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_CURRENCYDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_CURRENCYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_CURRENCY.Add()

      Set frmENTDIC_CURRENCY_main.Item = u
      again: frmENTDIC_CURRENCY_main.NotFirstTime = False
      frmENTDIC_CURRENCY_main.OnInit
      frmENTDIC_CURRENCY_main.Show vbModal
      If frmENTDIC_CURRENCY_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_CURRENCY.ItemCount = Item.ENTDIC_CURRENCY.Count
        gridENTDIC_CURRENCY.Refresh
        gridENTDIC_CURRENCY.RefreshGroups
        gridENTDIC_CURRENCY.Refreshsort
        gridENTDIC_CURRENCY.MoveToBookmark u.ID &amp; &quot;ENTDIC_CURRENCY&quot;
      Else
        Item.ENTDIC_CURRENCY.Delete u.ID
        Item.ENTDIC_CURRENCY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_CURRENCYFnd_Click()
  on error resume next
  fndENTDIC_CURRENCY.ShowForm
End Sub
Private Sub cmdENTDIC_CURRENCYRun_Click()
  on error resume next
  gridENTDIC_CURRENCY_DblClick
End Sub
Private Sub gridENTDIC_CURRENCY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_CURRENCY.LoadRow gridENTDIC_CURRENCY, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_CURRENCY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_CURRENCY_DblClick()
  cmdENTDIC_CURRENCYEdit_Click
End Sub
Private Sub gridENTDIC_CURRENCY_KeyPress(KeyAscii As Integer)
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_CURRENCY.FindOnPress KeyAscii
End Sub

Private Sub pnlENTDIC_CURRENCY_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridENTDIC_CURRENCY.Left = Left
  gridENTDIC_CURRENCY.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_CURRENCY.Width = Width
  gridENTDIC_CURRENCY.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuENTDIC_CURRENCYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_CURRENCY.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_CURRENCY.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdENTDIC_CURCOURCECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_CURCOURCE,&quot;gridENTDIC_CURCOURCE&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURCOURCEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_CURCOURCE,&quot;Курс валюты&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURCOURCEAcc_Click()
On Error Resume Next
If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURCOURCE.Row &gt; 0 Then
 If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_CURCOURCEFnd_Click()
  on error resume next
  fndENTDIC_CURCOURCE.ShowForm
End Sub
Private Sub cmdENTDIC_CURCOURCERun_Click()
  on error resume next
  gridENTDIC_CURCOURCE_DblClick
End Sub
Private Sub pnlENTDIC_CURRENCY_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridENTDIC_CURCOURCE.Left = Left
  gridENTDIC_CURCOURCE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_CURCOURCE.Width = Width
  gridENTDIC_CURCOURCE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdENTDIC_CURCOURCEEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdENTDIC_CURCOURCERef_Click()
  on error resume next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 Then
 If gridENTDIC_CURRENCY.RowIndex ( gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.refresh
   gridENTDIC_CURCOURCE.itemcount=gu.ENTDIC_CURCOURCE.count
   gridENTDIC_CURCOURCE.refetch
   gridENTDIC_CURCOURCE.refresh
 else
  gridENTDIC_CURCOURCE.columns.clear
  gridENTDIC_CURCOURCE.itemcount=0
 End If
else
 gridENTDIC_CURCOURCE.columns.clear
 gridENTDIC_CURCOURCE.itemcount=0
End If
End Sub
Private Sub cmdENTDIC_CURCOURCEEdit_Click()
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmENTDIC_CURCOURCE_main.Item = u
    again: frmENTDIC_CURCOURCE_main.NotFirstTime = False
    frmENTDIC_CURCOURCE_main.OnInit
    frmENTDIC_CURCOURCE_main.Show vbModal
    If frmENTDIC_CURCOURCE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_CURCOURCE.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdENTDIC_CURCOURCEDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_CURCOURCEAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ENTDIC_CURCOURCE.Add()

      Set frmENTDIC_CURCOURCE_main.Item = u
      again: frmENTDIC_CURCOURCE_main.NotFirstTime = False
      frmENTDIC_CURCOURCE_main.OnInit
      frmENTDIC_CURCOURCE_main.Show vbModal
      If frmENTDIC_CURCOURCE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_CURCOURCE.ItemCount = gu.ENTDIC_CURCOURCE.Count
        gridENTDIC_CURCOURCE.Refresh
        gridENTDIC_CURCOURCE.RefreshGroups
        gridENTDIC_CURCOURCE.Refreshsort
        gridENTDIC_CURCOURCE.MoveToBookmark u.ID &amp; &quot;ENTDIC_CURCOURCE&quot;
      Else
        gu.ENTDIC_CURCOURCE.Delete u.ID
        gu.ENTDIC_CURCOURCE.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridENTDIC_CURRENCY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridENTDIC_CURRENCY.ItemCount = 0 Then 
  gridENTDIC_CURCOURCE.ItemCount=0
  Exit Sub
End If
If gridENTDIC_CURRENCY.Row &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_CURRENCY.Row And LastRow &gt; 0 Then
    gridENTDIC_CURRENCY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridENTDIC_CURRENCY.GetRowData(gridENTDIC_CURRENCY.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridENTDIC_CURRENCY.RowIndex ( gridENTDIC_CURRENCY.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_CURRENCY.Row or gridENTDIC_CURCOURCE.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.Preparegrid gridENTDIC_CURCOURCE
  gridENTDIC_CURCOURCE.ItemCount=0
    LoadGridLayout gridENTDIC_CURCOURCE
    Set fndENTDIC_CURCOURCE = Nothing
    Set fndENTDIC_CURCOURCE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndENTDIC_CURCOURCE.Init gridENTDIC_CURCOURCE
  gridENTDIC_CURCOURCE.ItemCount=gu.ENTDIC_CURCOURCE.Count
  End If
 End If
End If
End Sub
Private Sub gridENTDIC_CURCOURCE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.LoadRow gridENTDIC_CURCOURCE, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridENTDIC_CURCOURCE_KeyPress(KeyAscii As Integer)
  If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_CURCOURCE.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_CURCOURCE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub gridENTDIC_CURCOURCE_DblClick()
    cmdENTDIC_CURCOURCEEdit_click
End Sub
Private Sub gridENTDIC_CURCOURCE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
 If gridENTDIC_CURCOURCE.Row &gt; 0 Then
   If LastRow &lt;&gt; gridENTDIC_CURCOURCE.Row And LastRow &gt; 0 Then
     gridENTDIC_CURCOURCE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridENTDIC_CURCOURCE.GetRowData(gridENTDIC_CURCOURCE.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuENTDIC_CURCOURCEPASTE_Click()
On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ENTDIC_CURCOURCE.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_CURCOURCE.ItemCount = u.parent.Count
    ELSE
      GU.ENTDIC_CURCOURCE.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_CURCOURCE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_CURCOURCECfg_Click
        End If
    End If
end sub

private sub gridENTDIC_CURCOURCE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_CURCOURCE
End If
end sub
private sub mnuENTDIC_CURCOURCEAdd_click()
   menuActionENTDIC_CURCOURCE =&quot;ADD&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEEdit_click()
   menuActionENTDIC_CURCOURCE =&quot;EDIT&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEDelete_click()
   menuActionENTDIC_CURCOURCE =&quot;DEL&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEOpen_click()
   menuActionENTDIC_CURCOURCE =&quot;RUN&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCERef_click()
   menuActionENTDIC_CURCOURCE =&quot;REF&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
  Private Sub mnuENTDIC_CURCOURCECOPY_Click()
    On Error Resume Next
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.Row &gt; 0 Then
     If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_CURCOURCECUT_Click()
    On Error Resume Next
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.Row &gt; 0 Then
     If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_CURCOURCE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_CURCOURCECHANGE_Click()
  On Error Resume Next
  If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
  If gridENTDIC_CURCOURCE.Row &gt; 0 Then
   If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_CURCOURCE.ItemCount = u.parent.Count
      gridENTDIC_CURCOURCE.RefreshRowIndex gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_CURCOURCECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_CURCOURCEPrn_click()
   menuActionENTDIC_CURCOURCE =&quot;PRN&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCECfg_click()
   menuActionENTDIC_CURCOURCE =&quot;CFG&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEFind_click()
   menuActionENTDIC_CURCOURCE =&quot;FND&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEAcc_click()
   menuActionENTDIC_CURCOURCE =&quot;ACC&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub menuTimerENTDIC_CURCOURCE_timer()
   menuTimerENTDIC_CURCOURCE.enabled = false
   if menuActionENTDIC_CURCOURCE =&quot;ADD&quot; then cmdENTDIC_CURCOURCEADD_CLick
   if menuActionENTDIC_CURCOURCE =&quot;EDIT&quot; then cmdENTDIC_CURCOURCEEDIT_CLick
   if menuActionENTDIC_CURCOURCE =&quot;DEL&quot; then cmdENTDIC_CURCOURCEDEL_CLick
   if menuActionENTDIC_CURCOURCE =&quot;RUN&quot; then cmdENTDIC_CURCOURCERUN_CLick
   if menuActionENTDIC_CURCOURCE =&quot;REF&quot; then cmdENTDIC_CURCOURCEREF_CLick
   if menuActionENTDIC_CURCOURCE =&quot;PRN&quot; then cmdENTDIC_CURCOURCEPRN_CLick
   if menuActionENTDIC_CURCOURCE =&quot;CFG&quot; then cmdENTDIC_CURCOURCECFG_CLick
   if menuActionENTDIC_CURCOURCE =&quot;FND&quot; then cmdENTDIC_CURCOURCEFND_CLick
   if menuActionENTDIC_CURCOURCE =&quot;ACC&quot; then cmdENTDIC_CURCOURCEACC_CLick
   menuActionENTDIC_CURCOURCE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_CURRENCYAdd,cmdENTDIC_CURRENCYAdd.tag
  LoadBtnPictures cmdENTDIC_CURRENCYEdit,cmdENTDIC_CURRENCYEdit.tag
  LoadBtnPictures cmdENTDIC_CURRENCYDel,cmdENTDIC_CURRENCYDel.tag
  LoadBtnPictures cmdENTDIC_CURRENCYRef,cmdENTDIC_CURRENCYRef.tag
  LoadBtnPictures cmdENTDIC_CURRENCYPrn,cmdENTDIC_CURRENCYPrn.tag
  LoadBtnPictures cmdENTDIC_CURRENCYFnd,cmdENTDIC_CURRENCYFnd.tag
  item.ENTDIC_CURRENCY.PrepareGrid gridENTDIC_CURRENCY
  LoadGridLayout gridENTDIC_CURRENCY
  Set fndENTDIC_CURRENCY = Nothing
  On Error Resume Next
  Set fndENTDIC_CURRENCY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_CURRENCY.Init gridENTDIC_CURRENCY
  LoadBtnPictures cmdENTDIC_CURCOURCEAdd,cmdENTDIC_CURCOURCEAdd.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEEdit,cmdENTDIC_CURCOURCEEdit.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEDel,cmdENTDIC_CURCOURCEDel.tag
  LoadBtnPictures cmdENTDIC_CURCOURCERef,cmdENTDIC_CURCOURCERef.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEPrn,cmdENTDIC_CURCOURCEPrn.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEFnd,cmdENTDIC_CURCOURCEFnd.Tag
  gridENTDIC_CURCOURCE.Columns.Clear
  gridENTDIC_CURCOURCE.ItemCount=0
  cmdENTDIC_CURCOURCERef_Click
end sub
private sub OnTabClick()

pnlENTDIC_CURRENCY.RestorePosition
  gridENTDIC_CURRENCY_RowColChange gridENTDIC_CURRENCY.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_CURRENCY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_CURRENCY = nothing
  set fndENTDIC_CURCOURCE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_DOST_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_DOST" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_DOST"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_DOST" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_DOST"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_DOSTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_DOSTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_DOSTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_DOSTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_DOST" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип доставки"/><Properties Name="Name" PropValue="mnuPopupENTDIC_DOST"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_DOSTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_DOSTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTOpen"/></ControlData><ControlData Name="mnuENTDIC_DOSTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTRef"/></ControlData><ControlData Name="mnuENTDIC_DOSTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTPrn"/></ControlData><ControlData Name="mnuENTDIC_DOSTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_DOST" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_DOST"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_DOST as object
private menuActionENTDIC_DOST as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_DOSTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_DOST,&quot;gridENTDIC_DOST&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_DOSTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_DOST,&quot;Тип доставки&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_DOSTRef_Click()
  on error resume next
  item.ENTDIC_DOST.Refresh
  gridENTDIC_DOST.itemCount = item.ENTDIC_DOST.count
  gridENTDIC_DOST.Refetch
  gridENTDIC_DOST.Refresh
End Sub
Private Sub cmdENTDIC_DOSTAcc_Click()
On Error Resume Next
If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
If gridENTDIC_DOST.Row &gt; 0 Then
 If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_DOSTEdit_Click()
  on error resume next
If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
If gridENTDIC_DOST.Row &gt; 0 then
 If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_DOST_main.Item = u
    again: frmENTDIC_DOST_main.NotFirstTime = False
    frmENTDIC_DOST_main.OnInit
    frmENTDIC_DOST_main.Show vbModal
    If frmENTDIC_DOST_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_DOST.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_DOSTDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_DOSTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_DOST.Add()
   call GetNumValue(u, &quot;Code&quot;, &quot;{2ED56791-28A1-4C4B-B140-5303F1DCA3F9}&quot;,Now,&quot;ENTDIC_DOST&quot;, &quot;&quot;) 

      Set frmENTDIC_DOST_main.Item = u
      again: frmENTDIC_DOST_main.NotFirstTime = False
      frmENTDIC_DOST_main.OnInit
      frmENTDIC_DOST_main.Show vbModal
      If frmENTDIC_DOST_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_DOST.ItemCount = Item.ENTDIC_DOST.Count
        gridENTDIC_DOST.Refresh
        gridENTDIC_DOST.RefreshGroups
        gridENTDIC_DOST.Refreshsort
        gridENTDIC_DOST.MoveToBookmark u.ID &amp; &quot;ENTDIC_DOST&quot;
      Else
        Item.ENTDIC_DOST.Delete u.ID
        Item.ENTDIC_DOST.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_DOSTFnd_Click()
  on error resume next
  fndENTDIC_DOST.ShowForm
End Sub
Private Sub cmdENTDIC_DOSTRun_Click()
  on error resume next
  gridENTDIC_DOST_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_DOST_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_DOST.LoadRow gridENTDIC_DOST, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_DOST_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_DOST_DblClick()
  cmdENTDIC_DOSTEdit_Click
End Sub
Private Sub gridENTDIC_DOST_KeyPress(KeyAscii As Integer)
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_DOST.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_DOST_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_DOST.Row And LastRow &gt; 0 Then
  gridENTDIC_DOST.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_DOST.GetRowData(gridENTDIC_DOST.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_DOSTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_DOST.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_DOST.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_DOST_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_DOSTCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_DOST_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_DOST
End If
end sub
private sub mnuENTDIC_DOSTAdd_click()
   menuActionENTDIC_DOST =&quot;ADD&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTEdit_click()
   menuActionENTDIC_DOST =&quot;EDIT&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTDelete_click()
   menuActionENTDIC_DOST =&quot;DEL&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTOpen_click()
   menuActionENTDIC_DOST =&quot;RUN&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTRef_click()
   menuActionENTDIC_DOST =&quot;REF&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
  Private Sub mnuENTDIC_DOSTCOPY_Click()
    On Error Resume Next
    If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
    If gridENTDIC_DOST.Row &gt; 0 Then
     If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_DOSTCUT_Click()
    On Error Resume Next
    If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
    If gridENTDIC_DOST.Row &gt; 0 Then
     If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_DOST.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_DOSTCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  If gridENTDIC_DOST.Row &gt; 0 Then
   If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_DOST.ItemCount = u.parent.Count
      gridENTDIC_DOST.RefreshRowIndex gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_DOSTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_DOSTPrn_click()
   menuActionENTDIC_DOST =&quot;PRN&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTCfg_click()
   menuActionENTDIC_DOST =&quot;CFG&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTFind_click()
   menuActionENTDIC_DOST =&quot;FND&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTAcc_click()
   menuActionENTDIC_DOST =&quot;ACC&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub menuTimerENTDIC_DOST_timer()
   menuTimerENTDIC_DOST.enabled = false
   if menuActionENTDIC_DOST =&quot;ADD&quot; then cmdENTDIC_DOSTADD_CLick
   if menuActionENTDIC_DOST =&quot;EDIT&quot; then cmdENTDIC_DOSTEDIT_CLick
   if menuActionENTDIC_DOST =&quot;DEL&quot; then cmdENTDIC_DOSTDEL_CLick
   if menuActionENTDIC_DOST =&quot;RUN&quot; then cmdENTDIC_DOSTRUN_CLick
   if menuActionENTDIC_DOST =&quot;REF&quot; then cmdENTDIC_DOSTREF_CLick
   if menuActionENTDIC_DOST =&quot;PRN&quot; then cmdENTDIC_DOSTPRN_CLick
   if menuActionENTDIC_DOST =&quot;CFG&quot; then cmdENTDIC_DOSTCFG_CLick
   if menuActionENTDIC_DOST =&quot;FND&quot; then cmdENTDIC_DOSTFND_CLick
   if menuActionENTDIC_DOST =&quot;ACC&quot; then cmdENTDIC_DOSTACC_CLick
   menuActionENTDIC_DOST =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_DOSTAdd,cmdENTDIC_DOSTAdd.tag
  LoadBtnPictures cmdENTDIC_DOSTEdit,cmdENTDIC_DOSTEdit.tag
  LoadBtnPictures cmdENTDIC_DOSTDel,cmdENTDIC_DOSTDel.tag
  LoadBtnPictures cmdENTDIC_DOSTRef,cmdENTDIC_DOSTRef.tag
  LoadBtnPictures cmdENTDIC_DOSTPrn,cmdENTDIC_DOSTPrn.tag
  LoadBtnPictures cmdENTDIC_DOSTFnd,cmdENTDIC_DOSTFnd.tag
  item.ENTDIC_DOST.PrepareGrid gridENTDIC_DOST
  LoadGridLayout gridENTDIC_DOST
  Set fndENTDIC_DOST = Nothing
  On Error Resume Next
  Set fndENTDIC_DOST = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_DOST.Init gridENTDIC_DOST
end sub
private sub OnTabClick()

      gridENTDIC_DOST.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_DOST.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_DOST.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_DOST = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_REGION_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_REGION" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_REGION"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_REGION" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_REGION"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_REGIONAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_REGIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_REGIONPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_REGIONFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_REGION" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Название областей"/><Properties Name="Name" PropValue="mnuPopupENTDIC_REGION"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_REGIONAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_REGIONOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONOpen"/></ControlData><ControlData Name="mnuENTDIC_REGIONRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONRef"/></ControlData><ControlData Name="mnuENTDIC_REGIONPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONPrn"/></ControlData><ControlData Name="mnuENTDIC_REGIONCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_REGION" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_REGION"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_REGION as object
private menuActionENTDIC_REGION as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_REGIONCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_REGION,&quot;gridENTDIC_REGION&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_REGIONPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_REGION,&quot;Название областей&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_REGIONRef_Click()
  on error resume next
  item.ENTDIC_REGION.Refresh
  gridENTDIC_REGION.itemCount = item.ENTDIC_REGION.count
  gridENTDIC_REGION.Refetch
  gridENTDIC_REGION.Refresh
End Sub
Private Sub cmdENTDIC_REGIONAcc_Click()
On Error Resume Next
If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
If gridENTDIC_REGION.Row &gt; 0 Then
 If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_REGIONEdit_Click()
  on error resume next
If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
If gridENTDIC_REGION.Row &gt; 0 then
 If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_REGION_main.Item = u
    again: frmENTDIC_REGION_main.NotFirstTime = False
    frmENTDIC_REGION_main.OnInit
    frmENTDIC_REGION_main.Show vbModal
    If frmENTDIC_REGION_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_REGION.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_REGIONDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_REGIONAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_REGION.Add()

      Set frmENTDIC_REGION_main.Item = u
      again: frmENTDIC_REGION_main.NotFirstTime = False
      frmENTDIC_REGION_main.OnInit
      frmENTDIC_REGION_main.Show vbModal
      If frmENTDIC_REGION_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_REGION.ItemCount = Item.ENTDIC_REGION.Count
        gridENTDIC_REGION.Refresh
        gridENTDIC_REGION.RefreshGroups
        gridENTDIC_REGION.Refreshsort
        gridENTDIC_REGION.MoveToBookmark u.ID &amp; &quot;ENTDIC_REGION&quot;
      Else
        Item.ENTDIC_REGION.Delete u.ID
        Item.ENTDIC_REGION.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_REGIONFnd_Click()
  on error resume next
  fndENTDIC_REGION.ShowForm
End Sub
Private Sub cmdENTDIC_REGIONRun_Click()
  on error resume next
  gridENTDIC_REGION_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_REGION_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_REGION.LoadRow gridENTDIC_REGION, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_REGION_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_REGION_DblClick()
  cmdENTDIC_REGIONEdit_Click
End Sub
Private Sub gridENTDIC_REGION_KeyPress(KeyAscii As Integer)
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_REGION.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_REGION_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_REGION.Row And LastRow &gt; 0 Then
  gridENTDIC_REGION.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_REGION.GetRowData(gridENTDIC_REGION.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_REGIONPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_REGION.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_REGION.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_REGION_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_REGIONCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_REGION_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_REGION
End If
end sub
private sub mnuENTDIC_REGIONAdd_click()
   menuActionENTDIC_REGION =&quot;ADD&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONEdit_click()
   menuActionENTDIC_REGION =&quot;EDIT&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONDelete_click()
   menuActionENTDIC_REGION =&quot;DEL&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONOpen_click()
   menuActionENTDIC_REGION =&quot;RUN&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONRef_click()
   menuActionENTDIC_REGION =&quot;REF&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
  Private Sub mnuENTDIC_REGIONCOPY_Click()
    On Error Resume Next
    If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
    If gridENTDIC_REGION.Row &gt; 0 Then
     If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_REGIONCUT_Click()
    On Error Resume Next
    If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
    If gridENTDIC_REGION.Row &gt; 0 Then
     If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_REGION.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_REGIONCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  If gridENTDIC_REGION.Row &gt; 0 Then
   If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_REGION.ItemCount = u.parent.Count
      gridENTDIC_REGION.RefreshRowIndex gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_REGIONCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_REGIONPrn_click()
   menuActionENTDIC_REGION =&quot;PRN&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONCfg_click()
   menuActionENTDIC_REGION =&quot;CFG&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONFind_click()
   menuActionENTDIC_REGION =&quot;FND&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONAcc_click()
   menuActionENTDIC_REGION =&quot;ACC&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub menuTimerENTDIC_REGION_timer()
   menuTimerENTDIC_REGION.enabled = false
   if menuActionENTDIC_REGION =&quot;ADD&quot; then cmdENTDIC_REGIONADD_CLick
   if menuActionENTDIC_REGION =&quot;EDIT&quot; then cmdENTDIC_REGIONEDIT_CLick
   if menuActionENTDIC_REGION =&quot;DEL&quot; then cmdENTDIC_REGIONDEL_CLick
   if menuActionENTDIC_REGION =&quot;RUN&quot; then cmdENTDIC_REGIONRUN_CLick
   if menuActionENTDIC_REGION =&quot;REF&quot; then cmdENTDIC_REGIONREF_CLick
   if menuActionENTDIC_REGION =&quot;PRN&quot; then cmdENTDIC_REGIONPRN_CLick
   if menuActionENTDIC_REGION =&quot;CFG&quot; then cmdENTDIC_REGIONCFG_CLick
   if menuActionENTDIC_REGION =&quot;FND&quot; then cmdENTDIC_REGIONFND_CLick
   if menuActionENTDIC_REGION =&quot;ACC&quot; then cmdENTDIC_REGIONACC_CLick
   menuActionENTDIC_REGION =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_REGIONAdd,cmdENTDIC_REGIONAdd.tag
  LoadBtnPictures cmdENTDIC_REGIONEdit,cmdENTDIC_REGIONEdit.tag
  LoadBtnPictures cmdENTDIC_REGIONDel,cmdENTDIC_REGIONDel.tag
  LoadBtnPictures cmdENTDIC_REGIONRef,cmdENTDIC_REGIONRef.tag
  LoadBtnPictures cmdENTDIC_REGIONPrn,cmdENTDIC_REGIONPrn.tag
  LoadBtnPictures cmdENTDIC_REGIONFnd,cmdENTDIC_REGIONFnd.tag
  item.ENTDIC_REGION.PrepareGrid gridENTDIC_REGION
  LoadGridLayout gridENTDIC_REGION
  Set fndENTDIC_REGION = Nothing
  On Error Resume Next
  Set fndENTDIC_REGION = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_REGION.Init gridENTDIC_REGION
end sub
private sub OnTabClick()

      gridENTDIC_REGION.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_REGION.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_REGION.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_REGION = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_TOWN_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_TOWN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_TOWN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_TOWN" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_TOWN"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_TOWNAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_TOWNRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_TOWNPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_TOWNFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_TOWN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Города"/><Properties Name="Name" PropValue="mnuPopupENTDIC_TOWN"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_TOWNAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_TOWNOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNOpen"/></ControlData><ControlData Name="mnuENTDIC_TOWNRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNRef"/></ControlData><ControlData Name="mnuENTDIC_TOWNPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNPrn"/></ControlData><ControlData Name="mnuENTDIC_TOWNCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_TOWN" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_TOWN"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_TOWN as object
private menuActionENTDIC_TOWN as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_TOWNCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_TOWN,&quot;gridENTDIC_TOWN&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TOWNPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_TOWN,&quot;Города&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TOWNRef_Click()
  on error resume next
  item.ENTDIC_TOWN.Refresh
  gridENTDIC_TOWN.itemCount = item.ENTDIC_TOWN.count
  gridENTDIC_TOWN.Refetch
  gridENTDIC_TOWN.Refresh
End Sub
Private Sub cmdENTDIC_TOWNAcc_Click()
On Error Resume Next
If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
If gridENTDIC_TOWN.Row &gt; 0 Then
 If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_TOWNEdit_Click()
  on error resume next
If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
If gridENTDIC_TOWN.Row &gt; 0 then
 If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_TOWN_main.Item = u
    again: frmENTDIC_TOWN_main.NotFirstTime = False
    frmENTDIC_TOWN_main.OnInit
    frmENTDIC_TOWN_main.Show vbModal
    If frmENTDIC_TOWN_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_TOWN.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_TOWNDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_TOWNAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_TOWN.Add()

      Set frmENTDIC_TOWN_main.Item = u
      again: frmENTDIC_TOWN_main.NotFirstTime = False
      frmENTDIC_TOWN_main.OnInit
      frmENTDIC_TOWN_main.Show vbModal
      If frmENTDIC_TOWN_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_TOWN.ItemCount = Item.ENTDIC_TOWN.Count
        gridENTDIC_TOWN.Refresh
        gridENTDIC_TOWN.RefreshGroups
        gridENTDIC_TOWN.Refreshsort
        gridENTDIC_TOWN.MoveToBookmark u.ID &amp; &quot;ENTDIC_TOWN&quot;
      Else
        Item.ENTDIC_TOWN.Delete u.ID
        Item.ENTDIC_TOWN.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_TOWNFnd_Click()
  on error resume next
  fndENTDIC_TOWN.ShowForm
End Sub
Private Sub cmdENTDIC_TOWNRun_Click()
  on error resume next
  gridENTDIC_TOWN_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_TOWN_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_TOWN.LoadRow gridENTDIC_TOWN, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_TOWN_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_TOWN_DblClick()
  cmdENTDIC_TOWNEdit_Click
End Sub
Private Sub gridENTDIC_TOWN_KeyPress(KeyAscii As Integer)
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_TOWN.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_TOWN_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_TOWN.Row And LastRow &gt; 0 Then
  gridENTDIC_TOWN.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_TOWN.GetRowData(gridENTDIC_TOWN.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_TOWNPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_TOWN.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_TOWN.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_TOWN_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_TOWNCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_TOWN_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_TOWN
End If
end sub
private sub mnuENTDIC_TOWNAdd_click()
   menuActionENTDIC_TOWN =&quot;ADD&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNEdit_click()
   menuActionENTDIC_TOWN =&quot;EDIT&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNDelete_click()
   menuActionENTDIC_TOWN =&quot;DEL&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNOpen_click()
   menuActionENTDIC_TOWN =&quot;RUN&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNRef_click()
   menuActionENTDIC_TOWN =&quot;REF&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
  Private Sub mnuENTDIC_TOWNCOPY_Click()
    On Error Resume Next
    If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TOWN.Row &gt; 0 Then
     If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_TOWNCUT_Click()
    On Error Resume Next
    If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TOWN.Row &gt; 0 Then
     If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_TOWN.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_TOWNCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  If gridENTDIC_TOWN.Row &gt; 0 Then
   If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_TOWN.ItemCount = u.parent.Count
      gridENTDIC_TOWN.RefreshRowIndex gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_TOWNCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_TOWNPrn_click()
   menuActionENTDIC_TOWN =&quot;PRN&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNCfg_click()
   menuActionENTDIC_TOWN =&quot;CFG&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNFind_click()
   menuActionENTDIC_TOWN =&quot;FND&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNAcc_click()
   menuActionENTDIC_TOWN =&quot;ACC&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub menuTimerENTDIC_TOWN_timer()
   menuTimerENTDIC_TOWN.enabled = false
   if menuActionENTDIC_TOWN =&quot;ADD&quot; then cmdENTDIC_TOWNADD_CLick
   if menuActionENTDIC_TOWN =&quot;EDIT&quot; then cmdENTDIC_TOWNEDIT_CLick
   if menuActionENTDIC_TOWN =&quot;DEL&quot; then cmdENTDIC_TOWNDEL_CLick
   if menuActionENTDIC_TOWN =&quot;RUN&quot; then cmdENTDIC_TOWNRUN_CLick
   if menuActionENTDIC_TOWN =&quot;REF&quot; then cmdENTDIC_TOWNREF_CLick
   if menuActionENTDIC_TOWN =&quot;PRN&quot; then cmdENTDIC_TOWNPRN_CLick
   if menuActionENTDIC_TOWN =&quot;CFG&quot; then cmdENTDIC_TOWNCFG_CLick
   if menuActionENTDIC_TOWN =&quot;FND&quot; then cmdENTDIC_TOWNFND_CLick
   if menuActionENTDIC_TOWN =&quot;ACC&quot; then cmdENTDIC_TOWNACC_CLick
   menuActionENTDIC_TOWN =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_TOWNAdd,cmdENTDIC_TOWNAdd.tag
  LoadBtnPictures cmdENTDIC_TOWNEdit,cmdENTDIC_TOWNEdit.tag
  LoadBtnPictures cmdENTDIC_TOWNDel,cmdENTDIC_TOWNDel.tag
  LoadBtnPictures cmdENTDIC_TOWNRef,cmdENTDIC_TOWNRef.tag
  LoadBtnPictures cmdENTDIC_TOWNPrn,cmdENTDIC_TOWNPrn.tag
  LoadBtnPictures cmdENTDIC_TOWNFnd,cmdENTDIC_TOWNFnd.tag
  item.ENTDIC_TOWN.PrepareGrid gridENTDIC_TOWN
  LoadGridLayout gridENTDIC_TOWN
  Set fndENTDIC_TOWN = Nothing
  On Error Resume Next
  Set fndENTDIC_TOWN = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_TOWN.Init gridENTDIC_TOWN
end sub
private sub OnTabClick()

      gridENTDIC_TOWN.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_TOWN.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_TOWN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_TOWN = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_COUNTRY_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страны"/><Properties Name="Name" PropValue="mnuPopupENTDIC_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYOpen"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYRef"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYPrn"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_COUNTRY as object
private menuActionENTDIC_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_COUNTRY,&quot;gridENTDIC_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_COUNTRY,&quot;Страны&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_COUNTRYRef_Click()
  on error resume next
  item.ENTDIC_COUNTRY.Refresh
  gridENTDIC_COUNTRY.itemCount = item.ENTDIC_COUNTRY.count
  gridENTDIC_COUNTRY.Refetch
  gridENTDIC_COUNTRY.Refresh
End Sub
Private Sub cmdENTDIC_COUNTRYAcc_Click()
On Error Resume Next
If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
If gridENTDIC_COUNTRY.Row &gt; 0 Then
 If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_COUNTRYEdit_Click()
  on error resume next
If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
If gridENTDIC_COUNTRY.Row &gt; 0 then
 If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_COUNTRY_main.Item = u
    again: frmENTDIC_COUNTRY_main.NotFirstTime = False
    frmENTDIC_COUNTRY_main.OnInit
    frmENTDIC_COUNTRY_main.Show vbModal
    If frmENTDIC_COUNTRY_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_COUNTRYDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_COUNTRY.Add()

      Set frmENTDIC_COUNTRY_main.Item = u
      again: frmENTDIC_COUNTRY_main.NotFirstTime = False
      frmENTDIC_COUNTRY_main.OnInit
      frmENTDIC_COUNTRY_main.Show vbModal
      If frmENTDIC_COUNTRY_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_COUNTRY.ItemCount = Item.ENTDIC_COUNTRY.Count
        gridENTDIC_COUNTRY.Refresh
        gridENTDIC_COUNTRY.RefreshGroups
        gridENTDIC_COUNTRY.Refreshsort
        gridENTDIC_COUNTRY.MoveToBookmark u.ID &amp; &quot;ENTDIC_COUNTRY&quot;
      Else
        Item.ENTDIC_COUNTRY.Delete u.ID
        Item.ENTDIC_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_COUNTRYFnd_Click()
  on error resume next
  fndENTDIC_COUNTRY.ShowForm
End Sub
Private Sub cmdENTDIC_COUNTRYRun_Click()
  on error resume next
  gridENTDIC_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_COUNTRY.LoadRow gridENTDIC_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_COUNTRY_DblClick()
  cmdENTDIC_COUNTRYEdit_Click
End Sub
Private Sub gridENTDIC_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_COUNTRY.Row And LastRow &gt; 0 Then
  gridENTDIC_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_COUNTRY.GetRowData(gridENTDIC_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_COUNTRY
End If
end sub
private sub mnuENTDIC_COUNTRYAdd_click()
   menuActionENTDIC_COUNTRY =&quot;ADD&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYEdit_click()
   menuActionENTDIC_COUNTRY =&quot;EDIT&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYDelete_click()
   menuActionENTDIC_COUNTRY =&quot;DEL&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYOpen_click()
   menuActionENTDIC_COUNTRY =&quot;RUN&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYRef_click()
   menuActionENTDIC_COUNTRY =&quot;REF&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
  Private Sub mnuENTDIC_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_COUNTRY.Row &gt; 0 Then
     If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_COUNTRYCUT_Click()
    On Error Resume Next
    If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_COUNTRY.Row &gt; 0 Then
     If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridENTDIC_COUNTRY.Row &gt; 0 Then
   If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_COUNTRY.ItemCount = u.parent.Count
      gridENTDIC_COUNTRY.RefreshRowIndex gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_COUNTRYPrn_click()
   menuActionENTDIC_COUNTRY =&quot;PRN&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYCfg_click()
   menuActionENTDIC_COUNTRY =&quot;CFG&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYFind_click()
   menuActionENTDIC_COUNTRY =&quot;FND&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYAcc_click()
   menuActionENTDIC_COUNTRY =&quot;ACC&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub menuTimerENTDIC_COUNTRY_timer()
   menuTimerENTDIC_COUNTRY.enabled = false
   if menuActionENTDIC_COUNTRY =&quot;ADD&quot; then cmdENTDIC_COUNTRYADD_CLick
   if menuActionENTDIC_COUNTRY =&quot;EDIT&quot; then cmdENTDIC_COUNTRYEDIT_CLick
   if menuActionENTDIC_COUNTRY =&quot;DEL&quot; then cmdENTDIC_COUNTRYDEL_CLick
   if menuActionENTDIC_COUNTRY =&quot;RUN&quot; then cmdENTDIC_COUNTRYRUN_CLick
   if menuActionENTDIC_COUNTRY =&quot;REF&quot; then cmdENTDIC_COUNTRYREF_CLick
   if menuActionENTDIC_COUNTRY =&quot;PRN&quot; then cmdENTDIC_COUNTRYPRN_CLick
   if menuActionENTDIC_COUNTRY =&quot;CFG&quot; then cmdENTDIC_COUNTRYCFG_CLick
   if menuActionENTDIC_COUNTRY =&quot;FND&quot; then cmdENTDIC_COUNTRYFND_CLick
   if menuActionENTDIC_COUNTRY =&quot;ACC&quot; then cmdENTDIC_COUNTRYACC_CLick
   menuActionENTDIC_COUNTRY =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_COUNTRYAdd,cmdENTDIC_COUNTRYAdd.tag
  LoadBtnPictures cmdENTDIC_COUNTRYEdit,cmdENTDIC_COUNTRYEdit.tag
  LoadBtnPictures cmdENTDIC_COUNTRYDel,cmdENTDIC_COUNTRYDel.tag
  LoadBtnPictures cmdENTDIC_COUNTRYRef,cmdENTDIC_COUNTRYRef.tag
  LoadBtnPictures cmdENTDIC_COUNTRYPrn,cmdENTDIC_COUNTRYPrn.tag
  LoadBtnPictures cmdENTDIC_COUNTRYFnd,cmdENTDIC_COUNTRYFnd.tag
  item.ENTDIC_COUNTRY.PrepareGrid gridENTDIC_COUNTRY
  LoadGridLayout gridENTDIC_COUNTRY
  Set fndENTDIC_COUNTRY = Nothing
  On Error Resume Next
  Set fndENTDIC_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_COUNTRY.Init gridENTDIC_COUNTRY
end sub
private sub OnTabClick()

      gridENTDIC_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_TransportType_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_TransportType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_TransportType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_TransportType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_TransportType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_TransportTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_TransportType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип транспорта"/><Properties Name="Name" PropValue="mnuPopupENTDIC_TransportType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_TransportTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeOpen"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeRef"/></ControlData><ControlData Name="mnuENTDIC_TransportTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypePrn"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_TransportType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_TransportType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_TransportType as object
private menuActionENTDIC_TransportType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_TransportTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_TransportType,&quot;gridENTDIC_TransportType&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TransportTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_TransportType,&quot;Тип транспорта&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TransportTypeRef_Click()
  on error resume next
  item.ENTDIC_TransportType.Refresh
  gridENTDIC_TransportType.itemCount = item.ENTDIC_TransportType.count
  gridENTDIC_TransportType.Refetch
  gridENTDIC_TransportType.Refresh
End Sub
Private Sub cmdENTDIC_TransportTypeAcc_Click()
On Error Resume Next
If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
If gridENTDIC_TransportType.Row &gt; 0 Then
 If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_TransportTypeEdit_Click()
  on error resume next
If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
If gridENTDIC_TransportType.Row &gt; 0 then
 If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_TransportType_main.Item = u
    again: frmENTDIC_TransportType_main.NotFirstTime = False
    frmENTDIC_TransportType_main.OnInit
    frmENTDIC_TransportType_main.Show vbModal
    If frmENTDIC_TransportType_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_TransportType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_TransportTypeDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_TransportTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_TransportType.Add()

      Set frmENTDIC_TransportType_main.Item = u
      again: frmENTDIC_TransportType_main.NotFirstTime = False
      frmENTDIC_TransportType_main.OnInit
      frmENTDIC_TransportType_main.Show vbModal
      If frmENTDIC_TransportType_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_TransportType.ItemCount = Item.ENTDIC_TransportType.Count
        gridENTDIC_TransportType.Refresh
        gridENTDIC_TransportType.RefreshGroups
        gridENTDIC_TransportType.Refreshsort
        gridENTDIC_TransportType.MoveToBookmark u.ID &amp; &quot;ENTDIC_TransportType&quot;
      Else
        Item.ENTDIC_TransportType.Delete u.ID
        Item.ENTDIC_TransportType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_TransportTypeFnd_Click()
  on error resume next
  fndENTDIC_TransportType.ShowForm
End Sub
Private Sub cmdENTDIC_TransportTypeRun_Click()
  on error resume next
  gridENTDIC_TransportType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_TransportType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_TransportType.LoadRow gridENTDIC_TransportType, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_TransportType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_TransportType_DblClick()
  cmdENTDIC_TransportTypeEdit_Click
End Sub
Private Sub gridENTDIC_TransportType_KeyPress(KeyAscii As Integer)
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_TransportType.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_TransportType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_TransportType.Row And LastRow &gt; 0 Then
  gridENTDIC_TransportType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_TransportType.GetRowData(gridENTDIC_TransportType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_TransportTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_TransportType.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_TransportType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_TransportType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_TransportTypeCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_TransportType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_TransportType
End If
end sub
private sub mnuENTDIC_TransportTypeAdd_click()
   menuActionENTDIC_TransportType =&quot;ADD&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeEdit_click()
   menuActionENTDIC_TransportType =&quot;EDIT&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeDelete_click()
   menuActionENTDIC_TransportType =&quot;DEL&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeOpen_click()
   menuActionENTDIC_TransportType =&quot;RUN&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeRef_click()
   menuActionENTDIC_TransportType =&quot;REF&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
  Private Sub mnuENTDIC_TransportTypeCOPY_Click()
    On Error Resume Next
    If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TransportType.Row &gt; 0 Then
     If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_TransportTypeCUT_Click()
    On Error Resume Next
    If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TransportType.Row &gt; 0 Then
     If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_TransportType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_TransportTypeCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  If gridENTDIC_TransportType.Row &gt; 0 Then
   If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_TransportType.ItemCount = u.parent.Count
      gridENTDIC_TransportType.RefreshRowIndex gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_TransportTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_TransportTypePrn_click()
   menuActionENTDIC_TransportType =&quot;PRN&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeCfg_click()
   menuActionENTDIC_TransportType =&quot;CFG&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeFind_click()
   menuActionENTDIC_TransportType =&quot;FND&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeAcc_click()
   menuActionENTDIC_TransportType =&quot;ACC&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub menuTimerENTDIC_TransportType_timer()
   menuTimerENTDIC_TransportType.enabled = false
   if menuActionENTDIC_TransportType =&quot;ADD&quot; then cmdENTDIC_TransportTypeADD_CLick
   if menuActionENTDIC_TransportType =&quot;EDIT&quot; then cmdENTDIC_TransportTypeEDIT_CLick
   if menuActionENTDIC_TransportType =&quot;DEL&quot; then cmdENTDIC_TransportTypeDEL_CLick
   if menuActionENTDIC_TransportType =&quot;RUN&quot; then cmdENTDIC_TransportTypeRUN_CLick
   if menuActionENTDIC_TransportType =&quot;REF&quot; then cmdENTDIC_TransportTypeREF_CLick
   if menuActionENTDIC_TransportType =&quot;PRN&quot; then cmdENTDIC_TransportTypePRN_CLick
   if menuActionENTDIC_TransportType =&quot;CFG&quot; then cmdENTDIC_TransportTypeCFG_CLick
   if menuActionENTDIC_TransportType =&quot;FND&quot; then cmdENTDIC_TransportTypeFND_CLick
   if menuActionENTDIC_TransportType =&quot;ACC&quot; then cmdENTDIC_TransportTypeACC_CLick
   menuActionENTDIC_TransportType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_TransportTypeAdd,cmdENTDIC_TransportTypeAdd.tag
  LoadBtnPictures cmdENTDIC_TransportTypeEdit,cmdENTDIC_TransportTypeEdit.tag
  LoadBtnPictures cmdENTDIC_TransportTypeDel,cmdENTDIC_TransportTypeDel.tag
  LoadBtnPictures cmdENTDIC_TransportTypeRef,cmdENTDIC_TransportTypeRef.tag
  LoadBtnPictures cmdENTDIC_TransportTypePrn,cmdENTDIC_TransportTypePrn.tag
  LoadBtnPictures cmdENTDIC_TransportTypeFnd,cmdENTDIC_TransportTypeFnd.tag
  item.ENTDIC_TransportType.PrepareGrid gridENTDIC_TransportType
  LoadGridLayout gridENTDIC_TransportType
  Set fndENTDIC_TransportType = Nothing
  On Error Resume Next
  Set fndENTDIC_TransportType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_TransportType.Init gridENTDIC_TransportType
end sub
private sub OnTabClick()

      gridENTDIC_TransportType.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_TransportType.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_TransportType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_TransportType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_OPF_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_OPF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_OPF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_OPF" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_OPF"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_OPFAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdENTDIC_OPFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_OPFPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_OPFFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_OPF" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Организационно-правовая форма"/><Properties Name="Name" PropValue="mnuPopupENTDIC_OPF"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_OPFAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_OPFAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_OPFEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuENTDIC_OPFOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_OPFOpen"/></ControlData><ControlData Name="mnuENTDIC_OPFRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFRef"/></ControlData><ControlData Name="mnuENTDIC_OPFPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_OPFPrn"/></ControlData><ControlData Name="mnuENTDIC_OPFCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_OPF" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_OPF"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_OPF as object
private menuActionENTDIC_OPF as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_OPFCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_OPF,&quot;gridENTDIC_OPF&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_OPFPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_OPF,&quot;Организационно-правовая форма&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_OPFRef_Click()
  on error resume next
  item.ENTDIC_OPF.Refresh
  gridENTDIC_OPF.itemCount = item.ENTDIC_OPF.count
  gridENTDIC_OPF.Refetch
  gridENTDIC_OPF.Refresh
End Sub
Private Sub cmdENTDIC_OPFAcc_Click()
On Error Resume Next
If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
If gridENTDIC_OPF.Row &gt; 0 Then
 If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_OPFEdit_Click()
  on error resume next
If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
If gridENTDIC_OPF.Row &gt; 0 then
 If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_OPF_main.Item = u
    again: frmENTDIC_OPF_main.NotFirstTime = False
    frmENTDIC_OPF_main.OnInit
    frmENTDIC_OPF_main.Show vbModal
    If frmENTDIC_OPF_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_OPF.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_OPFDel_Click()
  on error resume next
End Sub
Private Sub cmdENTDIC_OPFAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_OPF.Add()

      Set frmENTDIC_OPF_main.Item = u
      again: frmENTDIC_OPF_main.NotFirstTime = False
      frmENTDIC_OPF_main.OnInit
      frmENTDIC_OPF_main.Show vbModal
      If frmENTDIC_OPF_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_OPF.ItemCount = Item.ENTDIC_OPF.Count
        gridENTDIC_OPF.Refresh
        gridENTDIC_OPF.RefreshGroups
        gridENTDIC_OPF.Refreshsort
        gridENTDIC_OPF.MoveToBookmark u.ID &amp; &quot;ENTDIC_OPF&quot;
      Else
        Item.ENTDIC_OPF.Delete u.ID
        Item.ENTDIC_OPF.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_OPFFnd_Click()
  on error resume next
  fndENTDIC_OPF.ShowForm
End Sub
Private Sub cmdENTDIC_OPFRun_Click()
  on error resume next
  gridENTDIC_OPF_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_OPF_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_OPF.LoadRow gridENTDIC_OPF, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_OPF_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridENTDIC_OPF_DblClick()
  cmdENTDIC_OPFEdit_Click
End Sub
Private Sub gridENTDIC_OPF_KeyPress(KeyAscii As Integer)
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_OPF.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_OPF_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_OPF.Row And LastRow &gt; 0 Then
  gridENTDIC_OPF.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_OPF.GetRowData(gridENTDIC_OPF.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_OPFPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_OPF.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_OPF.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_OPF_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_OPFCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_OPF_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_OPF
End If
end sub
private sub mnuENTDIC_OPFAdd_click()
   menuActionENTDIC_OPF =&quot;ADD&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFEdit_click()
   menuActionENTDIC_OPF =&quot;EDIT&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFDelete_click()
   menuActionENTDIC_OPF =&quot;DEL&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFOpen_click()
   menuActionENTDIC_OPF =&quot;RUN&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFRef_click()
   menuActionENTDIC_OPF =&quot;REF&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
  Private Sub mnuENTDIC_OPFCOPY_Click()
    On Error Resume Next
    If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
    If gridENTDIC_OPF.Row &gt; 0 Then
     If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_OPFCUT_Click()
    On Error Resume Next
    If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
    If gridENTDIC_OPF.Row &gt; 0 Then
     If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_OPF.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_OPFCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  If gridENTDIC_OPF.Row &gt; 0 Then
   If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_OPF.ItemCount = u.parent.Count
      gridENTDIC_OPF.RefreshRowIndex gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_OPFCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_OPFPrn_click()
   menuActionENTDIC_OPF =&quot;PRN&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFCfg_click()
   menuActionENTDIC_OPF =&quot;CFG&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFFind_click()
   menuActionENTDIC_OPF =&quot;FND&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFAcc_click()
   menuActionENTDIC_OPF =&quot;ACC&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub menuTimerENTDIC_OPF_timer()
   menuTimerENTDIC_OPF.enabled = false
   if menuActionENTDIC_OPF =&quot;ADD&quot; then cmdENTDIC_OPFADD_CLick
   if menuActionENTDIC_OPF =&quot;EDIT&quot; then cmdENTDIC_OPFEDIT_CLick
   if menuActionENTDIC_OPF =&quot;DEL&quot; then cmdENTDIC_OPFDEL_CLick
   if menuActionENTDIC_OPF =&quot;RUN&quot; then cmdENTDIC_OPFRUN_CLick
   if menuActionENTDIC_OPF =&quot;REF&quot; then cmdENTDIC_OPFREF_CLick
   if menuActionENTDIC_OPF =&quot;PRN&quot; then cmdENTDIC_OPFPRN_CLick
   if menuActionENTDIC_OPF =&quot;CFG&quot; then cmdENTDIC_OPFCFG_CLick
   if menuActionENTDIC_OPF =&quot;FND&quot; then cmdENTDIC_OPFFND_CLick
   if menuActionENTDIC_OPF =&quot;ACC&quot; then cmdENTDIC_OPFACC_CLick
   menuActionENTDIC_OPF =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_OPFAdd,cmdENTDIC_OPFAdd.tag
  LoadBtnPictures cmdENTDIC_OPFEdit,cmdENTDIC_OPFEdit.tag
  LoadBtnPictures cmdENTDIC_OPFDel,cmdENTDIC_OPFDel.tag
  LoadBtnPictures cmdENTDIC_OPFRef,cmdENTDIC_OPFRef.tag
  LoadBtnPictures cmdENTDIC_OPFPrn,cmdENTDIC_OPFPrn.tag
  LoadBtnPictures cmdENTDIC_OPFFnd,cmdENTDIC_OPFFnd.tag
  item.ENTDIC_OPF.PrepareGrid gridENTDIC_OPF
  LoadGridLayout gridENTDIC_OPF
  Set fndENTDIC_OPF = Nothing
  On Error Resume Next
  Set fndENTDIC_OPF = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_OPF.Init gridENTDIC_OPF
end sub
private sub OnTabClick()

      gridENTDIC_OPF.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_OPF.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_OPF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_OPF = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_EDIZM" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_EDIZM_main"><Properties Name="Name" PropValue="pnlENTDIC_EDIZM"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_BANK" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_BANK_main"><Properties Name="Name" PropValue="pnlENTDIC_BANK"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_CURRENCY" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_CURRENCY_main"><Properties Name="Name" PropValue="pnlENTDIC_CURRENCY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_DOST" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_DOST_main"><Properties Name="Name" PropValue="pnlENTDIC_DOST"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_REGION" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_REGION_main"><Properties Name="Name" PropValue="pnlENTDIC_REGION"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_TOWN" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_TOWN_main"><Properties Name="Name" PropValue="pnlENTDIC_TOWN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_COUNTRY" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_COUNTRY_main"><Properties Name="Name" PropValue="pnlENTDIC_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_TransportType" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_TransportType_main"><Properties Name="Name" PropValue="pnlENTDIC_TransportType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_OPF" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_OPF_main"><Properties Name="Name" PropValue="pnlENTDIC_OPF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: общие классификаторы"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlENTDIC_EDIZM.IsOK
if IsItOk then IsItOk = pnlENTDIC_BANK.IsOK
if IsItOk then IsItOk = pnlENTDIC_CURRENCY.IsOK
if IsItOk then IsItOk = pnlENTDIC_DOST.IsOK
if IsItOk then IsItOk = pnlENTDIC_REGION.IsOK
if IsItOk then IsItOk = pnlENTDIC_TOWN.IsOK
if IsItOk then IsItOk = pnlENTDIC_COUNTRY.IsOK
if IsItOk then IsItOk = pnlENTDIC_TransportType.IsOK
if IsItOk then IsItOk = pnlENTDIC_OPF.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlENTDIC_OPF.Visible = False
  pnlENTDIC_TransportType.Visible = False
  pnlENTDIC_COUNTRY.Visible = False
  pnlENTDIC_TOWN.Visible = False
  pnlENTDIC_REGION.Visible = False
  pnlENTDIC_DOST.Visible = False
  pnlENTDIC_CURRENCY.Visible = False
  pnlENTDIC_BANK.Visible = False
  pnlENTDIC_EDIZM.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ENTDIC_EDIZM&quot;
     With pnlENTDIC_EDIZM
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_EDIZM.OnClick item,parentform
     End With
   Case &quot;ENTDIC_BANK&quot;
     With pnlENTDIC_BANK
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_BANK.OnClick item,parentform
     End With
   Case &quot;ENTDIC_CURRENCY&quot;
     With pnlENTDIC_CURRENCY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_CURRENCY.OnClick item,parentform
     End With
   Case &quot;ENTDIC_DOST&quot;
     With pnlENTDIC_DOST
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_DOST.OnClick item,parentform
     End With
   Case &quot;ENTDIC_REGION&quot;
     With pnlENTDIC_REGION
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_REGION.OnClick item,parentform
     End With
   Case &quot;ENTDIC_TOWN&quot;
     With pnlENTDIC_TOWN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_TOWN.OnClick item,parentform
     End With
   Case &quot;ENTDIC_COUNTRY&quot;
     With pnlENTDIC_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ENTDIC_TransportType&quot;
     With pnlENTDIC_TransportType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_TransportType.OnClick item,parentform
     End With
   Case &quot;ENTDIC_OPF&quot;
     With pnlENTDIC_OPF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_OPF.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Единицы измерения&quot;
ts.Tabs.Item(1).key = &quot;ENTDIC_EDIZM&quot;
pnlENTDIC_EDIZM.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_BANK&quot;, &quot;Банки&quot;)
pnlENTDIC_BANK.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_CURRENCY&quot;, &quot;Валюта&quot;)
pnlENTDIC_CURRENCY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_DOST&quot;, &quot;Тип доставки&quot;)
pnlENTDIC_DOST.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_REGION&quot;, &quot;Название областей&quot;)
pnlENTDIC_REGION.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_TOWN&quot;, &quot;Города&quot;)
pnlENTDIC_TOWN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_COUNTRY&quot;, &quot;Страны&quot;)
pnlENTDIC_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_TransportType&quot;, &quot;Тип транспорта&quot;)
pnlENTDIC_TransportType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_OPF&quot;, &quot;Организационно-правовая форма&quot;)
pnlENTDIC_OPF.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ENTDIC2&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlENTDIC_EDIZM.CloseClass
 pnlENTDIC_BANK.CloseClass
 pnlENTDIC_CURRENCY.CloseClass
 pnlENTDIC_DOST.CloseClass
 pnlENTDIC_REGION.CloseClass
 pnlENTDIC_TOWN.CloseClass
 pnlENTDIC_COUNTRY.CloseClass
 pnlENTDIC_TransportType.CloseClass
 pnlENTDIC_OPF.CloseClass
End Sub
public sub OnSave()
 pnlENTDIC_EDIZM.OnSave
 pnlENTDIC_BANK.OnSave
 pnlENTDIC_CURRENCY.OnSave
 pnlENTDIC_DOST.OnSave
 pnlENTDIC_REGION.OnSave
 pnlENTDIC_TOWN.OnSave
 pnlENTDIC_COUNTRY.OnSave
 pnlENTDIC_TransportType.OnSave
 pnlENTDIC_OPF.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlENTDIC_EDIZM.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_BANK.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_CURRENCY.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_DOST.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_REGION.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_TOWN.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_TransportType.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_OPF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ENTDIC2GUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: общие классификаторы"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_EDIZM_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_EDIZMadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Единицы измерения"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Единицы измерения"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot;
  Open s &amp; Me.name &amp; &quot;{84319DED-10B9-4217-B289-4C2E9BE1A7A1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_BANK_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_BANKadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Банки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Банки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot;
  Open s &amp; Me.name &amp; &quot;{364E2E61-945D-4175-82BD-00A4B1768037}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_1CLINK_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_1CLINKadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Раздел для хранения информации о привязки к 1С на уровне филиала"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Связь с 1С"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot;
  Open s &amp; Me.name &amp; &quot;{40913CFD-EF04-4A36-8930-CC3AC2A111C9}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_CURRENCY_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_CURRENCYadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Валюта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Валюта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot;
  Open s &amp; Me.name &amp; &quot;{1614C40D-44DE-46CE-B6B3-836EBE428047}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_CURCOURCE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_CURCOURCEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Курс валюты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Курс валюты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot;
  Open s &amp; Me.name &amp; &quot;{A507C5F8-AE9A-4BB6-B7ED-D63068F50C24}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_DOST_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_DOSTadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип доставки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип доставки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot;
  Open s &amp; Me.name &amp; &quot;{7E0A2034-05AD-4B18-9260-17F9CFF79EE5}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_REGION_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_REGIONadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Название областей"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Название областей"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot;
  Open s &amp; Me.name &amp; &quot;{B2A4E70C-5DDE-42B8-A137-D89B9D799E66}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_TOWN_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_TOWNadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Города"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Города"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot;
  Open s &amp; Me.name &amp; &quot;{25980CD8-7D2A-44B6-A7AC-1A8083A921F2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_COUNTRY_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_COUNTRYadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Страны"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Страны"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot;
  Open s &amp; Me.name &amp; &quot;{0F0F90D9-31A2-4790-9C3E-BF99958E6F3A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_TransportType_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_TransportTypeadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы транспорта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип транспорта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot;
  Open s &amp; Me.name &amp; &quot;{0085024C-CA1C-4EEE-B0E5-33850D851ACE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmENTDIC_OPF_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="ENTDIC2GUI.ENTDIC_OPFadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Организационно-правовая форма"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Организационно-правовая форма"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot;
  Open s &amp; Me.name &amp; &quot;{FF24E271-58F1-45FA-8E9A-476AED31E9A8}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_EDIZM_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_EDIZM"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_EDIZM" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_EDIZM"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_EDIZMAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_EDIZMPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_EDIZMFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Единицы измерения"/><Properties Name="Name" PropValue="mnuPopupENTDIC_EDIZM"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_EDIZMAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMOpen"/></ControlData><ControlData Name="mnuENTDIC_EDIZMRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMRef"/></ControlData><ControlData Name="mnuENTDIC_EDIZMPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMPrn"/></ControlData><ControlData Name="mnuENTDIC_EDIZMCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_EDIZM"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_EDIZM as object
private menuActionENTDIC_EDIZM as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_EDIZMCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_EDIZM,&quot;gridENTDIC_EDIZM&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_EDIZMPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_EDIZM,&quot;Единицы измерения&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_EDIZMRef_Click()
  on error resume next
  item.ENTDIC_EDIZM.Refresh
  gridENTDIC_EDIZM.itemCount = item.ENTDIC_EDIZM.count
  gridENTDIC_EDIZM.Refetch
  gridENTDIC_EDIZM.Refresh
End Sub
Private Sub cmdENTDIC_EDIZMAcc_Click()
On Error Resume Next
If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
If gridENTDIC_EDIZM.Row &gt; 0 Then
 If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_EDIZMEdit_Click()
  on error resume next
If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
If gridENTDIC_EDIZM.Row &gt; 0 then
 If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_EDIZM_admi.Item = u
    again: frmENTDIC_EDIZM_admi.NotFirstTime = False
    frmENTDIC_EDIZM_admi.OnInit
    frmENTDIC_EDIZM_admi.Show vbModal
    If frmENTDIC_EDIZM_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_EDIZM.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_EDIZMDel_Click()
  on error resume next
  gridENTDIC_EDIZM.Delete
End Sub
Private Sub cmdENTDIC_EDIZMAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_EDIZM.Add()

      Set frmENTDIC_EDIZM_admi.Item = u
      again: frmENTDIC_EDIZM_admi.NotFirstTime = False
      frmENTDIC_EDIZM_admi.OnInit
      frmENTDIC_EDIZM_admi.Show vbModal
      If frmENTDIC_EDIZM_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_EDIZM.ItemCount = Item.ENTDIC_EDIZM.Count
        gridENTDIC_EDIZM.Refresh
        gridENTDIC_EDIZM.RefreshGroups
        gridENTDIC_EDIZM.Refreshsort
        gridENTDIC_EDIZM.MoveToBookmark u.ID &amp; &quot;ENTDIC_EDIZM&quot;
      Else
        Item.ENTDIC_EDIZM.Delete u.ID
        Item.ENTDIC_EDIZM.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_EDIZMFnd_Click()
  on error resume next
  fndENTDIC_EDIZM.ShowForm
End Sub
Private Sub cmdENTDIC_EDIZMRun_Click()
  on error resume next
  gridENTDIC_EDIZM_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_EDIZM_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_EDIZM.LoadRow gridENTDIC_EDIZM, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_EDIZM_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_EDIZM&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_EDIZM_DblClick()
  cmdENTDIC_EDIZMEdit_Click
End Sub
Private Sub gridENTDIC_EDIZM_KeyPress(KeyAscii As Integer)
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_EDIZM.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_EDIZM_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_EDIZM.Row And LastRow &gt; 0 Then
  gridENTDIC_EDIZM.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_EDIZM.GetRowData(gridENTDIC_EDIZM.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_EDIZMPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_EDIZM.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_EDIZM.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_EDIZM_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_EDIZMCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_EDIZM_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_EDIZM
End If
end sub
private sub mnuENTDIC_EDIZMAdd_click()
   menuActionENTDIC_EDIZM =&quot;ADD&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMEdit_click()
   menuActionENTDIC_EDIZM =&quot;EDIT&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMDelete_click()
   menuActionENTDIC_EDIZM =&quot;DEL&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMOpen_click()
   menuActionENTDIC_EDIZM =&quot;RUN&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMRef_click()
   menuActionENTDIC_EDIZM =&quot;REF&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
  Private Sub mnuENTDIC_EDIZMCOPY_Click()
    On Error Resume Next
    If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
    If gridENTDIC_EDIZM.Row &gt; 0 Then
     If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_EDIZMCUT_Click()
    On Error Resume Next
    If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
    If gridENTDIC_EDIZM.Row &gt; 0 Then
     If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_EDIZM.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_EDIZMCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  If gridENTDIC_EDIZM.Row &gt; 0 Then
   If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_EDIZM.ItemCount = u.parent.Count
      gridENTDIC_EDIZM.RefreshRowIndex gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_EDIZMCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_EDIZMPrn_click()
   menuActionENTDIC_EDIZM =&quot;PRN&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMCfg_click()
   menuActionENTDIC_EDIZM =&quot;CFG&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMFind_click()
   menuActionENTDIC_EDIZM =&quot;FND&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMAcc_click()
   menuActionENTDIC_EDIZM =&quot;ACC&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub menuTimerENTDIC_EDIZM_timer()
   menuTimerENTDIC_EDIZM.enabled = false
   if menuActionENTDIC_EDIZM =&quot;ADD&quot; then cmdENTDIC_EDIZMADD_CLick
   if menuActionENTDIC_EDIZM =&quot;EDIT&quot; then cmdENTDIC_EDIZMEDIT_CLick
   if menuActionENTDIC_EDIZM =&quot;DEL&quot; then cmdENTDIC_EDIZMDEL_CLick
   if menuActionENTDIC_EDIZM =&quot;RUN&quot; then cmdENTDIC_EDIZMRUN_CLick
   if menuActionENTDIC_EDIZM =&quot;REF&quot; then cmdENTDIC_EDIZMREF_CLick
   if menuActionENTDIC_EDIZM =&quot;PRN&quot; then cmdENTDIC_EDIZMPRN_CLick
   if menuActionENTDIC_EDIZM =&quot;CFG&quot; then cmdENTDIC_EDIZMCFG_CLick
   if menuActionENTDIC_EDIZM =&quot;FND&quot; then cmdENTDIC_EDIZMFND_CLick
   if menuActionENTDIC_EDIZM =&quot;ACC&quot; then cmdENTDIC_EDIZMACC_CLick
   menuActionENTDIC_EDIZM =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_EDIZMAdd,cmdENTDIC_EDIZMAdd.tag
  LoadBtnPictures cmdENTDIC_EDIZMEdit,cmdENTDIC_EDIZMEdit.tag
  LoadBtnPictures cmdENTDIC_EDIZMDel,cmdENTDIC_EDIZMDel.tag
  LoadBtnPictures cmdENTDIC_EDIZMRef,cmdENTDIC_EDIZMRef.tag
  LoadBtnPictures cmdENTDIC_EDIZMPrn,cmdENTDIC_EDIZMPrn.tag
  LoadBtnPictures cmdENTDIC_EDIZMFnd,cmdENTDIC_EDIZMFnd.tag
  item.ENTDIC_EDIZM.PrepareGrid gridENTDIC_EDIZM
  LoadGridLayout gridENTDIC_EDIZM
  Set fndENTDIC_EDIZM = Nothing
  On Error Resume Next
  Set fndENTDIC_EDIZM = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_EDIZM.Init gridENTDIC_EDIZM
end sub
private sub OnTabClick()

      gridENTDIC_EDIZM.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_EDIZM.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_EDIZM.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_EDIZM = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_BANK_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_BANK" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlENTDIC_BANK"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridENTDIC_BANK" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_BANK"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_BANKAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_BANKPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_BANKFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridENTDIC_1CLINK" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_1CLINK"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_1CLINKAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_1CLINKPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_1CLINKFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_BANK" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Банки"/><Properties Name="Name" PropValue="mnuPopupENTDIC_BANK"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_BANKAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_BANKAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_BANKEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_BANKOpen"/></ControlData><ControlData Name="mnuENTDIC_BANKRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKRef"/></ControlData><ControlData Name="mnuENTDIC_BANKPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_BANKPrn"/></ControlData><ControlData Name="mnuENTDIC_BANKCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_BANK" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_BANK"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupENTDIC_1CLINK" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Связь с 1С"/><Properties Name="Name" PropValue="mnuPopupENTDIC_1CLINK"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_1CLINKAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKOpen"/></ControlData><ControlData Name="mnuENTDIC_1CLINKRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKRef"/></ControlData><ControlData Name="mnuENTDIC_1CLINKPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKPrn"/></ControlData><ControlData Name="mnuENTDIC_1CLINKCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_1CLINK" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_1CLINK"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_BANK as object
private menuActionENTDIC_BANK as string
private fndENTDIC_1CLINK as object
private menuActionENTDIC_1CLINK as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlENTDIC_BANK_PositionChanged()
  pnlENTDIC_BANK.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_BANK_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_BANKCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_BANK_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_BANK
End If
end sub
private sub mnuENTDIC_BANKAdd_click()
   menuActionENTDIC_BANK =&quot;ADD&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKEdit_click()
   menuActionENTDIC_BANK =&quot;EDIT&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKDelete_click()
   menuActionENTDIC_BANK =&quot;DEL&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKOpen_click()
   menuActionENTDIC_BANK =&quot;RUN&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKRef_click()
   menuActionENTDIC_BANK =&quot;REF&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
  Private Sub mnuENTDIC_BANKCOPY_Click()
    On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_BANK.Row &gt; 0 Then
     If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_BANKCUT_Click()
    On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_BANK.Row &gt; 0 Then
     If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_BANK.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_BANKCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  If gridENTDIC_BANK.Row &gt; 0 Then
   If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_BANK.ItemCount = u.parent.Count
      gridENTDIC_BANK.RefreshRowIndex gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_BANKCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_BANKPrn_click()
   menuActionENTDIC_BANK =&quot;PRN&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKCfg_click()
   menuActionENTDIC_BANK =&quot;CFG&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKFind_click()
   menuActionENTDIC_BANK =&quot;FND&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKAcc_click()
   menuActionENTDIC_BANK =&quot;ACC&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub menuTimerENTDIC_BANK_timer()
   menuTimerENTDIC_BANK.enabled = false
   if menuActionENTDIC_BANK =&quot;ADD&quot; then cmdENTDIC_BANKADD_CLick
   if menuActionENTDIC_BANK =&quot;EDIT&quot; then cmdENTDIC_BANKEDIT_CLick
   if menuActionENTDIC_BANK =&quot;DEL&quot; then cmdENTDIC_BANKDEL_CLick
   if menuActionENTDIC_BANK =&quot;RUN&quot; then cmdENTDIC_BANKRUN_CLick
   if menuActionENTDIC_BANK =&quot;REF&quot; then cmdENTDIC_BANKREF_CLick
   if menuActionENTDIC_BANK =&quot;PRN&quot; then cmdENTDIC_BANKPRN_CLick
   if menuActionENTDIC_BANK =&quot;CFG&quot; then cmdENTDIC_BANKCFG_CLick
   if menuActionENTDIC_BANK =&quot;FND&quot; then cmdENTDIC_BANKFND_CLick
   if menuActionENTDIC_BANK =&quot;ACC&quot; then cmdENTDIC_BANKACC_CLick
   menuActionENTDIC_BANK =&quot;&quot;
end sub
Private Sub cmdENTDIC_BANKCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_BANK,&quot;gridENTDIC_BANK&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_BANKPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_BANK,&quot;Банки&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_BANKRef_Click()
  on error resume next
  item.ENTDIC_BANK.Refresh
  gridENTDIC_BANK.itemCount = item.ENTDIC_BANK.count
  gridENTDIC_BANK.Refetch
  gridENTDIC_BANK.Refresh
End Sub
Private Sub cmdENTDIC_BANKAcc_Click()
On Error Resume Next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 Then
 If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_BANKEdit_Click()
  on error resume next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 then
 If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_BANK_admi.Item = u
    again: frmENTDIC_BANK_admi.NotFirstTime = False
    frmENTDIC_BANK_admi.OnInit
    frmENTDIC_BANK_admi.Show vbModal
    If frmENTDIC_BANK_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_BANK.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_BANKDel_Click()
  on error resume next
  gridENTDIC_BANK.Delete
End Sub
Private Sub cmdENTDIC_BANKAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_BANK.Add()

      Set frmENTDIC_BANK_admi.Item = u
      again: frmENTDIC_BANK_admi.NotFirstTime = False
      frmENTDIC_BANK_admi.OnInit
      frmENTDIC_BANK_admi.Show vbModal
      If frmENTDIC_BANK_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_BANK.ItemCount = Item.ENTDIC_BANK.Count
        gridENTDIC_BANK.Refresh
        gridENTDIC_BANK.RefreshGroups
        gridENTDIC_BANK.Refreshsort
        gridENTDIC_BANK.MoveToBookmark u.ID &amp; &quot;ENTDIC_BANK&quot;
      Else
        Item.ENTDIC_BANK.Delete u.ID
        Item.ENTDIC_BANK.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_BANKFnd_Click()
  on error resume next
  fndENTDIC_BANK.ShowForm
End Sub
Private Sub cmdENTDIC_BANKRun_Click()
  on error resume next
  gridENTDIC_BANK_DblClick
End Sub
Private Sub gridENTDIC_BANK_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_BANK.LoadRow gridENTDIC_BANK, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_BANK_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_BANK_DblClick()
  cmdENTDIC_BANKEdit_Click
End Sub
Private Sub gridENTDIC_BANK_KeyPress(KeyAscii As Integer)
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_BANK.FindOnPress KeyAscii
End Sub

Private Sub pnlENTDIC_BANK_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridENTDIC_BANK.Left = Left
  gridENTDIC_BANK.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_BANK.Width = Width
  gridENTDIC_BANK.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_BANKAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdENTDIC_BANKEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_BANKDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_BANKRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_BANKPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_BANKFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuENTDIC_BANKPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_BANK.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_BANK.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdENTDIC_1CLINKCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_1CLINK,&quot;gridENTDIC_1CLINK&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_1CLINKPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_1CLINK,&quot;Связь с 1С&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_1CLINKAcc_Click()
On Error Resume Next
If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
If gridENTDIC_1CLINK.Row &gt; 0 Then
 If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_1CLINKFnd_Click()
  on error resume next
  fndENTDIC_1CLINK.ShowForm
End Sub
Private Sub cmdENTDIC_1CLINKRun_Click()
  on error resume next
  gridENTDIC_1CLINK_DblClick
End Sub
Private Sub pnlENTDIC_BANK_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridENTDIC_1CLINK.Left = Left
  gridENTDIC_1CLINK.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_1CLINK.Width = Width
  gridENTDIC_1CLINK.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_1CLINKAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdENTDIC_1CLINKEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdENTDIC_1CLINKRef_Click()
  on error resume next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 Then
 If gridENTDIC_BANK.RowIndex ( gridENTDIC_BANK.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_1CLINK.refresh
   gridENTDIC_1CLINK.itemcount=gu.ENTDIC_1CLINK.count
   gridENTDIC_1CLINK.refetch
   gridENTDIC_1CLINK.refresh
 else
  gridENTDIC_1CLINK.columns.clear
  gridENTDIC_1CLINK.itemcount=0
 End If
else
 gridENTDIC_1CLINK.columns.clear
 gridENTDIC_1CLINK.itemcount=0
End If
End Sub
Private Sub cmdENTDIC_1CLINKEdit_Click()
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmENTDIC_1CLINK_admi.Item = u
    again: frmENTDIC_1CLINK_admi.NotFirstTime = False
    frmENTDIC_1CLINK_admi.OnInit
    frmENTDIC_1CLINK_admi.Show vbModal
    If frmENTDIC_1CLINK_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_1CLINK.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdENTDIC_1CLINKDel_Click()
  on error resume next
  gridENTDIC_1CLINK.Delete
End Sub
Private Sub cmdENTDIC_1CLINKAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ENTDIC_1CLINK.Add()

      Set frmENTDIC_1CLINK_admi.Item = u
      again: frmENTDIC_1CLINK_admi.NotFirstTime = False
      frmENTDIC_1CLINK_admi.OnInit
      frmENTDIC_1CLINK_admi.Show vbModal
      If frmENTDIC_1CLINK_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_1CLINK.ItemCount = gu.ENTDIC_1CLINK.Count
        gridENTDIC_1CLINK.Refresh
        gridENTDIC_1CLINK.RefreshGroups
        gridENTDIC_1CLINK.Refreshsort
        gridENTDIC_1CLINK.MoveToBookmark u.ID &amp; &quot;ENTDIC_1CLINK&quot;
      Else
        gu.ENTDIC_1CLINK.Delete u.ID
        gu.ENTDIC_1CLINK.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridENTDIC_BANK_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridENTDIC_BANK.ItemCount = 0 Then 
  gridENTDIC_1CLINK.ItemCount=0
  Exit Sub
End If
If gridENTDIC_BANK.Row &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_BANK.Row And LastRow &gt; 0 Then
    gridENTDIC_BANK.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridENTDIC_BANK.GetRowData(gridENTDIC_BANK.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridENTDIC_BANK.RowIndex ( gridENTDIC_BANK.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_BANK.Row or gridENTDIC_1CLINK.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_1CLINK.Preparegrid gridENTDIC_1CLINK
  gridENTDIC_1CLINK.ItemCount=0
    LoadGridLayout gridENTDIC_1CLINK
    Set fndENTDIC_1CLINK = Nothing
    Set fndENTDIC_1CLINK = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndENTDIC_1CLINK.Init gridENTDIC_1CLINK
  gridENTDIC_1CLINK.ItemCount=gu.ENTDIC_1CLINK.Count
  End If
 End If
End If
End Sub
Private Sub gridENTDIC_1CLINK_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ENTDIC_1CLINK.LoadRow gridENTDIC_1CLINK, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridENTDIC_1CLINK_KeyPress(KeyAscii As Integer)
  If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_1CLINK.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_1CLINK_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridENTDIC_1CLINK_DblClick()
    cmdENTDIC_1CLINKEdit_click
End Sub
Private Sub gridENTDIC_1CLINK_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
 If gridENTDIC_1CLINK.Row &gt; 0 Then
   If LastRow &lt;&gt; gridENTDIC_1CLINK.Row And LastRow &gt; 0 Then
     gridENTDIC_1CLINK.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridENTDIC_1CLINK.GetRowData(gridENTDIC_1CLINK.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuENTDIC_1CLINKPASTE_Click()
On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ENTDIC_1CLINK.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_1CLINK.ItemCount = u.parent.Count
    ELSE
      GU.ENTDIC_1CLINK.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_1CLINK_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_1CLINKCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_1CLINK_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_1CLINK
End If
end sub
private sub mnuENTDIC_1CLINKAdd_click()
   menuActionENTDIC_1CLINK =&quot;ADD&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKEdit_click()
   menuActionENTDIC_1CLINK =&quot;EDIT&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKDelete_click()
   menuActionENTDIC_1CLINK =&quot;DEL&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKOpen_click()
   menuActionENTDIC_1CLINK =&quot;RUN&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKRef_click()
   menuActionENTDIC_1CLINK =&quot;REF&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
  Private Sub mnuENTDIC_1CLINKCOPY_Click()
    On Error Resume Next
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.Row &gt; 0 Then
     If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_1CLINKCUT_Click()
    On Error Resume Next
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.Row &gt; 0 Then
     If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_1CLINK.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_1CLINKCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
  If gridENTDIC_1CLINK.Row &gt; 0 Then
   If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_1CLINK.ItemCount = u.parent.Count
      gridENTDIC_1CLINK.RefreshRowIndex gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_1CLINKCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_1CLINKPrn_click()
   menuActionENTDIC_1CLINK =&quot;PRN&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKCfg_click()
   menuActionENTDIC_1CLINK =&quot;CFG&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKFind_click()
   menuActionENTDIC_1CLINK =&quot;FND&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKAcc_click()
   menuActionENTDIC_1CLINK =&quot;ACC&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub menuTimerENTDIC_1CLINK_timer()
   menuTimerENTDIC_1CLINK.enabled = false
   if menuActionENTDIC_1CLINK =&quot;ADD&quot; then cmdENTDIC_1CLINKADD_CLick
   if menuActionENTDIC_1CLINK =&quot;EDIT&quot; then cmdENTDIC_1CLINKEDIT_CLick
   if menuActionENTDIC_1CLINK =&quot;DEL&quot; then cmdENTDIC_1CLINKDEL_CLick
   if menuActionENTDIC_1CLINK =&quot;RUN&quot; then cmdENTDIC_1CLINKRUN_CLick
   if menuActionENTDIC_1CLINK =&quot;REF&quot; then cmdENTDIC_1CLINKREF_CLick
   if menuActionENTDIC_1CLINK =&quot;PRN&quot; then cmdENTDIC_1CLINKPRN_CLick
   if menuActionENTDIC_1CLINK =&quot;CFG&quot; then cmdENTDIC_1CLINKCFG_CLick
   if menuActionENTDIC_1CLINK =&quot;FND&quot; then cmdENTDIC_1CLINKFND_CLick
   if menuActionENTDIC_1CLINK =&quot;ACC&quot; then cmdENTDIC_1CLINKACC_CLick
   menuActionENTDIC_1CLINK =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_BANKAdd,cmdENTDIC_BANKAdd.tag
  LoadBtnPictures cmdENTDIC_BANKEdit,cmdENTDIC_BANKEdit.tag
  LoadBtnPictures cmdENTDIC_BANKDel,cmdENTDIC_BANKDel.tag
  LoadBtnPictures cmdENTDIC_BANKRef,cmdENTDIC_BANKRef.tag
  LoadBtnPictures cmdENTDIC_BANKPrn,cmdENTDIC_BANKPrn.tag
  LoadBtnPictures cmdENTDIC_BANKFnd,cmdENTDIC_BANKFnd.tag
  item.ENTDIC_BANK.PrepareGrid gridENTDIC_BANK
  LoadGridLayout gridENTDIC_BANK
  Set fndENTDIC_BANK = Nothing
  On Error Resume Next
  Set fndENTDIC_BANK = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_BANK.Init gridENTDIC_BANK
  LoadBtnPictures cmdENTDIC_1CLINKAdd,cmdENTDIC_1CLINKAdd.tag
  LoadBtnPictures cmdENTDIC_1CLINKEdit,cmdENTDIC_1CLINKEdit.tag
  LoadBtnPictures cmdENTDIC_1CLINKDel,cmdENTDIC_1CLINKDel.tag
  LoadBtnPictures cmdENTDIC_1CLINKRef,cmdENTDIC_1CLINKRef.tag
  LoadBtnPictures cmdENTDIC_1CLINKPrn,cmdENTDIC_1CLINKPrn.tag
  LoadBtnPictures cmdENTDIC_1CLINKFnd,cmdENTDIC_1CLINKFnd.Tag
  gridENTDIC_1CLINK.Columns.Clear
  gridENTDIC_1CLINK.ItemCount=0
  cmdENTDIC_1CLINKRef_Click
end sub
private sub OnTabClick()

pnlENTDIC_BANK.RestorePosition
  gridENTDIC_BANK_RowColChange gridENTDIC_BANK.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_BANK.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_BANK = nothing
  set fndENTDIC_1CLINK = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_CURRENCY_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_CURRENCY" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlENTDIC_CURRENCY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridENTDIC_CURRENCY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_CURRENCY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridENTDIC_CURCOURCE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_CURCOURCE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_CURRENCY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Валюта"/><Properties Name="Name" PropValue="mnuPopupENTDIC_CURRENCY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_CURRENCYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYOpen"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYRef"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYPrn"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_CURRENCY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_CURRENCY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupENTDIC_CURCOURCE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Курс валюты"/><Properties Name="Name" PropValue="mnuPopupENTDIC_CURCOURCE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_CURCOURCEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEOpen"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCERef"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEPrn"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCECfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_CURCOURCE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_CURCOURCE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_CURRENCY as object
private menuActionENTDIC_CURRENCY as string
private fndENTDIC_CURCOURCE as object
private menuActionENTDIC_CURCOURCE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlENTDIC_CURRENCY_PositionChanged()
  pnlENTDIC_CURRENCY.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_CURRENCY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_CURRENCYCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_CURRENCY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_CURRENCY
End If
end sub
private sub mnuENTDIC_CURRENCYAdd_click()
   menuActionENTDIC_CURRENCY =&quot;ADD&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYEdit_click()
   menuActionENTDIC_CURRENCY =&quot;EDIT&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYDelete_click()
   menuActionENTDIC_CURRENCY =&quot;DEL&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYOpen_click()
   menuActionENTDIC_CURRENCY =&quot;RUN&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYRef_click()
   menuActionENTDIC_CURRENCY =&quot;REF&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
  Private Sub mnuENTDIC_CURRENCYCOPY_Click()
    On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURRENCY.Row &gt; 0 Then
     If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_CURRENCYCUT_Click()
    On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURRENCY.Row &gt; 0 Then
     If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_CURRENCY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_CURRENCYCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  If gridENTDIC_CURRENCY.Row &gt; 0 Then
   If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_CURRENCY.ItemCount = u.parent.Count
      gridENTDIC_CURRENCY.RefreshRowIndex gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_CURRENCYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_CURRENCYPrn_click()
   menuActionENTDIC_CURRENCY =&quot;PRN&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYCfg_click()
   menuActionENTDIC_CURRENCY =&quot;CFG&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYFind_click()
   menuActionENTDIC_CURRENCY =&quot;FND&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYAcc_click()
   menuActionENTDIC_CURRENCY =&quot;ACC&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub menuTimerENTDIC_CURRENCY_timer()
   menuTimerENTDIC_CURRENCY.enabled = false
   if menuActionENTDIC_CURRENCY =&quot;ADD&quot; then cmdENTDIC_CURRENCYADD_CLick
   if menuActionENTDIC_CURRENCY =&quot;EDIT&quot; then cmdENTDIC_CURRENCYEDIT_CLick
   if menuActionENTDIC_CURRENCY =&quot;DEL&quot; then cmdENTDIC_CURRENCYDEL_CLick
   if menuActionENTDIC_CURRENCY =&quot;RUN&quot; then cmdENTDIC_CURRENCYRUN_CLick
   if menuActionENTDIC_CURRENCY =&quot;REF&quot; then cmdENTDIC_CURRENCYREF_CLick
   if menuActionENTDIC_CURRENCY =&quot;PRN&quot; then cmdENTDIC_CURRENCYPRN_CLick
   if menuActionENTDIC_CURRENCY =&quot;CFG&quot; then cmdENTDIC_CURRENCYCFG_CLick
   if menuActionENTDIC_CURRENCY =&quot;FND&quot; then cmdENTDIC_CURRENCYFND_CLick
   if menuActionENTDIC_CURRENCY =&quot;ACC&quot; then cmdENTDIC_CURRENCYACC_CLick
   menuActionENTDIC_CURRENCY =&quot;&quot;
end sub
Private Sub cmdENTDIC_CURRENCYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_CURRENCY,&quot;gridENTDIC_CURRENCY&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURRENCYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_CURRENCY,&quot;Валюта&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURRENCYRef_Click()
  on error resume next
  item.ENTDIC_CURRENCY.Refresh
  gridENTDIC_CURRENCY.itemCount = item.ENTDIC_CURRENCY.count
  gridENTDIC_CURRENCY.Refetch
  gridENTDIC_CURRENCY.Refresh
End Sub
Private Sub cmdENTDIC_CURRENCYAcc_Click()
On Error Resume Next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 Then
 If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_CURRENCYEdit_Click()
  on error resume next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 then
 If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_CURRENCY_admi.Item = u
    again: frmENTDIC_CURRENCY_admi.NotFirstTime = False
    frmENTDIC_CURRENCY_admi.OnInit
    frmENTDIC_CURRENCY_admi.Show vbModal
    If frmENTDIC_CURRENCY_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_CURRENCY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_CURRENCYDel_Click()
  on error resume next
  gridENTDIC_CURRENCY.Delete
End Sub
Private Sub cmdENTDIC_CURRENCYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_CURRENCY.Add()

      Set frmENTDIC_CURRENCY_admi.Item = u
      again: frmENTDIC_CURRENCY_admi.NotFirstTime = False
      frmENTDIC_CURRENCY_admi.OnInit
      frmENTDIC_CURRENCY_admi.Show vbModal
      If frmENTDIC_CURRENCY_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_CURRENCY.ItemCount = Item.ENTDIC_CURRENCY.Count
        gridENTDIC_CURRENCY.Refresh
        gridENTDIC_CURRENCY.RefreshGroups
        gridENTDIC_CURRENCY.Refreshsort
        gridENTDIC_CURRENCY.MoveToBookmark u.ID &amp; &quot;ENTDIC_CURRENCY&quot;
      Else
        Item.ENTDIC_CURRENCY.Delete u.ID
        Item.ENTDIC_CURRENCY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_CURRENCYFnd_Click()
  on error resume next
  fndENTDIC_CURRENCY.ShowForm
End Sub
Private Sub cmdENTDIC_CURRENCYRun_Click()
  on error resume next
  gridENTDIC_CURRENCY_DblClick
End Sub
Private Sub gridENTDIC_CURRENCY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_CURRENCY.LoadRow gridENTDIC_CURRENCY, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_CURRENCY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_CURRENCY_DblClick()
  cmdENTDIC_CURRENCYEdit_Click
End Sub
Private Sub gridENTDIC_CURRENCY_KeyPress(KeyAscii As Integer)
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_CURRENCY.FindOnPress KeyAscii
End Sub

Private Sub pnlENTDIC_CURRENCY_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridENTDIC_CURRENCY.Left = Left
  gridENTDIC_CURRENCY.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_CURRENCY.Width = Width
  gridENTDIC_CURRENCY.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuENTDIC_CURRENCYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_CURRENCY.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_CURRENCY.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdENTDIC_CURCOURCECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_CURCOURCE,&quot;gridENTDIC_CURCOURCE&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURCOURCEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_CURCOURCE,&quot;Курс валюты&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURCOURCEAcc_Click()
On Error Resume Next
If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURCOURCE.Row &gt; 0 Then
 If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_CURCOURCEFnd_Click()
  on error resume next
  fndENTDIC_CURCOURCE.ShowForm
End Sub
Private Sub cmdENTDIC_CURCOURCERun_Click()
  on error resume next
  gridENTDIC_CURCOURCE_DblClick
End Sub
Private Sub pnlENTDIC_CURRENCY_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridENTDIC_CURCOURCE.Left = Left
  gridENTDIC_CURCOURCE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_CURCOURCE.Width = Width
  gridENTDIC_CURCOURCE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdENTDIC_CURCOURCEEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdENTDIC_CURCOURCERef_Click()
  on error resume next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 Then
 If gridENTDIC_CURRENCY.RowIndex ( gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.refresh
   gridENTDIC_CURCOURCE.itemcount=gu.ENTDIC_CURCOURCE.count
   gridENTDIC_CURCOURCE.refetch
   gridENTDIC_CURCOURCE.refresh
 else
  gridENTDIC_CURCOURCE.columns.clear
  gridENTDIC_CURCOURCE.itemcount=0
 End If
else
 gridENTDIC_CURCOURCE.columns.clear
 gridENTDIC_CURCOURCE.itemcount=0
End If
End Sub
Private Sub cmdENTDIC_CURCOURCEEdit_Click()
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmENTDIC_CURCOURCE_admi.Item = u
    again: frmENTDIC_CURCOURCE_admi.NotFirstTime = False
    frmENTDIC_CURCOURCE_admi.OnInit
    frmENTDIC_CURCOURCE_admi.Show vbModal
    If frmENTDIC_CURCOURCE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_CURCOURCE.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdENTDIC_CURCOURCEDel_Click()
  on error resume next
  gridENTDIC_CURCOURCE.Delete
End Sub
Private Sub cmdENTDIC_CURCOURCEAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ENTDIC_CURCOURCE.Add()

      Set frmENTDIC_CURCOURCE_admi.Item = u
      again: frmENTDIC_CURCOURCE_admi.NotFirstTime = False
      frmENTDIC_CURCOURCE_admi.OnInit
      frmENTDIC_CURCOURCE_admi.Show vbModal
      If frmENTDIC_CURCOURCE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_CURCOURCE.ItemCount = gu.ENTDIC_CURCOURCE.Count
        gridENTDIC_CURCOURCE.Refresh
        gridENTDIC_CURCOURCE.RefreshGroups
        gridENTDIC_CURCOURCE.Refreshsort
        gridENTDIC_CURCOURCE.MoveToBookmark u.ID &amp; &quot;ENTDIC_CURCOURCE&quot;
      Else
        gu.ENTDIC_CURCOURCE.Delete u.ID
        gu.ENTDIC_CURCOURCE.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridENTDIC_CURRENCY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridENTDIC_CURRENCY.ItemCount = 0 Then 
  gridENTDIC_CURCOURCE.ItemCount=0
  Exit Sub
End If
If gridENTDIC_CURRENCY.Row &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_CURRENCY.Row And LastRow &gt; 0 Then
    gridENTDIC_CURRENCY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridENTDIC_CURRENCY.GetRowData(gridENTDIC_CURRENCY.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridENTDIC_CURRENCY.RowIndex ( gridENTDIC_CURRENCY.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_CURRENCY.Row or gridENTDIC_CURCOURCE.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.Preparegrid gridENTDIC_CURCOURCE
  gridENTDIC_CURCOURCE.ItemCount=0
    LoadGridLayout gridENTDIC_CURCOURCE
    Set fndENTDIC_CURCOURCE = Nothing
    Set fndENTDIC_CURCOURCE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndENTDIC_CURCOURCE.Init gridENTDIC_CURCOURCE
  gridENTDIC_CURCOURCE.ItemCount=gu.ENTDIC_CURCOURCE.Count
  End If
 End If
End If
End Sub
Private Sub gridENTDIC_CURCOURCE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.LoadRow gridENTDIC_CURCOURCE, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridENTDIC_CURCOURCE_KeyPress(KeyAscii As Integer)
  If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_CURCOURCE.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_CURCOURCE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridENTDIC_CURCOURCE_DblClick()
    cmdENTDIC_CURCOURCEEdit_click
End Sub
Private Sub gridENTDIC_CURCOURCE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
 If gridENTDIC_CURCOURCE.Row &gt; 0 Then
   If LastRow &lt;&gt; gridENTDIC_CURCOURCE.Row And LastRow &gt; 0 Then
     gridENTDIC_CURCOURCE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridENTDIC_CURCOURCE.GetRowData(gridENTDIC_CURCOURCE.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuENTDIC_CURCOURCEPASTE_Click()
On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ENTDIC_CURCOURCE.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_CURCOURCE.ItemCount = u.parent.Count
    ELSE
      GU.ENTDIC_CURCOURCE.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_CURCOURCE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_CURCOURCECfg_Click
        End If
    End If
end sub

private sub gridENTDIC_CURCOURCE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_CURCOURCE
End If
end sub
private sub mnuENTDIC_CURCOURCEAdd_click()
   menuActionENTDIC_CURCOURCE =&quot;ADD&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEEdit_click()
   menuActionENTDIC_CURCOURCE =&quot;EDIT&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEDelete_click()
   menuActionENTDIC_CURCOURCE =&quot;DEL&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEOpen_click()
   menuActionENTDIC_CURCOURCE =&quot;RUN&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCERef_click()
   menuActionENTDIC_CURCOURCE =&quot;REF&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
  Private Sub mnuENTDIC_CURCOURCECOPY_Click()
    On Error Resume Next
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.Row &gt; 0 Then
     If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_CURCOURCECUT_Click()
    On Error Resume Next
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.Row &gt; 0 Then
     If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_CURCOURCE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_CURCOURCECHANGE_Click()
  On Error Resume Next
  If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
  If gridENTDIC_CURCOURCE.Row &gt; 0 Then
   If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_CURCOURCE.ItemCount = u.parent.Count
      gridENTDIC_CURCOURCE.RefreshRowIndex gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_CURCOURCECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_CURCOURCEPrn_click()
   menuActionENTDIC_CURCOURCE =&quot;PRN&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCECfg_click()
   menuActionENTDIC_CURCOURCE =&quot;CFG&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEFind_click()
   menuActionENTDIC_CURCOURCE =&quot;FND&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEAcc_click()
   menuActionENTDIC_CURCOURCE =&quot;ACC&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub menuTimerENTDIC_CURCOURCE_timer()
   menuTimerENTDIC_CURCOURCE.enabled = false
   if menuActionENTDIC_CURCOURCE =&quot;ADD&quot; then cmdENTDIC_CURCOURCEADD_CLick
   if menuActionENTDIC_CURCOURCE =&quot;EDIT&quot; then cmdENTDIC_CURCOURCEEDIT_CLick
   if menuActionENTDIC_CURCOURCE =&quot;DEL&quot; then cmdENTDIC_CURCOURCEDEL_CLick
   if menuActionENTDIC_CURCOURCE =&quot;RUN&quot; then cmdENTDIC_CURCOURCERUN_CLick
   if menuActionENTDIC_CURCOURCE =&quot;REF&quot; then cmdENTDIC_CURCOURCEREF_CLick
   if menuActionENTDIC_CURCOURCE =&quot;PRN&quot; then cmdENTDIC_CURCOURCEPRN_CLick
   if menuActionENTDIC_CURCOURCE =&quot;CFG&quot; then cmdENTDIC_CURCOURCECFG_CLick
   if menuActionENTDIC_CURCOURCE =&quot;FND&quot; then cmdENTDIC_CURCOURCEFND_CLick
   if menuActionENTDIC_CURCOURCE =&quot;ACC&quot; then cmdENTDIC_CURCOURCEACC_CLick
   menuActionENTDIC_CURCOURCE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_CURRENCYAdd,cmdENTDIC_CURRENCYAdd.tag
  LoadBtnPictures cmdENTDIC_CURRENCYEdit,cmdENTDIC_CURRENCYEdit.tag
  LoadBtnPictures cmdENTDIC_CURRENCYDel,cmdENTDIC_CURRENCYDel.tag
  LoadBtnPictures cmdENTDIC_CURRENCYRef,cmdENTDIC_CURRENCYRef.tag
  LoadBtnPictures cmdENTDIC_CURRENCYPrn,cmdENTDIC_CURRENCYPrn.tag
  LoadBtnPictures cmdENTDIC_CURRENCYFnd,cmdENTDIC_CURRENCYFnd.tag
  item.ENTDIC_CURRENCY.PrepareGrid gridENTDIC_CURRENCY
  LoadGridLayout gridENTDIC_CURRENCY
  Set fndENTDIC_CURRENCY = Nothing
  On Error Resume Next
  Set fndENTDIC_CURRENCY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_CURRENCY.Init gridENTDIC_CURRENCY
  LoadBtnPictures cmdENTDIC_CURCOURCEAdd,cmdENTDIC_CURCOURCEAdd.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEEdit,cmdENTDIC_CURCOURCEEdit.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEDel,cmdENTDIC_CURCOURCEDel.tag
  LoadBtnPictures cmdENTDIC_CURCOURCERef,cmdENTDIC_CURCOURCERef.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEPrn,cmdENTDIC_CURCOURCEPrn.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEFnd,cmdENTDIC_CURCOURCEFnd.Tag
  gridENTDIC_CURCOURCE.Columns.Clear
  gridENTDIC_CURCOURCE.ItemCount=0
  cmdENTDIC_CURCOURCERef_Click
end sub
private sub OnTabClick()

pnlENTDIC_CURRENCY.RestorePosition
  gridENTDIC_CURRENCY_RowColChange gridENTDIC_CURRENCY.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_CURRENCY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_CURRENCY = nothing
  set fndENTDIC_CURCOURCE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_DOST_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_DOST" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_DOST"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_DOST" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_DOST"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_DOSTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_DOSTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_DOSTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_DOST" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип доставки"/><Properties Name="Name" PropValue="mnuPopupENTDIC_DOST"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_DOSTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTOpen"/></ControlData><ControlData Name="mnuENTDIC_DOSTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTRef"/></ControlData><ControlData Name="mnuENTDIC_DOSTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTPrn"/></ControlData><ControlData Name="mnuENTDIC_DOSTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_DOST" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_DOST"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_DOST as object
private menuActionENTDIC_DOST as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_DOSTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_DOST,&quot;gridENTDIC_DOST&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_DOSTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_DOST,&quot;Тип доставки&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_DOSTRef_Click()
  on error resume next
  item.ENTDIC_DOST.Refresh
  gridENTDIC_DOST.itemCount = item.ENTDIC_DOST.count
  gridENTDIC_DOST.Refetch
  gridENTDIC_DOST.Refresh
End Sub
Private Sub cmdENTDIC_DOSTAcc_Click()
On Error Resume Next
If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
If gridENTDIC_DOST.Row &gt; 0 Then
 If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_DOSTEdit_Click()
  on error resume next
If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
If gridENTDIC_DOST.Row &gt; 0 then
 If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_DOST_admi.Item = u
    again: frmENTDIC_DOST_admi.NotFirstTime = False
    frmENTDIC_DOST_admi.OnInit
    frmENTDIC_DOST_admi.Show vbModal
    If frmENTDIC_DOST_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_DOST.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_DOSTDel_Click()
  on error resume next
  gridENTDIC_DOST.Delete
End Sub
Private Sub cmdENTDIC_DOSTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_DOST.Add()
   call GetNumValue(u, &quot;Code&quot;, &quot;{2ED56791-28A1-4C4B-B140-5303F1DCA3F9}&quot;,Now,&quot;ENTDIC_DOST&quot;, &quot;&quot;) 

      Set frmENTDIC_DOST_admi.Item = u
      again: frmENTDIC_DOST_admi.NotFirstTime = False
      frmENTDIC_DOST_admi.OnInit
      frmENTDIC_DOST_admi.Show vbModal
      If frmENTDIC_DOST_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_DOST.ItemCount = Item.ENTDIC_DOST.Count
        gridENTDIC_DOST.Refresh
        gridENTDIC_DOST.RefreshGroups
        gridENTDIC_DOST.Refreshsort
        gridENTDIC_DOST.MoveToBookmark u.ID &amp; &quot;ENTDIC_DOST&quot;
      Else
        Item.ENTDIC_DOST.Delete u.ID
        Item.ENTDIC_DOST.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_DOSTFnd_Click()
  on error resume next
  fndENTDIC_DOST.ShowForm
End Sub
Private Sub cmdENTDIC_DOSTRun_Click()
  on error resume next
  gridENTDIC_DOST_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_DOST_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_DOST.LoadRow gridENTDIC_DOST, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_DOST_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_DOST&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_DOST_DblClick()
  cmdENTDIC_DOSTEdit_Click
End Sub
Private Sub gridENTDIC_DOST_KeyPress(KeyAscii As Integer)
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_DOST.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_DOST_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_DOST.Row And LastRow &gt; 0 Then
  gridENTDIC_DOST.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_DOST.GetRowData(gridENTDIC_DOST.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_DOSTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_DOST.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_DOST.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_DOST_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_DOSTCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_DOST_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_DOST
End If
end sub
private sub mnuENTDIC_DOSTAdd_click()
   menuActionENTDIC_DOST =&quot;ADD&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTEdit_click()
   menuActionENTDIC_DOST =&quot;EDIT&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTDelete_click()
   menuActionENTDIC_DOST =&quot;DEL&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTOpen_click()
   menuActionENTDIC_DOST =&quot;RUN&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTRef_click()
   menuActionENTDIC_DOST =&quot;REF&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
  Private Sub mnuENTDIC_DOSTCOPY_Click()
    On Error Resume Next
    If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
    If gridENTDIC_DOST.Row &gt; 0 Then
     If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_DOSTCUT_Click()
    On Error Resume Next
    If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
    If gridENTDIC_DOST.Row &gt; 0 Then
     If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_DOST.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_DOSTCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  If gridENTDIC_DOST.Row &gt; 0 Then
   If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_DOST.ItemCount = u.parent.Count
      gridENTDIC_DOST.RefreshRowIndex gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_DOSTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_DOSTPrn_click()
   menuActionENTDIC_DOST =&quot;PRN&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTCfg_click()
   menuActionENTDIC_DOST =&quot;CFG&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTFind_click()
   menuActionENTDIC_DOST =&quot;FND&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTAcc_click()
   menuActionENTDIC_DOST =&quot;ACC&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub menuTimerENTDIC_DOST_timer()
   menuTimerENTDIC_DOST.enabled = false
   if menuActionENTDIC_DOST =&quot;ADD&quot; then cmdENTDIC_DOSTADD_CLick
   if menuActionENTDIC_DOST =&quot;EDIT&quot; then cmdENTDIC_DOSTEDIT_CLick
   if menuActionENTDIC_DOST =&quot;DEL&quot; then cmdENTDIC_DOSTDEL_CLick
   if menuActionENTDIC_DOST =&quot;RUN&quot; then cmdENTDIC_DOSTRUN_CLick
   if menuActionENTDIC_DOST =&quot;REF&quot; then cmdENTDIC_DOSTREF_CLick
   if menuActionENTDIC_DOST =&quot;PRN&quot; then cmdENTDIC_DOSTPRN_CLick
   if menuActionENTDIC_DOST =&quot;CFG&quot; then cmdENTDIC_DOSTCFG_CLick
   if menuActionENTDIC_DOST =&quot;FND&quot; then cmdENTDIC_DOSTFND_CLick
   if menuActionENTDIC_DOST =&quot;ACC&quot; then cmdENTDIC_DOSTACC_CLick
   menuActionENTDIC_DOST =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_DOSTAdd,cmdENTDIC_DOSTAdd.tag
  LoadBtnPictures cmdENTDIC_DOSTEdit,cmdENTDIC_DOSTEdit.tag
  LoadBtnPictures cmdENTDIC_DOSTDel,cmdENTDIC_DOSTDel.tag
  LoadBtnPictures cmdENTDIC_DOSTRef,cmdENTDIC_DOSTRef.tag
  LoadBtnPictures cmdENTDIC_DOSTPrn,cmdENTDIC_DOSTPrn.tag
  LoadBtnPictures cmdENTDIC_DOSTFnd,cmdENTDIC_DOSTFnd.tag
  item.ENTDIC_DOST.PrepareGrid gridENTDIC_DOST
  LoadGridLayout gridENTDIC_DOST
  Set fndENTDIC_DOST = Nothing
  On Error Resume Next
  Set fndENTDIC_DOST = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_DOST.Init gridENTDIC_DOST
end sub
private sub OnTabClick()

      gridENTDIC_DOST.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_DOST.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_DOST.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_DOST = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_REGION_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_REGION" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_REGION"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_REGION" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_REGION"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_REGIONAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_REGIONPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_REGIONFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_REGION" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Название областей"/><Properties Name="Name" PropValue="mnuPopupENTDIC_REGION"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_REGIONAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONOpen"/></ControlData><ControlData Name="mnuENTDIC_REGIONRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONRef"/></ControlData><ControlData Name="mnuENTDIC_REGIONPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONPrn"/></ControlData><ControlData Name="mnuENTDIC_REGIONCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_REGION" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_REGION"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_REGION as object
private menuActionENTDIC_REGION as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_REGIONCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_REGION,&quot;gridENTDIC_REGION&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_REGIONPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_REGION,&quot;Название областей&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_REGIONRef_Click()
  on error resume next
  item.ENTDIC_REGION.Refresh
  gridENTDIC_REGION.itemCount = item.ENTDIC_REGION.count
  gridENTDIC_REGION.Refetch
  gridENTDIC_REGION.Refresh
End Sub
Private Sub cmdENTDIC_REGIONAcc_Click()
On Error Resume Next
If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
If gridENTDIC_REGION.Row &gt; 0 Then
 If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_REGIONEdit_Click()
  on error resume next
If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
If gridENTDIC_REGION.Row &gt; 0 then
 If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_REGION_admi.Item = u
    again: frmENTDIC_REGION_admi.NotFirstTime = False
    frmENTDIC_REGION_admi.OnInit
    frmENTDIC_REGION_admi.Show vbModal
    If frmENTDIC_REGION_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_REGION.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_REGIONDel_Click()
  on error resume next
  gridENTDIC_REGION.Delete
End Sub
Private Sub cmdENTDIC_REGIONAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_REGION.Add()

      Set frmENTDIC_REGION_admi.Item = u
      again: frmENTDIC_REGION_admi.NotFirstTime = False
      frmENTDIC_REGION_admi.OnInit
      frmENTDIC_REGION_admi.Show vbModal
      If frmENTDIC_REGION_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_REGION.ItemCount = Item.ENTDIC_REGION.Count
        gridENTDIC_REGION.Refresh
        gridENTDIC_REGION.RefreshGroups
        gridENTDIC_REGION.Refreshsort
        gridENTDIC_REGION.MoveToBookmark u.ID &amp; &quot;ENTDIC_REGION&quot;
      Else
        Item.ENTDIC_REGION.Delete u.ID
        Item.ENTDIC_REGION.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_REGIONFnd_Click()
  on error resume next
  fndENTDIC_REGION.ShowForm
End Sub
Private Sub cmdENTDIC_REGIONRun_Click()
  on error resume next
  gridENTDIC_REGION_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_REGION_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_REGION.LoadRow gridENTDIC_REGION, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_REGION_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_REGION&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_REGION_DblClick()
  cmdENTDIC_REGIONEdit_Click
End Sub
Private Sub gridENTDIC_REGION_KeyPress(KeyAscii As Integer)
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_REGION.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_REGION_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_REGION.Row And LastRow &gt; 0 Then
  gridENTDIC_REGION.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_REGION.GetRowData(gridENTDIC_REGION.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_REGIONPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_REGION.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_REGION.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_REGION_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_REGIONCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_REGION_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_REGION
End If
end sub
private sub mnuENTDIC_REGIONAdd_click()
   menuActionENTDIC_REGION =&quot;ADD&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONEdit_click()
   menuActionENTDIC_REGION =&quot;EDIT&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONDelete_click()
   menuActionENTDIC_REGION =&quot;DEL&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONOpen_click()
   menuActionENTDIC_REGION =&quot;RUN&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONRef_click()
   menuActionENTDIC_REGION =&quot;REF&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
  Private Sub mnuENTDIC_REGIONCOPY_Click()
    On Error Resume Next
    If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
    If gridENTDIC_REGION.Row &gt; 0 Then
     If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_REGIONCUT_Click()
    On Error Resume Next
    If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
    If gridENTDIC_REGION.Row &gt; 0 Then
     If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_REGION.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_REGIONCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  If gridENTDIC_REGION.Row &gt; 0 Then
   If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_REGION.ItemCount = u.parent.Count
      gridENTDIC_REGION.RefreshRowIndex gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_REGIONCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_REGIONPrn_click()
   menuActionENTDIC_REGION =&quot;PRN&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONCfg_click()
   menuActionENTDIC_REGION =&quot;CFG&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONFind_click()
   menuActionENTDIC_REGION =&quot;FND&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONAcc_click()
   menuActionENTDIC_REGION =&quot;ACC&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub menuTimerENTDIC_REGION_timer()
   menuTimerENTDIC_REGION.enabled = false
   if menuActionENTDIC_REGION =&quot;ADD&quot; then cmdENTDIC_REGIONADD_CLick
   if menuActionENTDIC_REGION =&quot;EDIT&quot; then cmdENTDIC_REGIONEDIT_CLick
   if menuActionENTDIC_REGION =&quot;DEL&quot; then cmdENTDIC_REGIONDEL_CLick
   if menuActionENTDIC_REGION =&quot;RUN&quot; then cmdENTDIC_REGIONRUN_CLick
   if menuActionENTDIC_REGION =&quot;REF&quot; then cmdENTDIC_REGIONREF_CLick
   if menuActionENTDIC_REGION =&quot;PRN&quot; then cmdENTDIC_REGIONPRN_CLick
   if menuActionENTDIC_REGION =&quot;CFG&quot; then cmdENTDIC_REGIONCFG_CLick
   if menuActionENTDIC_REGION =&quot;FND&quot; then cmdENTDIC_REGIONFND_CLick
   if menuActionENTDIC_REGION =&quot;ACC&quot; then cmdENTDIC_REGIONACC_CLick
   menuActionENTDIC_REGION =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_REGIONAdd,cmdENTDIC_REGIONAdd.tag
  LoadBtnPictures cmdENTDIC_REGIONEdit,cmdENTDIC_REGIONEdit.tag
  LoadBtnPictures cmdENTDIC_REGIONDel,cmdENTDIC_REGIONDel.tag
  LoadBtnPictures cmdENTDIC_REGIONRef,cmdENTDIC_REGIONRef.tag
  LoadBtnPictures cmdENTDIC_REGIONPrn,cmdENTDIC_REGIONPrn.tag
  LoadBtnPictures cmdENTDIC_REGIONFnd,cmdENTDIC_REGIONFnd.tag
  item.ENTDIC_REGION.PrepareGrid gridENTDIC_REGION
  LoadGridLayout gridENTDIC_REGION
  Set fndENTDIC_REGION = Nothing
  On Error Resume Next
  Set fndENTDIC_REGION = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_REGION.Init gridENTDIC_REGION
end sub
private sub OnTabClick()

      gridENTDIC_REGION.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_REGION.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_REGION.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_REGION = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_TOWN_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_TOWN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_TOWN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_TOWN" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_TOWN"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_TOWNAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_TOWNPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_TOWNFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_TOWN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Города"/><Properties Name="Name" PropValue="mnuPopupENTDIC_TOWN"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_TOWNAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNOpen"/></ControlData><ControlData Name="mnuENTDIC_TOWNRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNRef"/></ControlData><ControlData Name="mnuENTDIC_TOWNPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNPrn"/></ControlData><ControlData Name="mnuENTDIC_TOWNCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_TOWN" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_TOWN"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_TOWN as object
private menuActionENTDIC_TOWN as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_TOWNCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_TOWN,&quot;gridENTDIC_TOWN&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TOWNPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_TOWN,&quot;Города&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TOWNRef_Click()
  on error resume next
  item.ENTDIC_TOWN.Refresh
  gridENTDIC_TOWN.itemCount = item.ENTDIC_TOWN.count
  gridENTDIC_TOWN.Refetch
  gridENTDIC_TOWN.Refresh
End Sub
Private Sub cmdENTDIC_TOWNAcc_Click()
On Error Resume Next
If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
If gridENTDIC_TOWN.Row &gt; 0 Then
 If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_TOWNEdit_Click()
  on error resume next
If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
If gridENTDIC_TOWN.Row &gt; 0 then
 If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_TOWN_admi.Item = u
    again: frmENTDIC_TOWN_admi.NotFirstTime = False
    frmENTDIC_TOWN_admi.OnInit
    frmENTDIC_TOWN_admi.Show vbModal
    If frmENTDIC_TOWN_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_TOWN.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_TOWNDel_Click()
  on error resume next
  gridENTDIC_TOWN.Delete
End Sub
Private Sub cmdENTDIC_TOWNAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_TOWN.Add()

      Set frmENTDIC_TOWN_admi.Item = u
      again: frmENTDIC_TOWN_admi.NotFirstTime = False
      frmENTDIC_TOWN_admi.OnInit
      frmENTDIC_TOWN_admi.Show vbModal
      If frmENTDIC_TOWN_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_TOWN.ItemCount = Item.ENTDIC_TOWN.Count
        gridENTDIC_TOWN.Refresh
        gridENTDIC_TOWN.RefreshGroups
        gridENTDIC_TOWN.Refreshsort
        gridENTDIC_TOWN.MoveToBookmark u.ID &amp; &quot;ENTDIC_TOWN&quot;
      Else
        Item.ENTDIC_TOWN.Delete u.ID
        Item.ENTDIC_TOWN.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_TOWNFnd_Click()
  on error resume next
  fndENTDIC_TOWN.ShowForm
End Sub
Private Sub cmdENTDIC_TOWNRun_Click()
  on error resume next
  gridENTDIC_TOWN_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_TOWN_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_TOWN.LoadRow gridENTDIC_TOWN, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_TOWN_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_TOWN&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_TOWN_DblClick()
  cmdENTDIC_TOWNEdit_Click
End Sub
Private Sub gridENTDIC_TOWN_KeyPress(KeyAscii As Integer)
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_TOWN.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_TOWN_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_TOWN.Row And LastRow &gt; 0 Then
  gridENTDIC_TOWN.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_TOWN.GetRowData(gridENTDIC_TOWN.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_TOWNPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_TOWN.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_TOWN.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_TOWN_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_TOWNCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_TOWN_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_TOWN
End If
end sub
private sub mnuENTDIC_TOWNAdd_click()
   menuActionENTDIC_TOWN =&quot;ADD&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNEdit_click()
   menuActionENTDIC_TOWN =&quot;EDIT&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNDelete_click()
   menuActionENTDIC_TOWN =&quot;DEL&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNOpen_click()
   menuActionENTDIC_TOWN =&quot;RUN&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNRef_click()
   menuActionENTDIC_TOWN =&quot;REF&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
  Private Sub mnuENTDIC_TOWNCOPY_Click()
    On Error Resume Next
    If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TOWN.Row &gt; 0 Then
     If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_TOWNCUT_Click()
    On Error Resume Next
    If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TOWN.Row &gt; 0 Then
     If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_TOWN.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_TOWNCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  If gridENTDIC_TOWN.Row &gt; 0 Then
   If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_TOWN.ItemCount = u.parent.Count
      gridENTDIC_TOWN.RefreshRowIndex gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_TOWNCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_TOWNPrn_click()
   menuActionENTDIC_TOWN =&quot;PRN&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNCfg_click()
   menuActionENTDIC_TOWN =&quot;CFG&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNFind_click()
   menuActionENTDIC_TOWN =&quot;FND&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNAcc_click()
   menuActionENTDIC_TOWN =&quot;ACC&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub menuTimerENTDIC_TOWN_timer()
   menuTimerENTDIC_TOWN.enabled = false
   if menuActionENTDIC_TOWN =&quot;ADD&quot; then cmdENTDIC_TOWNADD_CLick
   if menuActionENTDIC_TOWN =&quot;EDIT&quot; then cmdENTDIC_TOWNEDIT_CLick
   if menuActionENTDIC_TOWN =&quot;DEL&quot; then cmdENTDIC_TOWNDEL_CLick
   if menuActionENTDIC_TOWN =&quot;RUN&quot; then cmdENTDIC_TOWNRUN_CLick
   if menuActionENTDIC_TOWN =&quot;REF&quot; then cmdENTDIC_TOWNREF_CLick
   if menuActionENTDIC_TOWN =&quot;PRN&quot; then cmdENTDIC_TOWNPRN_CLick
   if menuActionENTDIC_TOWN =&quot;CFG&quot; then cmdENTDIC_TOWNCFG_CLick
   if menuActionENTDIC_TOWN =&quot;FND&quot; then cmdENTDIC_TOWNFND_CLick
   if menuActionENTDIC_TOWN =&quot;ACC&quot; then cmdENTDIC_TOWNACC_CLick
   menuActionENTDIC_TOWN =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_TOWNAdd,cmdENTDIC_TOWNAdd.tag
  LoadBtnPictures cmdENTDIC_TOWNEdit,cmdENTDIC_TOWNEdit.tag
  LoadBtnPictures cmdENTDIC_TOWNDel,cmdENTDIC_TOWNDel.tag
  LoadBtnPictures cmdENTDIC_TOWNRef,cmdENTDIC_TOWNRef.tag
  LoadBtnPictures cmdENTDIC_TOWNPrn,cmdENTDIC_TOWNPrn.tag
  LoadBtnPictures cmdENTDIC_TOWNFnd,cmdENTDIC_TOWNFnd.tag
  item.ENTDIC_TOWN.PrepareGrid gridENTDIC_TOWN
  LoadGridLayout gridENTDIC_TOWN
  Set fndENTDIC_TOWN = Nothing
  On Error Resume Next
  Set fndENTDIC_TOWN = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_TOWN.Init gridENTDIC_TOWN
end sub
private sub OnTabClick()

      gridENTDIC_TOWN.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_TOWN.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_TOWN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_TOWN = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_COUNTRY_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страны"/><Properties Name="Name" PropValue="mnuPopupENTDIC_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYOpen"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYRef"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYPrn"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_COUNTRY as object
private menuActionENTDIC_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_COUNTRY,&quot;gridENTDIC_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_COUNTRY,&quot;Страны&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_COUNTRYRef_Click()
  on error resume next
  item.ENTDIC_COUNTRY.Refresh
  gridENTDIC_COUNTRY.itemCount = item.ENTDIC_COUNTRY.count
  gridENTDIC_COUNTRY.Refetch
  gridENTDIC_COUNTRY.Refresh
End Sub
Private Sub cmdENTDIC_COUNTRYAcc_Click()
On Error Resume Next
If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
If gridENTDIC_COUNTRY.Row &gt; 0 Then
 If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_COUNTRYEdit_Click()
  on error resume next
If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
If gridENTDIC_COUNTRY.Row &gt; 0 then
 If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_COUNTRY_admi.Item = u
    again: frmENTDIC_COUNTRY_admi.NotFirstTime = False
    frmENTDIC_COUNTRY_admi.OnInit
    frmENTDIC_COUNTRY_admi.Show vbModal
    If frmENTDIC_COUNTRY_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_COUNTRYDel_Click()
  on error resume next
  gridENTDIC_COUNTRY.Delete
End Sub
Private Sub cmdENTDIC_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_COUNTRY.Add()

      Set frmENTDIC_COUNTRY_admi.Item = u
      again: frmENTDIC_COUNTRY_admi.NotFirstTime = False
      frmENTDIC_COUNTRY_admi.OnInit
      frmENTDIC_COUNTRY_admi.Show vbModal
      If frmENTDIC_COUNTRY_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_COUNTRY.ItemCount = Item.ENTDIC_COUNTRY.Count
        gridENTDIC_COUNTRY.Refresh
        gridENTDIC_COUNTRY.RefreshGroups
        gridENTDIC_COUNTRY.Refreshsort
        gridENTDIC_COUNTRY.MoveToBookmark u.ID &amp; &quot;ENTDIC_COUNTRY&quot;
      Else
        Item.ENTDIC_COUNTRY.Delete u.ID
        Item.ENTDIC_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_COUNTRYFnd_Click()
  on error resume next
  fndENTDIC_COUNTRY.ShowForm
End Sub
Private Sub cmdENTDIC_COUNTRYRun_Click()
  on error resume next
  gridENTDIC_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_COUNTRY.LoadRow gridENTDIC_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_COUNTRY&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_COUNTRY_DblClick()
  cmdENTDIC_COUNTRYEdit_Click
End Sub
Private Sub gridENTDIC_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_COUNTRY.Row And LastRow &gt; 0 Then
  gridENTDIC_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_COUNTRY.GetRowData(gridENTDIC_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_COUNTRY
End If
end sub
private sub mnuENTDIC_COUNTRYAdd_click()
   menuActionENTDIC_COUNTRY =&quot;ADD&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYEdit_click()
   menuActionENTDIC_COUNTRY =&quot;EDIT&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYDelete_click()
   menuActionENTDIC_COUNTRY =&quot;DEL&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYOpen_click()
   menuActionENTDIC_COUNTRY =&quot;RUN&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYRef_click()
   menuActionENTDIC_COUNTRY =&quot;REF&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
  Private Sub mnuENTDIC_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_COUNTRY.Row &gt; 0 Then
     If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_COUNTRYCUT_Click()
    On Error Resume Next
    If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_COUNTRY.Row &gt; 0 Then
     If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridENTDIC_COUNTRY.Row &gt; 0 Then
   If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_COUNTRY.ItemCount = u.parent.Count
      gridENTDIC_COUNTRY.RefreshRowIndex gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_COUNTRYPrn_click()
   menuActionENTDIC_COUNTRY =&quot;PRN&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYCfg_click()
   menuActionENTDIC_COUNTRY =&quot;CFG&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYFind_click()
   menuActionENTDIC_COUNTRY =&quot;FND&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYAcc_click()
   menuActionENTDIC_COUNTRY =&quot;ACC&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub menuTimerENTDIC_COUNTRY_timer()
   menuTimerENTDIC_COUNTRY.enabled = false
   if menuActionENTDIC_COUNTRY =&quot;ADD&quot; then cmdENTDIC_COUNTRYADD_CLick
   if menuActionENTDIC_COUNTRY =&quot;EDIT&quot; then cmdENTDIC_COUNTRYEDIT_CLick
   if menuActionENTDIC_COUNTRY =&quot;DEL&quot; then cmdENTDIC_COUNTRYDEL_CLick
   if menuActionENTDIC_COUNTRY =&quot;RUN&quot; then cmdENTDIC_COUNTRYRUN_CLick
   if menuActionENTDIC_COUNTRY =&quot;REF&quot; then cmdENTDIC_COUNTRYREF_CLick
   if menuActionENTDIC_COUNTRY =&quot;PRN&quot; then cmdENTDIC_COUNTRYPRN_CLick
   if menuActionENTDIC_COUNTRY =&quot;CFG&quot; then cmdENTDIC_COUNTRYCFG_CLick
   if menuActionENTDIC_COUNTRY =&quot;FND&quot; then cmdENTDIC_COUNTRYFND_CLick
   if menuActionENTDIC_COUNTRY =&quot;ACC&quot; then cmdENTDIC_COUNTRYACC_CLick
   menuActionENTDIC_COUNTRY =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_COUNTRYAdd,cmdENTDIC_COUNTRYAdd.tag
  LoadBtnPictures cmdENTDIC_COUNTRYEdit,cmdENTDIC_COUNTRYEdit.tag
  LoadBtnPictures cmdENTDIC_COUNTRYDel,cmdENTDIC_COUNTRYDel.tag
  LoadBtnPictures cmdENTDIC_COUNTRYRef,cmdENTDIC_COUNTRYRef.tag
  LoadBtnPictures cmdENTDIC_COUNTRYPrn,cmdENTDIC_COUNTRYPrn.tag
  LoadBtnPictures cmdENTDIC_COUNTRYFnd,cmdENTDIC_COUNTRYFnd.tag
  item.ENTDIC_COUNTRY.PrepareGrid gridENTDIC_COUNTRY
  LoadGridLayout gridENTDIC_COUNTRY
  Set fndENTDIC_COUNTRY = Nothing
  On Error Resume Next
  Set fndENTDIC_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_COUNTRY.Init gridENTDIC_COUNTRY
end sub
private sub OnTabClick()

      gridENTDIC_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_TransportType_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_TransportType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_TransportType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_TransportType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_TransportType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_TransportTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_TransportType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип транспорта"/><Properties Name="Name" PropValue="mnuPopupENTDIC_TransportType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_TransportTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeOpen"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeRef"/></ControlData><ControlData Name="mnuENTDIC_TransportTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypePrn"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_TransportType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_TransportType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_TransportType as object
private menuActionENTDIC_TransportType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_TransportTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_TransportType,&quot;gridENTDIC_TransportType&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TransportTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_TransportType,&quot;Тип транспорта&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TransportTypeRef_Click()
  on error resume next
  item.ENTDIC_TransportType.Refresh
  gridENTDIC_TransportType.itemCount = item.ENTDIC_TransportType.count
  gridENTDIC_TransportType.Refetch
  gridENTDIC_TransportType.Refresh
End Sub
Private Sub cmdENTDIC_TransportTypeAcc_Click()
On Error Resume Next
If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
If gridENTDIC_TransportType.Row &gt; 0 Then
 If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_TransportTypeEdit_Click()
  on error resume next
If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
If gridENTDIC_TransportType.Row &gt; 0 then
 If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_TransportType_admi.Item = u
    again: frmENTDIC_TransportType_admi.NotFirstTime = False
    frmENTDIC_TransportType_admi.OnInit
    frmENTDIC_TransportType_admi.Show vbModal
    If frmENTDIC_TransportType_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_TransportType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_TransportTypeDel_Click()
  on error resume next
  gridENTDIC_TransportType.Delete
End Sub
Private Sub cmdENTDIC_TransportTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_TransportType.Add()

      Set frmENTDIC_TransportType_admi.Item = u
      again: frmENTDIC_TransportType_admi.NotFirstTime = False
      frmENTDIC_TransportType_admi.OnInit
      frmENTDIC_TransportType_admi.Show vbModal
      If frmENTDIC_TransportType_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_TransportType.ItemCount = Item.ENTDIC_TransportType.Count
        gridENTDIC_TransportType.Refresh
        gridENTDIC_TransportType.RefreshGroups
        gridENTDIC_TransportType.Refreshsort
        gridENTDIC_TransportType.MoveToBookmark u.ID &amp; &quot;ENTDIC_TransportType&quot;
      Else
        Item.ENTDIC_TransportType.Delete u.ID
        Item.ENTDIC_TransportType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_TransportTypeFnd_Click()
  on error resume next
  fndENTDIC_TransportType.ShowForm
End Sub
Private Sub cmdENTDIC_TransportTypeRun_Click()
  on error resume next
  gridENTDIC_TransportType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_TransportType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_TransportType.LoadRow gridENTDIC_TransportType, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_TransportType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_TransportType&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_TransportType_DblClick()
  cmdENTDIC_TransportTypeEdit_Click
End Sub
Private Sub gridENTDIC_TransportType_KeyPress(KeyAscii As Integer)
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_TransportType.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_TransportType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_TransportType.Row And LastRow &gt; 0 Then
  gridENTDIC_TransportType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_TransportType.GetRowData(gridENTDIC_TransportType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_TransportTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_TransportType.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_TransportType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_TransportType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_TransportTypeCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_TransportType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_TransportType
End If
end sub
private sub mnuENTDIC_TransportTypeAdd_click()
   menuActionENTDIC_TransportType =&quot;ADD&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeEdit_click()
   menuActionENTDIC_TransportType =&quot;EDIT&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeDelete_click()
   menuActionENTDIC_TransportType =&quot;DEL&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeOpen_click()
   menuActionENTDIC_TransportType =&quot;RUN&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeRef_click()
   menuActionENTDIC_TransportType =&quot;REF&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
  Private Sub mnuENTDIC_TransportTypeCOPY_Click()
    On Error Resume Next
    If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TransportType.Row &gt; 0 Then
     If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_TransportTypeCUT_Click()
    On Error Resume Next
    If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TransportType.Row &gt; 0 Then
     If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_TransportType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_TransportTypeCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  If gridENTDIC_TransportType.Row &gt; 0 Then
   If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_TransportType.ItemCount = u.parent.Count
      gridENTDIC_TransportType.RefreshRowIndex gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_TransportTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_TransportTypePrn_click()
   menuActionENTDIC_TransportType =&quot;PRN&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeCfg_click()
   menuActionENTDIC_TransportType =&quot;CFG&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeFind_click()
   menuActionENTDIC_TransportType =&quot;FND&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeAcc_click()
   menuActionENTDIC_TransportType =&quot;ACC&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub menuTimerENTDIC_TransportType_timer()
   menuTimerENTDIC_TransportType.enabled = false
   if menuActionENTDIC_TransportType =&quot;ADD&quot; then cmdENTDIC_TransportTypeADD_CLick
   if menuActionENTDIC_TransportType =&quot;EDIT&quot; then cmdENTDIC_TransportTypeEDIT_CLick
   if menuActionENTDIC_TransportType =&quot;DEL&quot; then cmdENTDIC_TransportTypeDEL_CLick
   if menuActionENTDIC_TransportType =&quot;RUN&quot; then cmdENTDIC_TransportTypeRUN_CLick
   if menuActionENTDIC_TransportType =&quot;REF&quot; then cmdENTDIC_TransportTypeREF_CLick
   if menuActionENTDIC_TransportType =&quot;PRN&quot; then cmdENTDIC_TransportTypePRN_CLick
   if menuActionENTDIC_TransportType =&quot;CFG&quot; then cmdENTDIC_TransportTypeCFG_CLick
   if menuActionENTDIC_TransportType =&quot;FND&quot; then cmdENTDIC_TransportTypeFND_CLick
   if menuActionENTDIC_TransportType =&quot;ACC&quot; then cmdENTDIC_TransportTypeACC_CLick
   menuActionENTDIC_TransportType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_TransportTypeAdd,cmdENTDIC_TransportTypeAdd.tag
  LoadBtnPictures cmdENTDIC_TransportTypeEdit,cmdENTDIC_TransportTypeEdit.tag
  LoadBtnPictures cmdENTDIC_TransportTypeDel,cmdENTDIC_TransportTypeDel.tag
  LoadBtnPictures cmdENTDIC_TransportTypeRef,cmdENTDIC_TransportTypeRef.tag
  LoadBtnPictures cmdENTDIC_TransportTypePrn,cmdENTDIC_TransportTypePrn.tag
  LoadBtnPictures cmdENTDIC_TransportTypeFnd,cmdENTDIC_TransportTypeFnd.tag
  item.ENTDIC_TransportType.PrepareGrid gridENTDIC_TransportType
  LoadGridLayout gridENTDIC_TransportType
  Set fndENTDIC_TransportType = Nothing
  On Error Resume Next
  Set fndENTDIC_TransportType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_TransportType.Init gridENTDIC_TransportType
end sub
private sub OnTabClick()

      gridENTDIC_TransportType.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_TransportType.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_TransportType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_TransportType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_OPF_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_OPF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_OPF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_OPF" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_OPF"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_OPFAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_OPFPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_OPFFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_OPF" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Организационно-правовая форма"/><Properties Name="Name" PropValue="mnuPopupENTDIC_OPF"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_OPFAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_OPFAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_OPFEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_OPFOpen"/></ControlData><ControlData Name="mnuENTDIC_OPFRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFRef"/></ControlData><ControlData Name="mnuENTDIC_OPFPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_OPFPrn"/></ControlData><ControlData Name="mnuENTDIC_OPFCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_OPF" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_OPF"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_OPF as object
private menuActionENTDIC_OPF as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_OPFCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_OPF,&quot;gridENTDIC_OPF&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_OPFPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_OPF,&quot;Организационно-правовая форма&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_OPFRef_Click()
  on error resume next
  item.ENTDIC_OPF.Refresh
  gridENTDIC_OPF.itemCount = item.ENTDIC_OPF.count
  gridENTDIC_OPF.Refetch
  gridENTDIC_OPF.Refresh
End Sub
Private Sub cmdENTDIC_OPFAcc_Click()
On Error Resume Next
If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
If gridENTDIC_OPF.Row &gt; 0 Then
 If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_OPFEdit_Click()
  on error resume next
If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
If gridENTDIC_OPF.Row &gt; 0 then
 If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_OPF_admi.Item = u
    again: frmENTDIC_OPF_admi.NotFirstTime = False
    frmENTDIC_OPF_admi.OnInit
    frmENTDIC_OPF_admi.Show vbModal
    If frmENTDIC_OPF_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_OPF.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_OPFDel_Click()
  on error resume next
  gridENTDIC_OPF.Delete
End Sub
Private Sub cmdENTDIC_OPFAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_OPF.Add()

      Set frmENTDIC_OPF_admi.Item = u
      again: frmENTDIC_OPF_admi.NotFirstTime = False
      frmENTDIC_OPF_admi.OnInit
      frmENTDIC_OPF_admi.Show vbModal
      If frmENTDIC_OPF_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_OPF.ItemCount = Item.ENTDIC_OPF.Count
        gridENTDIC_OPF.Refresh
        gridENTDIC_OPF.RefreshGroups
        gridENTDIC_OPF.Refreshsort
        gridENTDIC_OPF.MoveToBookmark u.ID &amp; &quot;ENTDIC_OPF&quot;
      Else
        Item.ENTDIC_OPF.Delete u.ID
        Item.ENTDIC_OPF.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_OPFFnd_Click()
  on error resume next
  fndENTDIC_OPF.ShowForm
End Sub
Private Sub cmdENTDIC_OPFRun_Click()
  on error resume next
  gridENTDIC_OPF_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_OPF_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_OPF.LoadRow gridENTDIC_OPF, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_OPF_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_OPF&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_OPF_DblClick()
  cmdENTDIC_OPFEdit_Click
End Sub
Private Sub gridENTDIC_OPF_KeyPress(KeyAscii As Integer)
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_OPF.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_OPF_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_OPF.Row And LastRow &gt; 0 Then
  gridENTDIC_OPF.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_OPF.GetRowData(gridENTDIC_OPF.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_OPFPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_OPF.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_OPF.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_OPF_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_OPFCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_OPF_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_OPF
End If
end sub
private sub mnuENTDIC_OPFAdd_click()
   menuActionENTDIC_OPF =&quot;ADD&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFEdit_click()
   menuActionENTDIC_OPF =&quot;EDIT&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFDelete_click()
   menuActionENTDIC_OPF =&quot;DEL&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFOpen_click()
   menuActionENTDIC_OPF =&quot;RUN&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFRef_click()
   menuActionENTDIC_OPF =&quot;REF&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
  Private Sub mnuENTDIC_OPFCOPY_Click()
    On Error Resume Next
    If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
    If gridENTDIC_OPF.Row &gt; 0 Then
     If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_OPFCUT_Click()
    On Error Resume Next
    If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
    If gridENTDIC_OPF.Row &gt; 0 Then
     If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_OPF.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_OPFCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  If gridENTDIC_OPF.Row &gt; 0 Then
   If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_OPF.ItemCount = u.parent.Count
      gridENTDIC_OPF.RefreshRowIndex gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_OPFCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_OPFPrn_click()
   menuActionENTDIC_OPF =&quot;PRN&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFCfg_click()
   menuActionENTDIC_OPF =&quot;CFG&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFFind_click()
   menuActionENTDIC_OPF =&quot;FND&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFAcc_click()
   menuActionENTDIC_OPF =&quot;ACC&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub menuTimerENTDIC_OPF_timer()
   menuTimerENTDIC_OPF.enabled = false
   if menuActionENTDIC_OPF =&quot;ADD&quot; then cmdENTDIC_OPFADD_CLick
   if menuActionENTDIC_OPF =&quot;EDIT&quot; then cmdENTDIC_OPFEDIT_CLick
   if menuActionENTDIC_OPF =&quot;DEL&quot; then cmdENTDIC_OPFDEL_CLick
   if menuActionENTDIC_OPF =&quot;RUN&quot; then cmdENTDIC_OPFRUN_CLick
   if menuActionENTDIC_OPF =&quot;REF&quot; then cmdENTDIC_OPFREF_CLick
   if menuActionENTDIC_OPF =&quot;PRN&quot; then cmdENTDIC_OPFPRN_CLick
   if menuActionENTDIC_OPF =&quot;CFG&quot; then cmdENTDIC_OPFCFG_CLick
   if menuActionENTDIC_OPF =&quot;FND&quot; then cmdENTDIC_OPFFND_CLick
   if menuActionENTDIC_OPF =&quot;ACC&quot; then cmdENTDIC_OPFACC_CLick
   menuActionENTDIC_OPF =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_OPFAdd,cmdENTDIC_OPFAdd.tag
  LoadBtnPictures cmdENTDIC_OPFEdit,cmdENTDIC_OPFEdit.tag
  LoadBtnPictures cmdENTDIC_OPFDel,cmdENTDIC_OPFDel.tag
  LoadBtnPictures cmdENTDIC_OPFRef,cmdENTDIC_OPFRef.tag
  LoadBtnPictures cmdENTDIC_OPFPrn,cmdENTDIC_OPFPrn.tag
  LoadBtnPictures cmdENTDIC_OPFFnd,cmdENTDIC_OPFFnd.tag
  item.ENTDIC_OPF.PrepareGrid gridENTDIC_OPF
  LoadGridLayout gridENTDIC_OPF
  Set fndENTDIC_OPF = Nothing
  On Error Resume Next
  Set fndENTDIC_OPF = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_OPF.Init gridENTDIC_OPF
end sub
private sub OnTabClick()

      gridENTDIC_OPF.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_OPF.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_OPF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_OPF = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctladmi_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_EDIZM" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_EDIZM_admi"><Properties Name="Name" PropValue="pnlENTDIC_EDIZM"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_BANK" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_BANK_admi"><Properties Name="Name" PropValue="pnlENTDIC_BANK"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_CURRENCY" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_CURRENCY_admi"><Properties Name="Name" PropValue="pnlENTDIC_CURRENCY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_DOST" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_DOST_admi"><Properties Name="Name" PropValue="pnlENTDIC_DOST"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_REGION" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_REGION_admi"><Properties Name="Name" PropValue="pnlENTDIC_REGION"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_TOWN" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_TOWN_admi"><Properties Name="Name" PropValue="pnlENTDIC_TOWN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_COUNTRY" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_COUNTRY_admi"><Properties Name="Name" PropValue="pnlENTDIC_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_TransportType" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_TransportType_admi"><Properties Name="Name" PropValue="pnlENTDIC_TransportType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_OPF" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_OPF_admi"><Properties Name="Name" PropValue="pnlENTDIC_OPF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: общие классификаторы"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlENTDIC_EDIZM.IsOK
if IsItOk then IsItOk = pnlENTDIC_BANK.IsOK
if IsItOk then IsItOk = pnlENTDIC_CURRENCY.IsOK
if IsItOk then IsItOk = pnlENTDIC_DOST.IsOK
if IsItOk then IsItOk = pnlENTDIC_REGION.IsOK
if IsItOk then IsItOk = pnlENTDIC_TOWN.IsOK
if IsItOk then IsItOk = pnlENTDIC_COUNTRY.IsOK
if IsItOk then IsItOk = pnlENTDIC_TransportType.IsOK
if IsItOk then IsItOk = pnlENTDIC_OPF.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlENTDIC_OPF.Visible = False
  pnlENTDIC_TransportType.Visible = False
  pnlENTDIC_COUNTRY.Visible = False
  pnlENTDIC_TOWN.Visible = False
  pnlENTDIC_REGION.Visible = False
  pnlENTDIC_DOST.Visible = False
  pnlENTDIC_CURRENCY.Visible = False
  pnlENTDIC_BANK.Visible = False
  pnlENTDIC_EDIZM.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ENTDIC_EDIZM&quot;
     With pnlENTDIC_EDIZM
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_EDIZM.OnClick item,parentform
     End With
   Case &quot;ENTDIC_BANK&quot;
     With pnlENTDIC_BANK
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_BANK.OnClick item,parentform
     End With
   Case &quot;ENTDIC_CURRENCY&quot;
     With pnlENTDIC_CURRENCY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_CURRENCY.OnClick item,parentform
     End With
   Case &quot;ENTDIC_DOST&quot;
     With pnlENTDIC_DOST
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_DOST.OnClick item,parentform
     End With
   Case &quot;ENTDIC_REGION&quot;
     With pnlENTDIC_REGION
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_REGION.OnClick item,parentform
     End With
   Case &quot;ENTDIC_TOWN&quot;
     With pnlENTDIC_TOWN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_TOWN.OnClick item,parentform
     End With
   Case &quot;ENTDIC_COUNTRY&quot;
     With pnlENTDIC_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ENTDIC_TransportType&quot;
     With pnlENTDIC_TransportType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_TransportType.OnClick item,parentform
     End With
   Case &quot;ENTDIC_OPF&quot;
     With pnlENTDIC_OPF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_OPF.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Единицы измерения&quot;
ts.Tabs.Item(1).key = &quot;ENTDIC_EDIZM&quot;
pnlENTDIC_EDIZM.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_BANK&quot;, &quot;Банки&quot;)
pnlENTDIC_BANK.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_CURRENCY&quot;, &quot;Валюта&quot;)
pnlENTDIC_CURRENCY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_DOST&quot;, &quot;Тип доставки&quot;)
pnlENTDIC_DOST.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_REGION&quot;, &quot;Название областей&quot;)
pnlENTDIC_REGION.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_TOWN&quot;, &quot;Города&quot;)
pnlENTDIC_TOWN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_COUNTRY&quot;, &quot;Страны&quot;)
pnlENTDIC_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_TransportType&quot;, &quot;Тип транспорта&quot;)
pnlENTDIC_TransportType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_OPF&quot;, &quot;Организационно-правовая форма&quot;)
pnlENTDIC_OPF.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ENTDIC2&quot;, &quot;ctladmi_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlENTDIC_EDIZM.CloseClass
 pnlENTDIC_BANK.CloseClass
 pnlENTDIC_CURRENCY.CloseClass
 pnlENTDIC_DOST.CloseClass
 pnlENTDIC_REGION.CloseClass
 pnlENTDIC_TOWN.CloseClass
 pnlENTDIC_COUNTRY.CloseClass
 pnlENTDIC_TransportType.CloseClass
 pnlENTDIC_OPF.CloseClass
End Sub
public sub OnSave()
 pnlENTDIC_EDIZM.OnSave
 pnlENTDIC_BANK.OnSave
 pnlENTDIC_CURRENCY.OnSave
 pnlENTDIC_DOST.OnSave
 pnlENTDIC_REGION.OnSave
 pnlENTDIC_TOWN.OnSave
 pnlENTDIC_COUNTRY.OnSave
 pnlENTDIC_TransportType.OnSave
 pnlENTDIC_OPF.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlENTDIC_EDIZM.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_BANK.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_CURRENCY.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_DOST.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_REGION.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_TOWN.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_TransportType.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_OPF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmadmi_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ENTDIC2GUI.ctladmi_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: общие классификаторы"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_EDIZM_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_EDIZM"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_EDIZM" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_EDIZM"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_EDIZMAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_EDIZMRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_EDIZMPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_EDIZMFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_EDIZMFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Единицы измерения"/><Properties Name="Name" PropValue="mnuPopupENTDIC_EDIZM"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_EDIZMAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_EDIZMOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMOpen"/></ControlData><ControlData Name="mnuENTDIC_EDIZMRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMRef"/></ControlData><ControlData Name="mnuENTDIC_EDIZMPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMPrn"/></ControlData><ControlData Name="mnuENTDIC_EDIZMCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_EDIZMCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_EDIZM" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_EDIZM"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_EDIZM as object
private menuActionENTDIC_EDIZM as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_EDIZMCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_EDIZM,&quot;gridENTDIC_EDIZM&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_EDIZMPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_EDIZM,&quot;Единицы измерения&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_EDIZMRef_Click()
  on error resume next
  item.ENTDIC_EDIZM.Refresh
  gridENTDIC_EDIZM.itemCount = item.ENTDIC_EDIZM.count
  gridENTDIC_EDIZM.Refetch
  gridENTDIC_EDIZM.Refresh
End Sub
Private Sub cmdENTDIC_EDIZMAcc_Click()
On Error Resume Next
If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
If gridENTDIC_EDIZM.Row &gt; 0 Then
 If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_EDIZMEdit_Click()
  on error resume next
If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
If gridENTDIC_EDIZM.Row &gt; 0 then
 If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_EDIZM_.Item = u
    again: frmENTDIC_EDIZM_.NotFirstTime = False
    frmENTDIC_EDIZM_.OnInit
    frmENTDIC_EDIZM_.Show vbModal
    If frmENTDIC_EDIZM_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_EDIZM.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_EDIZMDel_Click()
  on error resume next
  gridENTDIC_EDIZM.Delete
End Sub
Private Sub cmdENTDIC_EDIZMAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_EDIZM.Add()

      Set frmENTDIC_EDIZM_.Item = u
      again: frmENTDIC_EDIZM_.NotFirstTime = False
      frmENTDIC_EDIZM_.OnInit
      frmENTDIC_EDIZM_.Show vbModal
      If frmENTDIC_EDIZM_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_EDIZM.ItemCount = Item.ENTDIC_EDIZM.Count
        gridENTDIC_EDIZM.Refresh
        gridENTDIC_EDIZM.RefreshGroups
        gridENTDIC_EDIZM.Refreshsort
        gridENTDIC_EDIZM.MoveToBookmark u.ID &amp; &quot;ENTDIC_EDIZM&quot;
      Else
        Item.ENTDIC_EDIZM.Delete u.ID
        Item.ENTDIC_EDIZM.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_EDIZMFnd_Click()
  on error resume next
  fndENTDIC_EDIZM.ShowForm
End Sub
Private Sub cmdENTDIC_EDIZMRun_Click()
  on error resume next
  gridENTDIC_EDIZM_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_EDIZM_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_EDIZM.LoadRow gridENTDIC_EDIZM, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_EDIZM_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_EDIZM&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_EDIZM_DblClick()
  cmdENTDIC_EDIZMEdit_Click
End Sub
Private Sub gridENTDIC_EDIZM_KeyPress(KeyAscii As Integer)
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_EDIZM.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_EDIZM_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_EDIZM.Row And LastRow &gt; 0 Then
  gridENTDIC_EDIZM.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_EDIZM.GetRowData(gridENTDIC_EDIZM.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_EDIZMPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_EDIZM.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_EDIZM.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_EDIZM_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_EDIZMCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_EDIZM_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_EDIZM
End If
end sub
private sub mnuENTDIC_EDIZMAdd_click()
   menuActionENTDIC_EDIZM =&quot;ADD&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMEdit_click()
   menuActionENTDIC_EDIZM =&quot;EDIT&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMDelete_click()
   menuActionENTDIC_EDIZM =&quot;DEL&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMOpen_click()
   menuActionENTDIC_EDIZM =&quot;RUN&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMRef_click()
   menuActionENTDIC_EDIZM =&quot;REF&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
  Private Sub mnuENTDIC_EDIZMCOPY_Click()
    On Error Resume Next
    If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
    If gridENTDIC_EDIZM.Row &gt; 0 Then
     If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_EDIZMCUT_Click()
    On Error Resume Next
    If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
    If gridENTDIC_EDIZM.Row &gt; 0 Then
     If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_EDIZM.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_EDIZMCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_EDIZM.ItemCount = 0 Then Exit Sub
  If gridENTDIC_EDIZM.Row &gt; 0 Then
   If gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_EDIZM.RowBookmark(gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_EDIZM.ItemCount = u.parent.Count
      gridENTDIC_EDIZM.RefreshRowIndex gridENTDIC_EDIZM.RowIndex(gridENTDIC_EDIZM.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_EDIZMCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_EDIZMPrn_click()
   menuActionENTDIC_EDIZM =&quot;PRN&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMCfg_click()
   menuActionENTDIC_EDIZM =&quot;CFG&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMFind_click()
   menuActionENTDIC_EDIZM =&quot;FND&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub mnuENTDIC_EDIZMAcc_click()
   menuActionENTDIC_EDIZM =&quot;ACC&quot;
   menuTimerENTDIC_EDIZM.enabled = true
end sub
private sub menuTimerENTDIC_EDIZM_timer()
   menuTimerENTDIC_EDIZM.enabled = false
   if menuActionENTDIC_EDIZM =&quot;ADD&quot; then cmdENTDIC_EDIZMADD_CLick
   if menuActionENTDIC_EDIZM =&quot;EDIT&quot; then cmdENTDIC_EDIZMEDIT_CLick
   if menuActionENTDIC_EDIZM =&quot;DEL&quot; then cmdENTDIC_EDIZMDEL_CLick
   if menuActionENTDIC_EDIZM =&quot;RUN&quot; then cmdENTDIC_EDIZMRUN_CLick
   if menuActionENTDIC_EDIZM =&quot;REF&quot; then cmdENTDIC_EDIZMREF_CLick
   if menuActionENTDIC_EDIZM =&quot;PRN&quot; then cmdENTDIC_EDIZMPRN_CLick
   if menuActionENTDIC_EDIZM =&quot;CFG&quot; then cmdENTDIC_EDIZMCFG_CLick
   if menuActionENTDIC_EDIZM =&quot;FND&quot; then cmdENTDIC_EDIZMFND_CLick
   if menuActionENTDIC_EDIZM =&quot;ACC&quot; then cmdENTDIC_EDIZMACC_CLick
   menuActionENTDIC_EDIZM =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_EDIZMAdd,cmdENTDIC_EDIZMAdd.tag
  LoadBtnPictures cmdENTDIC_EDIZMEdit,cmdENTDIC_EDIZMEdit.tag
  LoadBtnPictures cmdENTDIC_EDIZMDel,cmdENTDIC_EDIZMDel.tag
  LoadBtnPictures cmdENTDIC_EDIZMRef,cmdENTDIC_EDIZMRef.tag
  LoadBtnPictures cmdENTDIC_EDIZMPrn,cmdENTDIC_EDIZMPrn.tag
  LoadBtnPictures cmdENTDIC_EDIZMFnd,cmdENTDIC_EDIZMFnd.tag
  item.ENTDIC_EDIZM.PrepareGrid gridENTDIC_EDIZM
  LoadGridLayout gridENTDIC_EDIZM
  Set fndENTDIC_EDIZM = Nothing
  On Error Resume Next
  Set fndENTDIC_EDIZM = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_EDIZM.Init gridENTDIC_EDIZM
end sub
private sub OnTabClick()

      gridENTDIC_EDIZM.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_EDIZM.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_EDIZM.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_EDIZM.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_EDIZM = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_BANK_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_BANK" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlENTDIC_BANK"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridENTDIC_BANK" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_BANK"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_BANKAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_BANKRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_BANKPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_BANKFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_BANKFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridENTDIC_1CLINK" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_1CLINK"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_1CLINKAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_1CLINKRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_1CLINKPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_1CLINKFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_1CLINKFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_BANK" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Банки"/><Properties Name="Name" PropValue="mnuPopupENTDIC_BANK"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_BANKAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_BANKAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_BANKEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_BANKOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_BANKOpen"/></ControlData><ControlData Name="mnuENTDIC_BANKRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKRef"/></ControlData><ControlData Name="mnuENTDIC_BANKPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_BANKPrn"/></ControlData><ControlData Name="mnuENTDIC_BANKCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_BANKCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_BANK" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_BANK"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupENTDIC_1CLINK" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Связь с 1С"/><Properties Name="Name" PropValue="mnuPopupENTDIC_1CLINK"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_1CLINKAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_1CLINKOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKOpen"/></ControlData><ControlData Name="mnuENTDIC_1CLINKRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKRef"/></ControlData><ControlData Name="mnuENTDIC_1CLINKPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKPrn"/></ControlData><ControlData Name="mnuENTDIC_1CLINKCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_1CLINKCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_1CLINK" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_1CLINK"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_BANK as object
private menuActionENTDIC_BANK as string
private fndENTDIC_1CLINK as object
private menuActionENTDIC_1CLINK as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlENTDIC_BANK_PositionChanged()
  pnlENTDIC_BANK.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_BANK_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_BANKCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_BANK_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_BANK
End If
end sub
private sub mnuENTDIC_BANKAdd_click()
   menuActionENTDIC_BANK =&quot;ADD&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKEdit_click()
   menuActionENTDIC_BANK =&quot;EDIT&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKDelete_click()
   menuActionENTDIC_BANK =&quot;DEL&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKOpen_click()
   menuActionENTDIC_BANK =&quot;RUN&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKRef_click()
   menuActionENTDIC_BANK =&quot;REF&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
  Private Sub mnuENTDIC_BANKCOPY_Click()
    On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_BANK.Row &gt; 0 Then
     If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_BANKCUT_Click()
    On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_BANK.Row &gt; 0 Then
     If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_BANK.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_BANKCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  If gridENTDIC_BANK.Row &gt; 0 Then
   If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_BANK.ItemCount = u.parent.Count
      gridENTDIC_BANK.RefreshRowIndex gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_BANKCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_BANKPrn_click()
   menuActionENTDIC_BANK =&quot;PRN&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKCfg_click()
   menuActionENTDIC_BANK =&quot;CFG&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKFind_click()
   menuActionENTDIC_BANK =&quot;FND&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub mnuENTDIC_BANKAcc_click()
   menuActionENTDIC_BANK =&quot;ACC&quot;
   menuTimerENTDIC_BANK.enabled = true
end sub
private sub menuTimerENTDIC_BANK_timer()
   menuTimerENTDIC_BANK.enabled = false
   if menuActionENTDIC_BANK =&quot;ADD&quot; then cmdENTDIC_BANKADD_CLick
   if menuActionENTDIC_BANK =&quot;EDIT&quot; then cmdENTDIC_BANKEDIT_CLick
   if menuActionENTDIC_BANK =&quot;DEL&quot; then cmdENTDIC_BANKDEL_CLick
   if menuActionENTDIC_BANK =&quot;RUN&quot; then cmdENTDIC_BANKRUN_CLick
   if menuActionENTDIC_BANK =&quot;REF&quot; then cmdENTDIC_BANKREF_CLick
   if menuActionENTDIC_BANK =&quot;PRN&quot; then cmdENTDIC_BANKPRN_CLick
   if menuActionENTDIC_BANK =&quot;CFG&quot; then cmdENTDIC_BANKCFG_CLick
   if menuActionENTDIC_BANK =&quot;FND&quot; then cmdENTDIC_BANKFND_CLick
   if menuActionENTDIC_BANK =&quot;ACC&quot; then cmdENTDIC_BANKACC_CLick
   menuActionENTDIC_BANK =&quot;&quot;
end sub
Private Sub cmdENTDIC_BANKCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_BANK,&quot;gridENTDIC_BANK&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_BANKPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_BANK,&quot;Банки&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_BANKRef_Click()
  on error resume next
  item.ENTDIC_BANK.Refresh
  gridENTDIC_BANK.itemCount = item.ENTDIC_BANK.count
  gridENTDIC_BANK.Refetch
  gridENTDIC_BANK.Refresh
End Sub
Private Sub cmdENTDIC_BANKAcc_Click()
On Error Resume Next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 Then
 If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_BANKEdit_Click()
  on error resume next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 then
 If gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_BANK_.Item = u
    again: frmENTDIC_BANK_.NotFirstTime = False
    frmENTDIC_BANK_.OnInit
    frmENTDIC_BANK_.Show vbModal
    If frmENTDIC_BANK_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_BANK.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_BANKDel_Click()
  on error resume next
  gridENTDIC_BANK.Delete
End Sub
Private Sub cmdENTDIC_BANKAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_BANK.Add()

      Set frmENTDIC_BANK_.Item = u
      again: frmENTDIC_BANK_.NotFirstTime = False
      frmENTDIC_BANK_.OnInit
      frmENTDIC_BANK_.Show vbModal
      If frmENTDIC_BANK_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_BANK.ItemCount = Item.ENTDIC_BANK.Count
        gridENTDIC_BANK.Refresh
        gridENTDIC_BANK.RefreshGroups
        gridENTDIC_BANK.Refreshsort
        gridENTDIC_BANK.MoveToBookmark u.ID &amp; &quot;ENTDIC_BANK&quot;
      Else
        Item.ENTDIC_BANK.Delete u.ID
        Item.ENTDIC_BANK.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_BANKFnd_Click()
  on error resume next
  fndENTDIC_BANK.ShowForm
End Sub
Private Sub cmdENTDIC_BANKRun_Click()
  on error resume next
  gridENTDIC_BANK_DblClick
End Sub
Private Sub gridENTDIC_BANK_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_BANK.LoadRow gridENTDIC_BANK, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_BANK_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_BANK_DblClick()
  cmdENTDIC_BANKEdit_Click
End Sub
Private Sub gridENTDIC_BANK_KeyPress(KeyAscii As Integer)
  If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_BANK.FindOnPress KeyAscii
End Sub

Private Sub pnlENTDIC_BANK_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridENTDIC_BANK.Left = Left
  gridENTDIC_BANK.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_BANK.Width = Width
  gridENTDIC_BANK.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_BANKAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_BANKAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdENTDIC_BANKEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_BANKDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_BANKRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_BANKPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_BANKFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuENTDIC_BANKPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_BANK.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_BANK.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdENTDIC_1CLINKCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_1CLINK,&quot;gridENTDIC_1CLINK&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_1CLINKPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_1CLINK,&quot;Связь с 1С&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_1CLINKAcc_Click()
On Error Resume Next
If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
If gridENTDIC_1CLINK.Row &gt; 0 Then
 If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_1CLINKFnd_Click()
  on error resume next
  fndENTDIC_1CLINK.ShowForm
End Sub
Private Sub cmdENTDIC_1CLINKRun_Click()
  on error resume next
  gridENTDIC_1CLINK_DblClick
End Sub
Private Sub pnlENTDIC_BANK_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridENTDIC_1CLINK.Left = Left
  gridENTDIC_1CLINK.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_1CLINK.Width = Width
  gridENTDIC_1CLINK.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_1CLINKAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_1CLINKAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdENTDIC_1CLINKEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_1CLINKFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdENTDIC_1CLINKRef_Click()
  on error resume next
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
If gridENTDIC_BANK.Row &gt; 0 Then
 If gridENTDIC_BANK.RowIndex ( gridENTDIC_BANK.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_1CLINK.refresh
   gridENTDIC_1CLINK.itemcount=gu.ENTDIC_1CLINK.count
   gridENTDIC_1CLINK.refetch
   gridENTDIC_1CLINK.refresh
 else
  gridENTDIC_1CLINK.columns.clear
  gridENTDIC_1CLINK.itemcount=0
 End If
else
 gridENTDIC_1CLINK.columns.clear
 gridENTDIC_1CLINK.itemcount=0
End If
End Sub
Private Sub cmdENTDIC_1CLINKEdit_Click()
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmENTDIC_1CLINK_.Item = u
    again: frmENTDIC_1CLINK_.NotFirstTime = False
    frmENTDIC_1CLINK_.OnInit
    frmENTDIC_1CLINK_.Show vbModal
    If frmENTDIC_1CLINK_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_1CLINK.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdENTDIC_1CLINKDel_Click()
  on error resume next
  gridENTDIC_1CLINK.Delete
End Sub
Private Sub cmdENTDIC_1CLINKAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ENTDIC_1CLINK.Add()

      Set frmENTDIC_1CLINK_.Item = u
      again: frmENTDIC_1CLINK_.NotFirstTime = False
      frmENTDIC_1CLINK_.OnInit
      frmENTDIC_1CLINK_.Show vbModal
      If frmENTDIC_1CLINK_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_1CLINK.ItemCount = gu.ENTDIC_1CLINK.Count
        gridENTDIC_1CLINK.Refresh
        gridENTDIC_1CLINK.RefreshGroups
        gridENTDIC_1CLINK.Refreshsort
        gridENTDIC_1CLINK.MoveToBookmark u.ID &amp; &quot;ENTDIC_1CLINK&quot;
      Else
        gu.ENTDIC_1CLINK.Delete u.ID
        gu.ENTDIC_1CLINK.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridENTDIC_BANK_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridENTDIC_BANK.ItemCount = 0 Then 
  gridENTDIC_1CLINK.ItemCount=0
  Exit Sub
End If
If gridENTDIC_BANK.Row &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_BANK.Row And LastRow &gt; 0 Then
    gridENTDIC_BANK.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridENTDIC_BANK.GetRowData(gridENTDIC_BANK.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridENTDIC_BANK.RowIndex ( gridENTDIC_BANK.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_BANK.Row or gridENTDIC_1CLINK.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_1CLINK.Preparegrid gridENTDIC_1CLINK
  gridENTDIC_1CLINK.ItemCount=0
    LoadGridLayout gridENTDIC_1CLINK
    Set fndENTDIC_1CLINK = Nothing
    Set fndENTDIC_1CLINK = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndENTDIC_1CLINK.Init gridENTDIC_1CLINK
  gridENTDIC_1CLINK.ItemCount=gu.ENTDIC_1CLINK.Count
  End If
 End If
End If
End Sub
Private Sub gridENTDIC_1CLINK_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ENTDIC_1CLINK.LoadRow gridENTDIC_1CLINK, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridENTDIC_1CLINK_KeyPress(KeyAscii As Integer)
  If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_1CLINK.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_1CLINK_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridENTDIC_1CLINK_DblClick()
    cmdENTDIC_1CLINKEdit_click
End Sub
Private Sub gridENTDIC_1CLINK_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
 If gridENTDIC_1CLINK.Row &gt; 0 Then
   If LastRow &lt;&gt; gridENTDIC_1CLINK.Row And LastRow &gt; 0 Then
     gridENTDIC_1CLINK.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridENTDIC_1CLINK.GetRowData(gridENTDIC_1CLINK.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuENTDIC_1CLINKPASTE_Click()
On Error Resume Next
    If gridENTDIC_BANK.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_BANK.RowBookmark(gridENTDIC_BANK.RowIndex(gridENTDIC_BANK.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ENTDIC_1CLINK.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_1CLINK.ItemCount = u.parent.Count
    ELSE
      GU.ENTDIC_1CLINK.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_1CLINK_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_1CLINKCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_1CLINK_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_1CLINK
End If
end sub
private sub mnuENTDIC_1CLINKAdd_click()
   menuActionENTDIC_1CLINK =&quot;ADD&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKEdit_click()
   menuActionENTDIC_1CLINK =&quot;EDIT&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKDelete_click()
   menuActionENTDIC_1CLINK =&quot;DEL&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKOpen_click()
   menuActionENTDIC_1CLINK =&quot;RUN&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKRef_click()
   menuActionENTDIC_1CLINK =&quot;REF&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
  Private Sub mnuENTDIC_1CLINKCOPY_Click()
    On Error Resume Next
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.Row &gt; 0 Then
     If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_1CLINKCUT_Click()
    On Error Resume Next
    If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
    If gridENTDIC_1CLINK.Row &gt; 0 Then
     If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_1CLINK.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_1CLINKCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_1CLINK.ItemCount = 0 Then Exit Sub
  If gridENTDIC_1CLINK.Row &gt; 0 Then
   If gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_1CLINK.RowBookmark(gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_1CLINK.ItemCount = u.parent.Count
      gridENTDIC_1CLINK.RefreshRowIndex gridENTDIC_1CLINK.RowIndex(gridENTDIC_1CLINK.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_1CLINKCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_1CLINKPrn_click()
   menuActionENTDIC_1CLINK =&quot;PRN&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKCfg_click()
   menuActionENTDIC_1CLINK =&quot;CFG&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKFind_click()
   menuActionENTDIC_1CLINK =&quot;FND&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub mnuENTDIC_1CLINKAcc_click()
   menuActionENTDIC_1CLINK =&quot;ACC&quot;
   menuTimerENTDIC_1CLINK.enabled = true
end sub
private sub menuTimerENTDIC_1CLINK_timer()
   menuTimerENTDIC_1CLINK.enabled = false
   if menuActionENTDIC_1CLINK =&quot;ADD&quot; then cmdENTDIC_1CLINKADD_CLick
   if menuActionENTDIC_1CLINK =&quot;EDIT&quot; then cmdENTDIC_1CLINKEDIT_CLick
   if menuActionENTDIC_1CLINK =&quot;DEL&quot; then cmdENTDIC_1CLINKDEL_CLick
   if menuActionENTDIC_1CLINK =&quot;RUN&quot; then cmdENTDIC_1CLINKRUN_CLick
   if menuActionENTDIC_1CLINK =&quot;REF&quot; then cmdENTDIC_1CLINKREF_CLick
   if menuActionENTDIC_1CLINK =&quot;PRN&quot; then cmdENTDIC_1CLINKPRN_CLick
   if menuActionENTDIC_1CLINK =&quot;CFG&quot; then cmdENTDIC_1CLINKCFG_CLick
   if menuActionENTDIC_1CLINK =&quot;FND&quot; then cmdENTDIC_1CLINKFND_CLick
   if menuActionENTDIC_1CLINK =&quot;ACC&quot; then cmdENTDIC_1CLINKACC_CLick
   menuActionENTDIC_1CLINK =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_BANKAdd,cmdENTDIC_BANKAdd.tag
  LoadBtnPictures cmdENTDIC_BANKEdit,cmdENTDIC_BANKEdit.tag
  LoadBtnPictures cmdENTDIC_BANKDel,cmdENTDIC_BANKDel.tag
  LoadBtnPictures cmdENTDIC_BANKRef,cmdENTDIC_BANKRef.tag
  LoadBtnPictures cmdENTDIC_BANKPrn,cmdENTDIC_BANKPrn.tag
  LoadBtnPictures cmdENTDIC_BANKFnd,cmdENTDIC_BANKFnd.tag
  item.ENTDIC_BANK.PrepareGrid gridENTDIC_BANK
  LoadGridLayout gridENTDIC_BANK
  Set fndENTDIC_BANK = Nothing
  On Error Resume Next
  Set fndENTDIC_BANK = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_BANK.Init gridENTDIC_BANK
  LoadBtnPictures cmdENTDIC_1CLINKAdd,cmdENTDIC_1CLINKAdd.tag
  LoadBtnPictures cmdENTDIC_1CLINKEdit,cmdENTDIC_1CLINKEdit.tag
  LoadBtnPictures cmdENTDIC_1CLINKDel,cmdENTDIC_1CLINKDel.tag
  LoadBtnPictures cmdENTDIC_1CLINKRef,cmdENTDIC_1CLINKRef.tag
  LoadBtnPictures cmdENTDIC_1CLINKPrn,cmdENTDIC_1CLINKPrn.tag
  LoadBtnPictures cmdENTDIC_1CLINKFnd,cmdENTDIC_1CLINKFnd.Tag
  gridENTDIC_1CLINK.Columns.Clear
  gridENTDIC_1CLINK.ItemCount=0
  cmdENTDIC_1CLINKRef_Click
end sub
private sub OnTabClick()

pnlENTDIC_BANK.RestorePosition
  gridENTDIC_BANK_RowColChange gridENTDIC_BANK.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_BANK.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_BANK = nothing
  set fndENTDIC_1CLINK = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_CURRENCY_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_CURRENCY" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlENTDIC_CURRENCY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridENTDIC_CURRENCY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_CURRENCY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_CURRENCYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURRENCYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridENTDIC_CURCOURCE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_CURCOURCE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_CURCOURCEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_CURCOURCEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_CURRENCY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Валюта"/><Properties Name="Name" PropValue="mnuPopupENTDIC_CURRENCY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_CURRENCYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYOpen"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYRef"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYPrn"/></ControlData><ControlData Name="mnuENTDIC_CURRENCYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_CURRENCYCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_CURRENCY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_CURRENCY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupENTDIC_CURCOURCE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Курс валюты"/><Properties Name="Name" PropValue="mnuPopupENTDIC_CURCOURCE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_CURCOURCEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEOpen"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCERef"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCEPrn"/></ControlData><ControlData Name="mnuENTDIC_CURCOURCECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_CURCOURCECfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_CURCOURCE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_CURCOURCE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_CURRENCY as object
private menuActionENTDIC_CURRENCY as string
private fndENTDIC_CURCOURCE as object
private menuActionENTDIC_CURCOURCE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlENTDIC_CURRENCY_PositionChanged()
  pnlENTDIC_CURRENCY.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_CURRENCY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_CURRENCYCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_CURRENCY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_CURRENCY
End If
end sub
private sub mnuENTDIC_CURRENCYAdd_click()
   menuActionENTDIC_CURRENCY =&quot;ADD&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYEdit_click()
   menuActionENTDIC_CURRENCY =&quot;EDIT&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYDelete_click()
   menuActionENTDIC_CURRENCY =&quot;DEL&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYOpen_click()
   menuActionENTDIC_CURRENCY =&quot;RUN&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYRef_click()
   menuActionENTDIC_CURRENCY =&quot;REF&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
  Private Sub mnuENTDIC_CURRENCYCOPY_Click()
    On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURRENCY.Row &gt; 0 Then
     If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_CURRENCYCUT_Click()
    On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURRENCY.Row &gt; 0 Then
     If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_CURRENCY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_CURRENCYCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  If gridENTDIC_CURRENCY.Row &gt; 0 Then
   If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_CURRENCY.ItemCount = u.parent.Count
      gridENTDIC_CURRENCY.RefreshRowIndex gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_CURRENCYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_CURRENCYPrn_click()
   menuActionENTDIC_CURRENCY =&quot;PRN&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYCfg_click()
   menuActionENTDIC_CURRENCY =&quot;CFG&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYFind_click()
   menuActionENTDIC_CURRENCY =&quot;FND&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub mnuENTDIC_CURRENCYAcc_click()
   menuActionENTDIC_CURRENCY =&quot;ACC&quot;
   menuTimerENTDIC_CURRENCY.enabled = true
end sub
private sub menuTimerENTDIC_CURRENCY_timer()
   menuTimerENTDIC_CURRENCY.enabled = false
   if menuActionENTDIC_CURRENCY =&quot;ADD&quot; then cmdENTDIC_CURRENCYADD_CLick
   if menuActionENTDIC_CURRENCY =&quot;EDIT&quot; then cmdENTDIC_CURRENCYEDIT_CLick
   if menuActionENTDIC_CURRENCY =&quot;DEL&quot; then cmdENTDIC_CURRENCYDEL_CLick
   if menuActionENTDIC_CURRENCY =&quot;RUN&quot; then cmdENTDIC_CURRENCYRUN_CLick
   if menuActionENTDIC_CURRENCY =&quot;REF&quot; then cmdENTDIC_CURRENCYREF_CLick
   if menuActionENTDIC_CURRENCY =&quot;PRN&quot; then cmdENTDIC_CURRENCYPRN_CLick
   if menuActionENTDIC_CURRENCY =&quot;CFG&quot; then cmdENTDIC_CURRENCYCFG_CLick
   if menuActionENTDIC_CURRENCY =&quot;FND&quot; then cmdENTDIC_CURRENCYFND_CLick
   if menuActionENTDIC_CURRENCY =&quot;ACC&quot; then cmdENTDIC_CURRENCYACC_CLick
   menuActionENTDIC_CURRENCY =&quot;&quot;
end sub
Private Sub cmdENTDIC_CURRENCYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_CURRENCY,&quot;gridENTDIC_CURRENCY&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURRENCYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_CURRENCY,&quot;Валюта&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURRENCYRef_Click()
  on error resume next
  item.ENTDIC_CURRENCY.Refresh
  gridENTDIC_CURRENCY.itemCount = item.ENTDIC_CURRENCY.count
  gridENTDIC_CURRENCY.Refetch
  gridENTDIC_CURRENCY.Refresh
End Sub
Private Sub cmdENTDIC_CURRENCYAcc_Click()
On Error Resume Next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 Then
 If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_CURRENCYEdit_Click()
  on error resume next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 then
 If gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_CURRENCY_.Item = u
    again: frmENTDIC_CURRENCY_.NotFirstTime = False
    frmENTDIC_CURRENCY_.OnInit
    frmENTDIC_CURRENCY_.Show vbModal
    If frmENTDIC_CURRENCY_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_CURRENCY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_CURRENCYDel_Click()
  on error resume next
  gridENTDIC_CURRENCY.Delete
End Sub
Private Sub cmdENTDIC_CURRENCYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_CURRENCY.Add()

      Set frmENTDIC_CURRENCY_.Item = u
      again: frmENTDIC_CURRENCY_.NotFirstTime = False
      frmENTDIC_CURRENCY_.OnInit
      frmENTDIC_CURRENCY_.Show vbModal
      If frmENTDIC_CURRENCY_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_CURRENCY.ItemCount = Item.ENTDIC_CURRENCY.Count
        gridENTDIC_CURRENCY.Refresh
        gridENTDIC_CURRENCY.RefreshGroups
        gridENTDIC_CURRENCY.Refreshsort
        gridENTDIC_CURRENCY.MoveToBookmark u.ID &amp; &quot;ENTDIC_CURRENCY&quot;
      Else
        Item.ENTDIC_CURRENCY.Delete u.ID
        Item.ENTDIC_CURRENCY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_CURRENCYFnd_Click()
  on error resume next
  fndENTDIC_CURRENCY.ShowForm
End Sub
Private Sub cmdENTDIC_CURRENCYRun_Click()
  on error resume next
  gridENTDIC_CURRENCY_DblClick
End Sub
Private Sub gridENTDIC_CURRENCY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_CURRENCY.LoadRow gridENTDIC_CURRENCY, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_CURRENCY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_CURRENCY_DblClick()
  cmdENTDIC_CURRENCYEdit_Click
End Sub
Private Sub gridENTDIC_CURRENCY_KeyPress(KeyAscii As Integer)
  If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_CURRENCY.FindOnPress KeyAscii
End Sub

Private Sub pnlENTDIC_CURRENCY_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridENTDIC_CURRENCY.Left = Left
  gridENTDIC_CURRENCY.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_CURRENCY.Width = Width
  gridENTDIC_CURRENCY.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURRENCYAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_CURRENCYFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub mnuENTDIC_CURRENCYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_CURRENCY.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_CURRENCY.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdENTDIC_CURCOURCECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_CURCOURCE,&quot;gridENTDIC_CURCOURCE&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURCOURCEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_CURCOURCE,&quot;Курс валюты&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_CURCOURCEAcc_Click()
On Error Resume Next
If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURCOURCE.Row &gt; 0 Then
 If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_CURCOURCEFnd_Click()
  on error resume next
  fndENTDIC_CURCOURCE.ShowForm
End Sub
Private Sub cmdENTDIC_CURCOURCERun_Click()
  on error resume next
  gridENTDIC_CURCOURCE_DblClick
End Sub
Private Sub pnlENTDIC_CURRENCY_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridENTDIC_CURCOURCE.Left = Left
  gridENTDIC_CURCOURCE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridENTDIC_CURCOURCE.Width = Width
  gridENTDIC_CURCOURCE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdENTDIC_CURCOURCEAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdENTDIC_CURCOURCEEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdENTDIC_CURCOURCEFnd.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdENTDIC_CURCOURCERef_Click()
  on error resume next
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
If gridENTDIC_CURRENCY.Row &gt; 0 Then
 If gridENTDIC_CURRENCY.RowIndex ( gridENTDIC_CURRENCY.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.refresh
   gridENTDIC_CURCOURCE.itemcount=gu.ENTDIC_CURCOURCE.count
   gridENTDIC_CURCOURCE.refetch
   gridENTDIC_CURCOURCE.refresh
 else
  gridENTDIC_CURCOURCE.columns.clear
  gridENTDIC_CURCOURCE.itemcount=0
 End If
else
 gridENTDIC_CURCOURCE.columns.clear
 gridENTDIC_CURCOURCE.itemcount=0
End If
End Sub
Private Sub cmdENTDIC_CURCOURCEEdit_Click()
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmENTDIC_CURCOURCE_.Item = u
    again: frmENTDIC_CURCOURCE_.NotFirstTime = False
    frmENTDIC_CURCOURCE_.OnInit
    frmENTDIC_CURCOURCE_.Show vbModal
    If frmENTDIC_CURCOURCE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_CURCOURCE.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdENTDIC_CURCOURCEDel_Click()
  on error resume next
  gridENTDIC_CURCOURCE.Delete
End Sub
Private Sub cmdENTDIC_CURCOURCEAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.ENTDIC_CURCOURCE.Add()

      Set frmENTDIC_CURCOURCE_.Item = u
      again: frmENTDIC_CURCOURCE_.NotFirstTime = False
      frmENTDIC_CURCOURCE_.OnInit
      frmENTDIC_CURCOURCE_.Show vbModal
      If frmENTDIC_CURCOURCE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_CURCOURCE.ItemCount = gu.ENTDIC_CURCOURCE.Count
        gridENTDIC_CURCOURCE.Refresh
        gridENTDIC_CURCOURCE.RefreshGroups
        gridENTDIC_CURCOURCE.Refreshsort
        gridENTDIC_CURCOURCE.MoveToBookmark u.ID &amp; &quot;ENTDIC_CURCOURCE&quot;
      Else
        gu.ENTDIC_CURCOURCE.Delete u.ID
        gu.ENTDIC_CURCOURCE.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridENTDIC_CURRENCY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridENTDIC_CURRENCY.ItemCount = 0 Then 
  gridENTDIC_CURCOURCE.ItemCount=0
  Exit Sub
End If
If gridENTDIC_CURRENCY.Row &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_CURRENCY.Row And LastRow &gt; 0 Then
    gridENTDIC_CURRENCY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridENTDIC_CURRENCY.GetRowData(gridENTDIC_CURRENCY.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridENTDIC_CURRENCY.RowIndex ( gridENTDIC_CURRENCY.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridENTDIC_CURRENCY.Row or gridENTDIC_CURCOURCE.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.Preparegrid gridENTDIC_CURCOURCE
  gridENTDIC_CURCOURCE.ItemCount=0
    LoadGridLayout gridENTDIC_CURCOURCE
    Set fndENTDIC_CURCOURCE = Nothing
    Set fndENTDIC_CURCOURCE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndENTDIC_CURCOURCE.Init gridENTDIC_CURCOURCE
  gridENTDIC_CURCOURCE.ItemCount=gu.ENTDIC_CURCOURCE.Count
  End If
 End If
End If
End Sub
Private Sub gridENTDIC_CURCOURCE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.ENTDIC_CURCOURCE.LoadRow gridENTDIC_CURCOURCE, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridENTDIC_CURCOURCE_KeyPress(KeyAscii As Integer)
  If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_CURCOURCE.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_CURCOURCE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridENTDIC_CURCOURCE_DblClick()
    cmdENTDIC_CURCOURCEEdit_click
End Sub
Private Sub gridENTDIC_CURCOURCE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
 If gridENTDIC_CURCOURCE.Row &gt; 0 Then
   If LastRow &lt;&gt; gridENTDIC_CURCOURCE.Row And LastRow &gt; 0 Then
     gridENTDIC_CURCOURCE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridENTDIC_CURCOURCE.GetRowData(gridENTDIC_CURCOURCE.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuENTDIC_CURCOURCEPASTE_Click()
On Error Resume Next
    If gridENTDIC_CURRENCY.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridENTDIC_CURRENCY.RowBookmark(gridENTDIC_CURRENCY.RowIndex(gridENTDIC_CURRENCY.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.ENTDIC_CURCOURCE.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_CURCOURCE.ItemCount = u.parent.Count
    ELSE
      GU.ENTDIC_CURCOURCE.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_CURCOURCE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_CURCOURCECfg_Click
        End If
    End If
end sub

private sub gridENTDIC_CURCOURCE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_CURCOURCE
End If
end sub
private sub mnuENTDIC_CURCOURCEAdd_click()
   menuActionENTDIC_CURCOURCE =&quot;ADD&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEEdit_click()
   menuActionENTDIC_CURCOURCE =&quot;EDIT&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEDelete_click()
   menuActionENTDIC_CURCOURCE =&quot;DEL&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEOpen_click()
   menuActionENTDIC_CURCOURCE =&quot;RUN&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCERef_click()
   menuActionENTDIC_CURCOURCE =&quot;REF&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
  Private Sub mnuENTDIC_CURCOURCECOPY_Click()
    On Error Resume Next
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.Row &gt; 0 Then
     If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_CURCOURCECUT_Click()
    On Error Resume Next
    If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
    If gridENTDIC_CURCOURCE.Row &gt; 0 Then
     If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_CURCOURCE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_CURCOURCECHANGE_Click()
  On Error Resume Next
  If gridENTDIC_CURCOURCE.ItemCount = 0 Then Exit Sub
  If gridENTDIC_CURCOURCE.Row &gt; 0 Then
   If gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_CURCOURCE.RowBookmark(gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_CURCOURCE.ItemCount = u.parent.Count
      gridENTDIC_CURCOURCE.RefreshRowIndex gridENTDIC_CURCOURCE.RowIndex(gridENTDIC_CURCOURCE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_CURCOURCECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_CURCOURCEPrn_click()
   menuActionENTDIC_CURCOURCE =&quot;PRN&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCECfg_click()
   menuActionENTDIC_CURCOURCE =&quot;CFG&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEFind_click()
   menuActionENTDIC_CURCOURCE =&quot;FND&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub mnuENTDIC_CURCOURCEAcc_click()
   menuActionENTDIC_CURCOURCE =&quot;ACC&quot;
   menuTimerENTDIC_CURCOURCE.enabled = true
end sub
private sub menuTimerENTDIC_CURCOURCE_timer()
   menuTimerENTDIC_CURCOURCE.enabled = false
   if menuActionENTDIC_CURCOURCE =&quot;ADD&quot; then cmdENTDIC_CURCOURCEADD_CLick
   if menuActionENTDIC_CURCOURCE =&quot;EDIT&quot; then cmdENTDIC_CURCOURCEEDIT_CLick
   if menuActionENTDIC_CURCOURCE =&quot;DEL&quot; then cmdENTDIC_CURCOURCEDEL_CLick
   if menuActionENTDIC_CURCOURCE =&quot;RUN&quot; then cmdENTDIC_CURCOURCERUN_CLick
   if menuActionENTDIC_CURCOURCE =&quot;REF&quot; then cmdENTDIC_CURCOURCEREF_CLick
   if menuActionENTDIC_CURCOURCE =&quot;PRN&quot; then cmdENTDIC_CURCOURCEPRN_CLick
   if menuActionENTDIC_CURCOURCE =&quot;CFG&quot; then cmdENTDIC_CURCOURCECFG_CLick
   if menuActionENTDIC_CURCOURCE =&quot;FND&quot; then cmdENTDIC_CURCOURCEFND_CLick
   if menuActionENTDIC_CURCOURCE =&quot;ACC&quot; then cmdENTDIC_CURCOURCEACC_CLick
   menuActionENTDIC_CURCOURCE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_CURRENCYAdd,cmdENTDIC_CURRENCYAdd.tag
  LoadBtnPictures cmdENTDIC_CURRENCYEdit,cmdENTDIC_CURRENCYEdit.tag
  LoadBtnPictures cmdENTDIC_CURRENCYDel,cmdENTDIC_CURRENCYDel.tag
  LoadBtnPictures cmdENTDIC_CURRENCYRef,cmdENTDIC_CURRENCYRef.tag
  LoadBtnPictures cmdENTDIC_CURRENCYPrn,cmdENTDIC_CURRENCYPrn.tag
  LoadBtnPictures cmdENTDIC_CURRENCYFnd,cmdENTDIC_CURRENCYFnd.tag
  item.ENTDIC_CURRENCY.PrepareGrid gridENTDIC_CURRENCY
  LoadGridLayout gridENTDIC_CURRENCY
  Set fndENTDIC_CURRENCY = Nothing
  On Error Resume Next
  Set fndENTDIC_CURRENCY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_CURRENCY.Init gridENTDIC_CURRENCY
  LoadBtnPictures cmdENTDIC_CURCOURCEAdd,cmdENTDIC_CURCOURCEAdd.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEEdit,cmdENTDIC_CURCOURCEEdit.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEDel,cmdENTDIC_CURCOURCEDel.tag
  LoadBtnPictures cmdENTDIC_CURCOURCERef,cmdENTDIC_CURCOURCERef.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEPrn,cmdENTDIC_CURCOURCEPrn.tag
  LoadBtnPictures cmdENTDIC_CURCOURCEFnd,cmdENTDIC_CURCOURCEFnd.Tag
  gridENTDIC_CURCOURCE.Columns.Clear
  gridENTDIC_CURCOURCE.ItemCount=0
  cmdENTDIC_CURCOURCERef_Click
end sub
private sub OnTabClick()

pnlENTDIC_CURRENCY.RestorePosition
  gridENTDIC_CURRENCY_RowColChange gridENTDIC_CURRENCY.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_CURRENCY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_CURRENCY = nothing
  set fndENTDIC_CURCOURCE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_DOST_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_DOST" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_DOST"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_DOST" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_DOST"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_DOSTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_DOSTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_DOSTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_DOSTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_DOSTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_DOST" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип доставки"/><Properties Name="Name" PropValue="mnuPopupENTDIC_DOST"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_DOSTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_DOSTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTOpen"/></ControlData><ControlData Name="mnuENTDIC_DOSTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTRef"/></ControlData><ControlData Name="mnuENTDIC_DOSTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTPrn"/></ControlData><ControlData Name="mnuENTDIC_DOSTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_DOSTCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_DOST" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_DOST"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_DOST as object
private menuActionENTDIC_DOST as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_DOSTCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_DOST,&quot;gridENTDIC_DOST&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_DOSTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_DOST,&quot;Тип доставки&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_DOSTRef_Click()
  on error resume next
  item.ENTDIC_DOST.Refresh
  gridENTDIC_DOST.itemCount = item.ENTDIC_DOST.count
  gridENTDIC_DOST.Refetch
  gridENTDIC_DOST.Refresh
End Sub
Private Sub cmdENTDIC_DOSTAcc_Click()
On Error Resume Next
If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
If gridENTDIC_DOST.Row &gt; 0 Then
 If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_DOSTEdit_Click()
  on error resume next
If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
If gridENTDIC_DOST.Row &gt; 0 then
 If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_DOST_.Item = u
    again: frmENTDIC_DOST_.NotFirstTime = False
    frmENTDIC_DOST_.OnInit
    frmENTDIC_DOST_.Show vbModal
    If frmENTDIC_DOST_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_DOST.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_DOSTDel_Click()
  on error resume next
  gridENTDIC_DOST.Delete
End Sub
Private Sub cmdENTDIC_DOSTAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_DOST.Add()
   call GetNumValue(u, &quot;Code&quot;, &quot;{2ED56791-28A1-4C4B-B140-5303F1DCA3F9}&quot;,Now,&quot;ENTDIC_DOST&quot;, &quot;&quot;) 

      Set frmENTDIC_DOST_.Item = u
      again: frmENTDIC_DOST_.NotFirstTime = False
      frmENTDIC_DOST_.OnInit
      frmENTDIC_DOST_.Show vbModal
      If frmENTDIC_DOST_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_DOST.ItemCount = Item.ENTDIC_DOST.Count
        gridENTDIC_DOST.Refresh
        gridENTDIC_DOST.RefreshGroups
        gridENTDIC_DOST.Refreshsort
        gridENTDIC_DOST.MoveToBookmark u.ID &amp; &quot;ENTDIC_DOST&quot;
      Else
        Item.ENTDIC_DOST.Delete u.ID
        Item.ENTDIC_DOST.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_DOSTFnd_Click()
  on error resume next
  fndENTDIC_DOST.ShowForm
End Sub
Private Sub cmdENTDIC_DOSTRun_Click()
  on error resume next
  gridENTDIC_DOST_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_DOST_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_DOST.LoadRow gridENTDIC_DOST, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_DOST_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_DOST&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_DOST_DblClick()
  cmdENTDIC_DOSTEdit_Click
End Sub
Private Sub gridENTDIC_DOST_KeyPress(KeyAscii As Integer)
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_DOST.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_DOST_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_DOST.Row And LastRow &gt; 0 Then
  gridENTDIC_DOST.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_DOST.GetRowData(gridENTDIC_DOST.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_DOSTPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_DOST.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_DOST.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_DOST_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_DOSTCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_DOST_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_DOST
End If
end sub
private sub mnuENTDIC_DOSTAdd_click()
   menuActionENTDIC_DOST =&quot;ADD&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTEdit_click()
   menuActionENTDIC_DOST =&quot;EDIT&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTDelete_click()
   menuActionENTDIC_DOST =&quot;DEL&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTOpen_click()
   menuActionENTDIC_DOST =&quot;RUN&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTRef_click()
   menuActionENTDIC_DOST =&quot;REF&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
  Private Sub mnuENTDIC_DOSTCOPY_Click()
    On Error Resume Next
    If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
    If gridENTDIC_DOST.Row &gt; 0 Then
     If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_DOSTCUT_Click()
    On Error Resume Next
    If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
    If gridENTDIC_DOST.Row &gt; 0 Then
     If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_DOST.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_DOSTCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_DOST.ItemCount = 0 Then Exit Sub
  If gridENTDIC_DOST.Row &gt; 0 Then
   If gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_DOST.RowBookmark(gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_DOST.ItemCount = u.parent.Count
      gridENTDIC_DOST.RefreshRowIndex gridENTDIC_DOST.RowIndex(gridENTDIC_DOST.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_DOSTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_DOSTPrn_click()
   menuActionENTDIC_DOST =&quot;PRN&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTCfg_click()
   menuActionENTDIC_DOST =&quot;CFG&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTFind_click()
   menuActionENTDIC_DOST =&quot;FND&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub mnuENTDIC_DOSTAcc_click()
   menuActionENTDIC_DOST =&quot;ACC&quot;
   menuTimerENTDIC_DOST.enabled = true
end sub
private sub menuTimerENTDIC_DOST_timer()
   menuTimerENTDIC_DOST.enabled = false
   if menuActionENTDIC_DOST =&quot;ADD&quot; then cmdENTDIC_DOSTADD_CLick
   if menuActionENTDIC_DOST =&quot;EDIT&quot; then cmdENTDIC_DOSTEDIT_CLick
   if menuActionENTDIC_DOST =&quot;DEL&quot; then cmdENTDIC_DOSTDEL_CLick
   if menuActionENTDIC_DOST =&quot;RUN&quot; then cmdENTDIC_DOSTRUN_CLick
   if menuActionENTDIC_DOST =&quot;REF&quot; then cmdENTDIC_DOSTREF_CLick
   if menuActionENTDIC_DOST =&quot;PRN&quot; then cmdENTDIC_DOSTPRN_CLick
   if menuActionENTDIC_DOST =&quot;CFG&quot; then cmdENTDIC_DOSTCFG_CLick
   if menuActionENTDIC_DOST =&quot;FND&quot; then cmdENTDIC_DOSTFND_CLick
   if menuActionENTDIC_DOST =&quot;ACC&quot; then cmdENTDIC_DOSTACC_CLick
   menuActionENTDIC_DOST =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_DOSTAdd,cmdENTDIC_DOSTAdd.tag
  LoadBtnPictures cmdENTDIC_DOSTEdit,cmdENTDIC_DOSTEdit.tag
  LoadBtnPictures cmdENTDIC_DOSTDel,cmdENTDIC_DOSTDel.tag
  LoadBtnPictures cmdENTDIC_DOSTRef,cmdENTDIC_DOSTRef.tag
  LoadBtnPictures cmdENTDIC_DOSTPrn,cmdENTDIC_DOSTPrn.tag
  LoadBtnPictures cmdENTDIC_DOSTFnd,cmdENTDIC_DOSTFnd.tag
  item.ENTDIC_DOST.PrepareGrid gridENTDIC_DOST
  LoadGridLayout gridENTDIC_DOST
  Set fndENTDIC_DOST = Nothing
  On Error Resume Next
  Set fndENTDIC_DOST = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_DOST.Init gridENTDIC_DOST
end sub
private sub OnTabClick()

      gridENTDIC_DOST.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_DOST.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_DOST.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_DOST.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_DOST = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_REGION_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_REGION" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_REGION"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_REGION" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_REGION"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_REGIONAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_REGIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_REGIONPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_REGIONFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_REGIONFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_REGION" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Название областей"/><Properties Name="Name" PropValue="mnuPopupENTDIC_REGION"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_REGIONAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_REGIONOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONOpen"/></ControlData><ControlData Name="mnuENTDIC_REGIONRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONRef"/></ControlData><ControlData Name="mnuENTDIC_REGIONPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONPrn"/></ControlData><ControlData Name="mnuENTDIC_REGIONCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_REGIONCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_REGION" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_REGION"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_REGION as object
private menuActionENTDIC_REGION as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_REGIONCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_REGION,&quot;gridENTDIC_REGION&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_REGIONPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_REGION,&quot;Название областей&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_REGIONRef_Click()
  on error resume next
  item.ENTDIC_REGION.Refresh
  gridENTDIC_REGION.itemCount = item.ENTDIC_REGION.count
  gridENTDIC_REGION.Refetch
  gridENTDIC_REGION.Refresh
End Sub
Private Sub cmdENTDIC_REGIONAcc_Click()
On Error Resume Next
If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
If gridENTDIC_REGION.Row &gt; 0 Then
 If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_REGIONEdit_Click()
  on error resume next
If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
If gridENTDIC_REGION.Row &gt; 0 then
 If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_REGION_.Item = u
    again: frmENTDIC_REGION_.NotFirstTime = False
    frmENTDIC_REGION_.OnInit
    frmENTDIC_REGION_.Show vbModal
    If frmENTDIC_REGION_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_REGION.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_REGIONDel_Click()
  on error resume next
  gridENTDIC_REGION.Delete
End Sub
Private Sub cmdENTDIC_REGIONAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_REGION.Add()

      Set frmENTDIC_REGION_.Item = u
      again: frmENTDIC_REGION_.NotFirstTime = False
      frmENTDIC_REGION_.OnInit
      frmENTDIC_REGION_.Show vbModal
      If frmENTDIC_REGION_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_REGION.ItemCount = Item.ENTDIC_REGION.Count
        gridENTDIC_REGION.Refresh
        gridENTDIC_REGION.RefreshGroups
        gridENTDIC_REGION.Refreshsort
        gridENTDIC_REGION.MoveToBookmark u.ID &amp; &quot;ENTDIC_REGION&quot;
      Else
        Item.ENTDIC_REGION.Delete u.ID
        Item.ENTDIC_REGION.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_REGIONFnd_Click()
  on error resume next
  fndENTDIC_REGION.ShowForm
End Sub
Private Sub cmdENTDIC_REGIONRun_Click()
  on error resume next
  gridENTDIC_REGION_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_REGION_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_REGION.LoadRow gridENTDIC_REGION, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_REGION_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_REGION&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_REGION_DblClick()
  cmdENTDIC_REGIONEdit_Click
End Sub
Private Sub gridENTDIC_REGION_KeyPress(KeyAscii As Integer)
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_REGION.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_REGION_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_REGION.Row And LastRow &gt; 0 Then
  gridENTDIC_REGION.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_REGION.GetRowData(gridENTDIC_REGION.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_REGIONPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_REGION.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_REGION.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_REGION_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_REGIONCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_REGION_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_REGION
End If
end sub
private sub mnuENTDIC_REGIONAdd_click()
   menuActionENTDIC_REGION =&quot;ADD&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONEdit_click()
   menuActionENTDIC_REGION =&quot;EDIT&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONDelete_click()
   menuActionENTDIC_REGION =&quot;DEL&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONOpen_click()
   menuActionENTDIC_REGION =&quot;RUN&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONRef_click()
   menuActionENTDIC_REGION =&quot;REF&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
  Private Sub mnuENTDIC_REGIONCOPY_Click()
    On Error Resume Next
    If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
    If gridENTDIC_REGION.Row &gt; 0 Then
     If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_REGIONCUT_Click()
    On Error Resume Next
    If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
    If gridENTDIC_REGION.Row &gt; 0 Then
     If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_REGION.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_REGIONCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_REGION.ItemCount = 0 Then Exit Sub
  If gridENTDIC_REGION.Row &gt; 0 Then
   If gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_REGION.RowBookmark(gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_REGION.ItemCount = u.parent.Count
      gridENTDIC_REGION.RefreshRowIndex gridENTDIC_REGION.RowIndex(gridENTDIC_REGION.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_REGIONCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_REGIONPrn_click()
   menuActionENTDIC_REGION =&quot;PRN&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONCfg_click()
   menuActionENTDIC_REGION =&quot;CFG&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONFind_click()
   menuActionENTDIC_REGION =&quot;FND&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub mnuENTDIC_REGIONAcc_click()
   menuActionENTDIC_REGION =&quot;ACC&quot;
   menuTimerENTDIC_REGION.enabled = true
end sub
private sub menuTimerENTDIC_REGION_timer()
   menuTimerENTDIC_REGION.enabled = false
   if menuActionENTDIC_REGION =&quot;ADD&quot; then cmdENTDIC_REGIONADD_CLick
   if menuActionENTDIC_REGION =&quot;EDIT&quot; then cmdENTDIC_REGIONEDIT_CLick
   if menuActionENTDIC_REGION =&quot;DEL&quot; then cmdENTDIC_REGIONDEL_CLick
   if menuActionENTDIC_REGION =&quot;RUN&quot; then cmdENTDIC_REGIONRUN_CLick
   if menuActionENTDIC_REGION =&quot;REF&quot; then cmdENTDIC_REGIONREF_CLick
   if menuActionENTDIC_REGION =&quot;PRN&quot; then cmdENTDIC_REGIONPRN_CLick
   if menuActionENTDIC_REGION =&quot;CFG&quot; then cmdENTDIC_REGIONCFG_CLick
   if menuActionENTDIC_REGION =&quot;FND&quot; then cmdENTDIC_REGIONFND_CLick
   if menuActionENTDIC_REGION =&quot;ACC&quot; then cmdENTDIC_REGIONACC_CLick
   menuActionENTDIC_REGION =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_REGIONAdd,cmdENTDIC_REGIONAdd.tag
  LoadBtnPictures cmdENTDIC_REGIONEdit,cmdENTDIC_REGIONEdit.tag
  LoadBtnPictures cmdENTDIC_REGIONDel,cmdENTDIC_REGIONDel.tag
  LoadBtnPictures cmdENTDIC_REGIONRef,cmdENTDIC_REGIONRef.tag
  LoadBtnPictures cmdENTDIC_REGIONPrn,cmdENTDIC_REGIONPrn.tag
  LoadBtnPictures cmdENTDIC_REGIONFnd,cmdENTDIC_REGIONFnd.tag
  item.ENTDIC_REGION.PrepareGrid gridENTDIC_REGION
  LoadGridLayout gridENTDIC_REGION
  Set fndENTDIC_REGION = Nothing
  On Error Resume Next
  Set fndENTDIC_REGION = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_REGION.Init gridENTDIC_REGION
end sub
private sub OnTabClick()

      gridENTDIC_REGION.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_REGION.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_REGION.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_REGION.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_REGION = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_TOWN_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_TOWN" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_TOWN"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_TOWN" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_TOWN"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_TOWNAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TOWNRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_TOWNPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_TOWNFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TOWNFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_TOWN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Города"/><Properties Name="Name" PropValue="mnuPopupENTDIC_TOWN"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_TOWNAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TOWNOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNOpen"/></ControlData><ControlData Name="mnuENTDIC_TOWNRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNRef"/></ControlData><ControlData Name="mnuENTDIC_TOWNPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNPrn"/></ControlData><ControlData Name="mnuENTDIC_TOWNCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_TOWNCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_TOWN" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_TOWN"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_TOWN as object
private menuActionENTDIC_TOWN as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_TOWNCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_TOWN,&quot;gridENTDIC_TOWN&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TOWNPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_TOWN,&quot;Города&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TOWNRef_Click()
  on error resume next
  item.ENTDIC_TOWN.Refresh
  gridENTDIC_TOWN.itemCount = item.ENTDIC_TOWN.count
  gridENTDIC_TOWN.Refetch
  gridENTDIC_TOWN.Refresh
End Sub
Private Sub cmdENTDIC_TOWNAcc_Click()
On Error Resume Next
If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
If gridENTDIC_TOWN.Row &gt; 0 Then
 If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_TOWNEdit_Click()
  on error resume next
If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
If gridENTDIC_TOWN.Row &gt; 0 then
 If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_TOWN_.Item = u
    again: frmENTDIC_TOWN_.NotFirstTime = False
    frmENTDIC_TOWN_.OnInit
    frmENTDIC_TOWN_.Show vbModal
    If frmENTDIC_TOWN_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_TOWN.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_TOWNDel_Click()
  on error resume next
  gridENTDIC_TOWN.Delete
End Sub
Private Sub cmdENTDIC_TOWNAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_TOWN.Add()

      Set frmENTDIC_TOWN_.Item = u
      again: frmENTDIC_TOWN_.NotFirstTime = False
      frmENTDIC_TOWN_.OnInit
      frmENTDIC_TOWN_.Show vbModal
      If frmENTDIC_TOWN_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_TOWN.ItemCount = Item.ENTDIC_TOWN.Count
        gridENTDIC_TOWN.Refresh
        gridENTDIC_TOWN.RefreshGroups
        gridENTDIC_TOWN.Refreshsort
        gridENTDIC_TOWN.MoveToBookmark u.ID &amp; &quot;ENTDIC_TOWN&quot;
      Else
        Item.ENTDIC_TOWN.Delete u.ID
        Item.ENTDIC_TOWN.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_TOWNFnd_Click()
  on error resume next
  fndENTDIC_TOWN.ShowForm
End Sub
Private Sub cmdENTDIC_TOWNRun_Click()
  on error resume next
  gridENTDIC_TOWN_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_TOWN_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_TOWN.LoadRow gridENTDIC_TOWN, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_TOWN_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_TOWN&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_TOWN_DblClick()
  cmdENTDIC_TOWNEdit_Click
End Sub
Private Sub gridENTDIC_TOWN_KeyPress(KeyAscii As Integer)
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_TOWN.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_TOWN_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_TOWN.Row And LastRow &gt; 0 Then
  gridENTDIC_TOWN.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_TOWN.GetRowData(gridENTDIC_TOWN.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_TOWNPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_TOWN.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_TOWN.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_TOWN_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_TOWNCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_TOWN_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_TOWN
End If
end sub
private sub mnuENTDIC_TOWNAdd_click()
   menuActionENTDIC_TOWN =&quot;ADD&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNEdit_click()
   menuActionENTDIC_TOWN =&quot;EDIT&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNDelete_click()
   menuActionENTDIC_TOWN =&quot;DEL&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNOpen_click()
   menuActionENTDIC_TOWN =&quot;RUN&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNRef_click()
   menuActionENTDIC_TOWN =&quot;REF&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
  Private Sub mnuENTDIC_TOWNCOPY_Click()
    On Error Resume Next
    If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TOWN.Row &gt; 0 Then
     If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_TOWNCUT_Click()
    On Error Resume Next
    If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TOWN.Row &gt; 0 Then
     If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_TOWN.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_TOWNCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_TOWN.ItemCount = 0 Then Exit Sub
  If gridENTDIC_TOWN.Row &gt; 0 Then
   If gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TOWN.RowBookmark(gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_TOWN.ItemCount = u.parent.Count
      gridENTDIC_TOWN.RefreshRowIndex gridENTDIC_TOWN.RowIndex(gridENTDIC_TOWN.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_TOWNCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_TOWNPrn_click()
   menuActionENTDIC_TOWN =&quot;PRN&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNCfg_click()
   menuActionENTDIC_TOWN =&quot;CFG&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNFind_click()
   menuActionENTDIC_TOWN =&quot;FND&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub mnuENTDIC_TOWNAcc_click()
   menuActionENTDIC_TOWN =&quot;ACC&quot;
   menuTimerENTDIC_TOWN.enabled = true
end sub
private sub menuTimerENTDIC_TOWN_timer()
   menuTimerENTDIC_TOWN.enabled = false
   if menuActionENTDIC_TOWN =&quot;ADD&quot; then cmdENTDIC_TOWNADD_CLick
   if menuActionENTDIC_TOWN =&quot;EDIT&quot; then cmdENTDIC_TOWNEDIT_CLick
   if menuActionENTDIC_TOWN =&quot;DEL&quot; then cmdENTDIC_TOWNDEL_CLick
   if menuActionENTDIC_TOWN =&quot;RUN&quot; then cmdENTDIC_TOWNRUN_CLick
   if menuActionENTDIC_TOWN =&quot;REF&quot; then cmdENTDIC_TOWNREF_CLick
   if menuActionENTDIC_TOWN =&quot;PRN&quot; then cmdENTDIC_TOWNPRN_CLick
   if menuActionENTDIC_TOWN =&quot;CFG&quot; then cmdENTDIC_TOWNCFG_CLick
   if menuActionENTDIC_TOWN =&quot;FND&quot; then cmdENTDIC_TOWNFND_CLick
   if menuActionENTDIC_TOWN =&quot;ACC&quot; then cmdENTDIC_TOWNACC_CLick
   menuActionENTDIC_TOWN =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_TOWNAdd,cmdENTDIC_TOWNAdd.tag
  LoadBtnPictures cmdENTDIC_TOWNEdit,cmdENTDIC_TOWNEdit.tag
  LoadBtnPictures cmdENTDIC_TOWNDel,cmdENTDIC_TOWNDel.tag
  LoadBtnPictures cmdENTDIC_TOWNRef,cmdENTDIC_TOWNRef.tag
  LoadBtnPictures cmdENTDIC_TOWNPrn,cmdENTDIC_TOWNPrn.tag
  LoadBtnPictures cmdENTDIC_TOWNFnd,cmdENTDIC_TOWNFnd.tag
  item.ENTDIC_TOWN.PrepareGrid gridENTDIC_TOWN
  LoadGridLayout gridENTDIC_TOWN
  Set fndENTDIC_TOWN = Nothing
  On Error Resume Next
  Set fndENTDIC_TOWN = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_TOWN.Init gridENTDIC_TOWN
end sub
private sub OnTabClick()

      gridENTDIC_TOWN.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_TOWN.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TOWN.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_TOWN.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_TOWN = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_COUNTRY_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_COUNTRY"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_COUNTRY" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_COUNTRY"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_COUNTRYFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_COUNTRYFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Страны"/><Properties Name="Name" PropValue="mnuPopupENTDIC_COUNTRY"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_COUNTRYAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYOpen"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYRef"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYPrn"/></ControlData><ControlData Name="mnuENTDIC_COUNTRYCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_COUNTRYCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_COUNTRY" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_COUNTRY"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_COUNTRY as object
private menuActionENTDIC_COUNTRY as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_COUNTRYCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_COUNTRY,&quot;gridENTDIC_COUNTRY&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_COUNTRYPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_COUNTRY,&quot;Страны&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_COUNTRYRef_Click()
  on error resume next
  item.ENTDIC_COUNTRY.Refresh
  gridENTDIC_COUNTRY.itemCount = item.ENTDIC_COUNTRY.count
  gridENTDIC_COUNTRY.Refetch
  gridENTDIC_COUNTRY.Refresh
End Sub
Private Sub cmdENTDIC_COUNTRYAcc_Click()
On Error Resume Next
If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
If gridENTDIC_COUNTRY.Row &gt; 0 Then
 If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_COUNTRYEdit_Click()
  on error resume next
If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
If gridENTDIC_COUNTRY.Row &gt; 0 then
 If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_COUNTRY_.Item = u
    again: frmENTDIC_COUNTRY_.NotFirstTime = False
    frmENTDIC_COUNTRY_.OnInit
    frmENTDIC_COUNTRY_.Show vbModal
    If frmENTDIC_COUNTRY_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_COUNTRY.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_COUNTRYDel_Click()
  on error resume next
  gridENTDIC_COUNTRY.Delete
End Sub
Private Sub cmdENTDIC_COUNTRYAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_COUNTRY.Add()

      Set frmENTDIC_COUNTRY_.Item = u
      again: frmENTDIC_COUNTRY_.NotFirstTime = False
      frmENTDIC_COUNTRY_.OnInit
      frmENTDIC_COUNTRY_.Show vbModal
      If frmENTDIC_COUNTRY_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_COUNTRY.ItemCount = Item.ENTDIC_COUNTRY.Count
        gridENTDIC_COUNTRY.Refresh
        gridENTDIC_COUNTRY.RefreshGroups
        gridENTDIC_COUNTRY.Refreshsort
        gridENTDIC_COUNTRY.MoveToBookmark u.ID &amp; &quot;ENTDIC_COUNTRY&quot;
      Else
        Item.ENTDIC_COUNTRY.Delete u.ID
        Item.ENTDIC_COUNTRY.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_COUNTRYFnd_Click()
  on error resume next
  fndENTDIC_COUNTRY.ShowForm
End Sub
Private Sub cmdENTDIC_COUNTRYRun_Click()
  on error resume next
  gridENTDIC_COUNTRY_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_COUNTRY_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_COUNTRY.LoadRow gridENTDIC_COUNTRY, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_COUNTRY_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_COUNTRY&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_COUNTRY_DblClick()
  cmdENTDIC_COUNTRYEdit_Click
End Sub
Private Sub gridENTDIC_COUNTRY_KeyPress(KeyAscii As Integer)
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_COUNTRY.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_COUNTRY_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_COUNTRY.Row And LastRow &gt; 0 Then
  gridENTDIC_COUNTRY.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_COUNTRY.GetRowData(gridENTDIC_COUNTRY.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_COUNTRYPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_COUNTRY.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_COUNTRY.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_COUNTRY_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_COUNTRYCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_COUNTRY_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_COUNTRY
End If
end sub
private sub mnuENTDIC_COUNTRYAdd_click()
   menuActionENTDIC_COUNTRY =&quot;ADD&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYEdit_click()
   menuActionENTDIC_COUNTRY =&quot;EDIT&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYDelete_click()
   menuActionENTDIC_COUNTRY =&quot;DEL&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYOpen_click()
   menuActionENTDIC_COUNTRY =&quot;RUN&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYRef_click()
   menuActionENTDIC_COUNTRY =&quot;REF&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
  Private Sub mnuENTDIC_COUNTRYCOPY_Click()
    On Error Resume Next
    If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_COUNTRY.Row &gt; 0 Then
     If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_COUNTRYCUT_Click()
    On Error Resume Next
    If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
    If gridENTDIC_COUNTRY.Row &gt; 0 Then
     If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_COUNTRY.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_COUNTRYCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_COUNTRY.ItemCount = 0 Then Exit Sub
  If gridENTDIC_COUNTRY.Row &gt; 0 Then
   If gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_COUNTRY.RowBookmark(gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_COUNTRY.ItemCount = u.parent.Count
      gridENTDIC_COUNTRY.RefreshRowIndex gridENTDIC_COUNTRY.RowIndex(gridENTDIC_COUNTRY.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_COUNTRYCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_COUNTRYPrn_click()
   menuActionENTDIC_COUNTRY =&quot;PRN&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYCfg_click()
   menuActionENTDIC_COUNTRY =&quot;CFG&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYFind_click()
   menuActionENTDIC_COUNTRY =&quot;FND&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub mnuENTDIC_COUNTRYAcc_click()
   menuActionENTDIC_COUNTRY =&quot;ACC&quot;
   menuTimerENTDIC_COUNTRY.enabled = true
end sub
private sub menuTimerENTDIC_COUNTRY_timer()
   menuTimerENTDIC_COUNTRY.enabled = false
   if menuActionENTDIC_COUNTRY =&quot;ADD&quot; then cmdENTDIC_COUNTRYADD_CLick
   if menuActionENTDIC_COUNTRY =&quot;EDIT&quot; then cmdENTDIC_COUNTRYEDIT_CLick
   if menuActionENTDIC_COUNTRY =&quot;DEL&quot; then cmdENTDIC_COUNTRYDEL_CLick
   if menuActionENTDIC_COUNTRY =&quot;RUN&quot; then cmdENTDIC_COUNTRYRUN_CLick
   if menuActionENTDIC_COUNTRY =&quot;REF&quot; then cmdENTDIC_COUNTRYREF_CLick
   if menuActionENTDIC_COUNTRY =&quot;PRN&quot; then cmdENTDIC_COUNTRYPRN_CLick
   if menuActionENTDIC_COUNTRY =&quot;CFG&quot; then cmdENTDIC_COUNTRYCFG_CLick
   if menuActionENTDIC_COUNTRY =&quot;FND&quot; then cmdENTDIC_COUNTRYFND_CLick
   if menuActionENTDIC_COUNTRY =&quot;ACC&quot; then cmdENTDIC_COUNTRYACC_CLick
   menuActionENTDIC_COUNTRY =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_COUNTRYAdd,cmdENTDIC_COUNTRYAdd.tag
  LoadBtnPictures cmdENTDIC_COUNTRYEdit,cmdENTDIC_COUNTRYEdit.tag
  LoadBtnPictures cmdENTDIC_COUNTRYDel,cmdENTDIC_COUNTRYDel.tag
  LoadBtnPictures cmdENTDIC_COUNTRYRef,cmdENTDIC_COUNTRYRef.tag
  LoadBtnPictures cmdENTDIC_COUNTRYPrn,cmdENTDIC_COUNTRYPrn.tag
  LoadBtnPictures cmdENTDIC_COUNTRYFnd,cmdENTDIC_COUNTRYFnd.tag
  item.ENTDIC_COUNTRY.PrepareGrid gridENTDIC_COUNTRY
  LoadGridLayout gridENTDIC_COUNTRY
  Set fndENTDIC_COUNTRY = Nothing
  On Error Resume Next
  Set fndENTDIC_COUNTRY = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_COUNTRY.Init gridENTDIC_COUNTRY
end sub
private sub OnTabClick()

      gridENTDIC_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_COUNTRY.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_COUNTRY.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_COUNTRY.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_COUNTRY = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_TransportType_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_TransportType" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_TransportType"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_TransportType" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_TransportType"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_TransportTypePrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypePrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_TransportTypeFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_TransportTypeFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_TransportType" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип транспорта"/><Properties Name="Name" PropValue="mnuPopupENTDIC_TransportType"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_TransportTypeAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeOpen"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeRef"/></ControlData><ControlData Name="mnuENTDIC_TransportTypePrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypePrn"/></ControlData><ControlData Name="mnuENTDIC_TransportTypeCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_TransportTypeCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_TransportType" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_TransportType"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_TransportType as object
private menuActionENTDIC_TransportType as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_TransportTypeCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_TransportType,&quot;gridENTDIC_TransportType&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TransportTypePrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_TransportType,&quot;Тип транспорта&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_TransportTypeRef_Click()
  on error resume next
  item.ENTDIC_TransportType.Refresh
  gridENTDIC_TransportType.itemCount = item.ENTDIC_TransportType.count
  gridENTDIC_TransportType.Refetch
  gridENTDIC_TransportType.Refresh
End Sub
Private Sub cmdENTDIC_TransportTypeAcc_Click()
On Error Resume Next
If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
If gridENTDIC_TransportType.Row &gt; 0 Then
 If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_TransportTypeEdit_Click()
  on error resume next
If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
If gridENTDIC_TransportType.Row &gt; 0 then
 If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_TransportType_.Item = u
    again: frmENTDIC_TransportType_.NotFirstTime = False
    frmENTDIC_TransportType_.OnInit
    frmENTDIC_TransportType_.Show vbModal
    If frmENTDIC_TransportType_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_TransportType.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_TransportTypeDel_Click()
  on error resume next
  gridENTDIC_TransportType.Delete
End Sub
Private Sub cmdENTDIC_TransportTypeAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_TransportType.Add()

      Set frmENTDIC_TransportType_.Item = u
      again: frmENTDIC_TransportType_.NotFirstTime = False
      frmENTDIC_TransportType_.OnInit
      frmENTDIC_TransportType_.Show vbModal
      If frmENTDIC_TransportType_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_TransportType.ItemCount = Item.ENTDIC_TransportType.Count
        gridENTDIC_TransportType.Refresh
        gridENTDIC_TransportType.RefreshGroups
        gridENTDIC_TransportType.Refreshsort
        gridENTDIC_TransportType.MoveToBookmark u.ID &amp; &quot;ENTDIC_TransportType&quot;
      Else
        Item.ENTDIC_TransportType.Delete u.ID
        Item.ENTDIC_TransportType.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_TransportTypeFnd_Click()
  on error resume next
  fndENTDIC_TransportType.ShowForm
End Sub
Private Sub cmdENTDIC_TransportTypeRun_Click()
  on error resume next
  gridENTDIC_TransportType_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_TransportType_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_TransportType.LoadRow gridENTDIC_TransportType, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_TransportType_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_TransportType&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_TransportType_DblClick()
  cmdENTDIC_TransportTypeEdit_Click
End Sub
Private Sub gridENTDIC_TransportType_KeyPress(KeyAscii As Integer)
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_TransportType.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_TransportType_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_TransportType.Row And LastRow &gt; 0 Then
  gridENTDIC_TransportType.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_TransportType.GetRowData(gridENTDIC_TransportType.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_TransportTypePASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_TransportType.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_TransportType.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_TransportType_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_TransportTypeCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_TransportType_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_TransportType
End If
end sub
private sub mnuENTDIC_TransportTypeAdd_click()
   menuActionENTDIC_TransportType =&quot;ADD&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeEdit_click()
   menuActionENTDIC_TransportType =&quot;EDIT&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeDelete_click()
   menuActionENTDIC_TransportType =&quot;DEL&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeOpen_click()
   menuActionENTDIC_TransportType =&quot;RUN&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeRef_click()
   menuActionENTDIC_TransportType =&quot;REF&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
  Private Sub mnuENTDIC_TransportTypeCOPY_Click()
    On Error Resume Next
    If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TransportType.Row &gt; 0 Then
     If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_TransportTypeCUT_Click()
    On Error Resume Next
    If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
    If gridENTDIC_TransportType.Row &gt; 0 Then
     If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_TransportType.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_TransportTypeCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_TransportType.ItemCount = 0 Then Exit Sub
  If gridENTDIC_TransportType.Row &gt; 0 Then
   If gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_TransportType.RowBookmark(gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_TransportType.ItemCount = u.parent.Count
      gridENTDIC_TransportType.RefreshRowIndex gridENTDIC_TransportType.RowIndex(gridENTDIC_TransportType.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_TransportTypeCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_TransportTypePrn_click()
   menuActionENTDIC_TransportType =&quot;PRN&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeCfg_click()
   menuActionENTDIC_TransportType =&quot;CFG&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeFind_click()
   menuActionENTDIC_TransportType =&quot;FND&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub mnuENTDIC_TransportTypeAcc_click()
   menuActionENTDIC_TransportType =&quot;ACC&quot;
   menuTimerENTDIC_TransportType.enabled = true
end sub
private sub menuTimerENTDIC_TransportType_timer()
   menuTimerENTDIC_TransportType.enabled = false
   if menuActionENTDIC_TransportType =&quot;ADD&quot; then cmdENTDIC_TransportTypeADD_CLick
   if menuActionENTDIC_TransportType =&quot;EDIT&quot; then cmdENTDIC_TransportTypeEDIT_CLick
   if menuActionENTDIC_TransportType =&quot;DEL&quot; then cmdENTDIC_TransportTypeDEL_CLick
   if menuActionENTDIC_TransportType =&quot;RUN&quot; then cmdENTDIC_TransportTypeRUN_CLick
   if menuActionENTDIC_TransportType =&quot;REF&quot; then cmdENTDIC_TransportTypeREF_CLick
   if menuActionENTDIC_TransportType =&quot;PRN&quot; then cmdENTDIC_TransportTypePRN_CLick
   if menuActionENTDIC_TransportType =&quot;CFG&quot; then cmdENTDIC_TransportTypeCFG_CLick
   if menuActionENTDIC_TransportType =&quot;FND&quot; then cmdENTDIC_TransportTypeFND_CLick
   if menuActionENTDIC_TransportType =&quot;ACC&quot; then cmdENTDIC_TransportTypeACC_CLick
   menuActionENTDIC_TransportType =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_TransportTypeAdd,cmdENTDIC_TransportTypeAdd.tag
  LoadBtnPictures cmdENTDIC_TransportTypeEdit,cmdENTDIC_TransportTypeEdit.tag
  LoadBtnPictures cmdENTDIC_TransportTypeDel,cmdENTDIC_TransportTypeDel.tag
  LoadBtnPictures cmdENTDIC_TransportTypeRef,cmdENTDIC_TransportTypeRef.tag
  LoadBtnPictures cmdENTDIC_TransportTypePrn,cmdENTDIC_TransportTypePrn.tag
  LoadBtnPictures cmdENTDIC_TransportTypeFnd,cmdENTDIC_TransportTypeFnd.tag
  item.ENTDIC_TransportType.PrepareGrid gridENTDIC_TransportType
  LoadGridLayout gridENTDIC_TransportType
  Set fndENTDIC_TransportType = Nothing
  On Error Resume Next
  Set fndENTDIC_TransportType = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_TransportType.Init gridENTDIC_TransportType
end sub
private sub OnTabClick()

      gridENTDIC_TransportType.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_TransportType.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_TransportType.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_TransportType.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_TransportType = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnENTDIC_OPF_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlENTDIC_OPF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlENTDIC_OPF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridENTDIC_OPF" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridENTDIC_OPF"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdENTDIC_OPFAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdENTDIC_OPFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdENTDIC_OPFPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdENTDIC_OPFFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdENTDIC_OPFFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData></ControlData><ControlData Name="mnuPopupENTDIC_OPF" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Организационно-правовая форма"/><Properties Name="Name" PropValue="mnuPopupENTDIC_OPF"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuENTDIC_OPFAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuENTDIC_OPFAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuENTDIC_OPFEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuENTDIC_OPFOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuENTDIC_OPFOpen"/></ControlData><ControlData Name="mnuENTDIC_OPFRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFRef"/></ControlData><ControlData Name="mnuENTDIC_OPFPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuENTDIC_OPFPrn"/></ControlData><ControlData Name="mnuENTDIC_OPFCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuENTDIC_OPFCfg"/></ControlData></ControlData><ControlData Name="menuTimerENTDIC_OPF" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerENTDIC_OPF"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndENTDIC_OPF as object
private menuActionENTDIC_OPF as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdENTDIC_OPFCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridENTDIC_OPF,&quot;gridENTDIC_OPF&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_OPFPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridENTDIC_OPF,&quot;Организационно-правовая форма&quot;
Set jset = Nothing
End Sub

Private Sub cmdENTDIC_OPFRef_Click()
  on error resume next
  item.ENTDIC_OPF.Refresh
  gridENTDIC_OPF.itemCount = item.ENTDIC_OPF.count
  gridENTDIC_OPF.Refetch
  gridENTDIC_OPF.Refresh
End Sub
Private Sub cmdENTDIC_OPFAcc_Click()
On Error Resume Next
If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
If gridENTDIC_OPF.Row &gt; 0 Then
 If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdENTDIC_OPFEdit_Click()
  on error resume next
If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
If gridENTDIC_OPF.Row &gt; 0 then
 If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmENTDIC_OPF_.Item = u
    again: frmENTDIC_OPF_.NotFirstTime = False
    frmENTDIC_OPF_.OnInit
    frmENTDIC_OPF_.Show vbModal
    If frmENTDIC_OPF_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridENTDIC_OPF.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdENTDIC_OPFDel_Click()
  on error resume next
  gridENTDIC_OPF.Delete
End Sub
Private Sub cmdENTDIC_OPFAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.ENTDIC_OPF.Add()

      Set frmENTDIC_OPF_.Item = u
      again: frmENTDIC_OPF_.NotFirstTime = False
      frmENTDIC_OPF_.OnInit
      frmENTDIC_OPF_.Show vbModal
      If frmENTDIC_OPF_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridENTDIC_OPF.ItemCount = Item.ENTDIC_OPF.Count
        gridENTDIC_OPF.Refresh
        gridENTDIC_OPF.RefreshGroups
        gridENTDIC_OPF.Refreshsort
        gridENTDIC_OPF.MoveToBookmark u.ID &amp; &quot;ENTDIC_OPF&quot;
      Else
        Item.ENTDIC_OPF.Delete u.ID
        Item.ENTDIC_OPF.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdENTDIC_OPFFnd_Click()
  on error resume next
  fndENTDIC_OPF.ShowForm
End Sub
Private Sub cmdENTDIC_OPFRun_Click()
  on error resume next
  gridENTDIC_OPF_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridENTDIC_OPF_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.ENTDIC_OPF.LoadRow gridENTDIC_OPF, RowIndex, Bookmark, Values
End Sub
Private Sub gridENTDIC_OPF_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;ENTDIC_OPF&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridENTDIC_OPF_DblClick()
  cmdENTDIC_OPFEdit_Click
End Sub
Private Sub gridENTDIC_OPF_KeyPress(KeyAscii As Integer)
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndENTDIC_OPF.FindOnPress KeyAscii
End Sub

Private Sub gridENTDIC_OPF_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridENTDIC_OPF.Row And LastRow &gt; 0 Then
  gridENTDIC_OPF.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridENTDIC_OPF.GetRowData(gridENTDIC_OPF.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuENTDIC_OPFPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.ENTDIC_OPF.Add()
    If GetFromBuffer(u) Then
      gridENTDIC_OPF.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridENTDIC_OPF_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdENTDIC_OPFCfg_Click
        End If
    End If
end sub

private sub gridENTDIC_OPF_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupENTDIC_OPF
End If
end sub
private sub mnuENTDIC_OPFAdd_click()
   menuActionENTDIC_OPF =&quot;ADD&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFEdit_click()
   menuActionENTDIC_OPF =&quot;EDIT&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFDelete_click()
   menuActionENTDIC_OPF =&quot;DEL&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFOpen_click()
   menuActionENTDIC_OPF =&quot;RUN&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFRef_click()
   menuActionENTDIC_OPF =&quot;REF&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
  Private Sub mnuENTDIC_OPFCOPY_Click()
    On Error Resume Next
    If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
    If gridENTDIC_OPF.Row &gt; 0 Then
     If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuENTDIC_OPFCUT_Click()
    On Error Resume Next
    If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
    If gridENTDIC_OPF.Row &gt; 0 Then
     If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridENTDIC_OPF.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuENTDIC_OPFCHANGE_Click()
  On Error Resume Next
  If gridENTDIC_OPF.ItemCount = 0 Then Exit Sub
  If gridENTDIC_OPF.Row &gt; 0 Then
   If gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridENTDIC_OPF.RowBookmark(gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridENTDIC_OPF.ItemCount = u.parent.Count
      gridENTDIC_OPF.RefreshRowIndex gridENTDIC_OPF.RowIndex(gridENTDIC_OPF.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuENTDIC_OPFCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuENTDIC_OPFPrn_click()
   menuActionENTDIC_OPF =&quot;PRN&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFCfg_click()
   menuActionENTDIC_OPF =&quot;CFG&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFFind_click()
   menuActionENTDIC_OPF =&quot;FND&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub mnuENTDIC_OPFAcc_click()
   menuActionENTDIC_OPF =&quot;ACC&quot;
   menuTimerENTDIC_OPF.enabled = true
end sub
private sub menuTimerENTDIC_OPF_timer()
   menuTimerENTDIC_OPF.enabled = false
   if menuActionENTDIC_OPF =&quot;ADD&quot; then cmdENTDIC_OPFADD_CLick
   if menuActionENTDIC_OPF =&quot;EDIT&quot; then cmdENTDIC_OPFEDIT_CLick
   if menuActionENTDIC_OPF =&quot;DEL&quot; then cmdENTDIC_OPFDEL_CLick
   if menuActionENTDIC_OPF =&quot;RUN&quot; then cmdENTDIC_OPFRUN_CLick
   if menuActionENTDIC_OPF =&quot;REF&quot; then cmdENTDIC_OPFREF_CLick
   if menuActionENTDIC_OPF =&quot;PRN&quot; then cmdENTDIC_OPFPRN_CLick
   if menuActionENTDIC_OPF =&quot;CFG&quot; then cmdENTDIC_OPFCFG_CLick
   if menuActionENTDIC_OPF =&quot;FND&quot; then cmdENTDIC_OPFFND_CLick
   if menuActionENTDIC_OPF =&quot;ACC&quot; then cmdENTDIC_OPFACC_CLick
   menuActionENTDIC_OPF =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdENTDIC_OPFAdd,cmdENTDIC_OPFAdd.tag
  LoadBtnPictures cmdENTDIC_OPFEdit,cmdENTDIC_OPFEdit.tag
  LoadBtnPictures cmdENTDIC_OPFDel,cmdENTDIC_OPFDel.tag
  LoadBtnPictures cmdENTDIC_OPFRef,cmdENTDIC_OPFRef.tag
  LoadBtnPictures cmdENTDIC_OPFPrn,cmdENTDIC_OPFPrn.tag
  LoadBtnPictures cmdENTDIC_OPFFnd,cmdENTDIC_OPFFnd.tag
  item.ENTDIC_OPF.PrepareGrid gridENTDIC_OPF
  LoadGridLayout gridENTDIC_OPF
  Set fndENTDIC_OPF = Nothing
  On Error Resume Next
  Set fndENTDIC_OPF = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndENTDIC_OPF.Init gridENTDIC_OPF
end sub
private sub OnTabClick()

      gridENTDIC_OPF.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridENTDIC_OPF.Top = 40 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Left = 5 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridENTDIC_OPF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlENTDIC_OPF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndENTDIC_OPF = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_EDIZM" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_EDIZM_"><Properties Name="Name" PropValue="pnlENTDIC_EDIZM"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_BANK" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_BANK_"><Properties Name="Name" PropValue="pnlENTDIC_BANK"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_CURRENCY" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_CURRENCY_"><Properties Name="Name" PropValue="pnlENTDIC_CURRENCY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_DOST" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_DOST_"><Properties Name="Name" PropValue="pnlENTDIC_DOST"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_REGION" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_REGION_"><Properties Name="Name" PropValue="pnlENTDIC_REGION"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_TOWN" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_TOWN_"><Properties Name="Name" PropValue="pnlENTDIC_TOWN"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_COUNTRY" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_COUNTRY_"><Properties Name="Name" PropValue="pnlENTDIC_COUNTRY"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_TransportType" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_TransportType_"><Properties Name="Name" PropValue="pnlENTDIC_TransportType"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlENTDIC_OPF" ControlIndex="0" PROGID="ENTDIC2GUI.vpnENTDIC_OPF_"><Properties Name="Name" PropValue="pnlENTDIC_OPF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: общие классификаторы"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlENTDIC_EDIZM.IsOK
if IsItOk then IsItOk = pnlENTDIC_BANK.IsOK
if IsItOk then IsItOk = pnlENTDIC_CURRENCY.IsOK
if IsItOk then IsItOk = pnlENTDIC_DOST.IsOK
if IsItOk then IsItOk = pnlENTDIC_REGION.IsOK
if IsItOk then IsItOk = pnlENTDIC_TOWN.IsOK
if IsItOk then IsItOk = pnlENTDIC_COUNTRY.IsOK
if IsItOk then IsItOk = pnlENTDIC_TransportType.IsOK
if IsItOk then IsItOk = pnlENTDIC_OPF.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlENTDIC_OPF.Visible = False
  pnlENTDIC_TransportType.Visible = False
  pnlENTDIC_COUNTRY.Visible = False
  pnlENTDIC_TOWN.Visible = False
  pnlENTDIC_REGION.Visible = False
  pnlENTDIC_DOST.Visible = False
  pnlENTDIC_CURRENCY.Visible = False
  pnlENTDIC_BANK.Visible = False
  pnlENTDIC_EDIZM.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;ENTDIC_EDIZM&quot;
     With pnlENTDIC_EDIZM
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_EDIZM.OnClick item,parentform
     End With
   Case &quot;ENTDIC_BANK&quot;
     With pnlENTDIC_BANK
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_BANK.OnClick item,parentform
     End With
   Case &quot;ENTDIC_CURRENCY&quot;
     With pnlENTDIC_CURRENCY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_CURRENCY.OnClick item,parentform
     End With
   Case &quot;ENTDIC_DOST&quot;
     With pnlENTDIC_DOST
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_DOST.OnClick item,parentform
     End With
   Case &quot;ENTDIC_REGION&quot;
     With pnlENTDIC_REGION
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_REGION.OnClick item,parentform
     End With
   Case &quot;ENTDIC_TOWN&quot;
     With pnlENTDIC_TOWN
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_TOWN.OnClick item,parentform
     End With
   Case &quot;ENTDIC_COUNTRY&quot;
     With pnlENTDIC_COUNTRY
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_COUNTRY.OnClick item,parentform
     End With
   Case &quot;ENTDIC_TransportType&quot;
     With pnlENTDIC_TransportType
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_TransportType.OnClick item,parentform
     End With
   Case &quot;ENTDIC_OPF&quot;
     With pnlENTDIC_OPF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlENTDIC_OPF.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Единицы измерения&quot;
ts.Tabs.Item(1).key = &quot;ENTDIC_EDIZM&quot;
pnlENTDIC_EDIZM.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_BANK&quot;, &quot;Банки&quot;)
pnlENTDIC_BANK.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_CURRENCY&quot;, &quot;Валюта&quot;)
pnlENTDIC_CURRENCY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_DOST&quot;, &quot;Тип доставки&quot;)
pnlENTDIC_DOST.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_REGION&quot;, &quot;Название областей&quot;)
pnlENTDIC_REGION.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_TOWN&quot;, &quot;Города&quot;)
pnlENTDIC_TOWN.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_COUNTRY&quot;, &quot;Страны&quot;)
pnlENTDIC_COUNTRY.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_TransportType&quot;, &quot;Тип транспорта&quot;)
pnlENTDIC_TransportType.OnInit item, parentForm
call ts.Tabs.Add(, &quot;ENTDIC_OPF&quot;, &quot;Организационно-правовая форма&quot;)
pnlENTDIC_OPF.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;ENTDIC2&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlENTDIC_EDIZM.CloseClass
 pnlENTDIC_BANK.CloseClass
 pnlENTDIC_CURRENCY.CloseClass
 pnlENTDIC_DOST.CloseClass
 pnlENTDIC_REGION.CloseClass
 pnlENTDIC_TOWN.CloseClass
 pnlENTDIC_COUNTRY.CloseClass
 pnlENTDIC_TransportType.CloseClass
 pnlENTDIC_OPF.CloseClass
End Sub
public sub OnSave()
 pnlENTDIC_EDIZM.OnSave
 pnlENTDIC_BANK.OnSave
 pnlENTDIC_CURRENCY.OnSave
 pnlENTDIC_DOST.OnSave
 pnlENTDIC_REGION.OnSave
 pnlENTDIC_TOWN.OnSave
 pnlENTDIC_COUNTRY.OnSave
 pnlENTDIC_TransportType.OnSave
 pnlENTDIC_OPF.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlENTDIC_EDIZM.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_BANK.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_CURRENCY.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_DOST.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_REGION.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_TOWN.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_COUNTRY.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_TransportType.IsChanged
m_IsChanged = m_IsChanged or pnlENTDIC_OPF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="ENTDIC2GUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочник: общие классификаторы"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;ENTDIC2&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;main&quot; then

if Name=&quot;ENTDIC_EDIZM&quot; then 
 set FormByName = new frmENTDIC_EDIZM_main
 exit function
end if

if Name=&quot;ENTDIC_BANK&quot; then 
 set FormByName = new frmENTDIC_BANK_main
 exit function
end if

if Name=&quot;ENTDIC_1CLINK&quot; then 
 set FormByName = new frmENTDIC_1CLINK_main
 exit function
end if

if Name=&quot;ENTDIC_CURRENCY&quot; then 
 set FormByName = new frmENTDIC_CURRENCY_main
 exit function
end if

if Name=&quot;ENTDIC_CURCOURCE&quot; then 
 set FormByName = new frmENTDIC_CURCOURCE_main
 exit function
end if

if Name=&quot;ENTDIC_DOST&quot; then 
 set FormByName = new frmENTDIC_DOST_main
 exit function
end if

if Name=&quot;ENTDIC_REGION&quot; then 
 set FormByName = new frmENTDIC_REGION_main
 exit function
end if

if Name=&quot;ENTDIC_TOWN&quot; then 
 set FormByName = new frmENTDIC_TOWN_main
 exit function
end if

if Name=&quot;ENTDIC_COUNTRY&quot; then 
 set FormByName = new frmENTDIC_COUNTRY_main
 exit function
end if

if Name=&quot;ENTDIC_TransportType&quot; then 
 set FormByName = new frmENTDIC_TransportType_main
 exit function
end if

if Name=&quot;ENTDIC_OPF&quot; then 
 set FormByName = new frmENTDIC_OPF_main
 exit function
end if

end if
if Mode=&quot;admi&quot; then

if Name=&quot;ENTDIC_EDIZM&quot; then 
 set FormByName = new frmENTDIC_EDIZM_admi
 exit function
end if

if Name=&quot;ENTDIC_BANK&quot; then 
 set FormByName = new frmENTDIC_BANK_admi
 exit function
end if

if Name=&quot;ENTDIC_1CLINK&quot; then 
 set FormByName = new frmENTDIC_1CLINK_admi
 exit function
end if

if Name=&quot;ENTDIC_CURRENCY&quot; then 
 set FormByName = new frmENTDIC_CURRENCY_admi
 exit function
end if

if Name=&quot;ENTDIC_CURCOURCE&quot; then 
 set FormByName = new frmENTDIC_CURCOURCE_admi
 exit function
end if

if Name=&quot;ENTDIC_DOST&quot; then 
 set FormByName = new frmENTDIC_DOST_admi
 exit function
end if

if Name=&quot;ENTDIC_REGION&quot; then 
 set FormByName = new frmENTDIC_REGION_admi
 exit function
end if

if Name=&quot;ENTDIC_TOWN&quot; then 
 set FormByName = new frmENTDIC_TOWN_admi
 exit function
end if

if Name=&quot;ENTDIC_COUNTRY&quot; then 
 set FormByName = new frmENTDIC_COUNTRY_admi
 exit function
end if

if Name=&quot;ENTDIC_TransportType&quot; then 
 set FormByName = new frmENTDIC_TransportType_admi
 exit function
end if

if Name=&quot;ENTDIC_OPF&quot; then 
 set FormByName = new frmENTDIC_OPF_admi
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;ENTDIC_EDIZM&quot; then 
 set FormByName = new frmENTDIC_EDIZM_
 exit function
end if

if Name=&quot;ENTDIC_BANK&quot; then 
 set FormByName = new frmENTDIC_BANK_
 exit function
end if

if Name=&quot;ENTDIC_1CLINK&quot; then 
 set FormByName = new frmENTDIC_1CLINK_
 exit function
end if

if Name=&quot;ENTDIC_CURRENCY&quot; then 
 set FormByName = new frmENTDIC_CURRENCY_
 exit function
end if

if Name=&quot;ENTDIC_CURCOURCE&quot; then 
 set FormByName = new frmENTDIC_CURCOURCE_
 exit function
end if

if Name=&quot;ENTDIC_DOST&quot; then 
 set FormByName = new frmENTDIC_DOST_
 exit function
end if

if Name=&quot;ENTDIC_REGION&quot; then 
 set FormByName = new frmENTDIC_REGION_
 exit function
end if

if Name=&quot;ENTDIC_TOWN&quot; then 
 set FormByName = new frmENTDIC_TOWN_
 exit function
end if

if Name=&quot;ENTDIC_COUNTRY&quot; then 
 set FormByName = new frmENTDIC_COUNTRY_
 exit function
end if

if Name=&quot;ENTDIC_TransportType&quot; then 
 set FormByName = new frmENTDIC_TransportType_
 exit function
end if

if Name=&quot;ENTDIC_OPF&quot; then 
 set FormByName = new frmENTDIC_OPF_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
