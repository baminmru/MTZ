<?xml version="1.0"?>
<root><ModuleHolder ModuleName="--PreInstall" File=""><BlockHolder BlockName="--body" BlockCode="

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Tables" File=""><BlockHolder BlockName="--kernel" BlockCode=" 

-- Kernel Tables --
drop table MTZ.sysoptions
/
create table MTZ.sysoptions(
sysoptionsID CHAR(38) primary key,
Name varchar2(255) null,
TheValue varchar2(255) null,
OptionType VarChar2(255) null
)
/
drop table MTZ.typelist
/
create  table MTZ.typelist(
typelistID CHAR(38) primary key  ,
Name varchar2(255) not null,
SecurityStyleID CHAR(38) null, 
RegisterProc varchar2(255) null,
DeleteProc varchar2(255) null,
HCLProc varchar2(255) null ,
PropagateProc varchar2(255) null 
)
/
drop table MTZ.Instance
/
create table MTZ.Instance(
InstanceID CHAR(38) not null primary key,
LockUserID CHAR(38) null, 
LockSessionID CHAR(38) null, 
SecurityStyleID CHAR(38) null, 
Name varchar2(255) null,
ObjType varchar2(255) null
)
/
alter table instance add OwnerPartName varchar2(255) null
/
alter table instance add OwnerRowID CHAR(38) null
/
alter  table instance add status CHAR(38) null
/
alter  table instance add archived NUMBER null
/
drop table MTZ.QueryResult
/
CREATE TABLE MTZ.QueryResult (
  QueryResultid CHAR(38) NOT NULL ,
  result CHAR(38) NULL 
)
/
drop table MTZ.RPRESULT
/
CREATE TABLE MTZ.RPRESULT (
  RPRESULTID CHAR(38) NOT NULL ,
  PARENTLEVEL NUMBER NOT NULL ,
  PARTNAME varchar2 (255) NULL ,
  THEROWID CHAR(38) NULL 
)
/


"><FormData Name=""/></BlockHolder><BlockHolder BlockName="--body" BlockCode=" 

/*Суть сообщения*/
drop table MTZ.SrvMessageInfo/*Суть сообщения*/ 
/
create table MTZ.SrvMessageInfo/*Суть сообщения*/ (
InstanceID CHAR(38) ,
SrvMessageInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.SrvMessageInfo add 
ForUser CHAR(38) null /* Для пользователя */
/
alter  table MTZ.SrvMessageInfo add 
msgDate
 DATE null /* Дата */
/
alter  table MTZ.SrvMessageInfo add 
MsgInfo VARCHAR2(4000) null /* Текст сообщения */
/
alter  table MTZ.SrvMessageInfo add 
TheDocument CHAR(38) null /* Документ */
/
alter  table MTZ.SrvMessageInfo add 
ReadTime
 DATE null /* Время прочтения */
/


/*Адресаты*/
drop table MTZ.STDMail_To/**/ 
/
create table MTZ.STDMail_To/**/ (
InstanceID CHAR(38) ,
STDMail_Toid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDMail_To add 
TheTo
 VARCHAR2 (255) null /* Адресат */
/
alter  table MTZ.STDMail_To add 
TheType
 NUMBER null 
 check (TheType in ( 0/* Кому */
, 2/* Скрытая копия */
, 1/* Копия */ )) /* Тип */
/


/*Вложения*/
drop table MTZ.STDMail_Attach/**/ 
/
create table MTZ.STDMail_Attach/**/ (
InstanceID CHAR(38) ,
STDMail_Attachid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDMail_Attach add 
TheName
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.STDMail_Attach add 
TheFile VARCHAR2(4000) null /* Файл */
/
alter  table MTZ.STDMail_Attach add 
 TheFile_EXT varchar2(4) null
/


/*Сообщение*/
drop table MTZ.STDMail_Info/**/ 
/
create table MTZ.STDMail_Info/**/ (
InstanceID CHAR(38) ,
STDMail_Infoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDMail_Info add 
Subject
 VARCHAR2 (255) null /* Тема */
/
alter  table MTZ.STDMail_Info add 
TheBody VARCHAR2(4000) null /* Сообщение */
/
alter  table MTZ.STDMail_Info add 
TheFromName
 VARCHAR2 (255) null /* От имени */
/
alter  table MTZ.STDMail_Info add 
Sended
 NUMBER null 
 check (Sended in ( -1/* Да */
, 0/* Нет */ )) /* Отослано */
/
alter  table MTZ.STDMail_Info add 
IsDelete
 NUMBER null 
 check (IsDelete in ( -1/* Да */
, 0/* Нет */ )) /* Удалить после отправки */
/
alter  table MTZ.STDMail_Info add 
CreatedDT
 DATE null /* Создано */
/
alter  table MTZ.STDMail_Info add 
SentDT
 DATE null /* Отправлено */
/


/*Перемещения*/
drop table MTZ.ITTOPT_MOVE/*Необходимые перемещения*/ 
/
create table MTZ.ITTOPT_MOVE/*Необходимые перемещения*/ (
InstanceID CHAR(38) ,
ITTOPT_MOVEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOPT_MOVE add 
sequence
 NUMBER null /* Номер */
/
alter  table MTZ.ITTOPT_MOVE add 
FromLocation
 VARCHAR2 (12) null /* Из ячейки */
/
alter  table MTZ.ITTOPT_MOVE add 
ToLocation
 VARCHAR2 (12) null /* В ячейку */
/
alter  table MTZ.ITTOPT_MOVE add 
ThePalletteNum
 VARCHAR2 (20) null /* Номер палеты */
/
alter  table MTZ.ITTOPT_MOVE add 
ISMoved
 NUMBER null 
 check (ISMoved in ( -1/* Да */
, 0/* Нет */ )) /* Перемещена */
/


/*Описание*/
drop table MTZ.ITTOPT_DEF/*Описание задания на оптимизацию*/ 
/
create table MTZ.ITTOPT_DEF/*Описание задания на оптимизацию*/ (
InstanceID CHAR(38) ,
ITTOPT_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOPT_DEF add 
OptType CHAR(38) null /* Тип оптимизации */
/
alter  table MTZ.ITTOPT_DEF add 
TheClient
 VARCHAR2 (255) null /* Клиент */
/
alter  table MTZ.ITTOPT_DEF add 
good
 VARCHAR2 (255) null /* Товар */
/
alter  table MTZ.ITTOPT_DEF add 
made_country
 VARCHAR2 (255) null /* Страна производитель */
/
alter  table MTZ.ITTOPT_DEF add 
Factory
 VARCHAR2 (255) null /* Завод */
/
alter  table MTZ.ITTOPT_DEF add 
KILL_NUMBER
 VARCHAR2 (255) null /* № бойни */
/
alter  table MTZ.ITTOPT_DEF add 
IsBrak
 VARCHAR2 (20) null /* Брак */
/
alter  table MTZ.ITTOPT_DEF add 
OPtDate
 DATE null /* Дата создания заявки */
/
alter  table MTZ.ITTOPT_DEF add 
DateToOptimize
 DATE null /* Плановая дата оптимизации */
/


/*Зоны*/
drop table MTZ.Num_zones/*Зоны уникальных нумеров*/ 
/
create table MTZ.Num_zones/*Зоны уникальных нумеров*/ (
InstanceID CHAR(38) ,
Num_zonesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Num_zones add 
ZoneMask
 VARCHAR2 (255) null /* Маска зоны */
/


/*Номера*/
drop table MTZ.Num_Values/*уникальные номера*/ 
/
create table MTZ.Num_Values/*уникальные номера*/ (
ParentStructRowID CHAR(38) not null,
Num_Valuesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Num_Values add 
the_Value
 NUMBER null /* Значение */
/
alter  table MTZ.Num_Values add 
OwnerPartName
 VARCHAR2 (64) null /* Раздел */
/
alter  table MTZ.Num_Values add 
OwnerRowID CHAR(38) null /* Идентификатор строки */
/


/*Описание*/
drop table MTZ.Num_head/*Описание нумератора*/ 
/
create table MTZ.Num_head/*Описание нумератора*/ (
InstanceID CHAR(38) ,
Num_headid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Num_head add 
Name
 VARCHAR2 (80) null /* Название */
/
alter  table MTZ.Num_head add 
Shema
 NUMBER null 
 check (Shema in ( 0/* Единая зона */
, 1/* По году */
, 4/* По дню */
, 2/* По кварталу */
, 3/* По месяцу */
, 10/* Произвольные зоны */ )) /* Схема нумерации */
/


/*Группа полей фильтра*/
drop table MTZ.FilterFieldGroup/*Группа полей фильтра*/ 
/
create table MTZ.FilterFieldGroup/*Группа полей фильтра*/ (
InstanceID CHAR(38) ,
FilterFieldGroupid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FilterFieldGroup add 
sequence
 NUMBER null /* Последовательность */
/
alter  table MTZ.FilterFieldGroup add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.FilterFieldGroup add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/
alter  table MTZ.FilterFieldGroup add 
AllowIgnore
 NUMBER null 
 check (AllowIgnore in ( -1/* Да */
, 0/* Нет */ )) /* Можно отключать */
/


/*Поле фильтра*/
drop table MTZ.FileterField/*Поле фильтра*/ 
/
create table MTZ.FileterField/*Поле фильтра*/ (
ParentStructRowID CHAR(38) not null,
FileterFieldid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FileterField add 
sequence
 NUMBER null /* Последовательность */
/
alter  table MTZ.FileterField add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.FileterField add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/
alter  table MTZ.FileterField add 
FieldType CHAR(38) null /* Тип поля */
/
alter  table MTZ.FileterField add 
FieldSize
 NUMBER null /* Размер */
/
alter  table MTZ.FileterField add 
RefType
 NUMBER null 
 check (RefType in ( 2/* На строку раздела */
, 3/* На источник данных */
, 0/* Скалярное поле ( не ссылка) */
, 1/* На объект  */ )) /* Тип ссылки */
/
alter  table MTZ.FileterField add 
RefToType CHAR(38) null /* Тип, куда ссылаемся */
/
alter  table MTZ.FileterField add 
RefToPart CHAR(38) null /* Раздел, куда ссылаемся */
/
alter  table MTZ.FileterField add 
ValueArray
 NUMBER null 
 check (ValueArray in ( -1/* Да */
, 0/* Нет */ )) /* Массив значений */
/


/*Фильтр*/
drop table MTZ.Filters/*Фильтр*/ 
/
create table MTZ.Filters/*Фильтр*/ (
InstanceID CHAR(38) ,
Filtersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Filters add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.Filters add 
TheCaption
 VARCHAR2 (80) null /* Заголовок */
/
alter  table MTZ.Filters add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Дейсвие при смене*/
drop table MTZ.StateAction/*Дейсвие при смене*/ 
/
create table MTZ.StateAction/*Дейсвие при смене*/ (
InstanceID CHAR(38) ,
StateActionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.StateAction add 
OnDocStatus CHAR(38) null /* При входе в состояие */
/
alter  table MTZ.StateAction add 
NewSecurityStyle CHAR(38) null /* Установить стиль защиты */
/
alter  table MTZ.StateAction add 
ClearSecurity
 NUMBER null 
 check (ClearSecurity in ( -1/* Да */
, 0/* Нет */ )) /* Сбросить стиль защиты */
/
alter  table MTZ.StateAction add 
LibraryFile
 VARCHAR2 (255) null /* Библиотека-обработчик */
/
alter  table MTZ.StateAction add 
ActionClass
 VARCHAR2 (255) null /* Класс для обработки */
/
alter  table MTZ.StateAction add 
ActionScript VARCHAR2(4000) null /* Скрипт для исполнения */
/


/*Тип вопроса в анкете*/
drop table MTZ.WEBSDIC_QTYPE/**/ 
/
create table MTZ.WEBSDIC_QTYPE/**/ (
InstanceID CHAR(38) ,
WEBSDIC_QTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBSDIC_QTYPE add 
Sequence
 NUMBER null /* Номер п/п */
/
alter  table MTZ.WEBSDIC_QTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.WEBSDIC_QTYPE add 
Template VARCHAR2(4000) null /* Трактовка */
/


/*Основные настройки*/
drop table MTZ.WEBSDIC_DEF/**/ 
/
create table MTZ.WEBSDIC_DEF/**/ (
InstanceID CHAR(38) ,
WEBSDIC_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBSDIC_DEF add 
WEBS CHAR(38) null /* Сайт */
/
alter  table MTZ.WEBSDIC_DEF add 
PathToFiles
 VARCHAR2 (2048) null /* Каталог для файлов */
/


/*Тип страницы*/
drop table MTZ.WEBSDIC_PAGETYPE/**/ 
/
create table MTZ.WEBSDIC_PAGETYPE/**/ (
InstanceID CHAR(38) ,
WEBSDIC_PAGETYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBSDIC_PAGETYPE add 
Sequence
 NUMBER null /* Номер п/п */
/
alter  table MTZ.WEBSDIC_PAGETYPE add 
Name
 VARCHAR2 (64) null /* Название */
/


/*Отложенное событие*/
drop table MTZ.MTZ2JOB_DEF/*Описание отложенного события*/ 
/
create table MTZ.MTZ2JOB_DEF/*Описание отложенного события*/ (
InstanceID CHAR(38) ,
MTZ2JOB_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZ2JOB_DEF add 
EventDate
 DATE null /* Отложено до */
/
alter  table MTZ.MTZ2JOB_DEF add 
EvenType
 VARCHAR2 (255) null /* Тип события */
/
alter  table MTZ.MTZ2JOB_DEF add 
ThruObject CHAR(38) null /* Объект - причина события */
/
alter  table MTZ.MTZ2JOB_DEF add 
ThruState CHAR(38) null /* Состояние - причина */
/
alter  table MTZ.MTZ2JOB_DEF add 
NextState CHAR(38) null /* Состояние после обработки */
/
alter  table MTZ.MTZ2JOB_DEF add 
ProcessDate
 DATE null /* Момент обработки */
/
alter  table MTZ.MTZ2JOB_DEF add 
Processed
 NUMBER null 
 check (Processed in ( -1/* Да */
, 0/* Нет */ )) /* Обработан */
/


/*Очередь заблокированных объектов*/
drop table MTZ.REPD_LOCKED/*Очередь заблокированных объектов*/ 
/
create table MTZ.REPD_LOCKED/*Очередь заблокированных объектов*/ (
InstanceID CHAR(38) ,
REPD_LOCKEDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_LOCKED add 
LastTry
 DATE null /* Последняя разработка */
/
alter  table MTZ.REPD_LOCKED add 
SourceFile
 VARCHAR2 (2048) null /* Файл данных */
/
alter  table MTZ.REPD_LOCKED add 
ReplicaRowID CHAR(38) null /* Идентификатор строки реплики */
/
alter  table MTZ.REPD_LOCKED add 
FirstTry
 DATE null /* Первая обработка */
/
alter  table MTZ.REPD_LOCKED add 
StructType
 VARCHAR2 (255) null /* Тип строки */
/
alter  table MTZ.REPD_LOCKED add 
ObjectType
 VARCHAR2 (255) null /* Тип объекта */
/
alter  table MTZ.REPD_LOCKED add 
The_RowID CHAR(38) null /* Идетнификатор строки */
/
alter  table MTZ.REPD_LOCKED add 
The_InstanceID CHAR(38) null /* Объект */
/
alter  table MTZ.REPD_LOCKED add 
ReplicaPackID CHAR(38) null /* ReplicaPackID */
/
alter  table MTZ.REPD_LOCKED add 
PartCount
 NUMBER null /* PartCount */
/
alter  table MTZ.REPD_LOCKED add 
PartNumber
 NUMBER null /* PartNumber */
/


/*Запрос данных на объект\ строку*/
drop table MTZ.REPD_RequestQuery/*Запрос данных на объект\ строку*/ 
/
create table MTZ.REPD_RequestQuery/*Запрос данных на объект\ строку*/ (
InstanceID CHAR(38) ,
REPD_RequestQueryid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_RequestQuery add 
TheRowID CHAR(38) null /* TheRowID */
/
alter  table MTZ.REPD_RequestQuery add 
ReqPartName
 VARCHAR2 (255) null /* ReqPartName */
/
alter  table MTZ.REPD_RequestQuery add 
ObjectID CHAR(38) null /* ObjectID */
/
alter  table MTZ.REPD_RequestQuery add 
SourceSrv CHAR(38) null /* SourceSrv */
/
alter  table MTZ.REPD_RequestQuery add 
SendRecord CHAR(38) null /* SendRecord */
/
alter  table MTZ.REPD_RequestQuery add 
DestSrv CHAR(38) null /* DestSrv */
/
alter  table MTZ.REPD_RequestQuery add 
Provider CHAR(38) null /* Provider */
/
alter  table MTZ.REPD_RequestQuery add 
ReqTypeName
 VARCHAR2 (255) null /* ReqTypeName */
/


/*Результат запроса*/
drop table MTZ.REPD_ResQueryRcv/*Результат запроса*/ 
/
create table MTZ.REPD_ResQueryRcv/*Результат запроса*/ (
ParentStructRowID CHAR(38) not null,
REPD_ResQueryRcvid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_ResQueryRcv add 
ReceiveRec CHAR(38) null /* ReceiveRec */
/


/*Провайдер репликациии*/
drop table MTZ.REPD_PROV/*Провайдер репликациии*/ 
/
create table MTZ.REPD_PROV/*Провайдер репликациии*/ (
InstanceID CHAR(38) ,
REPD_PROVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_PROV add 
AssemblyName
 VARCHAR2 (255) null /* AssemblyName */
/
alter  table MTZ.REPD_PROV add 
ClassName
 VARCHAR2 (255) null /* ClassName */
/
alter  table MTZ.REPD_PROV add 
Name
 VARCHAR2 (255) null /* Name */
/


/*Узлы репликации*/
drop table MTZ.REPD_SRV/*Узлы репликации*/ 
/
create table MTZ.REPD_SRV/*Узлы репликации*/ (
InstanceID CHAR(38) ,
REPD_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_SRV add 
Obj3 CHAR(38) null /* Obj3 */
/
alter  table MTZ.REPD_SRV add 
name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.REPD_SRV add 
Obj2 CHAR(38) null /* Obj2 */
/
alter  table MTZ.REPD_SRV add 
Obj1 CHAR(38) null /* Obj1 */
/


/*Получатели реплик*/
drop table MTZ.REPD_SNDTO/*Получатели реплик*/ 
/
create table MTZ.REPD_SNDTO/*Получатели реплик*/ (
ParentStructRowID CHAR(38) not null,
REPD_SNDTOid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_SNDTO add 
DestSrv CHAR(38) null /* DestSrv */
/
alter  table MTZ.REPD_SNDTO add 
LastScan
 DATE null /* Last scan */
/
alter  table MTZ.REPD_SNDTO add 
Config VARCHAR2(4000) null /* Config */
/
alter  table MTZ.REPD_SNDTO add 
LastReceive
 DATE null /* Last Receive */
/
alter  table MTZ.REPD_SNDTO add 
Provider CHAR(38) null /* Provider */
/
alter  table MTZ.REPD_SNDTO add 
Work_Start
 DATE null /* Начало работы (время) */
/
alter  table MTZ.REPD_SNDTO add 
Work_End
 DATE null /* Окончание работы (время) */
/
alter  table MTZ.REPD_SNDTO add 
The_Interval
 NUMBER null /* Интервал */
/
alter  table MTZ.REPD_SNDTO add 
IsActive
 NUMBER null 
 check (IsActive in ( -1/* Да */
, 0/* Нет */ )) /* Активен */
/
alter  table MTZ.REPD_SNDTO add 
LastApproveLog
 DATE null /* Последнее подтверждение (лог) */
/


/*Константы к запросу*/
drop table MTZ.REPD_CONST/**/ 
/
create table MTZ.REPD_CONST/**/ (
ParentStructRowID CHAR(38) not null,
REPD_CONSTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_CONST add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.REPD_CONST add 
TheValue
 VARCHAR2 (255) null /* Значение */
/


/*Тип репликации документов*/
drop table MTZ.REPD_REPTYPE/*Описание типа репликации документов для узла*/ 
/
create table MTZ.REPD_REPTYPE/*Описание типа репликации документов для узла*/ (
ParentStructRowID CHAR(38) not null,
REPD_REPTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_REPTYPE add 
ReplicaType
 NUMBER null 
 check (ReplicaType in ( 0/* Весь документ */
, 2/* Локальный */
, 1/* Построчно */ )) /* Тип репликации */
/
alter  table MTZ.REPD_REPTYPE add 
TheObjectType CHAR(38) null /* Тип объекта */
/
alter  table MTZ.REPD_REPTYPE add 
UseFilter
 NUMBER null 
 check (UseFilter in ( -1/* Да */
, 0/* Нет */ )) /* Фильтровать по условию */
/
alter  table MTZ.REPD_REPTYPE add 
RepConditonQRY VARCHAR2(4000) null /* Условие репликации */
/


/*Очередь отсылки*/
drop table MTZ.REPD_SendQ/*Очередь отсылки*/ 
/
create table MTZ.REPD_SendQ/*Очередь отсылки*/ (
InstanceID CHAR(38) ,
REPD_SendQid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_SendQ add 
SourceSrv CHAR(38) null /* SourceSrv */
/
alter  table MTZ.REPD_SendQ add 
Config VARCHAR2(4000) null /* Config */
/
alter  table MTZ.REPD_SendQ add 
SentDate
 DATE null /* SentDate */
/
alter  table MTZ.REPD_SendQ add 
DestSrv CHAR(38) null /* DestSrv */
/
alter  table MTZ.REPD_SendQ add 
Provider CHAR(38) null /* Provider */
/
alter  table MTZ.REPD_SendQ add 
Acknowelge
 NUMBER null 
 check (Acknowelge in ( -1/* Да */
, 0/* Нет */ )) /* Acknowelge */
/
alter  table MTZ.REPD_SendQ add 
SendSize
 NUMBER null /* SendSize */
/
alter  table MTZ.REPD_SendQ add 
CheckDate
 DATE null /* CheckDate */
/
alter  table MTZ.REPD_SendQ add 
ReplicaPackID CHAR(38) null /* ReplicaPackID */
/
alter  table MTZ.REPD_SendQ add 
FileName
 VARCHAR2 (1024) null /* FileName */
/
alter  table MTZ.REPD_SendQ add 
PartCount
 NUMBER null /* Количество частей */
/
alter  table MTZ.REPD_SendQ add 
PartNumber
 NUMBER null /* Часть */
/
alter  table MTZ.REPD_SendQ add 
Sent
 NUMBER null 
 check (Sent in ( 1/* Да */
, 0/* Нет */ )) /* Sent */
/
alter  table MTZ.REPD_SendQ add 
ReplicatorPointer
 DATE null /* Указатель репликации */
/


/*Очередь полученых реплик*/
drop table MTZ.REPD_RecvQ/*Очередь полученых реплик*/ 
/
create table MTZ.REPD_RecvQ/*Очередь полученых реплик*/ (
InstanceID CHAR(38) ,
REPD_RecvQid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.REPD_RecvQ add 
TheRowID CHAR(38) null /* TheRowID */
/
alter  table MTZ.REPD_RecvQ add 
Received
 DATE null /* Received */
/
alter  table MTZ.REPD_RecvQ add 
Provider CHAR(38) null /* Provider */
/
alter  table MTZ.REPD_RecvQ add 
RecvSize
 NUMBER null /* RecvSize */
/
alter  table MTZ.REPD_RecvQ add 
SourceSrv CHAR(38) null /* SourceSrv */
/
alter  table MTZ.REPD_RecvQ add 
DestSrv CHAR(38) null /* DestSrv */
/
alter  table MTZ.REPD_RecvQ add 
Acknowelge
 NUMBER null 
 check (Acknowelge in ( -1/* Да */
, 0/* Нет */ )) /* Acknowelge */
/
alter  table MTZ.REPD_RecvQ add 
ReplicaPackID CHAR(38) null /* ReplicaPackID */
/
alter  table MTZ.REPD_RecvQ add 
PartCount
 NUMBER null /* Количество частей */
/
alter  table MTZ.REPD_RecvQ add 
PartNumber
 NUMBER null /* Часть */
/
alter  table MTZ.REPD_RecvQ add 
FileName
 VARCHAR2 (1024) null /* FileName */
/
alter  table MTZ.REPD_RecvQ add 
Completed
 NUMBER null 
 check (Completed in ( -1/* Да */
, 0/* Нет */ )) /* Completed */
/


/*Статистика  посещений сайта*/
drop table MTZ.ST_MAIN/**/ 
/
create table MTZ.ST_MAIN/**/ (
InstanceID CHAR(38) ,
ST_MAINid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ST_MAIN add 
AccessDate
 DATE null /* Дата */
/
alter  table MTZ.ST_MAIN add 
UrlReferer
 VARCHAR2 (1024) null /* Предыдущий адрес */
/
alter  table MTZ.ST_MAIN add 
UserAgent
 VARCHAR2 (256) null /* Интернет агент */
/
alter  table MTZ.ST_MAIN add 
UserHostAddress
 VARCHAR2 (512) null /* Адрес хоста */
/
alter  table MTZ.ST_MAIN add 
UserHostName
 VARCHAR2 (512) null /* Имя хоста */
/
alter  table MTZ.ST_MAIN add 
the_Description
 VARCHAR2 (1024) null /* Примечания */
/
alter  table MTZ.ST_MAIN add 
WEBS_Page CHAR(38) null /* Стартовая страница */
/


/*Описание*/
drop table MTZ.ST_DEF/**/ 
/
create table MTZ.ST_DEF/**/ (
InstanceID CHAR(38) ,
ST_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ST_DEF add 
Name
 VARCHAR2 (1024) null /* Имя */
/
alter  table MTZ.ST_DEF add 
WEBS CHAR(38) null /* Сайт */
/
alter  table MTZ.ST_DEF add 
the_Description
 VARCHAR2 (4000) null /* Примечания */
/
alter  table MTZ.ST_DEF add 
IsActive
 NUMBER null 
 check (IsActive in ( -1/* Да */
, 0/* Нет */ )) /* Активна */
/


/*Статистика посещений страниц сайта*/
drop table MTZ.ST_PAGES/**/ 
/
create table MTZ.ST_PAGES/**/ (
InstanceID CHAR(38) ,
ST_PAGESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ST_PAGES add 
AccessDate
 DATE null /* Дата */
/
alter  table MTZ.ST_PAGES add 
UrlReferer
 VARCHAR2 (1024) null /* Предыдущий адрес */
/
alter  table MTZ.ST_PAGES add 
UserAgent
 VARCHAR2 (256) null /* Интернет агент */
/
alter  table MTZ.ST_PAGES add 
UserHostAddress
 VARCHAR2 (512) null /* Адрес хоста */
/
alter  table MTZ.ST_PAGES add 
UserHostName
 VARCHAR2 (512) null /* Имя хоста */
/
alter  table MTZ.ST_PAGES add 
the_Description
 VARCHAR2 (1024) null /* Примечания */
/
alter  table MTZ.ST_PAGES add 
WEBS_Page CHAR(38) null /* Стартовая страница */
/


/*Параметры выморозки*/
drop table MTZ.ITTD_MOROZ/*Параметры выморозки*/ 
/
create table MTZ.ITTD_MOROZ/*Параметры выморозки*/ (
InstanceID CHAR(38) ,
ITTD_MOROZid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_MOROZ add 
TheClient VARCHAR2(4000) null /* Клиент */
/
alter  table MTZ.ITTD_MOROZ add 
WeightConst
 NUMBER null /* Точность весов */
/
alter  table MTZ.ITTD_MOROZ add 
MorozConst
 NUMBER null /* Коэффициент выморозки */
/


/*Правило формирования партии*/
drop table MTZ.ITTD_RULE/*Правило по которому зполняются обязательные поля
и составляется код партии*/ 
/
create table MTZ.ITTD_RULE/*Правило по которому зполняются обязательные поля
и составляется код партии*/ (
InstanceID CHAR(38) ,
ITTD_RULEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_RULE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_RULE add 
UseProduct
 NUMBER null 
 check (UseProduct in ( -1/* Да */
, 0/* Нет */ )) /* Товар */
/
alter  table MTZ.ITTD_RULE add 
TheCountry
 NUMBER null 
 check (TheCountry in ( -1/* Да */
, 0/* Нет */ )) /* Страна */
/
alter  table MTZ.ITTD_RULE add 
TheFactory
 NUMBER null 
 check (TheFactory in ( -1/* Да */
, 0/* Нет */ )) /* Завод */
/
alter  table MTZ.ITTD_RULE add 
KillPlace
 NUMBER null 
 check (KillPlace in ( -1/* Да */
, 0/* Нет */ )) /* Бойня */
/
alter  table MTZ.ITTD_RULE add 
UseBrak
 NUMBER null 
 check (UseBrak in ( -1/* Да */
, 0/* Нет */ )) /* Брак */
/
alter  table MTZ.ITTD_RULE add 
UseExpDate
 NUMBER null 
 check (UseExpDate in ( -1/* Да */
, 0/* Нет */ )) /* Срок годности */
/


/*Тип палеты*/
drop table MTZ.ITTD_PLTYPE/**/ 
/
create table MTZ.ITTD_PLTYPE/**/ (
InstanceID CHAR(38) ,
ITTD_PLTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_PLTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/


/*Завод*/
drop table MTZ.ITTD_FACTORY/**/ 
/
create table MTZ.ITTD_FACTORY/**/ (
InstanceID CHAR(38) ,
ITTD_FACTORYid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_FACTORY add 
Country CHAR(38) null /* Страна */
/
alter  table MTZ.ITTD_FACTORY add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_FACTORY add 
Code1
 VARCHAR2 (10) null /* Код1 */
/
alter  table MTZ.ITTD_FACTORY add 
Code2
 VARCHAR2 (10) null /* Код 2 */
/


/*Тип зоны*/
drop table MTZ.ITTD_ZTYPE/**/ 
/
create table MTZ.ITTD_ZTYPE/**/ (
InstanceID CHAR(38) ,
ITTD_ZTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_ZTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/


/*Тип товара*/
drop table MTZ.ITTD_GTYPE/**/ 
/
create table MTZ.ITTD_GTYPE/**/ (
InstanceID CHAR(38) ,
ITTD_GTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_GTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/


/*Бойня*/
drop table MTZ.ITTD_KILLPLACE/**/ 
/
create table MTZ.ITTD_KILLPLACE/**/ (
InstanceID CHAR(38) ,
ITTD_KILLPLACEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_KILLPLACE add 
Factory CHAR(38) null /* Производитель */
/
alter  table MTZ.ITTD_KILLPLACE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_KILLPLACE add 
Code1
 VARCHAR2 (10) null /* Код1 */
/
alter  table MTZ.ITTD_KILLPLACE add 
Code2
 VARCHAR2 (10) null /* Код 2 */
/


/*Страна*/
drop table MTZ.ITTD_COUNTRY/**/ 
/
create table MTZ.ITTD_COUNTRY/**/ (
InstanceID CHAR(38) ,
ITTD_COUNTRYid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_COUNTRY add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_COUNTRY add 
Code1
 VARCHAR2 (10) null /* Код1 */
/
alter  table MTZ.ITTD_COUNTRY add 
Code2
 VARCHAR2 (10) null /* Код 2 */
/
alter  table MTZ.ITTD_COUNTRY add 
TheSupplier
 VARCHAR2 (255) null /* Поставщик */
/


/*Тип заявки*/
drop table MTZ.ITTD_QTYPE/**/ 
/
create table MTZ.ITTD_QTYPE/**/ (
InstanceID CHAR(38) ,
ITTD_QTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_QTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/


/*Холодильные камеры*/
drop table MTZ.ITTD_CAMERA/*Холодильные камеры*/ 
/
create table MTZ.ITTD_CAMERA/*Холодильные камеры*/ (
InstanceID CHAR(38) ,
ITTD_CAMERAid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_CAMERA add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_CAMERA add 
CameraMask
 VARCHAR2 (12) null /* Маска номера ячеек */
/


/*Услуги*/
drop table MTZ.ITTD_SRV/**/ 
/
create table MTZ.ITTD_SRV/**/ (
InstanceID CHAR(38) ,
ITTD_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_SRV add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_SRV add 
ForShipping
 NUMBER null 
 check (ForShipping in ( -1/* Да */
, 0/* Нет */ )) /* Для отгрузки */
/
alter  table MTZ.ITTD_SRV add 
ForReceiving
 NUMBER null 
 check (ForReceiving in ( -1/* Да */
, 0/* Нет */ )) /* Для приема товара */
/
alter  table MTZ.ITTD_SRV add 
LinkCode
 VARCHAR2 (30) null /* Код привязки */
/
alter  table MTZ.ITTD_SRV add 
AutoSetPallet
 NUMBER null 
 check (AutoSetPallet in ( -1/* Да */
, 0/* Нет */ )) /* Подставлять кол-во паллет */
/


/*Тип операции*/
drop table MTZ.ITTD_ATYPE/**/ 
/
create table MTZ.ITTD_ATYPE/**/ (
InstanceID CHAR(38) ,
ITTD_ATYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_ATYPE add 
Name
 VARCHAR2 (255) null /* Название */
/


/*Тип оптимизации*/
drop table MTZ.ITTD_OPTTYPE/*Тип оптимизации склада*/ 
/
create table MTZ.ITTD_OPTTYPE/*Тип оптимизации склада*/ (
InstanceID CHAR(38) ,
ITTD_OPTTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_OPTTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ITTD_OPTTYPE add 
Code
 VARCHAR2 (1) null /* Код варианта */
/


/*Почтовые адреса*/
drop table MTZ.ITTD_EMAIL/*Адреса получателей информации о выморозке*/ 
/
create table MTZ.ITTD_EMAIL/*Адреса получателей информации о выморозке*/ (
InstanceID CHAR(38) ,
ITTD_EMAILid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_EMAIL add 
FIO
 VARCHAR2 (255) null /* ФИО. получателя */
/
alter  table MTZ.ITTD_EMAIL add 
EMAIL VARCHAR2(255) null /* Адрес электронной почты */
/
alter  table MTZ.ITTD_EMAIL add 
IgnoreAddress
 NUMBER null 
 check (IgnoreAddress in ( -1/* Да */
, 0/* Нет */ )) /* Отключить уведомления на этот адрес */
/


/*Партия товара*/
drop table MTZ.ITTD_PART/**/ 
/
create table MTZ.ITTD_PART/**/ (
InstanceID CHAR(38) ,
ITTD_PARTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTD_PART add 
TheGood VARCHAR2(4000) null /* Товар */
/
alter  table MTZ.ITTD_PART add 
Name
 VARCHAR2 (255) null /* Наименование партии */
/


/*Описание*/
drop table MTZ.ITTPL_DEF/**/ 
/
create table MTZ.ITTPL_DEF/**/ (
InstanceID CHAR(38) ,
ITTPL_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTPL_DEF add 
Code
 VARCHAR2 (14) null /* Код палеты */
/
alter  table MTZ.ITTPL_DEF add 
TheNumber
 NUMBER null /* Номер */
/
alter  table MTZ.ITTPL_DEF add 
PalKode
 VARCHAR2 (30) null /* Штрихкод */
/
alter  table MTZ.ITTPL_DEF add 
Weight
 NUMBER null /* Вес паддона */
/
alter  table MTZ.ITTPL_DEF add 
Pltype CHAR(38) null /* Тип палеты */
/
alter  table MTZ.ITTPL_DEF add 
WDate
 DATE null /* Дата взвешивания */
/
alter  table MTZ.ITTPL_DEF add 
CaliberQuantity
 NUMBER null /* Количество коробов на поддоне */
/
alter  table MTZ.ITTPL_DEF add 
CurrentGood VARCHAR2(4000) null /* Текущий товар */
/
alter  table MTZ.ITTPL_DEF add 
CurrentWeightBrutto
 NUMBER null /* Вес поддона с товаром */
/
alter  table MTZ.ITTPL_DEF add 
CurrentPosition
 VARCHAR2 (12) null /* Текущая ячейка склада */
/
alter  table MTZ.ITTPL_DEF add 
PackageWeight
 NUMBER null /* Вес упаковки */
/
alter  table MTZ.ITTPL_DEF add 
CorePalette_ID
 NUMBER null /* Идентификатор палеты в CoreIMS */
/
alter  table MTZ.ITTPL_DEF add 
PrivatePalet
 NUMBER null 
 check (PrivatePalet in ( -1/* Да */
, 0/* Нет */ )) /* Чужой поддон */
/


/*Операторы*/
drop table MTZ.ITTOP_OPLNK/*Привязка операторов*/ 
/
create table MTZ.ITTOP_OPLNK/*Привязка операторов*/ (
InstanceID CHAR(38) ,
ITTOP_OPLNKid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOP_OPLNK add 
TheUser CHAR(38) null /* Пользователь */
/


/*Холодильные камеры*/
drop table MTZ.ITTOP_OPKAM/*Камеры, с которыми работает оператор*/ 
/
create table MTZ.ITTOP_OPKAM/*Камеры, с которыми работает оператор*/ (
ParentStructRowID CHAR(38) not null,
ITTOP_OPKAMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOP_OPKAM add 
TheKamera CHAR(38) null /* Камера */
/


/*Кладовщики*/
drop table MTZ.ITTOP_KLNK/*Привязка кладовщиков*/ 
/
create table MTZ.ITTOP_KLNK/*Привязка кладовщиков*/ (
InstanceID CHAR(38) ,
ITTOP_KLNKid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOP_KLNK add 
TheUser CHAR(38) null /* Пользователь */
/


/*Холодильные камеры*/
drop table MTZ.ITTOP_KCAM/*Привязка кладовщика к холодильным камерам*/ 
/
create table MTZ.ITTOP_KCAM/*Привязка кладовщика к холодильным камерам*/ (
ParentStructRowID CHAR(38) not null,
ITTOP_KCAMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOP_KCAM add 
TheKamera CHAR(38) null /* Камера */
/


/*Клиенты*/
drop table MTZ.ITTOP_KCLI/*привязка кладвщиков к клиентам*/ 
/
create table MTZ.ITTOP_KCLI/*привязка кладвщиков к клиентам*/ (
ParentStructRowID CHAR(38) not null,
ITTOP_KCLIid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOP_KCLI add 
TheClient VARCHAR2(4000) null /* Клиент */
/


/*Максимальные номера объектов*/
drop table MTZ.ITTFN_MAX/**/ 
/
create table MTZ.ITTFN_MAX/**/ (
InstanceID CHAR(38) ,
ITTFN_MAXid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTFN_MAX add 
PalMaxNum
 NUMBER null /* Максимальный номер поддона */
/


/*Описание расширения Журнал*/
drop table MTZ.STDJournlaExtInfo/**/ 
/
create table MTZ.STDJournlaExtInfo/**/ (
InstanceID CHAR(38) ,
STDJournlaExtInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDJournlaExtInfo add 
TheName
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.STDJournlaExtInfo add 
TheJournalRef CHAR(38) null /* Журнал */
/


/*Параметры*/
drop table MTZ.STDJournalExtParam/**/ 
/
create table MTZ.STDJournalExtParam/**/ (
InstanceID CHAR(38) ,
STDJournalExtParamid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDJournalExtParam add 
FieldName
 VARCHAR2 (255) null /* Поле (значение) */
/
alter  table MTZ.STDJournalExtParam add 
ParamName
 VARCHAR2 (80) null /* Параметр */
/
alter  table MTZ.STDJournalExtParam add 
TargetPlatform CHAR(38) null /* Целевая платформа */
/


/*Фильтры журнала*/
drop table MTZ.STDJournalExtFlt/**/ 
/
create table MTZ.STDJournalExtFlt/**/ (
InstanceID CHAR(38) ,
STDJournalExtFltid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDJournalExtFlt add 
ViewSource
 VARCHAR2 (255) null /* Источник журнала */
/


/*Параметры фильтра*/
drop table MTZ.STDJournalExtField/**/ 
/
create table MTZ.STDJournalExtField/**/ (
ParentStructRowID CHAR(38) not null,
STDJournalExtFieldid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STDJournalExtField add 
ViewField
 VARCHAR2 (255) null /* Колонка журнала */
/
alter  table MTZ.STDJournalExtField add 
FieldSource
 VARCHAR2 (255) null /* Поле */
/
alter  table MTZ.STDJournalExtField add 
TargetPlatform CHAR(38) null /* Целевая платформа */
/
alter  table MTZ.STDJournalExtField add 
ConstantValue
 VARCHAR2 (255) null /* Значение */
/
alter  table MTZ.STDJournalExtField add 
ConditionType
 NUMBER null 
 check (ConditionType in ( 2/* &lt;&gt; */
, 3/* &gt; */
, 1/* = */
, 4/* &gt;= */
, 7/* &lt;= */
, 8/* like */
, 6/* &lt; */
, 0/* none */ )) /* Условие */
/


/*Настройка*/
drop table MTZ.Ext_Photos/**/ 
/
create table MTZ.Ext_Photos/**/ (
InstanceID CHAR(38) ,
Ext_Photosid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Ext_Photos add 
TheName
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.Ext_Photos add 
TheSourceObject
 VARCHAR2 (255) null /* Исходный объект (Тип) */
/
alter  table MTZ.Ext_Photos add 
TheJournal CHAR(38) null /* Журнал */
/
alter  table MTZ.Ext_Photos add 
TheReplacedPart
 VARCHAR2 (255) null /* Подменяемая часть */
/
alter  table MTZ.Ext_Photos add 
TheRefFieldName
 VARCHAR2 (255) null /* Поле ссылка на добавление */
/


/*Вызов изображения*/
drop table MTZ.Ext_Photo_Call/**/ 
/
create table MTZ.Ext_Photo_Call/**/ (
ParentStructRowID CHAR(38) not null,
Ext_Photo_Callid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Ext_Photo_Call add 
TargetPlatform CHAR(38) null /* TargetPlatform */
/
alter  table MTZ.Ext_Photo_Call add 
TheCallString
 VARCHAR2 (255) null /* Вызов */
/


/*Тип поля*/
drop table MTZ.FIELDTYPE/*Типы полей, перечисления, интервалы*/ 
/
create table MTZ.FIELDTYPE/*Типы полей, перечисления, интервалы*/ (
InstanceID CHAR(38) ,
FIELDTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDTYPE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.FIELDTYPE add 
TypeStyle
 NUMBER null 
 check (TypeStyle in ( 3/* Интервал */
, 5/* Элемент оформления */
, 0/* Скалярный тип */
, 4/* Ссылка */
, 2/* Перечисление */
, 1/* Выражение */ )) /* Трактовка */
/
alter  table MTZ.FIELDTYPE add 
the_Comment VARCHAR2(4000) null /* Описание */
/
alter  table MTZ.FIELDTYPE add 
AllowSize
 NUMBER null 
 check (AllowSize in ( -1/* Да */
, 0/* Нет */ )) /* Нужен размер */
/
alter  table MTZ.FIELDTYPE add 
Minimum
 VARCHAR2 (64) null /* Минимум */
/
alter  table MTZ.FIELDTYPE add 
Maximum
 VARCHAR2 (64) null /* Максимум */
/
alter  table MTZ.FIELDTYPE add 
AllowLikeSearch
 NUMBER null 
 check (AllowLikeSearch in ( -1/* Да */
, 0/* Нет */ )) /* Поиск текста */
/
alter  table MTZ.FIELDTYPE add 
GridSortType
 NUMBER null 
 check (GridSortType in ( 0/* As String */
, 1/* As Numeric */
, 2/* As Date */ )) /* Вариант сортировки в табличном представлении */
/


/*Отображение*/
drop table MTZ.FIELDTYPEMAP/*Отображение типа поля на физический тип хранения*/ 
/
create table MTZ.FIELDTYPEMAP/*Отображение типа поля на физический тип хранения*/ (
ParentStructRowID CHAR(38) not null,
FIELDTYPEMAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDTYPEMAP add 
Target CHAR(38) null /* Платформа */
/
alter  table MTZ.FIELDTYPEMAP add 
StoageType
 VARCHAR2 (255) null /* Тип хранения */
/
alter  table MTZ.FIELDTYPEMAP add 
FixedSize
 NUMBER null /* Размер */
/


/*Зачения*/
drop table MTZ.ENUMITEM/*Для описания Enum типов*/ 
/
create table MTZ.ENUMITEM/*Для описания Enum типов*/ (
ParentStructRowID CHAR(38) not null,
ENUMITEMid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ENUMITEM add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ENUMITEM add 
NameValue
 NUMBER null /* Значение */
/
alter  table MTZ.ENUMITEM add 
NameInCode
 VARCHAR2 (100) null /* Название в коде */
/


/*Методы и процедуры*/
drop table MTZ.SHAREDMETHOD/*Методы и процедуры*/ 
/
create table MTZ.SHAREDMETHOD/*Методы и процедуры*/ (
InstanceID CHAR(38) ,
SHAREDMETHODid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.SHAREDMETHOD add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.SHAREDMETHOD add 
the_Comment VARCHAR2(4000) null /* Описание метода */
/
alter  table MTZ.SHAREDMETHOD add 
ReturnType CHAR(38) null /* Возвращаемый тип */
/


/*Реализация*/
drop table MTZ.SCRIPT/*Код метода на понятном конкретному генератору языке*/ 
/
create table MTZ.SCRIPT/*Код метода на понятном конкретному генератору языке*/ (
ParentStructRowID CHAR(38) not null,
SCRIPTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.SCRIPT add 
Target CHAR(38) null /* Целевая платформа */
/
alter  table MTZ.SCRIPT add 
Code VARCHAR2(4000) null /* Скрипт */
/


/*Параметры*/
drop table MTZ.PARAMETERS/*Параметры метода*/ 
/
create table MTZ.PARAMETERS/*Параметры метода*/ (
ParentStructRowID CHAR(38) not null,
PARAMETERSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.PARAMETERS add 
sequence
 NUMBER null /* Последовательность */
/
alter  table MTZ.PARAMETERS add 
Name
 VARCHAR2 (80) null /* Имя */
/
alter  table MTZ.PARAMETERS add 
Caption
 VARCHAR2 (80) null /* Заголовок */
/
alter  table MTZ.PARAMETERS add 
TypeOfParm CHAR(38) null /* Тип данных */
/
alter  table MTZ.PARAMETERS add 
DataSize
 NUMBER null /* Размер */
/
alter  table MTZ.PARAMETERS add 
AllowNull
 NUMBER null 
 check (AllowNull in ( -1/* Да */
, 0/* Нет */ )) /* Можно не задавать */
/
alter  table MTZ.PARAMETERS add 
OutParam
 NUMBER null 
 check (OutParam in ( -1/* Да */
, 0/* Нет */ )) /* Возвращает значение */
/
alter  table MTZ.PARAMETERS add 
ReferenceType
 NUMBER null 
 check (ReferenceType in ( 2/* На строку раздела */
, 3/* На источник данных */
, 0/* Скалярное поле ( не ссылка) */
, 1/* На объект  */ )) /* Тип ссылки */
/
alter  table MTZ.PARAMETERS add 
RefToType CHAR(38) null /* Ссылка на тип */
/
alter  table MTZ.PARAMETERS add 
RefToPart CHAR(38) null /* Ссылка на раздел */
/


/*Тип объекта*/
drop table MTZ.OBJECTTYPE/*Тип объекта (карточки)*/ 
/
create table MTZ.OBJECTTYPE/*Тип объекта (карточки)*/ (
InstanceID CHAR(38) ,
OBJECTTYPEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.OBJECTTYPE add 
Package CHAR(38) null /* Приложение */
/
alter  table MTZ.OBJECTTYPE add 
the_Comment
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.OBJECTTYPE add 
Name
 VARCHAR2 (14) null /* Код */
/
alter  table MTZ.OBJECTTYPE add 
IsSingleInstance
 NUMBER null 
 check (IsSingleInstance in ( -1/* Да */
, 0/* Нет */ )) /* Допускается только один объект */
/
alter  table MTZ.OBJECTTYPE add 
ChooseView CHAR(38) null /* Представление для выбора */
/
alter  table MTZ.OBJECTTYPE add 
OnRun CHAR(38) null /* При запуске */
/
alter  table MTZ.OBJECTTYPE add 
OnCreate CHAR(38) null /* При создании */
/
alter  table MTZ.OBJECTTYPE add 
OnDelete CHAR(38) null /* При удалении */
/
alter  table MTZ.OBJECTTYPE add 
AllowRefToObject
 NUMBER null 
 check (AllowRefToObject in ( -1/* Да */
, 0/* Нет */ )) /* Отображать при выборе ссылки */
/
alter  table MTZ.OBJECTTYPE add 
AllowSearch
 NUMBER null 
 check (AllowSearch in ( -1/* Да */
, 0/* Нет */ )) /* Отображать при поиске */
/
alter  table MTZ.OBJECTTYPE add 
ReplicaType
 NUMBER null 
 check (ReplicaType in ( 0/* Весь документ */
, 2/* Локальный */
, 1/* Построчно */ )) /* Тип репликации */
/
alter  table MTZ.OBJECTTYPE add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Раздел*/
drop table MTZ.PART/*Раздел объекта*/ 
/
create table MTZ.PART/*Раздел объекта*/ (
ParentStructRowID CHAR(38) not null,
PARTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.PART add 
Sequence
 NUMBER null /* № п/п */
/
alter  table MTZ.PART add 
PartType
 NUMBER null 
 check (PartType in ( 3/* Расширение */
, 1/* Коллекция */
, 0/* Строка */
, 2/* Дерево */
, 4/* Расширение с данными */ )) /* Тип структры  */
/
alter  table MTZ.PART add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/
alter  table MTZ.PART add 
Name
 VARCHAR2 (20) null /* Название */
/
alter  table MTZ.PART add 
the_Comment VARCHAR2(4000) null /* Описание */
/
alter  table MTZ.PART add 
NoLog
 NUMBER null 
 check (NoLog in ( -1/* Да */
, 0/* Нет */ )) /* Не записывать в журнал */
/
alter  table MTZ.PART add 
ManualRegister
 NUMBER null 
 check (ManualRegister in ( -1/* Да */
, 0/* Нет */ )) /* Исключить из индексирования */
/
alter  table MTZ.PART add 
OnCreate CHAR(38) null /* При создании */
/
alter  table MTZ.PART add 
OnSave CHAR(38) null /* При сохранении */
/
alter  table MTZ.PART add 
OnRun CHAR(38) null /* При открытии */
/
alter  table MTZ.PART add 
OnDelete CHAR(38) null /* При удалении */
/
alter  table MTZ.PART add 
AddBehaivor
 NUMBER null 
 check (AddBehaivor in ( 0/* AddForm */
, 2/* RunAction */
, 1/* RefreshOnly */ )) /* Поведение при добавлении */
/
alter  table MTZ.PART add 
ExtenderObject CHAR(38) null /* Объект расширения */
/
alter  table MTZ.PART add 
shablonBrief
 VARCHAR2 (100) null /* Шаблон для краткого отображения */
/
alter  table MTZ.PART add 
ruleBrief
 VARCHAR (500) null /* Правило составления BRIEF поля */
/
alter  table MTZ.PART add 
IsJormalChange
 NUMBER null 
 check (IsJormalChange in ( -1/* Да */
, 0/* Нет */ )) /* Вести журнал изменений */
/


/*Методы раздела*/
drop table MTZ.PARTMENU/*Методы уровня раздела*/ 
/
create table MTZ.PARTMENU/*Методы уровня раздела*/ (
ParentStructRowID CHAR(38) not null,
PARTMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.PARTMENU add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.PARTMENU add 
Caption
 VARCHAR2 (80) null /* Заголовок */
/
alter  table MTZ.PARTMENU add 
ToolTip
 VARCHAR2 (80) null /* Подсказка */
/
alter  table MTZ.PARTMENU add 
the_Action CHAR(38) null /* Метод */
/
alter  table MTZ.PARTMENU add 
IsMenuItem
 NUMBER null 
 check (IsMenuItem in ( -1/* Да */
, 0/* Нет */ )) /* Включать в меню */
/
alter  table MTZ.PARTMENU add 
IsToolBarButton
 NUMBER null 
 check (IsToolBarButton in ( -1/* Да */
, 0/* Нет */ )) /* В тулбар */
/
alter  table MTZ.PARTMENU add 
HotKey
 VARCHAR2 (20) null /* Горячая клавиша */
/


/*Отображение параметров*/
drop table MTZ.PARTPARAMMAP/*отображение значений полей раздела на параметры метода*/ 
/
create table MTZ.PARTPARAMMAP/*отображение значений полей раздела на параметры метода*/ (
ParentStructRowID CHAR(38) not null,
PARTPARAMMAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.PARTPARAMMAP add 
FieldName
 VARCHAR2 (255) null /* Поле (значение) */
/
alter  table MTZ.PARTPARAMMAP add 
ParamName
 VARCHAR2 (80) null /* Параметр */
/
alter  table MTZ.PARTPARAMMAP add 
NoEdit
 NUMBER null 
 check (NoEdit in ( -1/* Да */
, 0/* Нет */ )) /* Редактировать параметр нельзя */
/


/*Поле*/
drop table MTZ.FIELD/*Поле*/ 
/
create table MTZ.FIELD/*Поле*/ (
ParentStructRowID CHAR(38) not null,
FIELDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELD add 
Sequence
 NUMBER null /* № п/п */
/
alter  table MTZ.FIELD add 
Caption
 VARCHAR2 (80) null /* Надпись */
/
alter  table MTZ.FIELD add 
Name
 VARCHAR2 (64) null /* Имя поля */
/
alter  table MTZ.FIELD add 
FieldType CHAR(38) null /* Тип поля */
/
alter  table MTZ.FIELD add 
IsBrief
 NUMBER null 
 check (IsBrief in ( -1/* Да */
, 0/* Нет */ )) /* Краткая информация */
/
alter  table MTZ.FIELD add 
AllowNull
 NUMBER null 
 check (AllowNull in ( -1/* Да */
, 0/* Нет */ )) /* Может быть пустым */
/
alter  table MTZ.FIELD add 
DataSize
 NUMBER null /* Размер поля */
/
alter  table MTZ.FIELD add 
ReferenceType
 NUMBER null 
 check (ReferenceType in ( 2/* На строку раздела */
, 3/* На источник данных */
, 0/* Скалярное поле ( не ссылка) */
, 1/* На объект  */ )) /* Тип ссылки */
/
alter  table MTZ.FIELD add 
RefToType CHAR(38) null /* Ссылка на тип */
/
alter  table MTZ.FIELD add 
RefToPart CHAR(38) null /* Ссылка на раздел */
/
alter  table MTZ.FIELD add 
TheMask
 VARCHAR2 (255) null /* Маска ввода */
/
alter  table MTZ.FIELD add 
InternalReference
 NUMBER null 
 check (InternalReference in ( -1/* Да */
, 0/* Нет */ )) /* Ссылка в пределах объекта */
/
alter  table MTZ.FIELD add 
CreateRefOnly
 NUMBER null 
 check (CreateRefOnly in ( -1/* Да */
, 0/* Нет */ )) /* Только создание объекта */
/
alter  table MTZ.FIELD add 
IsAutoNumber
 NUMBER null 
 check (IsAutoNumber in ( -1/* Да */
, 0/* Нет */ )) /* Автонумерация */
/
alter  table MTZ.FIELD add 
TheNumerator CHAR(38) null /* Нумератор */
/
alter  table MTZ.FIELD add 
ZoneTemplate
 VARCHAR2 (255) null /* Шаблон зоны нумерации */
/
alter  table MTZ.FIELD add 
NumberDateField CHAR(38) null /* Поле для расчета даты */
/
alter  table MTZ.FIELD add 
TheComment VARCHAR2(4000) null /* Описание */
/
alter  table MTZ.FIELD add 
shablonBrief
 VARCHAR2 (100) null /* Шаблон для краткой информации */
/
alter  table MTZ.FIELD add 
theNameClass
 VARCHAR2 (100) null /* Имя класса для мастера строк */
/


/*Логика поля на форме*/
drop table MTZ.FIELDVALIDATOR/*Логика взаимосвязей на форме при изменении поля*/ 
/
create table MTZ.FIELDVALIDATOR/*Логика взаимосвязей на форме при изменении поля*/ (
ParentStructRowID CHAR(38) not null,
FIELDVALIDATORid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDVALIDATOR add 
Target CHAR(38) null /* Платформа */
/
alter  table MTZ.FIELDVALIDATOR add 
Code VARCHAR2(4000) null /* Скрипт */
/


/*Методы поля*/
drop table MTZ.FIELDMENU/*Методы, ассоциированные с полем*/ 
/
create table MTZ.FIELDMENU/*Методы, ассоциированные с полем*/ (
ParentStructRowID CHAR(38) not null,
FIELDMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDMENU add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.FIELDMENU add 
Caption
 VARCHAR2 (80) null /* Заголовок */
/
alter  table MTZ.FIELDMENU add 
ToolTip
 VARCHAR2 (80) null /* Подсказка */
/
alter  table MTZ.FIELDMENU add 
ActionID CHAR(38) null /* Идентификатор вызываемого метода */
/
alter  table MTZ.FIELDMENU add 
IsMenuItem
 NUMBER null 
 check (IsMenuItem in ( -1/* Да */
, 0/* Нет */ )) /* В меню */
/
alter  table MTZ.FIELDMENU add 
IsToolBarButton
 NUMBER null 
 check (IsToolBarButton in ( -1/* Да */
, 0/* Нет */ )) /* В тулбар */
/
alter  table MTZ.FIELDMENU add 
HotKey
 VARCHAR2 (20) null /* Горячая клавиша */
/


/*Отображение параметров*/
drop table MTZ.FIELDPARAMMAP/*Отображение значений на параметры метода*/ 
/
create table MTZ.FIELDPARAMMAP/*Отображение значений на параметры метода*/ (
ParentStructRowID CHAR(38) not null,
FIELDPARAMMAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDPARAMMAP add 
FieldName
 VARCHAR2 (255) null /* Поле (значение) */
/
alter  table MTZ.FIELDPARAMMAP add 
ParamName
 VARCHAR2 (80) null /* Параметр */
/
alter  table MTZ.FIELDPARAMMAP add 
NoEdit
 NUMBER null 
 check (NoEdit in ( -1/* Да */
, 0/* Нет */ )) /* Редактировать параметр нельзя */
/


/*Интерфейсы расширения*/
drop table MTZ.FldExtenders/**/ 
/
create table MTZ.FldExtenders/**/ (
ParentStructRowID CHAR(38) not null,
FldExtendersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FldExtenders add 
TheName
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.FldExtenders add 
TargetPlatform CHAR(38) null /* Целевая платформа */
/
alter  table MTZ.FldExtenders add 
TheObject
 VARCHAR2 (255) null /* Объект */
/
alter  table MTZ.FldExtenders add 
TheConfig
 VARCHAR2 (512) null /* Конфиг */
/


/*Значение по умолчанию*/
drop table MTZ.FIELDEXPRESSION/*Выражение для вычисления поля
или значение по умолчанию*/ 
/
create table MTZ.FIELDEXPRESSION/*Выражение для вычисления поля
или значение по умолчанию*/ (
ParentStructRowID CHAR(38) not null,
FIELDEXPRESSIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDEXPRESSION add 
Target CHAR(38) null /* Платформа */
/
alter  table MTZ.FIELDEXPRESSION add 
Code VARCHAR2(4000) null /* Скрипт */
/


/*Динамический фильтр*/
drop table MTZ.DINAMICFILTERSCRIPT/*Выражение для построения дополнительного фильтра для ссылочных полей*/ 
/
create table MTZ.DINAMICFILTERSCRIPT/*Выражение для построения дополнительного фильтра для ссылочных полей*/ (
ParentStructRowID CHAR(38) not null,
DINAMICFILTERSCRIPTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.DINAMICFILTERSCRIPT add 
Target CHAR(38) null /* Целевая платформа */
/
alter  table MTZ.DINAMICFILTERSCRIPT add 
Code VARCHAR2(4000) null /* Скрипт */
/


/*Описание источника данных*/
drop table MTZ.FIELDSRCDEF/*Описание источника данных для полей типа ReferenceSQL */ 
/
create table MTZ.FIELDSRCDEF/*Описание источника данных для полей типа ReferenceSQL */ (
ParentStructRowID CHAR(38) not null,
FIELDSRCDEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDSRCDEF add 
Provider
 VARCHAR2 (128) null /* Провайдер */
/
alter  table MTZ.FIELDSRCDEF add 
ConnectionString
 VARCHAR2 (512) null /* Строка соединения с источником */
/
alter  table MTZ.FIELDSRCDEF add 
DataSource
 VARCHAR2 (512) null /* Источник данных */
/
alter  table MTZ.FIELDSRCDEF add 
IDField
 VARCHAR2 (128) null /* ID */
/
alter  table MTZ.FIELDSRCDEF add 
BriefString
 VARCHAR2 (512) null /* Источник краткой информации */
/
alter  table MTZ.FIELDSRCDEF add 
FilterString
 VARCHAR2 (512) null /* Фильтр источника данных */
/
alter  table MTZ.FIELDSRCDEF add 
SortField
 VARCHAR2 (512) null /* Сортировка источника данных */
/
alter  table MTZ.FIELDSRCDEF add 
DescriptionString VARCHAR2(4000) null /* Примечания */
/
alter  table MTZ.FIELDSRCDEF add 
DontShowDialog
 NUMBER null 
 check (DontShowDialog in ( 1/* Да */
, 0/* Нет */ )) /* Не показывать форму выбора */
/


/*Представление*/
drop table MTZ.PARTVIEW/*Вариант представления, который может использоваться для создания журнала*/ 
/
create table MTZ.PARTVIEW/*Вариант представления, который может использоваться для создания журнала*/ (
ParentStructRowID CHAR(38) not null,
PARTVIEWid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.PARTVIEW add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.PARTVIEW add 
the_Alias
 VARCHAR2 (64) null /* Псевдоним */
/
alter  table MTZ.PARTVIEW add 
ForChoose
 NUMBER null 
 check (ForChoose in ( -1/* Да */
, 0/* Нет */ )) /* Для поиска */
/
alter  table MTZ.PARTVIEW add 
FilterField0
 VARCHAR2 (255) null /* Поле - фильтр 0 */
/
alter  table MTZ.PARTVIEW add 
FilterField1
 VARCHAR2 (255) null /* Поле - фильтр 1 */
/
alter  table MTZ.PARTVIEW add 
FilterField2
 VARCHAR2 (255) null /* Поле - фильтр 2 */
/
alter  table MTZ.PARTVIEW add 
FilterField3
 VARCHAR2 (255) null /* Поле - фильтр 3 */
/


/*Колонка*/
drop table MTZ.ViewColumn/*Колонка пердставления*/ 
/
create table MTZ.ViewColumn/*Колонка пердставления*/ (
ParentStructRowID CHAR(38) not null,
ViewColumnid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ViewColumn add 
sequence
 NUMBER null /* №  */
/
alter  table MTZ.ViewColumn add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ViewColumn add 
the_Alias
 VARCHAR2 (64) null /* Псвдоним */
/
alter  table MTZ.ViewColumn add 
FromPart CHAR(38) null /* Раздел */
/
alter  table MTZ.ViewColumn add 
Field CHAR(38) null /* Поле */
/
alter  table MTZ.ViewColumn add 
Aggregation
 NUMBER null 
 check (Aggregation in ( 5/* MAX */
, 1/* AVG */
, 3/* SUM */
, 2/* COUNT */
, 4/* MIN */
, 6/* CUSTOM */
, 0/* none */ )) /* Агрегация */
/
alter  table MTZ.ViewColumn add 
Expression VARCHAR2(4000) null /* Формула */
/
alter  table MTZ.ViewColumn add 
ForCombo
 NUMBER null 
 check (ForCombo in ( -1/* Да */
, 0/* Нет */ )) /* Для комбо */
/


/*Связанные представления*/
drop table MTZ.PARTVIEW_LNK/**/ 
/
create table MTZ.PARTVIEW_LNK/**/ (
ParentStructRowID CHAR(38) not null,
PARTVIEW_LNKid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.PARTVIEW_LNK add 
TheView CHAR(38) null /* Представление */
/
alter  table MTZ.PARTVIEW_LNK add 
TheJoinSource CHAR(38) null /* Связь: Поле для join источник */
/
alter  table MTZ.PARTVIEW_LNK add 
RefType
 NUMBER null 
 check (RefType in ( 2/* Ссылка на строку */
, 1/* Ссылка на объект */
, 3/* Связка InstanceID (в передлах объекта) */
, 4/* Связка ParentStructRowID  (в передлах объекта) */
, 0/* Нет */ )) /* Связывать как */
/
alter  table MTZ.PARTVIEW_LNK add 
TheJoinDestination CHAR(38) null /* Свзяь: Поле для join приемник */
/
alter  table MTZ.PARTVIEW_LNK add 
HandJoin
 VARCHAR2 (255) null /* Ручной join */
/
alter  table MTZ.PARTVIEW_LNK add 
SEQ
 NUMBER null /* Порядок */
/


/*Интерфейсы расширения*/
drop table MTZ.ExtenderInterface/**/ 
/
create table MTZ.ExtenderInterface/**/ (
ParentStructRowID CHAR(38) not null,
ExtenderInterfaceid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ExtenderInterface add 
TheName
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ExtenderInterface add 
TargetPlatform CHAR(38) null /* Целевая платформа */
/
alter  table MTZ.ExtenderInterface add 
TheObject
 VARCHAR2 (255) null /* Объект */
/
alter  table MTZ.ExtenderInterface add 
TheConfig
 VARCHAR2 (512) null /* Конфиг */
/


/*Логика на форме*/
drop table MTZ.VALIDATOR/*Действия в впроцессе редактирования*/ 
/
create table MTZ.VALIDATOR/*Действия в впроцессе редактирования*/ (
ParentStructRowID CHAR(38) not null,
VALIDATORid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.VALIDATOR add 
Target CHAR(38) null /* Целевая платформа */
/
alter  table MTZ.VALIDATOR add 
Code VARCHAR2(4000) null /* Скрипт */
/


/*Ограничение уникальности*/
drop table MTZ.UNIQUECONSTRAINT/*Ограничение уникальности*/ 
/
create table MTZ.UNIQUECONSTRAINT/*Ограничение уникальности*/ (
ParentStructRowID CHAR(38) not null,
UNIQUECONSTRAINTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.UNIQUECONSTRAINT add 
Name
 VARCHAR2 (80) null /* Название */
/
alter  table MTZ.UNIQUECONSTRAINT add 
PerParent
 NUMBER null 
 check (PerParent in ( -1/* Да */
, 0/* Нет */ )) /* По родителю */
/
alter  table MTZ.UNIQUECONSTRAINT add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Поля ограничения*/
drop table MTZ.CONSTRAINTFIELD/*Поля ограничения*/ 
/
create table MTZ.CONSTRAINTFIELD/*Поля ограничения*/ (
ParentStructRowID CHAR(38) not null,
CONSTRAINTFIELDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.CONSTRAINTFIELD add 
TheField CHAR(38) null /* Поле */
/


/*Проверка правильности*/
drop table MTZ.INSTANCEVALIDATOR/*Проверка правильности для объекта в целом*/ 
/
create table MTZ.INSTANCEVALIDATOR/*Проверка правильности для объекта в целом*/ (
ParentStructRowID CHAR(38) not null,
INSTANCEVALIDATORid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.INSTANCEVALIDATOR add 
Target CHAR(38) null /* Платформа */
/
alter  table MTZ.INSTANCEVALIDATOR add 
Code VARCHAR2(4000) null /* Скрипт */
/


/*Состояния*/
drop table MTZ.OBJSTATUS/*Возможные логические состояния документа*/ 
/
create table MTZ.OBJSTATUS/*Возможные логические состояния документа*/ (
ParentStructRowID CHAR(38) not null,
OBJSTATUSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.OBJSTATUS add 
name
 VARCHAR2 (80) null /* Название */
/
alter  table MTZ.OBJSTATUS add 
isStartup
 NUMBER null 
 check (isStartup in ( -1/* Да */
, 0/* Нет */ )) /* Начальное */
/
alter  table MTZ.OBJSTATUS add 
IsArchive
 NUMBER null 
 check (IsArchive in ( -1/* Да */
, 0/* Нет */ )) /* Архивное */
/
alter  table MTZ.OBJSTATUS add 
the_comment VARCHAR2(4000) null /* Описание */
/


/*Разрешенные переходы*/
drop table MTZ.NEXTSTATE/*Матрица переходов */ 
/
create table MTZ.NEXTSTATE/*Матрица переходов */ (
ParentStructRowID CHAR(38) not null,
NEXTSTATEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.NEXTSTATE add 
TheState CHAR(38) null /* Разрешенное состояние */
/


/*Режим работы*/
drop table MTZ.OBJECTMODE/*Режим работы*/ 
/
create table MTZ.OBJECTMODE/*Режим работы*/ (
ParentStructRowID CHAR(38) not null,
OBJECTMODEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.OBJECTMODE add 
Name
 VARCHAR2 (5) null /* Название режима */
/
alter  table MTZ.OBJECTMODE add 
DefaultMode
 NUMBER null 
 check (DefaultMode in ( -1/* Да */
, 0/* Нет */ )) /* Этот режим является основным режимом работы объекта */
/
alter  table MTZ.OBJECTMODE add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Органичения разделов*/
drop table MTZ.STRUCTRESTRICTION/*Ораничения на доступ к разделу документа*/ 
/
create table MTZ.STRUCTRESTRICTION/*Ораничения на доступ к разделу документа*/ (
ParentStructRowID CHAR(38) not null,
STRUCTRESTRICTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.STRUCTRESTRICTION add 
Struct CHAR(38) null /* структура, доступ к которой ограничен */
/
alter  table MTZ.STRUCTRESTRICTION add 
AllowRead
 NUMBER null 
 check (AllowRead in ( -1/* Да */
, 0/* Нет */ )) /* Разрешен просмотр */
/
alter  table MTZ.STRUCTRESTRICTION add 
AllowAdd
 NUMBER null 
 check (AllowAdd in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено добавлять */
/
alter  table MTZ.STRUCTRESTRICTION add 
AllowEdit
 NUMBER null 
 check (AllowEdit in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено изменять */
/
alter  table MTZ.STRUCTRESTRICTION add 
AllowDelete
 NUMBER null 
 check (AllowDelete in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено удалять */
/


/*Ограничения полей*/
drop table MTZ.FIELDRESTRICTION/*Ограничения на доступ к полям раздела*/ 
/
create table MTZ.FIELDRESTRICTION/*Ограничения на доступ к полям раздела*/ (
ParentStructRowID CHAR(38) not null,
FIELDRESTRICTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.FIELDRESTRICTION add 
ThePart CHAR(38) null /* Структура, которой принадлежит поле */
/
alter  table MTZ.FIELDRESTRICTION add 
TheField CHAR(38) null /* Поле, на которое накладывается ограничение */
/
alter  table MTZ.FIELDRESTRICTION add 
AllowRead
 NUMBER null 
 check (AllowRead in ( -1/* Да */
, 0/* Нет */ )) /* Разрешен просмотр */
/
alter  table MTZ.FIELDRESTRICTION add 
AllowModify
 NUMBER null 
 check (AllowModify in ( -1/* Да */
, 0/* Нет */ )) /* Разрешена модификация */
/


/*Ограничения методов*/
drop table MTZ.METHODRESTRICTION/*Ограничение на использование методов раздела*/ 
/
create table MTZ.METHODRESTRICTION/*Ограничение на использование методов раздела*/ (
ParentStructRowID CHAR(38) not null,
METHODRESTRICTIONid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.METHODRESTRICTION add 
Part CHAR(38) null /* Структура, которой принадлежит метод */
/
alter  table MTZ.METHODRESTRICTION add 
Method CHAR(38) null /* Метод */
/
alter  table MTZ.METHODRESTRICTION add 
IsRestricted
 NUMBER null 
 check (IsRestricted in ( -1/* Да */
, 0/* Нет */ )) /* Запрещено использовать */
/


/*Методы типа*/
drop table MTZ.TYPEMENU/*Методы уровня типа*/ 
/
create table MTZ.TYPEMENU/*Методы уровня типа*/ (
ParentStructRowID CHAR(38) not null,
TYPEMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.TYPEMENU add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.TYPEMENU add 
Caption
 VARCHAR2 (80) null /* Заголовок */
/
alter  table MTZ.TYPEMENU add 
ToolTip
 VARCHAR2 (80) null /* Подсказка */
/
alter  table MTZ.TYPEMENU add 
the_Action CHAR(38) null /* Метод */
/
alter  table MTZ.TYPEMENU add 
IsMenuItem
 NUMBER null 
 check (IsMenuItem in ( -1/* Да */
, 0/* Нет */ )) /* Включать в меню */
/
alter  table MTZ.TYPEMENU add 
IsToolBarButton
 NUMBER null 
 check (IsToolBarButton in ( -1/* Да */
, 0/* Нет */ )) /* Включать в тулбар */
/
alter  table MTZ.TYPEMENU add 
HotKey
 VARCHAR2 (20) null /* Горячая клавиша */
/


/*Приложение*/
drop table MTZ.MTZAPP/*Группа взаимосвязных документов*/ 
/
create table MTZ.MTZAPP/*Группа взаимосвязных документов*/ (
InstanceID CHAR(38) ,
MTZAPPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZAPP add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.MTZAPP add 
DBName
 VARCHAR2 (64) null /* База данных */
/
alter  table MTZ.MTZAPP add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Обязательные приложения*/
drop table MTZ.ParentPackage/*Приложения от которых зависит данное приложение*/ 
/
create table MTZ.ParentPackage/*Приложения от которых зависит данное приложение*/ (
ParentStructRowID CHAR(38) not null,
ParentPackageid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ParentPackage add 
Package CHAR(38) null /* Приложение */
/


/*Пакет генерации*/
drop table MTZ.GENPACKAGE/*Пакет генерации*/ 
/
create table MTZ.GENPACKAGE/*Пакет генерации*/ (
InstanceID CHAR(38) ,
GENPACKAGEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.GENPACKAGE add 
Name
 VARCHAR2 (255) null /* Название */
/


/*Генераторы*/
drop table MTZ.GENERATOR_TARGET/*Генераторы*/ 
/
create table MTZ.GENERATOR_TARGET/*Генераторы*/ (
ParentStructRowID CHAR(38) not null,
GENERATOR_TARGETid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.GENERATOR_TARGET add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.GENERATOR_TARGET add 
TargetType
 NUMBER null 
 check (TargetType in ( 0/* СУБД */
, 4/* АРМ */
, 3/* Документация */
, 1/* МОДЕЛЬ */
, 2/* Приложение */ )) /* Тип платформы */
/
alter  table MTZ.GENERATOR_TARGET add 
QueueName
 VARCHAR2 (255) null /* Очередь */
/
alter  table MTZ.GENERATOR_TARGET add 
GeneratorProgID
 VARCHAR2 (255) null /* COM класс */
/
alter  table MTZ.GENERATOR_TARGET add 
GeneratorStyle
 NUMBER null 
 check (GeneratorStyle in ( 0/* Один тип */
, 1/* Все типы сразу */ )) /* Вариант */
/
alter  table MTZ.GENERATOR_TARGET add 
TheDevelopmentEnv
 NUMBER null 
 check (TheDevelopmentEnv in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Среда разработки */
/


/*Ручной код*/
drop table MTZ.GENMANUALCODE/*Код, который не укладывается в описание модели*/ 
/
create table MTZ.GENMANUALCODE/*Код, который не укладывается в описание модели*/ (
ParentStructRowID CHAR(38) not null,
GENMANUALCODEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.GENMANUALCODE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.GENMANUALCODE add 
the_Alias
 VARCHAR2 (80) null /* Псевдоним */
/
alter  table MTZ.GENMANUALCODE add 
Code VARCHAR2(4000) null /* Код */
/


/*Контрольные элементы*/
drop table MTZ.GENCONTROLS/*Контрольные элементы, которые используются при генерации*/ 
/
create table MTZ.GENCONTROLS/*Контрольные элементы, которые используются при генерации*/ (
ParentStructRowID CHAR(38) not null,
GENCONTROLSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.GENCONTROLS add 
ControlProgID
 VARCHAR2 (255) null /* ProgID контрольконо элемента */
/
alter  table MTZ.GENCONTROLS add 
ControlClassID
 VARCHAR2 (40) null /* Класс контрольногоэлемента */
/
alter  table MTZ.GENCONTROLS add 
VersionMajor
 NUMBER null /* Версия */
/
alter  table MTZ.GENCONTROLS add 
VersionMinor
 NUMBER null /* Подверсия */
/


/*Библиотеки*/
drop table MTZ.GENREFERENCE/*Библиотеки, которые используются при генерации*/ 
/
create table MTZ.GENREFERENCE/*Библиотеки, которые используются при генерации*/ (
ParentStructRowID CHAR(38) not null,
GENREFERENCEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.GENREFERENCE add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.GENREFERENCE add 
RefClassID
 VARCHAR2 (40) null /* Класс ссылки */
/
alter  table MTZ.GENREFERENCE add 
VersionMajor
 NUMBER null /* Номер версии */
/
alter  table MTZ.GENREFERENCE add 
VersionMinor
 NUMBER null /* Подверсия */
/


/*Локализация*/
drop table MTZ.LocalizeInfo/**/ 
/
create table MTZ.LocalizeInfo/**/ (
InstanceID CHAR(38) ,
LocalizeInfoid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.LocalizeInfo add 
LangFull
 VARCHAR2 (255) null /* Язык - название */
/
alter  table MTZ.LocalizeInfo add 
LangShort
 VARCHAR2 (255) null /* Код языка */
/


/*Y-Cost*/
drop table MTZ.ITTNO_YC/*Y-Cost*/ 
/
create table MTZ.ITTNO_YC/*Y-Cost*/ (
InstanceID CHAR(38) ,
ITTNO_YCid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTNO_YC add 
YNum
 NUMBER null /* Номер рядя по оси Y */
/
alter  table MTZ.ITTNO_YC add 
TheTime
 NUMBER null /* Время */
/


/*Общие настройки*/
drop table MTZ.ITTNO_CMN/**/ 
/
create table MTZ.ITTNO_CMN/**/ (
InstanceID CHAR(38) ,
ITTNO_CMNid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTNO_CMN add 
IN_TIME
 NUMBER null /* Время на въезд в камеру */
/
alter  table MTZ.ITTNO_CMN add 
Out_Time
 NUMBER null /* Время на выезд из камеры */
/


/*Z-Cost*/
drop table MTZ.ITTNO_ZC/*Z-Cost*/ 
/
create table MTZ.ITTNO_ZC/*Z-Cost*/ (
InstanceID CHAR(38) ,
ITTNO_ZCid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTNO_ZC add 
ZNum
 NUMBER null /* Номер яруса */
/
alter  table MTZ.ITTNO_ZC add 
TheTime
 NUMBER null /* Время */
/


/*Описание*/
drop table MTZ.InfoStoreDef/*Описание каталога*/ 
/
create table MTZ.InfoStoreDef/*Описание каталога*/ (
InstanceID CHAR(38) ,
InfoStoreDefid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.InfoStoreDef add 
TheGroup CHAR(38) null /* Группа */
/
alter  table MTZ.InfoStoreDef add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.InfoStoreDef add 
InfoStoreType
 NUMBER null 
 check (InfoStoreType in ( 2/* Групповой */
, 1/* Персональный */
, 0/*  Общий */ )) /* Тип каталога */
/
alter  table MTZ.InfoStoreDef add 
TheUser CHAR(38) null /* Пользователь */
/


/*Папка*/
drop table MTZ.Folder/*Папка каталога*/ 
/
create table MTZ.Folder/*Папка каталога*/ (
InstanceID CHAR(38) ,
Folderid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.Folder add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.Folder add 
FolderType
 NUMBER null 
 check (FolderType in ( 2/* Исходящие */
, 10/* Завершенные */
, 0/* cls__ */
, 5/* Календарь */
, 1/* Входящие */
, 9/* Отложенные */
, 4/* Журнал */
, 8/* В работе */
, 7/* Черновики */
, 6/* Отправленные */
, 3/* Удаленные */ )) /* Тип папки */
/


/*Документы*/
drop table MTZ.Shortcut/*Ярлыки документов*/ 
/
create table MTZ.Shortcut/*Ярлыки документов*/ (
ParentStructRowID CHAR(38) not null,
Shortcutid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Shortcut add 
DocItem CHAR(38) null /* Документ */
/
alter  table MTZ.Shortcut add 
StartMode
 VARCHAR2 (255) null /* Режим */
/


/*Описание*/
drop table MTZ.Reports/*Описание*/ 
/
create table MTZ.Reports/*Описание*/ (
InstanceID CHAR(38) ,
Reportsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Reports add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.Reports add 
ReportFile VARCHAR2(4000) null /* Файл отчета */
/
alter  table MTZ.Reports add 
 ReportFile_EXT varchar2(4) null
/
alter  table MTZ.Reports add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/
alter  table MTZ.Reports add 
PrepareMethod CHAR(38) null /* Метод для формирования */
/
alter  table MTZ.Reports add 
ReportType
 NUMBER null 
 check (ReportType in ( 1/* Двумерная матрица */
, 0/* Таблица */
, 3/* Экспорт по WORD шаблону */
, 2/* Только расчет */
, 4/* Экспорт по Excel шаблону */ )) /* Тип отчета */
/
alter  table MTZ.Reports add 
TheReportExt CHAR(38) null /* Расширение для создания отчета */
/
alter  table MTZ.Reports add 
ReportView
 VARCHAR2 (255) null /* Базовый запрос */
/
alter  table MTZ.Reports add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Секции*/
drop table MTZ.RPTStruct/*Секции*/ 
/
create table MTZ.RPTStruct/*Секции*/ (
InstanceID CHAR(38) ,
RPTStructid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.RPTStruct add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.RPTStruct add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/


/*Поля секции*/
drop table MTZ.RPTFields/*Поля секции*/ 
/
create table MTZ.RPTFields/*Поля секции*/ (
ParentStructRowID CHAR(38) not null,
RPTFieldsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.RPTFields add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.RPTFields add 
FieldType CHAR(38) null /* Тип поля */
/
alter  table MTZ.RPTFields add 
FieldSize
 NUMBER null /* Размер */
/
alter  table MTZ.RPTFields add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/


/*Формулы*/
drop table MTZ.RPTFormula/*Формулы*/ 
/
create table MTZ.RPTFormula/*Формулы*/ (
InstanceID CHAR(38) ,
RPTFormulaid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.RPTFormula add 
Name
 VARCHAR2 (64) null /* Название */
/
alter  table MTZ.RPTFormula add 
Code VARCHAR2(4000) null /* Выражение */
/
alter  table MTZ.RPTFormula add 
Platform CHAR(38) null /* Платформа */
/


/*Описание*/
drop table MTZ.ITTPR_DEF/**/ 
/
create table MTZ.ITTPR_DEF/**/ (
InstanceID CHAR(38) ,
ITTPR_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTPR_DEF add 
Poddon
 VARCHAR2 (20) null /* Поддон */
/
alter  table MTZ.ITTPR_DEF add 
InWeight
 NUMBER null /* Вес при приемке */
/
alter  table MTZ.ITTPR_DEF add 
OutWeight
 NUMBER null /* Вес отгрузок */
/
alter  table MTZ.ITTPR_DEF add 
Moroz
 NUMBER null /* Расчетная выморозка */
/
alter  table MTZ.ITTPR_DEF add 
Vesi
 NUMBER null /* Погрешность весов */
/
alter  table MTZ.ITTPR_DEF add 
Good
 VARCHAR2 (20) null /* Товар */
/
alter  table MTZ.ITTPR_DEF add 
the_Description
 VARCHAR2 (255) null /* Описание товара */
/
alter  table MTZ.ITTPR_DEF add 
Country
 VARCHAR2 (255) null /* Страна */
/
alter  table MTZ.ITTPR_DEF add 
Factory
 VARCHAR2 (255) null /* Завод */
/
alter  table MTZ.ITTPR_DEF add 
KillPlace
 VARCHAR2 (255) null /* Бойня */
/
alter  table MTZ.ITTPR_DEF add 
Brak
 VARCHAR2 (30) null /* Брак */
/
alter  table MTZ.ITTPR_DEF add 
Client
 VARCHAR2 (255) null /* Поклажедатель */
/
alter  table MTZ.ITTPR_DEF add 
TheDate
 DATE null /* Дата протокола */
/
alter  table MTZ.ITTPR_DEF add 
WeightDelta
 NUMBER null /* Расхождение по весу */
/
alter  table MTZ.ITTPR_DEF add 
InBoxes
 NUMBER null /* Принято коробов */
/
alter  table MTZ.ITTPR_DEF add 
OutBoxes
 NUMBER null /* Отгружено коробов */
/


/*Описание*/
drop table MTZ.MTZExt_def/*Список зарегистрированных расширений*/ 
/
create table MTZ.MTZExt_def/*Список зарегистрированных расширений*/ (
InstanceID CHAR(38) ,
MTZExt_defid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZExt_def add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.MTZExt_def add 
ExtType
 NUMBER null 
 check (ExtType in ( 1/* OnFormExt */
, 7/* CodeGenerator */
, 3/* JrnlAddExt */
, 6/* VerifyRowExt */
, 0/* StatusExt */
, 8/* ARMGenerator */
, 5/* DefaultExt */
, 2/* CustomExt */
, 4/* JrnlRunExt */ )) /* Тип расширения */
/
alter  table MTZ.MTZExt_def add 
TheDescription VARCHAR2(4000) null /* Описание */
/


/*Реализации расширения*/
drop table MTZ.MTZExtRel/*Реализации расширения для разных разработческих плаформ*/ 
/
create table MTZ.MTZExtRel/*Реализации расширения для разных разработческих плаформ*/ (
InstanceID CHAR(38) ,
MTZExtRelid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZExtRel add 
ThePlatform
 NUMBER null 
 check (ThePlatform in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Реализация */
/
alter  table MTZ.MTZExtRel add 
TheClassName
 VARCHAR2 (255) null /* Название класса */
/
alter  table MTZ.MTZExtRel add 
TheLibraryName
 VARCHAR2 (255) null /* Название библиотеки */
/


/*Набор услуг*/
drop table MTZ.ITTCS_LIN/**/ 
/
create table MTZ.ITTCS_LIN/**/ (
InstanceID CHAR(38) ,
ITTCS_LINid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTCS_LIN add 
SRV CHAR(38) null /* Услуга */
/
alter  table MTZ.ITTCS_LIN add 
UseSrv
 NUMBER null 
 check (UseSrv in ( -1/* Да */
, 0/* Нет */ )) /* Использовать */
/


/*Описание*/
drop table MTZ.ITTCS_DEF/**/ 
/
create table MTZ.ITTCS_DEF/**/ (
InstanceID CHAR(38) ,
ITTCS_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTCS_DEF add 
CLIENTCODE VARCHAR2(4000) null /* Код клиента */
/


/*Журнал событий*/
drop table MTZ.SysLog/*Журнал событий, которые произошли в системе*/ 
/
create table MTZ.SysLog/*Журнал событий, которые произошли в системе*/ (
InstanceID CHAR(38) ,
SysLogid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.SysLog add 
TheSession CHAR(38) null /* Сессия */
/
alter  table MTZ.SysLog add 
the_Resource
 VARCHAR2 (255) null /* Ресурс */
/
alter  table MTZ.SysLog add 
LogStructID
 VARCHAR2 (255) null /* Раздел с которым происхоит действие */
/
alter  table MTZ.SysLog add 
VERB
 VARCHAR2 (80) null /* Действие */
/
alter  table MTZ.SysLog add 
LogInstanceID CHAR(38) null /* Идентификатор документа */
/


/*Сессия пользователя*/
drop table MTZ.the_Session/*Зарегистрированные сессии пользователей*/ 
/
create table MTZ.the_Session/*Зарегистрированные сессии пользователей*/ (
InstanceID CHAR(38) ,
the_Sessionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.the_Session add 
UserRole CHAR(38) null /* Текущая роль пользователя */
/
alter  table MTZ.the_Session add 
ClosedAt
 DATE null /* Момент закрытия */
/
alter  table MTZ.the_Session add 
Closed
 NUMBER null 
 check (Closed in ( 1/* Да */
, 0/* Нет */ )) /* Закрыта */
/
alter  table MTZ.the_Session add 
Usersid CHAR(38) null /* Пользователь */
/
alter  table MTZ.the_Session add 
LastAccess
 DATE null /* Последнее подтверждение */
/
alter  table MTZ.the_Session add 
StartAt
 DATE null /* Момент открытия */
/
alter  table MTZ.the_Session add 
Lang
 VARCHAR2 (25) null /* Локализация */
/


/*Роботы журнала событий*/
drop table MTZ.LogReader/*Программы, которые регистрируют себя как 
обработчики лога событий.*/ 
/
create table MTZ.LogReader/*Программы, которые регистрируют себя как 
обработчики лога событий.*/ (
InstanceID CHAR(38) ,
LogReaderid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.LogReader add 
Name
 VARCHAR2 (80) null /* Название */
/
alter  table MTZ.LogReader add 
AutoStart
 NUMBER null 
 check (AutoStart in ( 1/* Да */
, 0/* Нет */ )) /* Автоматизированный запуск */
/
alter  table MTZ.LogReader add 
AutoProgid
 VARCHAR2 (255) null /* Класс для автоматического запуска */
/
alter  table MTZ.LogReader add 
ReadMarker
 DATE null /* Дата последней прочитанной записи */
/
alter  table MTZ.LogReader add 
StartInterval
 NUMBER null /* Интервал запуска (мин) */
/
alter  table MTZ.LogReader add 
LastStart
 DATE null /* Дата последнего запуска */
/
alter  table MTZ.LogReader add 
LastStop
 DATE null /* Дата последне останвки */
/


/*Действия*/
drop table MTZ.Verb/*Защищаемые системой дейсвия*/ 
/
create table MTZ.Verb/*Защищаемые системой дейсвия*/ (
InstanceID CHAR(38) ,
Verbid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Verb add 
Name
 VARCHAR2 (80) null /* Название */
/


/*Пользователи*/
drop table MTZ.Users/*Пользователи*/ 
/
create table MTZ.Users/*Пользователи*/ (
InstanceID CHAR(38) ,
Usersid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Users add 
Family
 VARCHAR2 (255) null /* Фамилия */
/
alter  table MTZ.Users add 
Name
 VARCHAR2 (64) null /* Имя */
/
alter  table MTZ.Users add 
SurName
 VARCHAR2 (255) null /* Отчество */
/
alter  table MTZ.Users add 
Login
 VARCHAR2 (64) null /* Имя для входа */
/
alter  table MTZ.Users add 
Password VARCHAR2(80) null /* Пароль */
/
alter  table MTZ.Users add 
DomaiName
 VARCHAR2 (255) null /* Доменное имя */
/
alter  table MTZ.Users add 
EMail VARCHAR2(255) null /* e-mail */
/
alter  table MTZ.Users add 
Phone
 VARCHAR2 (20) null /* Телефон */
/
alter  table MTZ.Users add 
LocalPhone
 VARCHAR2 (20) null /* Местный телефон */
/
alter  table MTZ.Users add 
MobilePhone
 VARCHAR2 (20) null /* Мобильный телефон */
/
alter  table MTZ.Users add 
Photo VARCHAR2(4000) null /* Фото */
/
alter  table MTZ.Users add 
BirthDay
 DATE null /* Дата рождения */
/
alter  table MTZ.Users add 
Activity CHAR(38) null /* Журнал активности */
/
alter  table MTZ.Users add 
CertificateID
 VARCHAR2 (255) null /* CertificateID */
/
alter  table MTZ.Users add 
CertData VARCHAR2(4000) null /* CertData */
/
alter  table MTZ.Users add 
ClientDef CHAR(38) null /* Ассоциация с клиентом */
/
alter  table MTZ.Users add 
PersonaData CHAR(38) null /* PersonaData */
/
alter  table MTZ.Users add 
PositionU
 VARCHAR2 (255) null /* Должность */
/
alter  table MTZ.Users add 
WorkPlace
 VARCHAR2 (255) null /* Место работы */
/


/*Группы*/
drop table MTZ.Groups/*Группы*/ 
/
create table MTZ.Groups/*Группы*/ (
InstanceID CHAR(38) ,
Groupsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Groups add 
Name
 VARCHAR2 (80) null /* Название */
/


/*Состав группы*/
drop table MTZ.GroupUser/*Состав группы*/ 
/
create table MTZ.GroupUser/*Состав группы*/ (
ParentStructRowID CHAR(38) not null,
GroupUserid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.GroupUser add 
TheUser CHAR(38) null /* Пользователь */
/


/*Описание прав*/
drop table MTZ.MTZSEC_RIGHT/*описание прав для каждой группы*/ 
/
create table MTZ.MTZSEC_RIGHT/*описание прав для каждой группы*/ (
InstanceID CHAR(38) ,
MTZSEC_RIGHTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZSEC_RIGHT add 
Piority
 NUMBER null /* Приоритет */
/
alter  table MTZ.MTZSEC_RIGHT add 
TheGroup CHAR(38) null /* Группа */
/
alter  table MTZ.MTZSEC_RIGHT add 
ProtectedItem
 VARCHAR2 (255) null /* Защищаемый элемент */
/
alter  table MTZ.MTZSEC_RIGHT add 
Allow
 NUMBER null 
 check (Allow in ( -1/* Да */
, 0/* Нет */ )) /* Разрешение */
/


/*Пользователи*/
drop table MTZ.ROLES_USER/*Пользователи*/ 
/
create table MTZ.ROLES_USER/*Пользователи*/ (
InstanceID CHAR(38) ,
ROLES_USERid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_USER add 
TheUser CHAR(38) null /* Пользователь */
/


/*Отображение на группы защиты*/
drop table MTZ.ROLES_MAP/*Отображение на группы защиты*/ 
/
create table MTZ.ROLES_MAP/*Отображение на группы защиты*/ (
InstanceID CHAR(38) ,
ROLES_MAPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_MAP add 
TheGroup CHAR(38) null /* Группа */
/


/*Доступные документы*/
drop table MTZ.ROLES_DOC/**/ 
/
create table MTZ.ROLES_DOC/**/ (
InstanceID CHAR(38) ,
ROLES_DOCid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_DOC add 
The_Document CHAR(38) null /* Тип документа */
/
alter  table MTZ.ROLES_DOC add 
The_Denied
 NUMBER null 
 check (The_Denied in ( 1/* Да */
, 0/* Нет */ )) /* Запрещен */
/
alter  table MTZ.ROLES_DOC add 
AllowDeleteDoc
 NUMBER null 
 check (AllowDeleteDoc in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено удаление */
/


/*Доступные состояния*/
drop table MTZ.ROLES_DOC_STATE/**/ 
/
create table MTZ.ROLES_DOC_STATE/**/ (
ParentStructRowID CHAR(38) not null,
ROLES_DOC_STATEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_DOC_STATE add 
The_State CHAR(38) null /* Состояние */
/
alter  table MTZ.ROLES_DOC_STATE add 
The_Mode CHAR(38) null /* Режим */
/
alter  table MTZ.ROLES_DOC_STATE add 
AllowDelete
 NUMBER null 
 check (AllowDelete in ( -1/* Да */
, 0/* Нет */ )) /* Можно удалять */
/
alter  table MTZ.ROLES_DOC_STATE add 
StateChangeDisabled
 NUMBER null 
 check (StateChangeDisabled in ( -1/* Да */
, 0/* Нет */ )) /* Запрещена смена состояния */
/


/*Определение роли*/
drop table MTZ.ROLES_DEF/*Определение роли*/ 
/
create table MTZ.ROLES_DEF/*Определение роли*/ (
InstanceID CHAR(38) ,
ROLES_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_DEF add 
name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ROLES_DEF add 
TheComment VARCHAR2(4000) null /* Описание */
/
alter  table MTZ.ROLES_DEF add 
RightsSet_Denied
 NUMBER null 
 check (RightsSet_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Настройка прав запрещена */
/
alter  table MTZ.ROLES_DEF add 
FormCFG_Denied
 NUMBER null 
 check (FormCFG_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Настройки форм запрещены */
/
alter  table MTZ.ROLES_DEF add 
ListCFG_Denied
 NUMBER null 
 check (ListCFG_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Настройка журналов запрещена */
/
alter  table MTZ.ROLES_DEF add 
FileExch_Denied
 NUMBER null 
 check (FileExch_Denied in ( -1/* Да */
, 0/* Нет */ )) /* Файловый обмен запрещен */
/


/*Отчёты*/
drop table MTZ.ROLES_REPORTS/**/ 
/
create table MTZ.ROLES_REPORTS/**/ (
InstanceID CHAR(38) ,
ROLES_REPORTSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_REPORTS add 
The_Report CHAR(38) null /* Отчёт */
/


/*Доступные приложения*/
drop table MTZ.ROLES_WP/*Доступные приложения*/ 
/
create table MTZ.ROLES_WP/*Доступные приложения*/ (
InstanceID CHAR(38) ,
ROLES_WPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ROLES_WP add 
WP CHAR(38) null /* Приложение */
/


/*Допустимые действия*/
drop table MTZ.ROLES_ACT/*Допустимые действия*/ 
/
create table MTZ.ROLES_ACT/*Допустимые действия*/ (
ParentStructRowID CHAR(38) not null,
ROLES_ACTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.ROLES_ACT add 
Accesible
 NUMBER null 
 check (Accesible in ( 1/* Да */
, 0/* Нет */ )) /* Доступность */
/
alter  table MTZ.ROLES_ACT add 
EntryPoints CHAR(38) null /* Доступные действия */
/


/*Колонки журнала*/
drop table MTZ.JournalColumn/*Колонки журнала*/ 
/
create table MTZ.JournalColumn/*Колонки журнала*/ (
InstanceID CHAR(38) ,
JournalColumnid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.JournalColumn add 
sequence
 NUMBER null /* Последовательность */
/
alter  table MTZ.JournalColumn add 
name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.JournalColumn add 
ColumnAlignment
 NUMBER null 
 check (ColumnAlignment in ( 4/* Center Center */
, 3/* Center Top */
, 6/* Right Top */
, 8/* Right Bottom */
, 2/* Left Bottom */
, 7/* Right Center */
, 5/* Center Bottom */
, 1/* Left Center */
, 0/* Left Top */ )) /* Выравнивание */
/
alter  table MTZ.JournalColumn add 
ColSort
 NUMBER null 
 check (ColSort in ( 0/* As String */
, 1/* As Numeric */
, 2/* As Date */ )) /* Сортировка колонки */
/
alter  table MTZ.JournalColumn add 
GroupAggregation
 NUMBER null 
 check (GroupAggregation in ( 5/* MAX */
, 1/* AVG */
, 3/* SUM */
, 2/* COUNT */
, 4/* MIN */
, 6/* CUSTOM */
, 0/* none */ )) /* Аггрегация при группировке */
/


/*Состав колонки*/
drop table MTZ.JColumnSource/*Состав колонки*/ 
/
create table MTZ.JColumnSource/*Состав колонки*/ (
ParentStructRowID CHAR(38) not null,
JColumnSourceid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.JColumnSource add 
SrcPartView CHAR(38) null /* Представление */
/
alter  table MTZ.JColumnSource add 
ViewField
 VARCHAR2 (255) null /* Поле представления */
/


/*Журнал*/
drop table MTZ.Journal/*Журнал*/ 
/
create table MTZ.Journal/*Журнал*/ (
InstanceID CHAR(38) ,
Journalid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.Journal add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.Journal add 
the_Alias
 VARCHAR2 (32) null /* Псевдоним */
/
alter  table MTZ.Journal add 
TheComment VARCHAR2(4000) null /* Описание */
/


/*Источники журнала*/
drop table MTZ.JournalSrc/*Источники журнала*/ 
/
create table MTZ.JournalSrc/*Источники журнала*/ (
InstanceID CHAR(38) ,
JournalSrcid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.JournalSrc add 
PartView CHAR(38) null /* Представление */
/
alter  table MTZ.JournalSrc add 
OnRun
 NUMBER null 
 check (OnRun in ( 2/* Открыть документ */
, 1/* Открыть строку */
, 0/* Ничего не делать */ )) /* При открытии */
/
alter  table MTZ.JournalSrc add 
OpenMode
 VARCHAR2 (1) null /* Режим открытия */
/
alter  table MTZ.JournalSrc add 
ViewAlias
 VARCHAR2 (255) null /* Псевдоним представления */
/


/*Сборки*/
drop table MTZ.MTZ_Inst_Build/**/ 
/
create table MTZ.MTZ_Inst_Build/**/ (
InstanceID CHAR(38) ,
MTZ_Inst_Buildid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZ_Inst_Build add 
PRODUCT_NAME
 VARCHAR2 (255) null /* PRODUCT_NAME */
/
alter  table MTZ.MTZ_Inst_Build add 
PRODUCT_VERSION
 VARCHAR2 (255) null /* PRODUCT_VERSION */
/
alter  table MTZ.MTZ_Inst_Build add 
PRODUCT_PUBLISHER
 VARCHAR2 (255) null /* PRODUCT_PUBLISHER */
/
alter  table MTZ.MTZ_Inst_Build add 
PRODUCT_WEB_SITE
 VARCHAR2 (255) null /* PRODUCT_WEB_SITE */
/
alter  table MTZ.MTZ_Inst_Build add 
LicensFilePath
 VARCHAR2 (2048) null /* Файл с лицензионным соглашением */
/
alter  table MTZ.MTZ_Inst_Build add 
MainFileRef CHAR(38) null /* Главный файл */
/
alter  table MTZ.MTZ_Inst_Build add 
InstallDir
 VARCHAR2 (1024) null /* InstallDir */
/
alter  table MTZ.MTZ_Inst_Build add 
ShortCutDir
 VARCHAR2 (255) null /* ShortCutDir */
/


/*Секции*/
drop table MTZ.MTZ_Inst_Build_Sec/**/ 
/
create table MTZ.MTZ_Inst_Build_Sec/**/ (
ParentStructRowID CHAR(38) not null,
MTZ_Inst_Build_Secid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZ_Inst_Build_Sec add 
TheSection CHAR(38) null /* Секция */
/
alter  table MTZ.MTZ_Inst_Build_Sec add 
TheDescription
 VARCHAR2 (255) null /* Комментарий */
/
alter  table MTZ.MTZ_Inst_Build_Sec add 
IsRewriteSectionDesc
 NUMBER null 
 check (IsRewriteSectionDesc in ( 1/* Да */
, 0/* Нет */ )) /* Перезаписывать комментарий секции */
/
alter  table MTZ.MTZ_Inst_Build_Sec add 
SEQ
 NUMBER null /* Порядок (от 1 до ...) */
/


/*Секции*/
drop table MTZ.MTZ_Inst_Section/**/ 
/
create table MTZ.MTZ_Inst_Section/**/ (
InstanceID CHAR(38) ,
MTZ_Inst_Sectionid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZ_Inst_Section add 
TheName
 VARCHAR2 (255) null /* Название (Eng) */
/
alter  table MTZ.MTZ_Inst_Section add 
IsVisible
 NUMBER null 
 check (IsVisible in ( 1/* Да */
, 0/* Нет */ )) /* Видимая */
/
alter  table MTZ.MTZ_Inst_Section add 
TheDescription
 VARCHAR2 (2048) null /* Комментарий (ToolTip) */
/
alter  table MTZ.MTZ_Inst_Section add 
IsNotDeletable
 NUMBER null 
 check (IsNotDeletable in ( 1/* Да */
, 0/* Нет */ )) /* Обязательная */
/
alter  table MTZ.MTZ_Inst_Section add 
TheTargetPlatform
 NUMBER null 
 check (TheTargetPlatform in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Целевая платформа */
/
alter  table MTZ.MTZ_Inst_Section add 
IsCustomSection
 NUMBER null 
 check (IsCustomSection in ( 1/* Да */
, 0/* Нет */ )) /* Custom Section */
/
alter  table MTZ.MTZ_Inst_Section add 
CustomSectionInstall CHAR(38) null /* Custom Section Install */
/
alter  table MTZ.MTZ_Inst_Section add 
CustomSectionUnInstall CHAR(38) null /* Custom Section UnInstall */
/


/*Файлы секции*/
drop table MTZ.MTZ_Inst_Sec_Files/**/ 
/
create table MTZ.MTZ_Inst_Sec_Files/**/ (
ParentStructRowID CHAR(38) not null,
MTZ_Inst_Sec_Filesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
TheSource
 VARCHAR2 (1024) null /* Файл или каталог */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
IsCOM
 NUMBER null 
 check (IsCOM in ( 1/* Да */
, 0/* Нет */ )) /* Является COM объектом */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
HaveToRun
 NUMBER null 
 check (HaveToRun in ( 1/* Да */
, 0/* Нет */ )) /* Обязательно запустить */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
CommanLineParams
 VARCHAR2 (255) null /* Ключи запуска */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
SysstemObject CHAR(38) null /* Объект системы */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
TheApplication CHAR(38) null /* Приложение системы */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
SubDir
 VARCHAR2 (255) null /* Подкаталог */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
IsShortcut
 NUMBER null 
 check (IsShortcut in ( 1/* Да */
, 0/* Нет */ )) /* Ярлык в меню */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
ShortcutName
 VARCHAR2 (255) null /* Имя ярлыка */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
ShortCutInfo
 VARCHAR2 (255) null /* Комментярий ярлыка */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
DefaultInterface
 VARCHAR2 (255) null /* Интерфейс по умолчанию */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
HaveToRunDeinst
 NUMBER null 
 check (HaveToRunDeinst in ( 1/* Да */
, 0/* Нет */ )) /* Запустить при деинсталляции */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
DeinstallComandParam
 VARCHAR2 (255) null /* Ключи деинсталляции */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
IsCustomScript
 NUMBER null 
 check (IsCustomScript in ( 1/* Да */
, 0/* Нет */ )) /* Пользовательский скрипт (см. поле Файл или каталог) */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
CustomScriptInstall CHAR(38) null /* Custom Script Install */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
CustomScriptUnInstall CHAR(38) null /* Custom Script UnInstall */
/
alter  table MTZ.MTZ_Inst_Sec_Files add 
SEQ
 NUMBER null /* Порядок */
/


/*Пользовательские скрипты*/
drop table MTZ.MTZ_Inst_Common/**/ 
/
create table MTZ.MTZ_Inst_Common/**/ (
InstanceID CHAR(38) ,
MTZ_Inst_Commonid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.MTZ_Inst_Common add 
TheName
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.MTZ_Inst_Common add 
TheInstallScript VARCHAR2(4000) null /* Секция инсталляции */
/
alter  table MTZ.MTZ_Inst_Common add 
SEQ
 NUMBER null /* Порядок (сортировка) */
/
alter  table MTZ.MTZ_Inst_Common add 
IsDeinstallUSE
 NUMBER null 
 check (IsDeinstallUSE in ( 1/* Да */
, 0/* Нет */ )) /* Использовать при деинсталляции */
/


/*Описание заказа*/
drop table MTZ.ITTTZ_DEF/*Заголовок файла ранспортного заказа*/ 
/
create table MTZ.ITTTZ_DEF/*Заголовок файла ранспортного заказа*/ (
InstanceID CHAR(38) ,
ITTTZ_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTTZ_DEF add 
Code
 VARCHAR2 (2) null /* Код документа */
/
alter  table MTZ.ITTTZ_DEF add 
Direction
 VARCHAR2 (1) null /* Направление  */
/
alter  table MTZ.ITTTZ_DEF add 
DocDate
 DATE null /* Дата документа */
/
alter  table MTZ.ITTTZ_DEF add 
TheNumber
 VARCHAR2 (8) null /* Номер документа */
/
alter  table MTZ.ITTTZ_DEF add 
SupplierCode
 VARCHAR2 (4) null /* Код поставщика */
/
alter  table MTZ.ITTTZ_DEF add 
TheClient
 VARCHAR2 (255) null /* Клиент */
/


/*Строки транспортного заказа*/
drop table MTZ.ITTTZ_LINES/**/ 
/
create table MTZ.ITTTZ_LINES/**/ (
InstanceID CHAR(38) ,
ITTTZ_LINESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTTZ_LINES add 
Direction
 VARCHAR2 (1) null /* Направление движения товара */
/
alter  table MTZ.ITTTZ_LINES add 
FileLink
 VARCHAR2 (2) null /* Признак привязки */
/
alter  table MTZ.ITTTZ_LINES add 
TheNumber
 VARCHAR2 (8) null /* Номер накладной */
/
alter  table MTZ.ITTTZ_LINES add 
SupplierCode
 VARCHAR2 (4) null /* Код поставщика */
/
alter  table MTZ.ITTTZ_LINES add 
sequence
 NUMBER null /* Порядковый номер */
/
alter  table MTZ.ITTTZ_LINES add 
TheArticul
 VARCHAR2 (8) null /* Артикул товара */
/
alter  table MTZ.ITTTZ_LINES add 
Quantity
 NUMBER null /* Количество товаров на палете */
/
alter  table MTZ.ITTTZ_LINES add 
EDIZM
 VARCHAR2 (3) null /* Единица учета */
/
alter  table MTZ.ITTTZ_LINES add 
SSCC
 VARCHAR2 (18) null /* SSCC */
/
alter  table MTZ.ITTTZ_LINES add 
Partia
 VARCHAR2 (6) null /* Номер партии */
/


/*Описание оптимизмации*/
drop table MTZ.ITT2OPT_DEF/**/ 
/
create table MTZ.ITT2OPT_DEF/**/ (
InstanceID CHAR(38) ,
ITT2OPT_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITT2OPT_DEF add 
OptType CHAR(38) null /* Тип оптимизации */
/
alter  table MTZ.ITT2OPT_DEF add 
TheRule CHAR(38) null /* Правило формирования партий */
/
alter  table MTZ.ITT2OPT_DEF add 
OPtDate
 DATE null /* Дата создания заявки */
/
alter  table MTZ.ITT2OPT_DEF add 
DateToOptimize
 DATE null /* Плановая дата оптимизации */
/


/*Услуги к заказу*/
drop table MTZ.ITTOUT_SRV/**/ 
/
create table MTZ.ITTOUT_SRV/**/ (
InstanceID CHAR(38) ,
ITTOUT_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOUT_SRV add 
SRV CHAR(38) null /* Услуга */
/
alter  table MTZ.ITTOUT_SRV add 
Quantity
 NUMBER null /* Кличество */
/


/*Описание*/
drop table MTZ.ITTOUT_DEF/**/ 
/
create table MTZ.ITTOUT_DEF/**/ (
InstanceID CHAR(38) ,
ITTOUT_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOUT_DEF add 
ShipOrder VARCHAR2(4000) null /* Заказ на отгрузку */
/
alter  table MTZ.ITTOUT_DEF add 
TheClient VARCHAR2(4000) null /* Клиент */
/
alter  table MTZ.ITTOUT_DEF add 
ProcessDate
 DATE null /* Дата обработки заказа */
/
alter  table MTZ.ITTOUT_DEF add 
Supplier
 VARCHAR2 (255) null /* Поставщик */
/
alter  table MTZ.ITTOUT_DEF add 
TTN
 VARCHAR2 (30) null /* Номер ТТН */
/
alter  table MTZ.ITTOUT_DEF add 
TTNDate
 DATE null /* Дата ТТН */
/
alter  table MTZ.ITTOUT_DEF add 
TranspNumber
 VARCHAR2 (30) null /* № ТС */
/
alter  table MTZ.ITTOUT_DEF add 
Container
 VARCHAR2 (30) null /* № прицепа \ контейнера */
/
alter  table MTZ.ITTOUT_DEF add 
StampNumber
 VARCHAR2 (20) null /* Номер пломбы */
/
alter  table MTZ.ITTOUT_DEF add 
StampStatus
 VARCHAR2 (30) null /* Состояние пломбы */
/
alter  table MTZ.ITTOUT_DEF add 
Track_time_in
 DATE null /* Время прибытия машины */
/
alter  table MTZ.ITTOUT_DEF add 
track_time_out
 DATE null /* Время убытия машины */
/
alter  table MTZ.ITTOUT_DEF add 
temp_in_track
 NUMBER null /* Температура */
/
alter  table MTZ.ITTOUT_DEF add 
ThePartyRule CHAR(38) null /* Правиило формирования партии */
/


/*Поддоны к заказу*/
drop table MTZ.ITTOUT_EPL/**/ 
/
create table MTZ.ITTOUT_EPL/**/ (
InstanceID CHAR(38) ,
ITTOUT_EPLid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOUT_EPL add 
TheNumber CHAR(38) null /* Палета */
/
alter  table MTZ.ITTOUT_EPL add 
PalWeight
 NUMBER null /* Вес палеты КГ. */
/
alter  table MTZ.ITTOUT_EPL add 
Palet_ID
 NUMBER null /* Идентификатор палеты */
/


/*Строки заказа*/
drop table MTZ.ITTOUT_LINES/**/ 
/
create table MTZ.ITTOUT_LINES/**/ (
InstanceID CHAR(38) ,
ITTOUT_LINESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOUT_LINES add 
sequence
 NUMBER null /* № */
/
alter  table MTZ.ITTOUT_LINES add 
LineAtQuery VARCHAR2(4000) null /* Строка в заказе */
/
alter  table MTZ.ITTOUT_LINES add 
QRY_NUM VARCHAR2(4000) null /* По заказу КГ. */
/
alter  table MTZ.ITTOUT_LINES add 
CurValue
 NUMBER null /* Факт КГ. */
/
alter  table MTZ.ITTOUT_LINES add 
articul
 VARCHAR2 (30) null /* Артикул */
/
alter  table MTZ.ITTOUT_LINES add 
edizm
 VARCHAR2 (30) null /* Ед. изм */
/
alter  table MTZ.ITTOUT_LINES add 
vetsved
 VARCHAR2 (50) null /* Номер вет. свидетельства */
/
alter  table MTZ.ITTOUT_LINES add 
made_country CHAR(38) null /* Страна производитель */
/
alter  table MTZ.ITTOUT_LINES add 
made_date_to
 DATE null /* Дата производства ПО */
/
alter  table MTZ.ITTOUT_LINES add 
Factory CHAR(38) null /* Завод */
/
alter  table MTZ.ITTOUT_LINES add 
KILL_NUMBER CHAR(38) null /* № бойни */
/
alter  table MTZ.ITTOUT_LINES add 
VidOtruba
 VARCHAR2 (64) null /* Вид отруба */
/
alter  table MTZ.ITTOUT_LINES add 
PartRef CHAR(38) null /* Партия */
/
alter  table MTZ.ITTOUT_LINES add 
Made_date
 DATE null /* Дата производства C */
/
alter  table MTZ.ITTOUT_LINES add 
exp_date
 DATE null /* Срок годности */
/
alter  table MTZ.ITTOUT_LINES add 
Quanity
 NUMBER null /* Количество коробов */
/
alter  table MTZ.ITTOUT_LINES add 
PackageWeight
 NUMBER null /* Вес одной упаковки */
/
alter  table MTZ.ITTOUT_LINES add 
FullPackageWeight
 NUMBER null /* Суммарный вес упаковки КГ. */
/
alter  table MTZ.ITTOUT_LINES add 
NumInBufZone
 VARCHAR2 (20) null /* Номер в буферной зоне */
/
alter  table MTZ.ITTOUT_LINES add 
good_ID VARCHAR2(4000) null /* Идентификатор товара */
/
alter  table MTZ.ITTOUT_LINES add 
Navalom
 NUMBER null 
 check (Navalom in ( -1/* Да */
, 0/* Нет */ )) /* Груз навалом */
/


/*Палеты к строке*/
drop table MTZ.ITTOUT_PALET/**/ 
/
create table MTZ.ITTOUT_PALET/**/ (
ParentStructRowID CHAR(38) not null,
ITTOUT_PALETid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTOUT_PALET add 
sequence
 NUMBER null /* № П\П */
/
alter  table MTZ.ITTOUT_PALET add 
TheNumber CHAR(38) null /* Палета */
/
alter  table MTZ.ITTOUT_PALET add 
made_country CHAR(38) null /* Страна производитель */
/
alter  table MTZ.ITTOUT_PALET add 
Factory CHAR(38) null /* Завод */
/
alter  table MTZ.ITTOUT_PALET add 
KILL_NUMBER CHAR(38) null /* № бойни */
/
alter  table MTZ.ITTOUT_PALET add 
VidOtruba
 VARCHAR2 (64) null /* Вид отруба */
/
alter  table MTZ.ITTOUT_PALET add 
PartRef CHAR(38) null /* Партия */
/
alter  table MTZ.ITTOUT_PALET add 
vetsved
 VARCHAR2 (50) null /* Номер вет. свидетельства */
/
alter  table MTZ.ITTOUT_PALET add 
Made_date
 DATE null /* Дата производства C */
/
alter  table MTZ.ITTOUT_PALET add 
made_date_to
 DATE null /* Дата производства ПО */
/
alter  table MTZ.ITTOUT_PALET add 
exp_date
 DATE null /* Срок годности */
/
alter  table MTZ.ITTOUT_PALET add 
CaliberQuantity
 NUMBER null /* Количство коробов */
/
alter  table MTZ.ITTOUT_PALET add 
GoodWithPaletWeight
 NUMBER null /* Вес БРУТТО с палетой КГ. */
/
alter  table MTZ.ITTOUT_PALET add 
PackageWeight
 NUMBER null /* Вес одной упаковки КГ. */
/
alter  table MTZ.ITTOUT_PALET add 
FullPackageWeight
 NUMBER null /* Суммарный вес упаковки КГ. */
/
alter  table MTZ.ITTOUT_PALET add 
IsEmpty
 NUMBER null 
 check (IsEmpty in ( -1/* Да */
, 0/* Нет */ )) /* Отгружена полностью */
/
alter  table MTZ.ITTOUT_PALET add 
BufferCell
 VARCHAR2 (20) null /* Адрес буферной ячейки */
/
alter  table MTZ.ITTOUT_PALET add 
StoreCell
 VARCHAR2 (20) null /* Адрес основной ячейки */
/
alter  table MTZ.ITTOUT_PALET add 
ReorgWeight
 NUMBER null /* Вес оставшегося груза с поддоном КГ. */
/
alter  table MTZ.ITTOUT_PALET add 
ReorgCaliberQuantity
 NUMBER null /* Количество оставшихся коробов */
/
alter  table MTZ.ITTOUT_PALET add 
ReorgPackageFullWeight
 NUMBER null /* Суммарный вес оставшейся упаковки КГ. */
/
alter  table MTZ.ITTOUT_PALET add 
IsBrak
 NUMBER null 
 check (IsBrak in ( -1/* Да */
, 0/* Нет */ )) /* Брак */
/
alter  table MTZ.ITTOUT_PALET add 
IsCalibrated
 NUMBER null 
 check (IsCalibrated in ( -1/* Да */
, 0/* Нет */ )) /* Калиброванный товар */
/
alter  table MTZ.ITTOUT_PALET add 
SSCC
 VARCHAR2 (18) null /* SSCC код */
/
alter  table MTZ.ITTOUT_PALET add 
BarCode1
 VARCHAR2 (40) null /* Bar Code 1 */
/
alter  table MTZ.ITTOUT_PALET add 
BarCode2
 VARCHAR2 (40) null /* Bar Code 2 */
/


/*Строки заказа*/
drop table MTZ.ITTIN_QLINE/**/ 
/
create table MTZ.ITTIN_QLINE/**/ (
InstanceID CHAR(38) ,
ITTIN_QLINEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTIN_QLINE add 
sequence
 NUMBER null /* № П\П */
/
alter  table MTZ.ITTIN_QLINE add 
LineAtQuery VARCHAR2(4000) null /* Строка в заказе */
/
alter  table MTZ.ITTIN_QLINE add 
QRY_NUM VARCHAR2(4000) null /* По заказу КГ. */
/
alter  table MTZ.ITTIN_QLINE add 
edizm
 VARCHAR2 (30) null /* Ед. изм */
/
alter  table MTZ.ITTIN_QLINE add 
CurValue
 NUMBER null /* Факт КГ. */
/
alter  table MTZ.ITTIN_QLINE add 
articul
 VARCHAR2 (30) null /* Артикул */
/
alter  table MTZ.ITTIN_QLINE add 
made_country CHAR(38) null /* Страна производитель */
/
alter  table MTZ.ITTIN_QLINE add 
Factory CHAR(38) null /* Завод */
/
alter  table MTZ.ITTIN_QLINE add 
KILL_NUMBER CHAR(38) null /* № бойни */
/
alter  table MTZ.ITTIN_QLINE add 
VidOtruba
 VARCHAR2 (64) null /* Вид отруба */
/
alter  table MTZ.ITTIN_QLINE add 
PartRef CHAR(38) null /* Партия */
/
alter  table MTZ.ITTIN_QLINE add 
vetsved
 VARCHAR2 (50) null /* Номер вет. свидетельства */
/
alter  table MTZ.ITTIN_QLINE add 
Made_date
 DATE null /* Дата производства C */
/
alter  table MTZ.ITTIN_QLINE add 
made_date_to
 DATE null /* Дата производства ПО */
/
alter  table MTZ.ITTIN_QLINE add 
exp_date
 DATE null /* Срок годности */
/
alter  table MTZ.ITTIN_QLINE add 
IsCalibrated
 NUMBER null 
 check (IsCalibrated in ( -1/* Да */
, 0/* Нет */ )) /* Калиброванный груз */
/
alter  table MTZ.ITTIN_QLINE add 
CaliberWeight
 NUMBER null /* Вес калиброванной единицы НЕТТО */
/
alter  table MTZ.ITTIN_QLINE add 
PackageWeight
 NUMBER null /* Вес одной упаковки КГ. */
/
alter  table MTZ.ITTIN_QLINE add 
FullPackageWeight
 NUMBER null /* Суммарный вес упаковки КГ. */
/
alter  table MTZ.ITTIN_QLINE add 
good_id VARCHAR2(4000) null /* Идентификатор товара */
/
alter  table MTZ.ITTIN_QLINE add 
KorobBrutto
 NUMBER null /* Вес брутто короба */
/
alter  table MTZ.ITTIN_QLINE add 
KorobNetto
 NUMBER null /* Вес НЕТТО короба */
/
alter  table MTZ.ITTIN_QLINE add 
Navalom
 NUMBER null 
 check (Navalom in ( -1/* Да */
, 0/* Нет */ )) /* Груз навалом */
/


/*Палеты к строке*/
drop table MTZ.ITTIN_PALET/**/ 
/
create table MTZ.ITTIN_PALET/**/ (
ParentStructRowID CHAR(38) not null,
ITTIN_PALETid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTIN_PALET add 
sequence
 NUMBER null /* № П\П */
/
alter  table MTZ.ITTIN_PALET add 
TheNumber CHAR(38) null /* Палета */
/
alter  table MTZ.ITTIN_PALET add 
made_country CHAR(38) null /* Страна производитель */
/
alter  table MTZ.ITTIN_PALET add 
Factory CHAR(38) null /* Завод */
/
alter  table MTZ.ITTIN_PALET add 
KILL_NUMBER CHAR(38) null /* № бойни */
/
alter  table MTZ.ITTIN_PALET add 
VidOtruba
 VARCHAR2 (64) null /* Вид отруба */
/
alter  table MTZ.ITTIN_PALET add 
PartRef CHAR(38) null /* Партия */
/
alter  table MTZ.ITTIN_PALET add 
vetsved
 VARCHAR2 (50) null /* Номер вет. свидетельства */
/
alter  table MTZ.ITTIN_PALET add 
Made_date
 DATE null /* Дата производства C */
/
alter  table MTZ.ITTIN_PALET add 
made_date_to
 DATE null /* Дата производства ПО */
/
alter  table MTZ.ITTIN_PALET add 
exp_date
 DATE null /* Срок годности */
/
alter  table MTZ.ITTIN_PALET add 
CaliberQuantity
 NUMBER null /* Количство коробов */
/
alter  table MTZ.ITTIN_PALET add 
PalWeight
 NUMBER null /* Вес поддона КГ. */
/
alter  table MTZ.ITTIN_PALET add 
GoodWithPaletWeight
 NUMBER null /* Вес поддона с грузом КГ. */
/
alter  table MTZ.ITTIN_PALET add 
PackageWeight
 NUMBER null /* Вес упаковки КГ. */
/
alter  table MTZ.ITTIN_PALET add 
FullPackageWeight
 NUMBER null /* Суммарный вес упаковки КГ. */
/
alter  table MTZ.ITTIN_PALET add 
BufferZonePlace
 VARCHAR2 (20) null /* Номер ячейки в буферной зоне */
/
alter  table MTZ.ITTIN_PALET add 
Stock_ID
 NUMBER null /* Идентификатор на  складе */
/
alter  table MTZ.ITTIN_PALET add 
palet_id
 NUMBER null /* Идентификатор палеты */
/
alter  table MTZ.ITTIN_PALET add 
IsBrak
 NUMBER null 
 check (IsBrak in ( -1/* Да */
, 0/* Нет */ )) /* Брак */
/
alter  table MTZ.ITTIN_PALET add 
KorobBrutto
 NUMBER null /* Вес брутто короба */
/
alter  table MTZ.ITTIN_PALET add 
KorobNetto
 NUMBER null /* Вес НЕТТО короба */
/
alter  table MTZ.ITTIN_PALET add 
IsCalibrated
 NUMBER null 
 check (IsCalibrated in ( -1/* Да */
, 0/* Нет */ )) /* Калиброванный груз */
/
alter  table MTZ.ITTIN_PALET add 
SSCC
 VARCHAR2 (18) null /* SSCC код */
/
alter  table MTZ.ITTIN_PALET add 
BarCode1
 VARCHAR2 (40) null /* Bar Code 1 */
/
alter  table MTZ.ITTIN_PALET add 
BarCode2
 VARCHAR2 (40) null /* Bar Code 2 */
/


/*Услуги к заказу*/
drop table MTZ.ITTIN_SRV/**/ 
/
create table MTZ.ITTIN_SRV/**/ (
InstanceID CHAR(38) ,
ITTIN_SRVid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTIN_SRV add 
SRV CHAR(38) null /* Услуга */
/
alter  table MTZ.ITTIN_SRV add 
Quantity
 NUMBER null /* Кличество */
/


/*Описание*/
drop table MTZ.ITTIN_DEF/**/ 
/
create table MTZ.ITTIN_DEF/**/ (
InstanceID CHAR(38) ,
ITTIN_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTIN_DEF add 
QryCode VARCHAR2(4000) null /* Код заказа */
/
alter  table MTZ.ITTIN_DEF add 
TheClient VARCHAR2(4000) null /* Клиент */
/
alter  table MTZ.ITTIN_DEF add 
ProcessDate
 DATE null /* Дата обработки заказа */
/
alter  table MTZ.ITTIN_DEF add 
Supplier
 VARCHAR2 (255) null /* Поставщик */
/
alter  table MTZ.ITTIN_DEF add 
TTN
 VARCHAR2 (30) null /* Номер ТТН */
/
alter  table MTZ.ITTIN_DEF add 
TTNDate
 DATE null /* Дата ТТН */
/
alter  table MTZ.ITTIN_DEF add 
TranspNumber
 VARCHAR2 (30) null /* № ТС */
/
alter  table MTZ.ITTIN_DEF add 
Container
 VARCHAR2 (30) null /* № прицепа \ контейнера */
/
alter  table MTZ.ITTIN_DEF add 
StampNumber
 VARCHAR2 (20) null /* Номер пломбы */
/
alter  table MTZ.ITTIN_DEF add 
StampStatus
 VARCHAR2 (30) null /* Состояние пломбы */
/
alter  table MTZ.ITTIN_DEF add 
Track_time_in
 DATE null /* Время прибытия машины */
/
alter  table MTZ.ITTIN_DEF add 
track_time_out
 DATE null /* Время убытия машины */
/
alter  table MTZ.ITTIN_DEF add 
temp_in_track
 NUMBER null /* Температура */
/
alter  table MTZ.ITTIN_DEF add 
ThePartyRule CHAR(38) null /* Правиило формирования партии */
/


/*Поддоны к заказу*/
drop table MTZ.ITTIN_EPL/*Пустые поддоны к заказу*/ 
/
create table MTZ.ITTIN_EPL/*Пустые поддоны к заказу*/ (
InstanceID CHAR(38) ,
ITTIN_EPLid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTIN_EPL add 
TheNumber CHAR(38) null /* Палета */
/
alter  table MTZ.ITTIN_EPL add 
PalWeight
 NUMBER null /* Вес палеты */
/


/*Строки привязки паллет*/
drop table MTZ.ITTSSCC_LINE/**/ 
/
create table MTZ.ITTSSCC_LINE/**/ (
InstanceID CHAR(38) ,
ITTSSCC_LINEid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTSSCC_LINE add 
PalletCode
 VARCHAR2 (20) null /* Код паллетты */
/
alter  table MTZ.ITTSSCC_LINE add 
Barcode1
 VARCHAR2 (40) null /* Баркод 1 */
/
alter  table MTZ.ITTSSCC_LINE add 
Barcode2
 VARCHAR2 (40) null /* Баркод 2 */
/
alter  table MTZ.ITTSSCC_LINE add 
Processed
 NUMBER null 
 check (Processed in ( -1/* Да */
, 0/* Нет */ )) /* Обработан */
/
alter  table MTZ.ITTSSCC_LINE add 
Result VARCHAR2(4000) null /* Результат обработки */
/


/*Описание привязки*/
drop table MTZ.ITTSSCC_DEF/**/ 
/
create table MTZ.ITTSSCC_DEF/**/ (
InstanceID CHAR(38) ,
ITTSSCC_DEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ITTSSCC_DEF add 
TheDate
 DATE null /* Дата */
/
alter  table MTZ.ITTSSCC_DEF add 
TheUser CHAR(38) null /* Пользователь */
/
alter  table MTZ.ITTSSCC_DEF add 
TCode
 VARCHAR2 (255) null /* Код терминала */
/


/*Арм*/
drop table MTZ.WorkPlace/*Арм*/ 
/
create table MTZ.WorkPlace/*Арм*/ (
InstanceID CHAR(38) ,
WorkPlaceid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WorkPlace add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.WorkPlace add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/
alter  table MTZ.WorkPlace add 
TheVersion
 VARCHAR2 (30) null /* Версия */
/
alter  table MTZ.WorkPlace add 
ThePlatform
 NUMBER null 
 check (ThePlatform in ( 2/* JAVA */
, 3/* OTHER */
, 1/* DOTNET */
, 0/* VB6 */ )) /* Платформа реализации */
/
alter  table MTZ.WorkPlace add 
TheComment VARCHAR2(4000) null /* Примечание */
/


/*Меню*/
drop table MTZ.EntryPoints/*Меню*/ 
/
create table MTZ.EntryPoints/*Меню*/ (
InstanceID CHAR(38) ,
EntryPointsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.EntryPoints add 
sequence
 NUMBER null /* Последовательность */
/
alter  table MTZ.EntryPoints add 
Name
 VARCHAR2 (38) null /* Название */
/
alter  table MTZ.EntryPoints add 
Caption
 VARCHAR2 (255) null /* Заголовок */
/
alter  table MTZ.EntryPoints add 
AsToolbarItem
 NUMBER null 
 check (AsToolbarItem in ( -1/* Да */
, 0/* Нет */ )) /* Включить в тулбар */
/
alter  table MTZ.EntryPoints add 
ActionType
 NUMBER null 
 check (ActionType in ( 5/* Открыть отчет */
, 0/* Ничего не делать */
, 2/* Выполнить метод */
, 1/* Открыть документ */
, 4/* Запустить АРМ */
, 3/* Открыть журнал */ )) /* Вариант действия */
/
alter  table MTZ.EntryPoints add 
TheFilter CHAR(38) null /* Фильтр */
/
alter  table MTZ.EntryPoints add 
Journal CHAR(38) null /* Журнал */
/
alter  table MTZ.EntryPoints add 
Report CHAR(38) null /* Отчет */
/
alter  table MTZ.EntryPoints add 
Document CHAR(38) null /* Документ */
/
alter  table MTZ.EntryPoints add 
Method CHAR(38) null /* Метод */
/
alter  table MTZ.EntryPoints add 
IconFile
 VARCHAR2 (2000) null /* Файл картинки */
/
alter  table MTZ.EntryPoints add 
TheExtention CHAR(38) null /* Расширение */
/
alter  table MTZ.EntryPoints add 
ARM CHAR(38) null /* АРМ */
/
alter  table MTZ.EntryPoints add 
TheComment VARCHAR2(4000) null /* Примечание */
/
alter  table MTZ.EntryPoints add 
ObjectType CHAR(38) null /* Тип документа */
/
alter  table MTZ.EntryPoints add 
JournalFixedQuery VARCHAR2(4000) null /* Ограничения к журналу */
/


/*Привязка фильтра*/
drop table MTZ.EPFilterLink/*Привязка фильтра к журналу*/ 
/
create table MTZ.EPFilterLink/*Привязка фильтра к журналу*/ (
ParentStructRowID CHAR(38) not null,
EPFilterLinkid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.EPFilterLink add 
RowSource
 VARCHAR2 (255) null /* Источник */
/
alter  table MTZ.EPFilterLink add 
TheExpression VARCHAR2(4000) null /* Выражение */
/
alter  table MTZ.EPFilterLink add 
FilterField
 VARCHAR2 (255) null /* Поле фильтра */
/


/*Список типов*/
drop table MTZ.ARMTypes/*Типы документов, которые подключаются в MDI режиме*/ 
/
create table MTZ.ARMTypes/*Типы документов, которые подключаются в MDI режиме*/ (
InstanceID CHAR(38) ,
ARMTypesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ARMTypes add 
TheDocumentType CHAR(38) null /* Тип документа */
/


/*Поведение журналов*/
drop table MTZ.ARMJournal/*Описание действий журанлов*/ 
/
create table MTZ.ARMJournal/*Описание действий журанлов*/ (
InstanceID CHAR(38) ,
ARMJournalid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ARMJournal add 
TheJournal CHAR(38) null /* Журнал */
/


/*Добавление*/
drop table MTZ.ARMJRNLADD/*Варианты обработки добавления*/ 
/
create table MTZ.ARMJRNLADD/*Варианты обработки добавления*/ (
ParentStructRowID CHAR(38) not null,
ARMJRNLADDid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ARMJRNLADD add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ARMJRNLADD add 
TheExtention CHAR(38) null /* Расширение */
/


/*Отчеты*/
drop table MTZ.ARMJRNLREP/*Отчеты из журнала*/ 
/
create table MTZ.ARMJRNLREP/*Отчеты из журнала*/ (
ParentStructRowID CHAR(38) not null,
ARMJRNLREPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ARMJRNLREP add 
repname
 VARCHAR2 (255) null /* Название отчета */
/
alter  table MTZ.ARMJRNLREP add 
TheReport CHAR(38) null /* Отчет */
/


/*Действия*/
drop table MTZ.ARMJRNLRUN/*Дополнительные действия в журнале*/ 
/
create table MTZ.ARMJRNLRUN/*Дополнительные действия в журнале*/ (
ParentStructRowID CHAR(38) not null,
ARMJRNLRUNid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ARMJRNLRUN add 
Name
 VARCHAR2 (255) null /* Название */
/
alter  table MTZ.ARMJRNLRUN add 
TheExtention CHAR(38) null /* Расширение */
/


/*Список рассылки*/
drop table MTZ.WEBS_MAILLIST/**/ 
/
create table MTZ.WEBS_MAILLIST/**/ (
InstanceID CHAR(38) ,
WEBS_MAILLISTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_MAILLIST add 
Email
 VARCHAR2 (512) null /* Адрес */
/


/*Roles*/
drop table MTZ.WEBS_ROLES/*Роли*/ 
/
create table MTZ.WEBS_ROLES/*Роли*/ (
InstanceID CHAR(38) ,
WEBS_ROLESid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_ROLES add 
Name
 VARCHAR2 (256) null /* Название */
/
alter  table MTZ.WEBS_ROLES add 
RoleDescription VARCHAR2(4000) null /* Описание */
/


/*Страница сайта*/
drop table MTZ.WEBS_PAGEDEF/**/ 
/
create table MTZ.WEBS_PAGEDEF/**/ (
InstanceID CHAR(38) ,
WEBS_PAGEDEFid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.WEBS_PAGEDEF add 
QueueNumber
 NUMBER null /* Номер п/п */
/
alter  table MTZ.WEBS_PAGEDEF add 
Name
 VARCHAR2 (256) null /* Название */
/
alter  table MTZ.WEBS_PAGEDEF add 
Url
 VARCHAR2 (1024) null /* Урл */
/
alter  table MTZ.WEBS_PAGEDEF add 
Title
 VARCHAR2 (256) null /* Титул */
/
alter  table MTZ.WEBS_PAGEDEF add 
ShortName
 VARCHAR2 (256) null /* Короткое название */
/
alter  table MTZ.WEBS_PAGEDEF add 
ObjectName CHAR(38) null /* Имя объекта */
/
alter  table MTZ.WEBS_PAGEDEF add 
ObjectCode CHAR(38) null /* Имя раздела */
/
alter  table MTZ.WEBS_PAGEDEF add 
AllowHeader
 NUMBER null 
 check (AllowHeader in ( -1/* Да */
, 0/* Нет */ )) /* Выводить заголовок */
/
alter  table MTZ.WEBS_PAGEDEF add 
the_Mode
 VARCHAR2 (256) null /* Режим работы */
/
alter  table MTZ.WEBS_PAGEDEF add 
PageType CHAR(38) null /* Тип */
/
alter  table MTZ.WEBS_PAGEDEF add 
ControlPath
 VARCHAR2 (256) null /* Контрол */
/
alter  table MTZ.WEBS_PAGEDEF add 
SelectIDParameterName
 VARCHAR2 (256) null /* Имя параметра для передачи в форму редактирования */
/
alter  table MTZ.WEBS_PAGEDEF add 
PageContent VARCHAR2(4000) null /* Cодержимое */
/
alter  table MTZ.WEBS_PAGEDEF add 
AllowAddPage
 NUMBER null 
 check (AllowAddPage in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено добавлять страницы */
/
alter  table MTZ.WEBS_PAGEDEF add 
the_IsLocked
 NUMBER null 
 check (the_IsLocked in ( -1/* Да */
, 0/* Нет */ )) /* Заблокирована */
/
alter  table MTZ.WEBS_PAGEDEF add 
IsOnMap
 NUMBER null 
 check (IsOnMap in ( -1/* Да */
, 0/* Нет */ )) /* Отображать на карте сайта */
/
alter  table MTZ.WEBS_PAGEDEF add 
IsShowHisory
 NUMBER null 
 check (IsShowHisory in ( -1/* Да */
, 0/* Нет */ )) /* Отобразить историю */
/
alter  table MTZ.WEBS_PAGEDEF add 
RedirectToFirstChild
 NUMBER null 
 check (RedirectToFirstChild in ( -1/* Да */
, 0/* Нет */ )) /* Перейти на первую дочернюю страницу */
/


/*Картинки*/
drop table MTZ.WEBS_PICS/**/ 
/
create table MTZ.WEBS_PICS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PICSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_PICS add 
Name
 VARCHAR2 (512) null /* Название */
/
alter  table MTZ.WEBS_PICS add 
FileContent VARCHAR2(4000) null /* Файл */
/
alter  table MTZ.WEBS_PICS add 
 FileContent_EXT varchar2(4) null
/


/*Отношения с меню*/
drop table MTZ.WEBS_PAGEMENU/**/ 
/
create table MTZ.WEBS_PAGEMENU/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGEMENUid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_PAGEMENU add 
AllowInMenu
 NUMBER null 
 check (AllowInMenu in ( -1/* Да */
, 0/* Нет */ )) /* В меню */
/
alter  table MTZ.WEBS_PAGEMENU add 
AllowInBottomMenu
 NUMBER null 
 check (AllowInBottomMenu in ( -1/* Да */
, 0/* Нет */ )) /* В нижнем меню */
/
alter  table MTZ.WEBS_PAGEMENU add 
UsePartRowsInMenu
 NUMBER null 
 check (UsePartRowsInMenu in ( -1/* Да */
, 0/* Нет */ )) /* Развернуть строки в меню */
/
alter  table MTZ.WEBS_PAGEMENU add 
UsePartRowsEditForm CHAR(38) null /* Страница для редактирования */
/
alter  table MTZ.WEBS_PAGEMENU add 
UsePartRowsTextField
 VARCHAR2 (256) null /* Поле текста ссылки */
/
alter  table MTZ.WEBS_PAGEMENU add 
UsePartRowsRowIDField
 VARCHAR2 (256) null /* Поле ID */
/
alter  table MTZ.WEBS_PAGEMENU add 
UsePartRowsSort
 VARCHAR2 (256) null /* Сортировка строк части */
/


/*Содержимое*/
drop table MTZ.WEBS_PAGECONTENT/**/ 
/
create table MTZ.WEBS_PAGECONTENT/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGECONTENTid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_PAGECONTENT add 
Content
 VARCHAR2 (8000) null /* Содержимое */
/


/*Параметры*/
drop table MTZ.WEBS_PAGEPARS/**/ 
/
create table MTZ.WEBS_PAGEPARS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGEPARSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_PAGEPARS add 
Name
 VARCHAR2 (256) null /* Имя */
/
alter  table MTZ.WEBS_PAGEPARS add 
TheValue
 VARCHAR2 (256) null /* Значение */
/


/*Компоненты*/
drop table MTZ.WEBS_PAGECOMP/**/ 
/
create table MTZ.WEBS_PAGECOMP/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_PAGECOMPid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_PAGECOMP add 
Name
 VARCHAR2 (256) null /* Название */
/
alter  table MTZ.WEBS_PAGECOMP add 
Title
 VARCHAR2 (256) null /* Титул */
/
alter  table MTZ.WEBS_PAGECOMP add 
Selected
 NUMBER null 
 check (Selected in ( -1/* Да */
, 0/* Нет */ )) /* Активен */
/
alter  table MTZ.WEBS_PAGECOMP add 
IsCollection
 NUMBER null 
 check (IsCollection in ( -1/* Да */
, 0/* Нет */ )) /* Коллекция */
/
alter  table MTZ.WEBS_PAGECOMP add 
the_PartName CHAR(38) null /* Раздел */
/
alter  table MTZ.WEBS_PAGECOMP add 
IDField
 VARCHAR2 (256) null /* Поле ID */
/
alter  table MTZ.WEBS_PAGECOMP add 
UserIdField
 VARCHAR2 (256) null /* поле UserID */
/
alter  table MTZ.WEBS_PAGECOMP add 
Visible
 NUMBER null 
 check (Visible in ( -1/* Да */
, 0/* Нет */ )) /* Видимость */
/


/*Табличная часть*/
drop table MTZ.TablePart/**/ 
/
create table MTZ.TablePart/**/ (
ParentStructRowID CHAR(38) not null,
TablePartid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.TablePart add 
FilterUserIDFieldName_
 VARCHAR2 (256) null /* Имя поля для фильтра UserID */
/
alter  table MTZ.TablePart add 
Filter_
 VARCHAR2 (256) null /* Фильтр */
/
alter  table MTZ.TablePart add 
SelectIDParameterName
 VARCHAR2 (256) null /* Параметр для передачи ID */
/
alter  table MTZ.TablePart add 
EditForm CHAR(38) null /* Страница для редактирования */
/
alter  table MTZ.TablePart add 
AllowDelete
 NUMBER null 
 check (AllowDelete in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено удаление */
/
alter  table MTZ.TablePart add 
AllowAddNew
 NUMBER null 
 check (AllowAddNew in ( -1/* Да */
, 0/* Нет */ )) /* Разрешено добавление */
/
alter  table MTZ.TablePart add 
AddStatusColumn_
 NUMBER null 
 check (AddStatusColumn_ in ( -1/* Да */
, 0/* Нет */ )) /* Есть Status колонка */
/
alter  table MTZ.TablePart add 
AllowEditRowStatusNameValue
 VARCHAR2 (256) null /* Значение Status для редактирования */
/
alter  table MTZ.TablePart add 
AllowEditField
 VARCHAR2 (256) null /* AllowEditField */
/
alter  table MTZ.TablePart add 
JournalID CHAR(38) null /* JournalID */
/
alter  table MTZ.TablePart add 
FilterUserClientDef
 VARCHAR2 (256) null /* FilterUserClientDef */
/
alter  table MTZ.TablePart add 
AllowEditUserClientDef
 NUMBER null 
 check (AllowEditUserClientDef in ( -1/* Да */
, 0/* Нет */ )) /* AllowEditUserClientDef */
/
alter  table MTZ.TablePart add 
ClientDefField
 VARCHAR2 (256) null /* ClientDefField */
/
alter  table MTZ.TablePart add 
DataNavigateUrlField
 VARCHAR2 (256) null /* DataNavigateUrlField */
/
alter  table MTZ.TablePart add 
PagerSize
 NUMBER null /* PagerSize */
/
alter  table MTZ.TablePart add 
EditCaption
 VARCHAR2 (256) null /* EditCaption */
/
alter  table MTZ.TablePart add 
ViewCaption
 VARCHAR2 (256) null /* ViewCaption */
/
alter  table MTZ.TablePart add 
DeleteCaption
 VARCHAR2 (256) null /* DeleteCaption */
/


/*Замены*/
drop table MTZ.ReplaceValues/**/ 
/
create table MTZ.ReplaceValues/**/ (
ParentStructRowID CHAR(38) not null,
ReplaceValuesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ReplaceValues add 
Name
 VARCHAR2 (256) null /* Поле */
/
alter  table MTZ.ReplaceValues add 
SourceName
 VARCHAR2 (256) null /* Поле источник */
/


/*Запрещённые для редактирования поля*/
drop table MTZ.DenyEdit/**/ 
/
create table MTZ.DenyEdit/**/ (
ParentStructRowID CHAR(38) not null,
DenyEditid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.DenyEdit add 
Name
 VARCHAR2 (256) null /* Значение */
/


/*Невидимые поля*/
drop table MTZ.DenyVisible/**/ 
/
create table MTZ.DenyVisible/**/ (
ParentStructRowID CHAR(38) not null,
DenyVisibleid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.DenyVisible add 
Name
 VARCHAR2 (256) null /* Имя поля */
/


/*Значения поля, разрешающего редактирование*/
drop table MTZ.AllowEditFieldValues/*Значения поля, разрешающего редактирование*/ 
/
create table MTZ.AllowEditFieldValues/*Значения поля, разрешающего редактирование*/ (
ParentStructRowID CHAR(38) not null,
AllowEditFieldValuesid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.AllowEditFieldValues add 
Name
 VARCHAR2 (256) null /* Значение */
/


/*Комбобоксы*/
drop table MTZ.ComboFields/**/ 
/
create table MTZ.ComboFields/**/ (
ParentStructRowID CHAR(38) not null,
ComboFieldsid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.ComboFields add 
Name
 VARCHAR2 (256) null /* Поле */
/
alter  table MTZ.ComboFields add 
SourceName
 VARCHAR2 (256) null /* Поле источник */
/


/*Users*/
drop table MTZ.WEBS_USERS/**/ 
/
create table MTZ.WEBS_USERS/**/ (
InstanceID CHAR(38) ,
WEBS_USERSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_USERS add 
LoginName
 VARCHAR2 (256) null /* Login */
/
alter  table MTZ.WEBS_USERS add 
Organisation
 VARCHAR2 (256) null /* Организация */
/
alter  table MTZ.WEBS_USERS add 
FirstName
 VARCHAR2 (256) null /* Имя */
/
alter  table MTZ.WEBS_USERS add 
SecondName
 VARCHAR2 (256) null /* Отчество */
/
alter  table MTZ.WEBS_USERS add 
LastName
 VARCHAR2 (256) null /* Фамилия */
/
alter  table MTZ.WEBS_USERS add 
UserDescription VARCHAR2(4000) null /* Примечания */
/


/*Анкеты*/
drop table MTZ.WEBS_ANKETA/**/ 
/
create table MTZ.WEBS_ANKETA/**/ (
InstanceID CHAR(38) ,
WEBS_ANKETAid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_ANKETA add 
Name
 VARCHAR2 (256) null /* Название */
/
alter  table MTZ.WEBS_ANKETA add 
the_Description
 VARCHAR2 (4000) null /* Описание */
/
alter  table MTZ.WEBS_ANKETA add 
AnketaDef CHAR(38) null /* Анкета */
/
alter  table MTZ.WEBS_ANKETA add 
Message
 VARCHAR2 (156) null /* Сообщение */
/


/*Вопросы*/
drop table MTZ.WEBS_QUESTIONS/**/ 
/
create table MTZ.WEBS_QUESTIONS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_QUESTIONSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_QUESTIONS add 
the_Number
 NUMBER null /* Номер  */
/
alter  table MTZ.WEBS_QUESTIONS add 
QuestionType CHAR(38) null /* Тип */
/
alter  table MTZ.WEBS_QUESTIONS add 
Name
 VARCHAR2 (1024) null /* Имя */
/
alter  table MTZ.WEBS_QUESTIONS add 
Required
 NUMBER null 
 check (Required in ( -1/* Да */
, 0/* Нет */ )) /* Обязательность */
/
alter  table MTZ.WEBS_QUESTIONS add 
Style
 VARCHAR2 (256) null /* Стиль */
/


/*Ответы*/
drop table MTZ.WEBS_ANSWERS/**/ 
/
create table MTZ.WEBS_ANSWERS/**/ (
ParentStructRowID CHAR(38) not null,
WEBS_ANSWERSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_ANSWERS add 
the_Number
 NUMBER null /* Номер  */
/
alter  table MTZ.WEBS_ANSWERS add 
Name
 VARCHAR2 (1024) null /* Значение  */
/
alter  table MTZ.WEBS_ANSWERS add 
the_Description
 VARCHAR2 (4000) null /* Описание  */
/


/*Документы для скачивания*/
drop table MTZ.WEBS_DDOC/*Список документов которые можно скачать*/ 
/
create table MTZ.WEBS_DDOC/*Список документов которые можно скачать*/ (
InstanceID CHAR(38) ,
WEBS_DDOCid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.WEBS_DDOC add 
Name
 VARCHAR2 (512) null /* Название */
/
alter  table MTZ.WEBS_DDOC add 
FileName
 VARCHAR2 (1024) null /* Имя файла */
/
alter  table MTZ.WEBS_DDOC add 
FileContract VARCHAR2(4000) null /* Файл */
/
alter  table MTZ.WEBS_DDOC add 
 FileContract_EXT varchar2(4) null
/
alter  table MTZ.WEBS_DDOC add 
Title
 VARCHAR2 (512) null /* Заголовок для ссылки */
/


/*Новости*/
drop table MTZ.WEBS_NEWS/*Древовидный список новостей*/ 
/
create table MTZ.WEBS_NEWS/*Древовидный список новостей*/ (
InstanceID CHAR(38) ,
WEBS_NEWSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
,ParentRowid CHAR(38) 
)
/
alter  table MTZ.WEBS_NEWS add 
QueueNumber
 NUMBER null /* Номер п/п */
/
alter  table MTZ.WEBS_NEWS add 
Name
 VARCHAR2 (256) null /* Название */
/
alter  table MTZ.WEBS_NEWS add 
Title
 VARCHAR2 (256) null /* Титул */
/
alter  table MTZ.WEBS_NEWS add 
ShortName
 VARCHAR2 (256) null /* Короткое название */
/
alter  table MTZ.WEBS_NEWS add 
the_Mode
 VARCHAR2 (256) null /* Режим работы */
/
alter  table MTZ.WEBS_NEWS add 
PageContent VARCHAR2(4000) null /* Cодержимое */
/
alter  table MTZ.WEBS_NEWS add 
the_IsLocked
 NUMBER null 
 check (the_IsLocked in ( -1/* Да */
, 0/* Нет */ )) /* Заблокирована */
/
alter  table MTZ.WEBS_NEWS add 
IsShowHisory
 NUMBER null 
 check (IsShowHisory in ( -1/* Да */
, 0/* Нет */ )) /* Отобразить историю */
/
alter  table MTZ.WEBS_NEWS add 
NewsDate
 DATE null /* Дата */
/
alter  table MTZ.WEBS_NEWS add 
NewsDescription VARCHAR2(4000) null /* Описание */
/


/*Картинки*/
drop table MTZ.NEWS_PICS/**/ 
/
create table MTZ.NEWS_PICS/**/ (
ParentStructRowID CHAR(38) not null,
NEWS_PICSid CHAR(38) not null primary key  
,ChangeStamp date default (sysdate)  /* Время последнего изменения */
,LockSessionID CHAR(38) null  /* temporary lock */
,LockUserID CHAR(38) null /* checkout lock */
,SecurityStyleID CHAR(38) null /* security formula */
)
/
alter  table MTZ.NEWS_PICS add 
Name
 VARCHAR2 (512) null /* Название */
/
alter  table MTZ.NEWS_PICS add 
FileContent VARCHAR2(4000) null /* Файл */
/
alter  table MTZ.NEWS_PICS add 
 FileContent_EXT varchar2(4) null
/


"><FormData Name=""/></BlockHolder><BlockHolder BlockName="--ForeignKey" BlockCode=" 

alter  TABLE SrvMessageInfo DROP CONSTRAINT fk_296
/
alter  table MTZ.SrvMessageInfo add constraint fk_296 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDMail_To DROP CONSTRAINT fk_613
/
alter  table MTZ.STDMail_To add constraint fk_613 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDMail_Attach DROP CONSTRAINT fk_614
/
alter  table MTZ.STDMail_Attach add constraint fk_614 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDMail_Info DROP CONSTRAINT fk_615
/
alter  table MTZ.STDMail_Info add constraint fk_615 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOPT_MOVE DROP CONSTRAINT fk_616
/
alter  table MTZ.ITTOPT_MOVE add constraint fk_616 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOPT_DEF DROP CONSTRAINT fk_617
/
alter  table MTZ.ITTOPT_DEF add constraint fk_617 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Num_zones DROP CONSTRAINT fk_161
/
alter  table MTZ.Num_zones add constraint fk_161 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Num_Values DROP CONSTRAINT fk_162
/
alter  table MTZ.Num_Values add constraint fk_162 foreign key(ParentStructRowID) references MTZ.Num_zones (Num_zonesID)
/


alter  TABLE Num_head DROP CONSTRAINT fk_163
/
alter  table MTZ.Num_head add constraint fk_163 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE FilterFieldGroup DROP CONSTRAINT fk_195
/
alter  table MTZ.FilterFieldGroup add constraint fk_195 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE FileterField DROP CONSTRAINT fk_196
/
alter  table MTZ.FileterField add constraint fk_196 foreign key(ParentStructRowID) references MTZ.FilterFieldGroup (FilterFieldGroupID)
/


alter  TABLE Filters DROP CONSTRAINT fk_197
/
alter  table MTZ.Filters add constraint fk_197 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE StateAction DROP CONSTRAINT fk_64
/
alter  table MTZ.StateAction add constraint fk_64 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBSDIC_QTYPE DROP CONSTRAINT fk_618
/
alter  table MTZ.WEBSDIC_QTYPE add constraint fk_618 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBSDIC_DEF DROP CONSTRAINT fk_619
/
alter  table MTZ.WEBSDIC_DEF add constraint fk_619 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBSDIC_PAGETYPE DROP CONSTRAINT fk_620
/
alter  table MTZ.WEBSDIC_PAGETYPE add constraint fk_620 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE MTZ2JOB_DEF DROP CONSTRAINT fk_580
/
alter  table MTZ.MTZ2JOB_DEF add constraint fk_580 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE REPD_LOCKED DROP CONSTRAINT fk_527
/
alter  table MTZ.REPD_LOCKED add constraint fk_527 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE REPD_RequestQuery DROP CONSTRAINT fk_528
/
alter  table MTZ.REPD_RequestQuery add constraint fk_528 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE REPD_ResQueryRcv DROP CONSTRAINT fk_529
/
alter  table MTZ.REPD_ResQueryRcv add constraint fk_529 foreign key(ParentStructRowID) references MTZ.REPD_RequestQuery (REPD_RequestQueryID)
/


alter  TABLE REPD_PROV DROP CONSTRAINT fk_530
/
alter  table MTZ.REPD_PROV add constraint fk_530 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE REPD_SRV DROP CONSTRAINT fk_531
/
alter  table MTZ.REPD_SRV add constraint fk_531 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE REPD_SNDTO DROP CONSTRAINT fk_532
/
alter  table MTZ.REPD_SNDTO add constraint fk_532 foreign key(ParentStructRowID) references MTZ.REPD_SRV (REPD_SRVID)
/


alter  TABLE REPD_CONST DROP CONSTRAINT fk_621
/
alter  table MTZ.REPD_CONST add constraint fk_621 foreign key(ParentStructRowID) references MTZ.REPD_SNDTO (REPD_SNDTOID)
/


alter  TABLE REPD_REPTYPE DROP CONSTRAINT fk_622
/
alter  table MTZ.REPD_REPTYPE add constraint fk_622 foreign key(ParentStructRowID) references MTZ.REPD_SNDTO (REPD_SNDTOID)
/


alter  TABLE REPD_SendQ DROP CONSTRAINT fk_533
/
alter  table MTZ.REPD_SendQ add constraint fk_533 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE REPD_RecvQ DROP CONSTRAINT fk_534
/
alter  table MTZ.REPD_RecvQ add constraint fk_534 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ST_MAIN DROP CONSTRAINT fk_623
/
alter  table MTZ.ST_MAIN add constraint fk_623 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ST_DEF DROP CONSTRAINT fk_624
/
alter  table MTZ.ST_DEF add constraint fk_624 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ST_PAGES DROP CONSTRAINT fk_625
/
alter  table MTZ.ST_PAGES add constraint fk_625 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_MOROZ DROP CONSTRAINT fk_626
/
alter  table MTZ.ITTD_MOROZ add constraint fk_626 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_RULE DROP CONSTRAINT fk_627
/
alter  table MTZ.ITTD_RULE add constraint fk_627 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_PLTYPE DROP CONSTRAINT fk_628
/
alter  table MTZ.ITTD_PLTYPE add constraint fk_628 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_FACTORY DROP CONSTRAINT fk_629
/
alter  table MTZ.ITTD_FACTORY add constraint fk_629 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_ZTYPE DROP CONSTRAINT fk_630
/
alter  table MTZ.ITTD_ZTYPE add constraint fk_630 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_GTYPE DROP CONSTRAINT fk_631
/
alter  table MTZ.ITTD_GTYPE add constraint fk_631 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_KILLPLACE DROP CONSTRAINT fk_632
/
alter  table MTZ.ITTD_KILLPLACE add constraint fk_632 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_COUNTRY DROP CONSTRAINT fk_633
/
alter  table MTZ.ITTD_COUNTRY add constraint fk_633 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_QTYPE DROP CONSTRAINT fk_634
/
alter  table MTZ.ITTD_QTYPE add constraint fk_634 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_CAMERA DROP CONSTRAINT fk_635
/
alter  table MTZ.ITTD_CAMERA add constraint fk_635 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_SRV DROP CONSTRAINT fk_636
/
alter  table MTZ.ITTD_SRV add constraint fk_636 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_ATYPE DROP CONSTRAINT fk_637
/
alter  table MTZ.ITTD_ATYPE add constraint fk_637 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_OPTTYPE DROP CONSTRAINT fk_638
/
alter  table MTZ.ITTD_OPTTYPE add constraint fk_638 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_EMAIL DROP CONSTRAINT fk_639
/
alter  table MTZ.ITTD_EMAIL add constraint fk_639 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTD_PART DROP CONSTRAINT fk_640
/
alter  table MTZ.ITTD_PART add constraint fk_640 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTPL_DEF DROP CONSTRAINT fk_641
/
alter  table MTZ.ITTPL_DEF add constraint fk_641 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOP_OPLNK DROP CONSTRAINT fk_642
/
alter  table MTZ.ITTOP_OPLNK add constraint fk_642 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOP_OPKAM DROP CONSTRAINT fk_643
/
alter  table MTZ.ITTOP_OPKAM add constraint fk_643 foreign key(ParentStructRowID) references MTZ.ITTOP_OPLNK (ITTOP_OPLNKID)
/


alter  TABLE ITTOP_KLNK DROP CONSTRAINT fk_644
/
alter  table MTZ.ITTOP_KLNK add constraint fk_644 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOP_KCAM DROP CONSTRAINT fk_645
/
alter  table MTZ.ITTOP_KCAM add constraint fk_645 foreign key(ParentStructRowID) references MTZ.ITTOP_KLNK (ITTOP_KLNKID)
/


alter  TABLE ITTOP_KCLI DROP CONSTRAINT fk_646
/
alter  table MTZ.ITTOP_KCLI add constraint fk_646 foreign key(ParentStructRowID) references MTZ.ITTOP_KLNK (ITTOP_KLNKID)
/


alter  TABLE ITTFN_MAX DROP CONSTRAINT fk_647
/
alter  table MTZ.ITTFN_MAX add constraint fk_647 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDJournlaExtInfo DROP CONSTRAINT fk_648
/
alter  table MTZ.STDJournlaExtInfo add constraint fk_648 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDJournalExtParam DROP CONSTRAINT fk_649
/
alter  table MTZ.STDJournalExtParam add constraint fk_649 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDJournalExtFlt DROP CONSTRAINT fk_650
/
alter  table MTZ.STDJournalExtFlt add constraint fk_650 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE STDJournalExtField DROP CONSTRAINT fk_651
/
alter  table MTZ.STDJournalExtField add constraint fk_651 foreign key(ParentStructRowID) references MTZ.STDJournalExtFlt (STDJournalExtFltID)
/


alter  TABLE Ext_Photos DROP CONSTRAINT fk_652
/
alter  table MTZ.Ext_Photos add constraint fk_652 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Ext_Photo_Call DROP CONSTRAINT fk_653
/
alter  table MTZ.Ext_Photo_Call add constraint fk_653 foreign key(ParentStructRowID) references MTZ.Ext_Photos (Ext_PhotosID)
/


alter  TABLE FIELDTYPE DROP CONSTRAINT fk_299
/
alter  table MTZ.FIELDTYPE add constraint fk_299 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE FIELDTYPEMAP DROP CONSTRAINT fk_300
/
alter  table MTZ.FIELDTYPEMAP add constraint fk_300 foreign key(ParentStructRowID) references MTZ.FIELDTYPE (FIELDTYPEID)
/


alter  TABLE ENUMITEM DROP CONSTRAINT fk_301
/
alter  table MTZ.ENUMITEM add constraint fk_301 foreign key(ParentStructRowID) references MTZ.FIELDTYPE (FIELDTYPEID)
/


alter  TABLE SHAREDMETHOD DROP CONSTRAINT fk_302
/
alter  table MTZ.SHAREDMETHOD add constraint fk_302 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE SCRIPT DROP CONSTRAINT fk_303
/
alter  table MTZ.SCRIPT add constraint fk_303 foreign key(ParentStructRowID) references MTZ.SHAREDMETHOD (SHAREDMETHODID)
/


alter  TABLE PARAMETERS DROP CONSTRAINT fk_304
/
alter  table MTZ.PARAMETERS add constraint fk_304 foreign key(ParentStructRowID) references MTZ.SCRIPT (SCRIPTID)
/


alter  TABLE OBJECTTYPE DROP CONSTRAINT fk_305
/
alter  table MTZ.OBJECTTYPE add constraint fk_305 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE PART DROP CONSTRAINT fk_306
/
alter  table MTZ.PART add constraint fk_306 foreign key(ParentStructRowID) references MTZ.OBJECTTYPE (OBJECTTYPEID)
/


alter  TABLE PARTMENU DROP CONSTRAINT fk_307
/
alter  table MTZ.PARTMENU add constraint fk_307 foreign key(ParentStructRowID) references MTZ.PART (PARTID)
/


alter  TABLE PARTPARAMMAP DROP CONSTRAINT fk_308
/
alter  table MTZ.PARTPARAMMAP add constraint fk_308 foreign key(ParentStructRowID) references MTZ.PARTMENU (PARTMENUID)
/


alter  TABLE FIELD DROP CONSTRAINT fk_309
/
alter  table MTZ.FIELD add constraint fk_309 foreign key(ParentStructRowID) references MTZ.PART (PARTID)
/


alter  TABLE FIELDVALIDATOR DROP CONSTRAINT fk_310
/
alter  table MTZ.FIELDVALIDATOR add constraint fk_310 foreign key(ParentStructRowID) references MTZ.FIELD (FIELDID)
/


alter  TABLE FIELDMENU DROP CONSTRAINT fk_311
/
alter  table MTZ.FIELDMENU add constraint fk_311 foreign key(ParentStructRowID) references MTZ.FIELD (FIELDID)
/


alter  TABLE FIELDPARAMMAP DROP CONSTRAINT fk_312
/
alter  table MTZ.FIELDPARAMMAP add constraint fk_312 foreign key(ParentStructRowID) references MTZ.FIELDMENU (FIELDMENUID)
/


alter  TABLE FldExtenders DROP CONSTRAINT fk_654
/
alter  table MTZ.FldExtenders add constraint fk_654 foreign key(ParentStructRowID) references MTZ.FIELD (FIELDID)
/


alter  TABLE FIELDEXPRESSION DROP CONSTRAINT fk_313
/
alter  table MTZ.FIELDEXPRESSION add constraint fk_313 foreign key(ParentStructRowID) references MTZ.FIELD (FIELDID)
/


alter  TABLE DINAMICFILTERSCRIPT DROP CONSTRAINT fk_314
/
alter  table MTZ.DINAMICFILTERSCRIPT add constraint fk_314 foreign key(ParentStructRowID) references MTZ.FIELD (FIELDID)
/


alter  TABLE FIELDSRCDEF DROP CONSTRAINT fk_655
/
alter  table MTZ.FIELDSRCDEF add constraint fk_655 foreign key(ParentStructRowID) references MTZ.FIELD (FIELDID)
/


alter  TABLE PARTVIEW DROP CONSTRAINT fk_315
/
alter  table MTZ.PARTVIEW add constraint fk_315 foreign key(ParentStructRowID) references MTZ.PART (PARTID)
/


alter  TABLE ViewColumn DROP CONSTRAINT fk_316
/
alter  table MTZ.ViewColumn add constraint fk_316 foreign key(ParentStructRowID) references MTZ.PARTVIEW (PARTVIEWID)
/


alter  TABLE PARTVIEW_LNK DROP CONSTRAINT fk_656
/
alter  table MTZ.PARTVIEW_LNK add constraint fk_656 foreign key(ParentStructRowID) references MTZ.PARTVIEW (PARTVIEWID)
/


alter  TABLE ExtenderInterface DROP CONSTRAINT fk_657
/
alter  table MTZ.ExtenderInterface add constraint fk_657 foreign key(ParentStructRowID) references MTZ.PART (PARTID)
/


alter  TABLE VALIDATOR DROP CONSTRAINT fk_317
/
alter  table MTZ.VALIDATOR add constraint fk_317 foreign key(ParentStructRowID) references MTZ.PART (PARTID)
/


alter  TABLE UNIQUECONSTRAINT DROP CONSTRAINT fk_318
/
alter  table MTZ.UNIQUECONSTRAINT add constraint fk_318 foreign key(ParentStructRowID) references MTZ.PART (PARTID)
/


alter  TABLE CONSTRAINTFIELD DROP CONSTRAINT fk_319
/
alter  table MTZ.CONSTRAINTFIELD add constraint fk_319 foreign key(ParentStructRowID) references MTZ.UNIQUECONSTRAINT (UNIQUECONSTRAINTID)
/


alter  TABLE INSTANCEVALIDATOR DROP CONSTRAINT fk_320
/
alter  table MTZ.INSTANCEVALIDATOR add constraint fk_320 foreign key(ParentStructRowID) references MTZ.OBJECTTYPE (OBJECTTYPEID)
/


alter  TABLE OBJSTATUS DROP CONSTRAINT fk_321
/
alter  table MTZ.OBJSTATUS add constraint fk_321 foreign key(ParentStructRowID) references MTZ.OBJECTTYPE (OBJECTTYPEID)
/


alter  TABLE NEXTSTATE DROP CONSTRAINT fk_322
/
alter  table MTZ.NEXTSTATE add constraint fk_322 foreign key(ParentStructRowID) references MTZ.OBJSTATUS (OBJSTATUSID)
/


alter  TABLE OBJECTMODE DROP CONSTRAINT fk_323
/
alter  table MTZ.OBJECTMODE add constraint fk_323 foreign key(ParentStructRowID) references MTZ.OBJECTTYPE (OBJECTTYPEID)
/


alter  TABLE STRUCTRESTRICTION DROP CONSTRAINT fk_324
/
alter  table MTZ.STRUCTRESTRICTION add constraint fk_324 foreign key(ParentStructRowID) references MTZ.OBJECTMODE (OBJECTMODEID)
/


alter  TABLE FIELDRESTRICTION DROP CONSTRAINT fk_325
/
alter  table MTZ.FIELDRESTRICTION add constraint fk_325 foreign key(ParentStructRowID) references MTZ.OBJECTMODE (OBJECTMODEID)
/


alter  TABLE METHODRESTRICTION DROP CONSTRAINT fk_326
/
alter  table MTZ.METHODRESTRICTION add constraint fk_326 foreign key(ParentStructRowID) references MTZ.OBJECTMODE (OBJECTMODEID)
/


alter  TABLE TYPEMENU DROP CONSTRAINT fk_327
/
alter  table MTZ.TYPEMENU add constraint fk_327 foreign key(ParentStructRowID) references MTZ.OBJECTTYPE (OBJECTTYPEID)
/


alter  TABLE MTZAPP DROP CONSTRAINT fk_328
/
alter  table MTZ.MTZAPP add constraint fk_328 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ParentPackage DROP CONSTRAINT fk_329
/
alter  table MTZ.ParentPackage add constraint fk_329 foreign key(ParentStructRowID) references MTZ.MTZAPP (MTZAPPID)
/


alter  TABLE GENPACKAGE DROP CONSTRAINT fk_330
/
alter  table MTZ.GENPACKAGE add constraint fk_330 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE GENERATOR_TARGET DROP CONSTRAINT fk_331
/
alter  table MTZ.GENERATOR_TARGET add constraint fk_331 foreign key(ParentStructRowID) references MTZ.GENPACKAGE (GENPACKAGEID)
/


alter  TABLE GENMANUALCODE DROP CONSTRAINT fk_332
/
alter  table MTZ.GENMANUALCODE add constraint fk_332 foreign key(ParentStructRowID) references MTZ.GENERATOR_TARGET (GENERATOR_TARGETID)
/


alter  TABLE GENCONTROLS DROP CONSTRAINT fk_333
/
alter  table MTZ.GENCONTROLS add constraint fk_333 foreign key(ParentStructRowID) references MTZ.GENERATOR_TARGET (GENERATOR_TARGETID)
/


alter  TABLE GENREFERENCE DROP CONSTRAINT fk_334
/
alter  table MTZ.GENREFERENCE add constraint fk_334 foreign key(ParentStructRowID) references MTZ.GENERATOR_TARGET (GENERATOR_TARGETID)
/


alter  TABLE LocalizeInfo DROP CONSTRAINT fk_658
/
alter  table MTZ.LocalizeInfo add constraint fk_658 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTNO_YC DROP CONSTRAINT fk_659
/
alter  table MTZ.ITTNO_YC add constraint fk_659 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTNO_CMN DROP CONSTRAINT fk_660
/
alter  table MTZ.ITTNO_CMN add constraint fk_660 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTNO_ZC DROP CONSTRAINT fk_661
/
alter  table MTZ.ITTNO_ZC add constraint fk_661 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE InfoStoreDef DROP CONSTRAINT fk_120
/
alter  table MTZ.InfoStoreDef add constraint fk_120 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Folder DROP CONSTRAINT fk_121
/
alter  table MTZ.Folder add constraint fk_121 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Shortcut DROP CONSTRAINT fk_122
/
alter  table MTZ.Shortcut add constraint fk_122 foreign key(ParentStructRowID) references MTZ.Folder (FolderID)
/


alter  TABLE Reports DROP CONSTRAINT fk_181
/
alter  table MTZ.Reports add constraint fk_181 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE RPTStruct DROP CONSTRAINT fk_182
/
alter  table MTZ.RPTStruct add constraint fk_182 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE RPTFields DROP CONSTRAINT fk_183
/
alter  table MTZ.RPTFields add constraint fk_183 foreign key(ParentStructRowID) references MTZ.RPTStruct (RPTStructID)
/


alter  TABLE RPTFormula DROP CONSTRAINT fk_184
/
alter  table MTZ.RPTFormula add constraint fk_184 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTPR_DEF DROP CONSTRAINT fk_662
/
alter  table MTZ.ITTPR_DEF add constraint fk_662 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE MTZExt_def DROP CONSTRAINT fk_581
/
alter  table MTZ.MTZExt_def add constraint fk_581 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE MTZExtRel DROP CONSTRAINT fk_591
/
alter  table MTZ.MTZExtRel add constraint fk_591 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTCS_LIN DROP CONSTRAINT fk_663
/
alter  table MTZ.ITTCS_LIN add constraint fk_663 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTCS_DEF DROP CONSTRAINT fk_664
/
alter  table MTZ.ITTCS_DEF add constraint fk_664 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE SysLog DROP CONSTRAINT fk_338
/
alter  table MTZ.SysLog add constraint fk_338 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE the_Session DROP CONSTRAINT fk_339
/
alter  table MTZ.the_Session add constraint fk_339 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE LogReader DROP CONSTRAINT fk_340
/
alter  table MTZ.LogReader add constraint fk_340 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Verb DROP CONSTRAINT fk_341
/
alter  table MTZ.Verb add constraint fk_341 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Users DROP CONSTRAINT fk_418
/
alter  table MTZ.Users add constraint fk_418 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE Groups DROP CONSTRAINT fk_419
/
alter  table MTZ.Groups add constraint fk_419 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE GroupUser DROP CONSTRAINT fk_420
/
alter  table MTZ.GroupUser add constraint fk_420 foreign key(ParentStructRowID) references MTZ.Groups (GroupsID)
/


alter  TABLE MTZSEC_RIGHT DROP CONSTRAINT fk_185
/
alter  table MTZ.MTZSEC_RIGHT add constraint fk_185 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_USER DROP CONSTRAINT fk_281
/
alter  table MTZ.ROLES_USER add constraint fk_281 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_MAP DROP CONSTRAINT fk_282
/
alter  table MTZ.ROLES_MAP add constraint fk_282 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_DOC DROP CONSTRAINT fk_556
/
alter  table MTZ.ROLES_DOC add constraint fk_556 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_DOC_STATE DROP CONSTRAINT fk_557
/
alter  table MTZ.ROLES_DOC_STATE add constraint fk_557 foreign key(ParentStructRowID) references MTZ.ROLES_DOC (ROLES_DOCID)
/


alter  TABLE ROLES_DEF DROP CONSTRAINT fk_283
/
alter  table MTZ.ROLES_DEF add constraint fk_283 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_REPORTS DROP CONSTRAINT fk_558
/
alter  table MTZ.ROLES_REPORTS add constraint fk_558 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_WP DROP CONSTRAINT fk_285
/
alter  table MTZ.ROLES_WP add constraint fk_285 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ROLES_ACT DROP CONSTRAINT fk_559
/
alter  table MTZ.ROLES_ACT add constraint fk_559 foreign key(ParentStructRowID) references MTZ.ROLES_WP (ROLES_WPID)
/


alter  TABLE JournalColumn DROP CONSTRAINT fk_168
/
alter  table MTZ.JournalColumn add constraint fk_168 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE JColumnSource DROP CONSTRAINT fk_169
/
alter  table MTZ.JColumnSource add constraint fk_169 foreign key(ParentStructRowID) references MTZ.JournalColumn (JournalColumnID)
/


alter  TABLE Journal DROP CONSTRAINT fk_170
/
alter  table MTZ.Journal add constraint fk_170 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE JournalSrc DROP CONSTRAINT fk_171
/
alter  table MTZ.JournalSrc add constraint fk_171 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE MTZ_Inst_Build DROP CONSTRAINT fk_665
/
alter  table MTZ.MTZ_Inst_Build add constraint fk_665 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE MTZ_Inst_Build_Sec DROP CONSTRAINT fk_666
/
alter  table MTZ.MTZ_Inst_Build_Sec add constraint fk_666 foreign key(ParentStructRowID) references MTZ.MTZ_Inst_Build (MTZ_Inst_BuildID)
/


alter  TABLE MTZ_Inst_Section DROP CONSTRAINT fk_667
/
alter  table MTZ.MTZ_Inst_Section add constraint fk_667 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE MTZ_Inst_Sec_Files DROP CONSTRAINT fk_668
/
alter  table MTZ.MTZ_Inst_Sec_Files add constraint fk_668 foreign key(ParentStructRowID) references MTZ.MTZ_Inst_Section (MTZ_Inst_SectionID)
/


alter  TABLE MTZ_Inst_Common DROP CONSTRAINT fk_669
/
alter  table MTZ.MTZ_Inst_Common add constraint fk_669 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTTZ_DEF DROP CONSTRAINT fk_670
/
alter  table MTZ.ITTTZ_DEF add constraint fk_670 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTTZ_LINES DROP CONSTRAINT fk_671
/
alter  table MTZ.ITTTZ_LINES add constraint fk_671 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITT2OPT_DEF DROP CONSTRAINT fk_672
/
alter  table MTZ.ITT2OPT_DEF add constraint fk_672 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOUT_SRV DROP CONSTRAINT fk_673
/
alter  table MTZ.ITTOUT_SRV add constraint fk_673 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOUT_DEF DROP CONSTRAINT fk_674
/
alter  table MTZ.ITTOUT_DEF add constraint fk_674 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOUT_EPL DROP CONSTRAINT fk_675
/
alter  table MTZ.ITTOUT_EPL add constraint fk_675 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOUT_LINES DROP CONSTRAINT fk_676
/
alter  table MTZ.ITTOUT_LINES add constraint fk_676 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTOUT_PALET DROP CONSTRAINT fk_677
/
alter  table MTZ.ITTOUT_PALET add constraint fk_677 foreign key(ParentStructRowID) references MTZ.ITTOUT_LINES (ITTOUT_LINESID)
/


alter  TABLE ITTIN_QLINE DROP CONSTRAINT fk_678
/
alter  table MTZ.ITTIN_QLINE add constraint fk_678 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTIN_PALET DROP CONSTRAINT fk_679
/
alter  table MTZ.ITTIN_PALET add constraint fk_679 foreign key(ParentStructRowID) references MTZ.ITTIN_QLINE (ITTIN_QLINEID)
/


alter  TABLE ITTIN_SRV DROP CONSTRAINT fk_680
/
alter  table MTZ.ITTIN_SRV add constraint fk_680 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTIN_DEF DROP CONSTRAINT fk_681
/
alter  table MTZ.ITTIN_DEF add constraint fk_681 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTIN_EPL DROP CONSTRAINT fk_682
/
alter  table MTZ.ITTIN_EPL add constraint fk_682 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTSSCC_LINE DROP CONSTRAINT fk_683
/
alter  table MTZ.ITTSSCC_LINE add constraint fk_683 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ITTSSCC_DEF DROP CONSTRAINT fk_684
/
alter  table MTZ.ITTSSCC_DEF add constraint fk_684 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WorkPlace DROP CONSTRAINT fk_165
/
alter  table MTZ.WorkPlace add constraint fk_165 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE EntryPoints DROP CONSTRAINT fk_583
/
alter  table MTZ.EntryPoints add constraint fk_583 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE EPFilterLink DROP CONSTRAINT fk_590
/
alter  table MTZ.EPFilterLink add constraint fk_590 foreign key(ParentStructRowID) references MTZ.EntryPoints (EntryPointsID)
/


alter  TABLE ARMTypes DROP CONSTRAINT fk_584
/
alter  table MTZ.ARMTypes add constraint fk_584 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ARMJournal DROP CONSTRAINT fk_585
/
alter  table MTZ.ARMJournal add constraint fk_585 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE ARMJRNLADD DROP CONSTRAINT fk_586
/
alter  table MTZ.ARMJRNLADD add constraint fk_586 foreign key(ParentStructRowID) references MTZ.ARMJournal (ARMJournalID)
/


alter  TABLE ARMJRNLREP DROP CONSTRAINT fk_587
/
alter  table MTZ.ARMJRNLREP add constraint fk_587 foreign key(ParentStructRowID) references MTZ.ARMJournal (ARMJournalID)
/


alter  TABLE ARMJRNLRUN DROP CONSTRAINT fk_588
/
alter  table MTZ.ARMJRNLRUN add constraint fk_588 foreign key(ParentStructRowID) references MTZ.ARMJournal (ARMJournalID)
/


alter  TABLE WEBS_MAILLIST DROP CONSTRAINT fk_685
/
alter  table MTZ.WEBS_MAILLIST add constraint fk_685 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBS_ROLES DROP CONSTRAINT fk_686
/
alter  table MTZ.WEBS_ROLES add constraint fk_686 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBS_PAGEDEF DROP CONSTRAINT fk_687
/
alter  table MTZ.WEBS_PAGEDEF add constraint fk_687 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBS_PICS DROP CONSTRAINT fk_688
/
alter  table MTZ.WEBS_PICS add constraint fk_688 foreign key(ParentStructRowID) references MTZ.WEBS_PAGEDEF (WEBS_PAGEDEFID)
/


alter  TABLE WEBS_PAGEMENU DROP CONSTRAINT fk_689
/
alter  table MTZ.WEBS_PAGEMENU add constraint fk_689 foreign key(ParentStructRowID) references MTZ.WEBS_PAGEDEF (WEBS_PAGEDEFID)
/


alter  TABLE WEBS_PAGECONTENT DROP CONSTRAINT fk_690
/
alter  table MTZ.WEBS_PAGECONTENT add constraint fk_690 foreign key(ParentStructRowID) references MTZ.WEBS_PAGEDEF (WEBS_PAGEDEFID)
/


alter  TABLE WEBS_PAGEPARS DROP CONSTRAINT fk_691
/
alter  table MTZ.WEBS_PAGEPARS add constraint fk_691 foreign key(ParentStructRowID) references MTZ.WEBS_PAGEDEF (WEBS_PAGEDEFID)
/


alter  TABLE WEBS_PAGECOMP DROP CONSTRAINT fk_692
/
alter  table MTZ.WEBS_PAGECOMP add constraint fk_692 foreign key(ParentStructRowID) references MTZ.WEBS_PAGEDEF (WEBS_PAGEDEFID)
/


alter  TABLE TablePart DROP CONSTRAINT fk_693
/
alter  table MTZ.TablePart add constraint fk_693 foreign key(ParentStructRowID) references MTZ.WEBS_PAGECOMP (WEBS_PAGECOMPID)
/


alter  TABLE ReplaceValues DROP CONSTRAINT fk_694
/
alter  table MTZ.ReplaceValues add constraint fk_694 foreign key(ParentStructRowID) references MTZ.WEBS_PAGECOMP (WEBS_PAGECOMPID)
/


alter  TABLE DenyEdit DROP CONSTRAINT fk_695
/
alter  table MTZ.DenyEdit add constraint fk_695 foreign key(ParentStructRowID) references MTZ.WEBS_PAGECOMP (WEBS_PAGECOMPID)
/


alter  TABLE DenyVisible DROP CONSTRAINT fk_696
/
alter  table MTZ.DenyVisible add constraint fk_696 foreign key(ParentStructRowID) references MTZ.WEBS_PAGECOMP (WEBS_PAGECOMPID)
/


alter  TABLE AllowEditFieldValues DROP CONSTRAINT fk_697
/
alter  table MTZ.AllowEditFieldValues add constraint fk_697 foreign key(ParentStructRowID) references MTZ.WEBS_PAGECOMP (WEBS_PAGECOMPID)
/


alter  TABLE ComboFields DROP CONSTRAINT fk_698
/
alter  table MTZ.ComboFields add constraint fk_698 foreign key(ParentStructRowID) references MTZ.WEBS_PAGECOMP (WEBS_PAGECOMPID)
/


alter  TABLE WEBS_USERS DROP CONSTRAINT fk_699
/
alter  table MTZ.WEBS_USERS add constraint fk_699 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBS_ANKETA DROP CONSTRAINT fk_700
/
alter  table MTZ.WEBS_ANKETA add constraint fk_700 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBS_QUESTIONS DROP CONSTRAINT fk_701
/
alter  table MTZ.WEBS_QUESTIONS add constraint fk_701 foreign key(ParentStructRowID) references MTZ.WEBS_ANKETA (WEBS_ANKETAID)
/


alter  TABLE WEBS_ANSWERS DROP CONSTRAINT fk_702
/
alter  table MTZ.WEBS_ANSWERS add constraint fk_702 foreign key(ParentStructRowID) references MTZ.WEBS_QUESTIONS (WEBS_QUESTIONSID)
/


alter  TABLE WEBS_DDOC DROP CONSTRAINT fk_703
/
alter  table MTZ.WEBS_DDOC add constraint fk_703 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE WEBS_NEWS DROP CONSTRAINT fk_704
/
alter  table MTZ.WEBS_NEWS add constraint fk_704 foreign key(INSTANCEID) references MTZ.INSTANCE (INSTANCEID)
/


alter  TABLE NEWS_PICS DROP CONSTRAINT fk_705
/
alter  table MTZ.NEWS_PICS add constraint fk_705 foreign key(ParentStructRowID) references MTZ.WEBS_NEWS (WEBS_NEWSID)
/


"><FormData Name=""/></BlockHolder><BlockHolder BlockName="--index" BlockCode=" 

drop index parent_SrvMessageInfo
/
create index MTZ.parent_SrvMessageInfo on MTZ.SrvMessageInfo(&quot;INSTANCEID&quot;)
/


drop index parent_STDMail_To
/
create index MTZ.parent_STDMail_To on MTZ.STDMail_To(&quot;INSTANCEID&quot;)
/


drop index parent_STDMail_Attach
/
create index MTZ.parent_STDMail_Attach on MTZ.STDMail_Attach(&quot;INSTANCEID&quot;)
/


drop index parent_STDMail_Info
/
create index MTZ.parent_STDMail_Info on MTZ.STDMail_Info(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOPT_MOVE
/
create index MTZ.parent_ITTOPT_MOVE on MTZ.ITTOPT_MOVE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOPT_DEF
/
create index MTZ.parent_ITTOPT_DEF on MTZ.ITTOPT_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_Num_zones
/
create index MTZ.parent_Num_zones on MTZ.Num_zones(&quot;INSTANCEID&quot;)
/


drop index parent_Num_Values
/
create index MTZ.parent_Num_Values on MTZ.Num_Values(ParentStructRowID)
/


drop index parent_Num_head
/
create index MTZ.parent_Num_head on MTZ.Num_head(&quot;INSTANCEID&quot;)
/


drop index parent_FilterFieldGroup
/
create index MTZ.parent_FilterFieldGroup on MTZ.FilterFieldGroup(&quot;INSTANCEID&quot;)
/


drop index parent_FileterField
/
create index MTZ.parent_FileterField on MTZ.FileterField(ParentStructRowID)
/


drop index parent_Filters
/
create index MTZ.parent_Filters on MTZ.Filters(&quot;INSTANCEID&quot;)
/


drop index parent_StateAction
/
create index MTZ.parent_StateAction on MTZ.StateAction(&quot;INSTANCEID&quot;)
/


drop index parent_WEBSDIC_QTYPE
/
create index MTZ.parent_WEBSDIC_QTYPE on MTZ.WEBSDIC_QTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_WEBSDIC_DEF
/
create index MTZ.parent_WEBSDIC_DEF on MTZ.WEBSDIC_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_WEBSDIC_PAGETYPE
/
create index MTZ.parent_WEBSDIC_PAGETYPE on MTZ.WEBSDIC_PAGETYPE(&quot;INSTANCEID&quot;)
/


drop index parent_MTZ2JOB_DEF
/
create index MTZ.parent_MTZ2JOB_DEF on MTZ.MTZ2JOB_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_REPD_LOCKED
/
create index MTZ.parent_REPD_LOCKED on MTZ.REPD_LOCKED(&quot;INSTANCEID&quot;)
/


drop index parent_REPD_RequestQuery
/
create index MTZ.parent_REPD_RequestQuery on MTZ.REPD_RequestQuery(&quot;INSTANCEID&quot;)
/


drop index parent_REPD_ResQueryRcv
/
create index MTZ.parent_REPD_ResQueryRcv on MTZ.REPD_ResQueryRcv(ParentStructRowID)
/


drop index parent_REPD_PROV
/
create index MTZ.parent_REPD_PROV on MTZ.REPD_PROV(&quot;INSTANCEID&quot;)
/


drop index parent_REPD_SRV
/
create index MTZ.parent_REPD_SRV on MTZ.REPD_SRV(&quot;INSTANCEID&quot;)
/


drop index parent_REPD_SNDTO
/
create index MTZ.parent_REPD_SNDTO on MTZ.REPD_SNDTO(ParentStructRowID)
/


drop index parent_REPD_CONST
/
create index MTZ.parent_REPD_CONST on MTZ.REPD_CONST(ParentStructRowID)
/


drop index parent_REPD_REPTYPE
/
create index MTZ.parent_REPD_REPTYPE on MTZ.REPD_REPTYPE(ParentStructRowID)
/


drop index parent_REPD_SendQ
/
create index MTZ.parent_REPD_SendQ on MTZ.REPD_SendQ(&quot;INSTANCEID&quot;)
/


drop index parent_REPD_RecvQ
/
create index MTZ.parent_REPD_RecvQ on MTZ.REPD_RecvQ(&quot;INSTANCEID&quot;)
/


drop index parent_ST_MAIN
/
create index MTZ.parent_ST_MAIN on MTZ.ST_MAIN(&quot;INSTANCEID&quot;)
/


drop index parent_ST_DEF
/
create index MTZ.parent_ST_DEF on MTZ.ST_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ST_PAGES
/
create index MTZ.parent_ST_PAGES on MTZ.ST_PAGES(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_MOROZ
/
create index MTZ.parent_ITTD_MOROZ on MTZ.ITTD_MOROZ(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_RULE
/
create index MTZ.parent_ITTD_RULE on MTZ.ITTD_RULE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_PLTYPE
/
create index MTZ.parent_ITTD_PLTYPE on MTZ.ITTD_PLTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_FACTORY
/
create index MTZ.parent_ITTD_FACTORY on MTZ.ITTD_FACTORY(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_ZTYPE
/
create index MTZ.parent_ITTD_ZTYPE on MTZ.ITTD_ZTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_GTYPE
/
create index MTZ.parent_ITTD_GTYPE on MTZ.ITTD_GTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_KILLPLACE
/
create index MTZ.parent_ITTD_KILLPLACE on MTZ.ITTD_KILLPLACE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_COUNTRY
/
create index MTZ.parent_ITTD_COUNTRY on MTZ.ITTD_COUNTRY(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_QTYPE
/
create index MTZ.parent_ITTD_QTYPE on MTZ.ITTD_QTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_CAMERA
/
create index MTZ.parent_ITTD_CAMERA on MTZ.ITTD_CAMERA(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_SRV
/
create index MTZ.parent_ITTD_SRV on MTZ.ITTD_SRV(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_ATYPE
/
create index MTZ.parent_ITTD_ATYPE on MTZ.ITTD_ATYPE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_OPTTYPE
/
create index MTZ.parent_ITTD_OPTTYPE on MTZ.ITTD_OPTTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_EMAIL
/
create index MTZ.parent_ITTD_EMAIL on MTZ.ITTD_EMAIL(&quot;INSTANCEID&quot;)
/


drop index parent_ITTD_PART
/
create index MTZ.parent_ITTD_PART on MTZ.ITTD_PART(&quot;INSTANCEID&quot;)
/


drop index parent_ITTPL_DEF
/
create index MTZ.parent_ITTPL_DEF on MTZ.ITTPL_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOP_OPLNK
/
create index MTZ.parent_ITTOP_OPLNK on MTZ.ITTOP_OPLNK(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOP_OPKAM
/
create index MTZ.parent_ITTOP_OPKAM on MTZ.ITTOP_OPKAM(ParentStructRowID)
/


drop index parent_ITTOP_KLNK
/
create index MTZ.parent_ITTOP_KLNK on MTZ.ITTOP_KLNK(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOP_KCAM
/
create index MTZ.parent_ITTOP_KCAM on MTZ.ITTOP_KCAM(ParentStructRowID)
/


drop index parent_ITTOP_KCLI
/
create index MTZ.parent_ITTOP_KCLI on MTZ.ITTOP_KCLI(ParentStructRowID)
/


drop index parent_ITTFN_MAX
/
create index MTZ.parent_ITTFN_MAX on MTZ.ITTFN_MAX(&quot;INSTANCEID&quot;)
/


drop index parent_STDJournlaExtInfo
/
create index MTZ.parent_STDJournlaExtInfo on MTZ.STDJournlaExtInfo(&quot;INSTANCEID&quot;)
/


drop index parent_STDJournalExtParam
/
create index MTZ.parent_STDJournalExtParam on MTZ.STDJournalExtParam(&quot;INSTANCEID&quot;)
/


drop index parent_STDJournalExtFlt
/
create index MTZ.parent_STDJournalExtFlt on MTZ.STDJournalExtFlt(&quot;INSTANCEID&quot;)
/


drop index parent_STDJournalExtField
/
create index MTZ.parent_STDJournalExtField on MTZ.STDJournalExtField(ParentStructRowID)
/


drop index parent_Ext_Photos
/
create index MTZ.parent_Ext_Photos on MTZ.Ext_Photos(&quot;INSTANCEID&quot;)
/


drop index parent_Ext_Photo_Call
/
create index MTZ.parent_Ext_Photo_Call on MTZ.Ext_Photo_Call(ParentStructRowID)
/


drop index parent_FIELDTYPE
/
create index MTZ.parent_FIELDTYPE on MTZ.FIELDTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_FIELDTYPEMAP
/
create index MTZ.parent_FIELDTYPEMAP on MTZ.FIELDTYPEMAP(ParentStructRowID)
/


drop index parent_ENUMITEM
/
create index MTZ.parent_ENUMITEM on MTZ.ENUMITEM(ParentStructRowID)
/


drop index parent_SHAREDMETHOD
/
create index MTZ.parent_SHAREDMETHOD on MTZ.SHAREDMETHOD(&quot;INSTANCEID&quot;)
/


drop index parent_SCRIPT
/
create index MTZ.parent_SCRIPT on MTZ.SCRIPT(ParentStructRowID)
/


drop index parent_PARAMETERS
/
create index MTZ.parent_PARAMETERS on MTZ.PARAMETERS(ParentStructRowID)
/


drop index parent_OBJECTTYPE
/
create index MTZ.parent_OBJECTTYPE on MTZ.OBJECTTYPE(&quot;INSTANCEID&quot;)
/


drop index parent_PART
/
create index MTZ.parent_PART on MTZ.PART(ParentStructRowID)
/


drop index parent_PARTMENU
/
create index MTZ.parent_PARTMENU on MTZ.PARTMENU(ParentStructRowID)
/


drop index parent_PARTPARAMMAP
/
create index MTZ.parent_PARTPARAMMAP on MTZ.PARTPARAMMAP(ParentStructRowID)
/


drop index parent_FIELD
/
create index MTZ.parent_FIELD on MTZ.FIELD(ParentStructRowID)
/


drop index parent_FIELDVALIDATOR
/
create index MTZ.parent_FIELDVALIDATOR on MTZ.FIELDVALIDATOR(ParentStructRowID)
/


drop index parent_FIELDMENU
/
create index MTZ.parent_FIELDMENU on MTZ.FIELDMENU(ParentStructRowID)
/


drop index parent_FIELDPARAMMAP
/
create index MTZ.parent_FIELDPARAMMAP on MTZ.FIELDPARAMMAP(ParentStructRowID)
/


drop index parent_FldExtenders
/
create index MTZ.parent_FldExtenders on MTZ.FldExtenders(ParentStructRowID)
/


drop index parent_FIELDEXPRESSION
/
create index MTZ.parent_FIELDEXPRESSION on MTZ.FIELDEXPRESSION(ParentStructRowID)
/


drop index parent_DINAMICFILTERSCRIPT
/
create index MTZ.parent_DINAMICFILTERSCRIPT on MTZ.DINAMICFILTERSCRIPT(ParentStructRowID)
/


drop index parent_FIELDSRCDEF
/
create index MTZ.parent_FIELDSRCDEF on MTZ.FIELDSRCDEF(ParentStructRowID)
/


drop index parent_PARTVIEW
/
create index MTZ.parent_PARTVIEW on MTZ.PARTVIEW(ParentStructRowID)
/


drop index parent_ViewColumn
/
create index MTZ.parent_ViewColumn on MTZ.ViewColumn(ParentStructRowID)
/


drop index parent_PARTVIEW_LNK
/
create index MTZ.parent_PARTVIEW_LNK on MTZ.PARTVIEW_LNK(ParentStructRowID)
/


drop index parent_ExtenderInterface
/
create index MTZ.parent_ExtenderInterface on MTZ.ExtenderInterface(ParentStructRowID)
/


drop index parent_VALIDATOR
/
create index MTZ.parent_VALIDATOR on MTZ.VALIDATOR(ParentStructRowID)
/


drop index parent_UNIQUECONSTRAINT
/
create index MTZ.parent_UNIQUECONSTRAINT on MTZ.UNIQUECONSTRAINT(ParentStructRowID)
/


drop index parent_CONSTRAINTFIELD
/
create index MTZ.parent_CONSTRAINTFIELD on MTZ.CONSTRAINTFIELD(ParentStructRowID)
/


drop index parent_INSTANCEVALIDATOR
/
create index MTZ.parent_INSTANCEVALIDATOR on MTZ.INSTANCEVALIDATOR(ParentStructRowID)
/


drop index parent_OBJSTATUS
/
create index MTZ.parent_OBJSTATUS on MTZ.OBJSTATUS(ParentStructRowID)
/


drop index parent_NEXTSTATE
/
create index MTZ.parent_NEXTSTATE on MTZ.NEXTSTATE(ParentStructRowID)
/


drop index parent_OBJECTMODE
/
create index MTZ.parent_OBJECTMODE on MTZ.OBJECTMODE(ParentStructRowID)
/


drop index parent_STRUCTRESTRICTION
/
create index MTZ.parent_STRUCTRESTRICTION on MTZ.STRUCTRESTRICTION(ParentStructRowID)
/


drop index parent_FIELDRESTRICTION
/
create index MTZ.parent_FIELDRESTRICTION on MTZ.FIELDRESTRICTION(ParentStructRowID)
/


drop index parent_METHODRESTRICTION
/
create index MTZ.parent_METHODRESTRICTION on MTZ.METHODRESTRICTION(ParentStructRowID)
/


drop index parent_TYPEMENU
/
create index MTZ.parent_TYPEMENU on MTZ.TYPEMENU(ParentStructRowID)
/


drop index parent_MTZAPP
/
create index MTZ.parent_MTZAPP on MTZ.MTZAPP(&quot;INSTANCEID&quot;)
/


drop index parent_ParentPackage
/
create index MTZ.parent_ParentPackage on MTZ.ParentPackage(ParentStructRowID)
/


drop index parent_GENPACKAGE
/
create index MTZ.parent_GENPACKAGE on MTZ.GENPACKAGE(&quot;INSTANCEID&quot;)
/


drop index parent_GENERATOR_TARGET
/
create index MTZ.parent_GENERATOR_TARGET on MTZ.GENERATOR_TARGET(ParentStructRowID)
/


drop index parent_GENMANUALCODE
/
create index MTZ.parent_GENMANUALCODE on MTZ.GENMANUALCODE(ParentStructRowID)
/


drop index parent_GENCONTROLS
/
create index MTZ.parent_GENCONTROLS on MTZ.GENCONTROLS(ParentStructRowID)
/


drop index parent_GENREFERENCE
/
create index MTZ.parent_GENREFERENCE on MTZ.GENREFERENCE(ParentStructRowID)
/


drop index parent_LocalizeInfo
/
create index MTZ.parent_LocalizeInfo on MTZ.LocalizeInfo(&quot;INSTANCEID&quot;)
/


drop index parent_ITTNO_YC
/
create index MTZ.parent_ITTNO_YC on MTZ.ITTNO_YC(&quot;INSTANCEID&quot;)
/


drop index parent_ITTNO_CMN
/
create index MTZ.parent_ITTNO_CMN on MTZ.ITTNO_CMN(&quot;INSTANCEID&quot;)
/


drop index parent_ITTNO_ZC
/
create index MTZ.parent_ITTNO_ZC on MTZ.ITTNO_ZC(&quot;INSTANCEID&quot;)
/


drop index parent_InfoStoreDef
/
create index MTZ.parent_InfoStoreDef on MTZ.InfoStoreDef(&quot;INSTANCEID&quot;)
/


drop index parent_Folder
/
create index MTZ.parent_Folder on MTZ.Folder(&quot;INSTANCEID&quot;)
/


drop index parent_Shortcut
/
create index MTZ.parent_Shortcut on MTZ.Shortcut(ParentStructRowID)
/


drop index parent_Reports
/
create index MTZ.parent_Reports on MTZ.Reports(&quot;INSTANCEID&quot;)
/


drop index parent_RPTStruct
/
create index MTZ.parent_RPTStruct on MTZ.RPTStruct(&quot;INSTANCEID&quot;)
/


drop index parent_RPTFields
/
create index MTZ.parent_RPTFields on MTZ.RPTFields(ParentStructRowID)
/


drop index parent_RPTFormula
/
create index MTZ.parent_RPTFormula on MTZ.RPTFormula(&quot;INSTANCEID&quot;)
/


drop index parent_ITTPR_DEF
/
create index MTZ.parent_ITTPR_DEF on MTZ.ITTPR_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_MTZExt_def
/
create index MTZ.parent_MTZExt_def on MTZ.MTZExt_def(&quot;INSTANCEID&quot;)
/


drop index parent_MTZExtRel
/
create index MTZ.parent_MTZExtRel on MTZ.MTZExtRel(&quot;INSTANCEID&quot;)
/


drop index parent_ITTCS_LIN
/
create index MTZ.parent_ITTCS_LIN on MTZ.ITTCS_LIN(&quot;INSTANCEID&quot;)
/


drop index parent_ITTCS_DEF
/
create index MTZ.parent_ITTCS_DEF on MTZ.ITTCS_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_SysLog
/
create index MTZ.parent_SysLog on MTZ.SysLog(&quot;INSTANCEID&quot;)
/


drop index parent_the_Session
/
create index MTZ.parent_the_Session on MTZ.the_Session(&quot;INSTANCEID&quot;)
/


drop index parent_LogReader
/
create index MTZ.parent_LogReader on MTZ.LogReader(&quot;INSTANCEID&quot;)
/


drop index parent_Verb
/
create index MTZ.parent_Verb on MTZ.Verb(&quot;INSTANCEID&quot;)
/


drop index parent_Users
/
create index MTZ.parent_Users on MTZ.Users(&quot;INSTANCEID&quot;)
/


drop index parent_Groups
/
create index MTZ.parent_Groups on MTZ.Groups(&quot;INSTANCEID&quot;)
/


drop index parent_GroupUser
/
create index MTZ.parent_GroupUser on MTZ.GroupUser(ParentStructRowID)
/


drop index parent_MTZSEC_RIGHT
/
create index MTZ.parent_MTZSEC_RIGHT on MTZ.MTZSEC_RIGHT(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_USER
/
create index MTZ.parent_ROLES_USER on MTZ.ROLES_USER(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_MAP
/
create index MTZ.parent_ROLES_MAP on MTZ.ROLES_MAP(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_DOC
/
create index MTZ.parent_ROLES_DOC on MTZ.ROLES_DOC(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_DOC_STATE
/
create index MTZ.parent_ROLES_DOC_STATE on MTZ.ROLES_DOC_STATE(ParentStructRowID)
/


drop index parent_ROLES_DEF
/
create index MTZ.parent_ROLES_DEF on MTZ.ROLES_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_REPORTS
/
create index MTZ.parent_ROLES_REPORTS on MTZ.ROLES_REPORTS(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_WP
/
create index MTZ.parent_ROLES_WP on MTZ.ROLES_WP(&quot;INSTANCEID&quot;)
/


drop index parent_ROLES_ACT
/
create index MTZ.parent_ROLES_ACT on MTZ.ROLES_ACT(ParentStructRowID)
/


drop index parent_JournalColumn
/
create index MTZ.parent_JournalColumn on MTZ.JournalColumn(&quot;INSTANCEID&quot;)
/


drop index parent_JColumnSource
/
create index MTZ.parent_JColumnSource on MTZ.JColumnSource(ParentStructRowID)
/


drop index parent_Journal
/
create index MTZ.parent_Journal on MTZ.Journal(&quot;INSTANCEID&quot;)
/


drop index parent_JournalSrc
/
create index MTZ.parent_JournalSrc on MTZ.JournalSrc(&quot;INSTANCEID&quot;)
/


drop index parent_MTZ_Inst_Build
/
create index MTZ.parent_MTZ_Inst_Build on MTZ.MTZ_Inst_Build(&quot;INSTANCEID&quot;)
/


drop index parent_MTZ_Inst_Build_Sec
/
create index MTZ.parent_MTZ_Inst_Build_Sec on MTZ.MTZ_Inst_Build_Sec(ParentStructRowID)
/


drop index parent_MTZ_Inst_Section
/
create index MTZ.parent_MTZ_Inst_Section on MTZ.MTZ_Inst_Section(&quot;INSTANCEID&quot;)
/


drop index parent_MTZ_Inst_Sec_Files
/
create index MTZ.parent_MTZ_Inst_Sec_Files on MTZ.MTZ_Inst_Sec_Files(ParentStructRowID)
/


drop index parent_MTZ_Inst_Common
/
create index MTZ.parent_MTZ_Inst_Common on MTZ.MTZ_Inst_Common(&quot;INSTANCEID&quot;)
/


drop index parent_ITTTZ_DEF
/
create index MTZ.parent_ITTTZ_DEF on MTZ.ITTTZ_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ITTTZ_LINES
/
create index MTZ.parent_ITTTZ_LINES on MTZ.ITTTZ_LINES(&quot;INSTANCEID&quot;)
/


drop index parent_ITT2OPT_DEF
/
create index MTZ.parent_ITT2OPT_DEF on MTZ.ITT2OPT_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOUT_SRV
/
create index MTZ.parent_ITTOUT_SRV on MTZ.ITTOUT_SRV(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOUT_DEF
/
create index MTZ.parent_ITTOUT_DEF on MTZ.ITTOUT_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOUT_EPL
/
create index MTZ.parent_ITTOUT_EPL on MTZ.ITTOUT_EPL(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOUT_LINES
/
create index MTZ.parent_ITTOUT_LINES on MTZ.ITTOUT_LINES(&quot;INSTANCEID&quot;)
/


drop index parent_ITTOUT_PALET
/
create index MTZ.parent_ITTOUT_PALET on MTZ.ITTOUT_PALET(ParentStructRowID)
/


drop index parent_ITTIN_QLINE
/
create index MTZ.parent_ITTIN_QLINE on MTZ.ITTIN_QLINE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTIN_PALET
/
create index MTZ.parent_ITTIN_PALET on MTZ.ITTIN_PALET(ParentStructRowID)
/


drop index parent_ITTIN_SRV
/
create index MTZ.parent_ITTIN_SRV on MTZ.ITTIN_SRV(&quot;INSTANCEID&quot;)
/


drop index parent_ITTIN_DEF
/
create index MTZ.parent_ITTIN_DEF on MTZ.ITTIN_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_ITTIN_EPL
/
create index MTZ.parent_ITTIN_EPL on MTZ.ITTIN_EPL(&quot;INSTANCEID&quot;)
/


drop index parent_ITTSSCC_LINE
/
create index MTZ.parent_ITTSSCC_LINE on MTZ.ITTSSCC_LINE(&quot;INSTANCEID&quot;)
/


drop index parent_ITTSSCC_DEF
/
create index MTZ.parent_ITTSSCC_DEF on MTZ.ITTSSCC_DEF(&quot;INSTANCEID&quot;)
/


drop index parent_WorkPlace
/
create index MTZ.parent_WorkPlace on MTZ.WorkPlace(&quot;INSTANCEID&quot;)
/


drop index parent_EntryPoints
/
create index MTZ.parent_EntryPoints on MTZ.EntryPoints(&quot;INSTANCEID&quot;)
/


drop index parent_EPFilterLink
/
create index MTZ.parent_EPFilterLink on MTZ.EPFilterLink(ParentStructRowID)
/


drop index parent_ARMTypes
/
create index MTZ.parent_ARMTypes on MTZ.ARMTypes(&quot;INSTANCEID&quot;)
/


drop index parent_ARMJournal
/
create index MTZ.parent_ARMJournal on MTZ.ARMJournal(&quot;INSTANCEID&quot;)
/


drop index parent_ARMJRNLADD
/
create index MTZ.parent_ARMJRNLADD on MTZ.ARMJRNLADD(ParentStructRowID)
/


drop index parent_ARMJRNLREP
/
create index MTZ.parent_ARMJRNLREP on MTZ.ARMJRNLREP(ParentStructRowID)
/


drop index parent_ARMJRNLRUN
/
create index MTZ.parent_ARMJRNLRUN on MTZ.ARMJRNLRUN(ParentStructRowID)
/


drop index parent_WEBS_MAILLIST
/
create index MTZ.parent_WEBS_MAILLIST on MTZ.WEBS_MAILLIST(&quot;INSTANCEID&quot;)
/


drop index parent_WEBS_ROLES
/
create index MTZ.parent_WEBS_ROLES on MTZ.WEBS_ROLES(&quot;INSTANCEID&quot;)
/


drop index parent_WEBS_PAGEDEF
/
create index MTZ.parent_WEBS_PAGEDEF on MTZ.WEBS_PAGEDEF(&quot;INSTANCEID&quot;)
/


drop index parent_WEBS_PICS
/
create index MTZ.parent_WEBS_PICS on MTZ.WEBS_PICS(ParentStructRowID)
/


drop index parent_WEBS_PAGEMENU
/
create index MTZ.parent_WEBS_PAGEMENU on MTZ.WEBS_PAGEMENU(ParentStructRowID)
/


drop index parent_WEBS_PAGECONTENT
/
create index MTZ.parent_WEBS_PAGECONTENT on MTZ.WEBS_PAGECONTENT(ParentStructRowID)
/


drop index parent_WEBS_PAGEPARS
/
create index MTZ.parent_WEBS_PAGEPARS on MTZ.WEBS_PAGEPARS(ParentStructRowID)
/


drop index parent_WEBS_PAGECOMP
/
create index MTZ.parent_WEBS_PAGECOMP on MTZ.WEBS_PAGECOMP(ParentStructRowID)
/


drop index parent_TablePart
/
create index MTZ.parent_TablePart on MTZ.TablePart(ParentStructRowID)
/


drop index parent_ReplaceValues
/
create index MTZ.parent_ReplaceValues on MTZ.ReplaceValues(ParentStructRowID)
/


drop index parent_DenyEdit
/
create index MTZ.parent_DenyEdit on MTZ.DenyEdit(ParentStructRowID)
/


drop index parent_DenyVisible
/
create index MTZ.parent_DenyVisible on MTZ.DenyVisible(ParentStructRowID)
/


drop index parent_AllowEditFieldValues
/
create index MTZ.parent_AllowEditFieldValues on MTZ.AllowEditFieldValues(ParentStructRowID)
/


drop index parent_ComboFields
/
create index MTZ.parent_ComboFields on MTZ.ComboFields(ParentStructRowID)
/


drop index parent_WEBS_USERS
/
create index MTZ.parent_WEBS_USERS on MTZ.WEBS_USERS(&quot;INSTANCEID&quot;)
/


drop index parent_WEBS_ANKETA
/
create index MTZ.parent_WEBS_ANKETA on MTZ.WEBS_ANKETA(&quot;INSTANCEID&quot;)
/


drop index parent_WEBS_QUESTIONS
/
create index MTZ.parent_WEBS_QUESTIONS on MTZ.WEBS_QUESTIONS(ParentStructRowID)
/


drop index parent_WEBS_ANSWERS
/
create index MTZ.parent_WEBS_ANSWERS on MTZ.WEBS_ANSWERS(ParentStructRowID)
/


drop index parent_WEBS_DDOC
/
create index MTZ.parent_WEBS_DDOC on MTZ.WEBS_DDOC(&quot;INSTANCEID&quot;)
/


drop index parent_WEBS_NEWS
/
create index MTZ.parent_WEBS_NEWS on MTZ.WEBS_NEWS(&quot;INSTANCEID&quot;)
/


drop index parent_NEWS_PICS
/
create index MTZ.parent_NEWS_PICS on MTZ.NEWS_PICS(ParentStructRowID)
/


"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Functions.Header" File=""><BlockHolder BlockName="--body" BlockCode=" 

 create or replace package Func as

  function instance_BRIEF_F  (
 ainstanceid CHAR
)return varchar2;


 function SrvMessageInfo_BRIEF_F  (
 aSrvMessageInfoid CHAR
) return varchar2;


 function STDMail_To_BRIEF_F  (
 aSTDMail_Toid CHAR
) return varchar2;


 function STDMail_Attach_BRIEF_F  (
 aSTDMail_Attachid CHAR
) return varchar2;


 function STDMail_Info_BRIEF_F  (
 aSTDMail_Infoid CHAR
) return varchar2;


 function ITTOPT_MOVE_BRIEF_F  (
 aITTOPT_MOVEid CHAR
) return varchar2;


 function ITTOPT_DEF_BRIEF_F  (
 aITTOPT_DEFid CHAR
) return varchar2;


 function Num_zones_BRIEF_F  (
 aNum_zonesid CHAR
) return varchar2;


 function Num_Values_BRIEF_F  (
 aNum_Valuesid CHAR
) return varchar2;


 function Num_head_BRIEF_F  (
 aNum_headid CHAR
) return varchar2;


 function FilterFieldGroup_BRIEF_F  (
 aFilterFieldGroupid CHAR
) return varchar2;


 function FileterField_BRIEF_F  (
 aFileterFieldid CHAR
) return varchar2;


 function Filters_BRIEF_F  (
 aFiltersid CHAR
) return varchar2;


 function StateAction_BRIEF_F  (
 aStateActionid CHAR
) return varchar2;


 function WEBSDIC_QTYPE_BRIEF_F  (
 aWEBSDIC_QTYPEid CHAR
) return varchar2;


 function WEBSDIC_DEF_BRIEF_F  (
 aWEBSDIC_DEFid CHAR
) return varchar2;


 function WEBSDIC_PAGETYPE_BRIEF_F  (
 aWEBSDIC_PAGETYPEid CHAR
) return varchar2;


 function MTZ2JOB_DEF_BRIEF_F  (
 aMTZ2JOB_DEFid CHAR
) return varchar2;


 function REPD_LOCKED_BRIEF_F  (
 aREPD_LOCKEDid CHAR
) return varchar2;


 function REPD_RequestQuery_BRIEF_F  (
 aREPD_RequestQueryid CHAR
) return varchar2;


 function REPD_ResQueryRcv_BRIEF_F  (
 aREPD_ResQueryRcvid CHAR
) return varchar2;


 function REPD_PROV_BRIEF_F  (
 aREPD_PROVid CHAR
) return varchar2;


 function REPD_SRV_BRIEF_F  (
 aREPD_SRVid CHAR
) return varchar2;


 function REPD_SNDTO_BRIEF_F  (
 aREPD_SNDTOid CHAR
) return varchar2;


 function REPD_CONST_BRIEF_F  (
 aREPD_CONSTid CHAR
) return varchar2;


 function REPD_REPTYPE_BRIEF_F  (
 aREPD_REPTYPEid CHAR
) return varchar2;


 function REPD_SendQ_BRIEF_F  (
 aREPD_SendQid CHAR
) return varchar2;


 function REPD_RecvQ_BRIEF_F  (
 aREPD_RecvQid CHAR
) return varchar2;


 function ST_MAIN_BRIEF_F  (
 aST_MAINid CHAR
) return varchar2;


 function ST_DEF_BRIEF_F  (
 aST_DEFid CHAR
) return varchar2;


 function ST_PAGES_BRIEF_F  (
 aST_PAGESid CHAR
) return varchar2;


 function ITTD_MOROZ_BRIEF_F  (
 aITTD_MOROZid CHAR
) return varchar2;


 function ITTD_RULE_BRIEF_F  (
 aITTD_RULEid CHAR
) return varchar2;


 function ITTD_PLTYPE_BRIEF_F  (
 aITTD_PLTYPEid CHAR
) return varchar2;


 function ITTD_FACTORY_BRIEF_F  (
 aITTD_FACTORYid CHAR
) return varchar2;


 function ITTD_ZTYPE_BRIEF_F  (
 aITTD_ZTYPEid CHAR
) return varchar2;


 function ITTD_GTYPE_BRIEF_F  (
 aITTD_GTYPEid CHAR
) return varchar2;


 function ITTD_KILLPLACE_BRIEF_F  (
 aITTD_KILLPLACEid CHAR
) return varchar2;


 function ITTD_COUNTRY_BRIEF_F  (
 aITTD_COUNTRYid CHAR
) return varchar2;


 function ITTD_QTYPE_BRIEF_F  (
 aITTD_QTYPEid CHAR
) return varchar2;


 function ITTD_CAMERA_BRIEF_F  (
 aITTD_CAMERAid CHAR
) return varchar2;


 function ITTD_SRV_BRIEF_F  (
 aITTD_SRVid CHAR
) return varchar2;


 function ITTD_ATYPE_BRIEF_F  (
 aITTD_ATYPEid CHAR
) return varchar2;


 function ITTD_OPTTYPE_BRIEF_F  (
 aITTD_OPTTYPEid CHAR
) return varchar2;


 function ITTD_EMAIL_BRIEF_F  (
 aITTD_EMAILid CHAR
) return varchar2;


 function ITTD_PART_BRIEF_F  (
 aITTD_PARTid CHAR
) return varchar2;


 function ITTPL_DEF_BRIEF_F  (
 aITTPL_DEFid CHAR
) return varchar2;


 function ITTOP_OPLNK_BRIEF_F  (
 aITTOP_OPLNKid CHAR
) return varchar2;


 function ITTOP_OPKAM_BRIEF_F  (
 aITTOP_OPKAMid CHAR
) return varchar2;


 function ITTOP_KLNK_BRIEF_F  (
 aITTOP_KLNKid CHAR
) return varchar2;


 function ITTOP_KCAM_BRIEF_F  (
 aITTOP_KCAMid CHAR
) return varchar2;


 function ITTOP_KCLI_BRIEF_F  (
 aITTOP_KCLIid CHAR
) return varchar2;


 function ITTFN_MAX_BRIEF_F  (
 aITTFN_MAXid CHAR
) return varchar2;


 function STDJournlaExtInfo_BRIEF_F  (
 aSTDJournlaExtInfoid CHAR
) return varchar2;


 function STDJournalExtParam_BRIEF_F  (
 aSTDJournalExtParamid CHAR
) return varchar2;


 function STDJournalExtFlt_BRIEF_F  (
 aSTDJournalExtFltid CHAR
) return varchar2;


 function STDJournalExtField_BRIEF_F  (
 aSTDJournalExtFieldid CHAR
) return varchar2;


 function Ext_Photos_BRIEF_F  (
 aExt_Photosid CHAR
) return varchar2;


 function Ext_Photo_Call_BRIEF_F  (
 aExt_Photo_Callid CHAR
) return varchar2;


 function FIELDTYPE_BRIEF_F  (
 aFIELDTYPEid CHAR
) return varchar2;


 function FIELDTYPEMAP_BRIEF_F  (
 aFIELDTYPEMAPid CHAR
) return varchar2;


 function ENUMITEM_BRIEF_F  (
 aENUMITEMid CHAR
) return varchar2;


 function SHAREDMETHOD_BRIEF_F  (
 aSHAREDMETHODid CHAR
) return varchar2;


 function SCRIPT_BRIEF_F  (
 aSCRIPTid CHAR
) return varchar2;


 function PARAMETERS_BRIEF_F  (
 aPARAMETERSid CHAR
) return varchar2;


 function OBJECTTYPE_BRIEF_F  (
 aOBJECTTYPEid CHAR
) return varchar2;


 function PART_BRIEF_F  (
 aPARTid CHAR
) return varchar2;


 function PARTMENU_BRIEF_F  (
 aPARTMENUid CHAR
) return varchar2;


 function PARTPARAMMAP_BRIEF_F  (
 aPARTPARAMMAPid CHAR
) return varchar2;


 function FIELD_BRIEF_F  (
 aFIELDid CHAR
) return varchar2;


 function FIELDVALIDATOR_BRIEF_F  (
 aFIELDVALIDATORid CHAR
) return varchar2;


 function FIELDMENU_BRIEF_F  (
 aFIELDMENUid CHAR
) return varchar2;


 function FIELDPARAMMAP_BRIEF_F  (
 aFIELDPARAMMAPid CHAR
) return varchar2;


 function FldExtenders_BRIEF_F  (
 aFldExtendersid CHAR
) return varchar2;


 function FIELDEXPRESSION_BRIEF_F  (
 aFIELDEXPRESSIONid CHAR
) return varchar2;


 function DINAMICFILTERSCRIPT_BRIEF_F  (
 aDINAMICFILTERSCRIPTid CHAR
) return varchar2;


 function FIELDSRCDEF_BRIEF_F  (
 aFIELDSRCDEFid CHAR
) return varchar2;


 function PARTVIEW_BRIEF_F  (
 aPARTVIEWid CHAR
) return varchar2;


 function ViewColumn_BRIEF_F  (
 aViewColumnid CHAR
) return varchar2;


 function PARTVIEW_LNK_BRIEF_F  (
 aPARTVIEW_LNKid CHAR
) return varchar2;


 function ExtenderInterface_BRIEF_F  (
 aExtenderInterfaceid CHAR
) return varchar2;


 function VALIDATOR_BRIEF_F  (
 aVALIDATORid CHAR
) return varchar2;


 function UNIQUECONSTRAINT_BRIEF_F  (
 aUNIQUECONSTRAINTid CHAR
) return varchar2;


 function CONSTRAINTFIELD_BRIEF_F  (
 aCONSTRAINTFIELDid CHAR
) return varchar2;


 function INSTANCEVALIDATOR_BRIEF_F  (
 aINSTANCEVALIDATORid CHAR
) return varchar2;


 function OBJSTATUS_BRIEF_F  (
 aOBJSTATUSid CHAR
) return varchar2;


 function NEXTSTATE_BRIEF_F  (
 aNEXTSTATEid CHAR
) return varchar2;


 function OBJECTMODE_BRIEF_F  (
 aOBJECTMODEid CHAR
) return varchar2;


 function STRUCTRESTRICTION_BRIEF_F  (
 aSTRUCTRESTRICTIONid CHAR
) return varchar2;


 function FIELDRESTRICTION_BRIEF_F  (
 aFIELDRESTRICTIONid CHAR
) return varchar2;


 function METHODRESTRICTION_BRIEF_F  (
 aMETHODRESTRICTIONid CHAR
) return varchar2;


 function TYPEMENU_BRIEF_F  (
 aTYPEMENUid CHAR
) return varchar2;


 function MTZAPP_BRIEF_F  (
 aMTZAPPid CHAR
) return varchar2;


 function ParentPackage_BRIEF_F  (
 aParentPackageid CHAR
) return varchar2;


 function GENPACKAGE_BRIEF_F  (
 aGENPACKAGEid CHAR
) return varchar2;


 function GENERATOR_TARGET_BRIEF_F  (
 aGENERATOR_TARGETid CHAR
) return varchar2;


 function GENMANUALCODE_BRIEF_F  (
 aGENMANUALCODEid CHAR
) return varchar2;


 function GENCONTROLS_BRIEF_F  (
 aGENCONTROLSid CHAR
) return varchar2;


 function GENREFERENCE_BRIEF_F  (
 aGENREFERENCEid CHAR
) return varchar2;


 function LocalizeInfo_BRIEF_F  (
 aLocalizeInfoid CHAR
) return varchar2;


 function ITTNO_YC_BRIEF_F  (
 aITTNO_YCid CHAR
) return varchar2;


 function ITTNO_CMN_BRIEF_F  (
 aITTNO_CMNid CHAR
) return varchar2;


 function ITTNO_ZC_BRIEF_F  (
 aITTNO_ZCid CHAR
) return varchar2;


 function InfoStoreDef_BRIEF_F  (
 aInfoStoreDefid CHAR
) return varchar2;


 function Folder_BRIEF_F  (
 aFolderid CHAR
) return varchar2;


 function Shortcut_BRIEF_F  (
 aShortcutid CHAR
) return varchar2;


 function Reports_BRIEF_F  (
 aReportsid CHAR
) return varchar2;


 function RPTStruct_BRIEF_F  (
 aRPTStructid CHAR
) return varchar2;


 function RPTFields_BRIEF_F  (
 aRPTFieldsid CHAR
) return varchar2;


 function RPTFormula_BRIEF_F  (
 aRPTFormulaid CHAR
) return varchar2;


 function ITTPR_DEF_BRIEF_F  (
 aITTPR_DEFid CHAR
) return varchar2;


 function MTZExt_def_BRIEF_F  (
 aMTZExt_defid CHAR
) return varchar2;


 function MTZExtRel_BRIEF_F  (
 aMTZExtRelid CHAR
) return varchar2;


 function ITTCS_LIN_BRIEF_F  (
 aITTCS_LINid CHAR
) return varchar2;


 function ITTCS_DEF_BRIEF_F  (
 aITTCS_DEFid CHAR
) return varchar2;


 function SysLog_BRIEF_F  (
 aSysLogid CHAR
) return varchar2;


 function the_Session_BRIEF_F  (
 athe_Sessionid CHAR
) return varchar2;


 function LogReader_BRIEF_F  (
 aLogReaderid CHAR
) return varchar2;


 function Verb_BRIEF_F  (
 aVerbid CHAR
) return varchar2;


 function Users_BRIEF_F  (
 aUsersid CHAR
) return varchar2;


 function Groups_BRIEF_F  (
 aGroupsid CHAR
) return varchar2;


 function GroupUser_BRIEF_F  (
 aGroupUserid CHAR
) return varchar2;


 function MTZSEC_RIGHT_BRIEF_F  (
 aMTZSEC_RIGHTid CHAR
) return varchar2;


 function ROLES_USER_BRIEF_F  (
 aROLES_USERid CHAR
) return varchar2;


 function ROLES_MAP_BRIEF_F  (
 aROLES_MAPid CHAR
) return varchar2;


 function ROLES_DOC_BRIEF_F  (
 aROLES_DOCid CHAR
) return varchar2;


 function ROLES_DOC_STATE_BRIEF_F  (
 aROLES_DOC_STATEid CHAR
) return varchar2;


 function ROLES_DEF_BRIEF_F  (
 aROLES_DEFid CHAR
) return varchar2;


 function ROLES_REPORTS_BRIEF_F  (
 aROLES_REPORTSid CHAR
) return varchar2;


 function ROLES_WP_BRIEF_F  (
 aROLES_WPid CHAR
) return varchar2;


 function ROLES_ACT_BRIEF_F  (
 aROLES_ACTid CHAR
) return varchar2;


 function JournalColumn_BRIEF_F  (
 aJournalColumnid CHAR
) return varchar2;


 function JColumnSource_BRIEF_F  (
 aJColumnSourceid CHAR
) return varchar2;


 function Journal_BRIEF_F  (
 aJournalid CHAR
) return varchar2;


 function JournalSrc_BRIEF_F  (
 aJournalSrcid CHAR
) return varchar2;


 function MTZ_Inst_Build_BRIEF_F  (
 aMTZ_Inst_Buildid CHAR
) return varchar2;


 function MTZ_Inst_Build_Sec_BRIEF_F  (
 aMTZ_Inst_Build_Secid CHAR
) return varchar2;


 function MTZ_Inst_Section_BRIEF_F  (
 aMTZ_Inst_Sectionid CHAR
) return varchar2;


 function MTZ_Inst_Sec_Files_BRIEF_F  (
 aMTZ_Inst_Sec_Filesid CHAR
) return varchar2;


 function MTZ_Inst_Common_BRIEF_F  (
 aMTZ_Inst_Commonid CHAR
) return varchar2;


 function ITTTZ_DEF_BRIEF_F  (
 aITTTZ_DEFid CHAR
) return varchar2;


 function ITTTZ_LINES_BRIEF_F  (
 aITTTZ_LINESid CHAR
) return varchar2;


 function ITT2OPT_DEF_BRIEF_F  (
 aITT2OPT_DEFid CHAR
) return varchar2;


 function ITTOUT_SRV_BRIEF_F  (
 aITTOUT_SRVid CHAR
) return varchar2;


 function ITTOUT_DEF_BRIEF_F  (
 aITTOUT_DEFid CHAR
) return varchar2;


 function ITTOUT_EPL_BRIEF_F  (
 aITTOUT_EPLid CHAR
) return varchar2;


 function ITTOUT_LINES_BRIEF_F  (
 aITTOUT_LINESid CHAR
) return varchar2;


 function ITTOUT_PALET_BRIEF_F  (
 aITTOUT_PALETid CHAR
) return varchar2;


 function ITTIN_QLINE_BRIEF_F  (
 aITTIN_QLINEid CHAR
) return varchar2;


 function ITTIN_PALET_BRIEF_F  (
 aITTIN_PALETid CHAR
) return varchar2;


 function ITTIN_SRV_BRIEF_F  (
 aITTIN_SRVid CHAR
) return varchar2;


 function ITTIN_DEF_BRIEF_F  (
 aITTIN_DEFid CHAR
) return varchar2;


 function ITTIN_EPL_BRIEF_F  (
 aITTIN_EPLid CHAR
) return varchar2;


 function ITTSSCC_LINE_BRIEF_F  (
 aITTSSCC_LINEid CHAR
) return varchar2;


 function ITTSSCC_DEF_BRIEF_F  (
 aITTSSCC_DEFid CHAR
) return varchar2;


 function WorkPlace_BRIEF_F  (
 aWorkPlaceid CHAR
) return varchar2;


 function EntryPoints_BRIEF_F  (
 aEntryPointsid CHAR
) return varchar2;


 function EPFilterLink_BRIEF_F  (
 aEPFilterLinkid CHAR
) return varchar2;


 function ARMTypes_BRIEF_F  (
 aARMTypesid CHAR
) return varchar2;


 function ARMJournal_BRIEF_F  (
 aARMJournalid CHAR
) return varchar2;


 function ARMJRNLADD_BRIEF_F  (
 aARMJRNLADDid CHAR
) return varchar2;


 function ARMJRNLREP_BRIEF_F  (
 aARMJRNLREPid CHAR
) return varchar2;


 function ARMJRNLRUN_BRIEF_F  (
 aARMJRNLRUNid CHAR
) return varchar2;


 function WEBS_MAILLIST_BRIEF_F  (
 aWEBS_MAILLISTid CHAR
) return varchar2;


 function WEBS_ROLES_BRIEF_F  (
 aWEBS_ROLESid CHAR
) return varchar2;


 function WEBS_PAGEDEF_BRIEF_F  (
 aWEBS_PAGEDEFid CHAR
) return varchar2;


 function WEBS_PICS_BRIEF_F  (
 aWEBS_PICSid CHAR
) return varchar2;


 function WEBS_PAGEMENU_BRIEF_F  (
 aWEBS_PAGEMENUid CHAR
) return varchar2;


 function WEBS_PAGECONTENT_BRIEF_F  (
 aWEBS_PAGECONTENTid CHAR
) return varchar2;


 function WEBS_PAGEPARS_BRIEF_F  (
 aWEBS_PAGEPARSid CHAR
) return varchar2;


 function WEBS_PAGECOMP_BRIEF_F  (
 aWEBS_PAGECOMPid CHAR
) return varchar2;


 function TablePart_BRIEF_F  (
 aTablePartid CHAR
) return varchar2;


 function ReplaceValues_BRIEF_F  (
 aReplaceValuesid CHAR
) return varchar2;


 function DenyEdit_BRIEF_F  (
 aDenyEditid CHAR
) return varchar2;


 function DenyVisible_BRIEF_F  (
 aDenyVisibleid CHAR
) return varchar2;


 function AllowEditFieldValues_BRIEF_F  (
 aAllowEditFieldValuesid CHAR
) return varchar2;


 function ComboFields_BRIEF_F  (
 aComboFieldsid CHAR
) return varchar2;


 function WEBS_USERS_BRIEF_F  (
 aWEBS_USERSid CHAR
) return varchar2;


 function WEBS_ANKETA_BRIEF_F  (
 aWEBS_ANKETAid CHAR
) return varchar2;


 function WEBS_QUESTIONS_BRIEF_F  (
 aWEBS_QUESTIONSid CHAR
) return varchar2;


 function WEBS_ANSWERS_BRIEF_F  (
 aWEBS_ANSWERSid CHAR
) return varchar2;


 function WEBS_DDOC_BRIEF_F  (
 aWEBS_DDOCid CHAR
) return varchar2;


 function WEBS_NEWS_BRIEF_F  (
 aWEBS_NEWSid CHAR
) return varchar2;


 function NEWS_PICS_BRIEF_F  (
 aNEWS_PICSid CHAR
) return varchar2;

 end Func;

/

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Views" File=""><BlockHolder BlockName="--body" BlockCode=" 

create or replace view v_INSTANCE as
select instance.*,objstatus.name statusname,objstatus.IsArchive
from instance left join objstatus on instance.status=objstatus.objstatusid
/

create or replace view V_AUTOSrvMessageInfo as 
select   SrvMessageInfoID
, 
SrvMessageInfo.MsgInfo 
SrvMessageInfo_MsgInfo 
, 
SrvMessageInfo.msgDate 
SrvMessageInfo_msgDate 
, 
 SrvMessageInfo.ForUser  
SrvMessageInfo_ForUser_ID, 
 MTZ.Func.Users_BRIEF_F(SrvMessageInfo.ForUser) 
SrvMessageInfo_ForUser 
, 
 SrvMessageInfo.TheDocument  
SrvMessageInfo_TheDocument_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(SrvMessageInfo.TheDocument) 
SrvMessageInfo_TheDocument 
, 
SrvMessageInfo.ReadTime 
SrvMessageInfo_ReadTime 
, SrvMessageInfo.InstanceID InstanceID 
, SrvMessageInfo.SrvMessageInfoID ID 
, 'SrvMessageInfo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SrvMessageInfo
 join INSTANCE on SrvMessageInfo.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewSTDMail_Info as 
select   STDMail_InfoID
, 
 STDMail_Info.IsDelete  
STDMail_Info_IsDelete_VAL, 
 decode(STDMail_Info.IsDelete 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
STDMail_Info_IsDelete 
, 
STDMail_Info.TheFromName 
STDMail_Info_TheFromName 
, 
STDMail_Info.SentDT 
STDMail_Info_SentDT 
, 
 STDMail_Info.Sended  
STDMail_Info_Sended_VAL, 
 decode(STDMail_Info.Sended 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
STDMail_Info_Sended 
, 
STDMail_Info.CreatedDT 
STDMail_Info_CreatedDT 
, 
STDMail_Info.TheBody 
STDMail_Info_TheBody 
, 
STDMail_Info.Subject 
STDMail_Info_Subject 
, STDMail_Info.InstanceID InstanceID 
, STDMail_Info.STDMail_InfoID ID 
, 'STDMail_Info' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDMail_Info
 join INSTANCE on STDMail_Info.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTOPT_ITTOPT_MOVE as 
select   ITTOPT_MOVEID
, 
ITTOPT_MOVE.ThePalletteNum 
ITTOPT_MOVE_ThePalletteNum 
, 
ITTOPT_DEF.DateToOptimize 
ITTOPT_DEF_DateToOptimize 
, 
ITTOPT_DEF.Factory 
ITTOPT_DEF_Factory 
, 
ITTOPT_DEF.made_country 
ITTOPT_DEF_made_country 
, 
ITTOPT_DEF.OPtDate 
ITTOPT_DEF_OPtDate 
, 
 ITTOPT_DEF.OptType  
ITTOPT_DEF_OptType_ID, 
 MTZ.Func.ITTD_OPTTYPE_BRIEF_F(ITTOPT_DEF.OptType) 
ITTOPT_DEF_OptType 
, 
ITTOPT_DEF.KILL_NUMBER 
ITTOPT_DEF_KILL_NUMBER 
, 
ITTOPT_DEF.TheClient 
ITTOPT_DEF_TheClient 
, 
ITTOPT_MOVE.sequence 
ITTOPT_MOVE_sequence 
, 
ITTOPT_MOVE.ToLocation 
ITTOPT_MOVE_ToLocation 
, 
ITTOPT_MOVE.FromLocation 
ITTOPT_MOVE_FromLocation 
, 
ITTOPT_DEF.IsBrak 
ITTOPT_DEF_IsBrak 
, 
ITTOPT_DEF.good 
ITTOPT_DEF_good 
, 
 ITTOPT_MOVE.ISMoved  
ITTOPT_MOVE_ISMoved_VAL, 
 decode(ITTOPT_MOVE.ISMoved 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOPT_MOVE_ISMoved 
, ITTOPT_MOVE.InstanceID InstanceID 
, ITTOPT_MOVE.ITTOPT_MOVEID ID 
, 'ITTOPT_MOVE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOPT_MOVE
 join INSTANCE on ITTOPT_MOVE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTOPT_DEF ON ITTOPT_DEF.InstanceID=ITTOPT_MOVE.InstanceID 
/
create or replace view V_AUTOITTOPT_DEF as 
select   ITTOPT_DEFID
, 
ITTOPT_DEF.Factory 
ITTOPT_DEF_Factory 
, 
 ITTOPT_DEF.OptType  
ITTOPT_DEF_OptType_ID, 
 MTZ.Func.ITTD_OPTTYPE_BRIEF_F(ITTOPT_DEF.OptType) 
ITTOPT_DEF_OptType 
, 
ITTOPT_DEF.made_country 
ITTOPT_DEF_made_country 
, 
ITTOPT_DEF.good 
ITTOPT_DEF_good 
, 
ITTOPT_DEF.TheClient 
ITTOPT_DEF_TheClient 
, 
ITTOPT_DEF.OPtDate 
ITTOPT_DEF_OPtDate 
, 
ITTOPT_DEF.KILL_NUMBER 
ITTOPT_DEF_KILL_NUMBER 
, 
ITTOPT_DEF.IsBrak 
ITTOPT_DEF_IsBrak 
, 
ITTOPT_DEF.DateToOptimize 
ITTOPT_DEF_DateToOptimize 
, ITTOPT_DEF.InstanceID InstanceID 
, ITTOPT_DEF.ITTOPT_DEFID ID 
, 'ITTOPT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOPT_DEF
 join INSTANCE on ITTOPT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTONum_zones as 
select   Num_zonesID
, 
Num_zones.ZoneMask 
Num_zones_ZoneMask 
, Num_zones.InstanceID InstanceID 
, Num_zones.Num_zonesID ID 
, 'Num_zones' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_zones
 join INSTANCE on Num_zones.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewSTDNumerator_Num_Values as 
select   Num_ValuesID,Num_zonesID
, 
Num_zones.ZoneMask 
Num_zones_ZoneMask 
, 
Num_Values.the_Value 
Num_Values_Value 
, 
 Num_head.Shema  
Num_head_Shema_VAL, 
 decode(Num_head.Shema 
, 0 ,'Единая зона'
, 1 ,'По году'
, 4 ,'По дню'
, 2 ,'По кварталу'
, 3 ,'По месяцу'
, 10 ,'Произвольные зоны'
, '???') 
Num_head_Shema 
, 
Num_head.Name 
Num_head_Name 
, Num_zones.InstanceID InstanceID 
, Num_Values.Num_ValuesID ID 
, 'Num_Values' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_Values
 join Num_zones on Num_zones.Num_zonesID=Num_Values.ParentStructRowID 
 join INSTANCE on Num_zones.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join Num_head ON Num_head.InstanceID=Num_zones.InstanceID 
/
create or replace view V_AUTONum_Values as 
select   Num_ValuesID,Num_zonesID
, 
Num_Values.the_Value 
Num_Values_the_Value 
, 
Num_Values.OwnerRowID 
Num_Values_OwnerRowID 
, 
Num_Values.OwnerPartName 
Num_Values_OwnerPartName 
, Num_zones.InstanceID InstanceID 
, Num_Values.Num_ValuesID ID 
, 'Num_Values' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_Values
 join Num_zones on Num_zones.Num_zonesID=Num_Values.ParentStructRowID 
 join INSTANCE on Num_zones.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewSTDNumerator_Num_head as 
select   Num_headID
, 
 Num_head.Shema  
Num_head_Shema_VAL, 
 decode(Num_head.Shema 
, 0 ,'Единая зона'
, 1 ,'По году'
, 4 ,'По дню'
, 2 ,'По кварталу'
, 3 ,'По месяцу'
, 10 ,'Произвольные зоны'
, '???') 
Num_head_Shema 
, 
Num_head.Name 
Num_head_Name 
, Num_head.InstanceID InstanceID 
, Num_head.Num_headID ID 
, 'Num_head' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_head
 join INSTANCE on Num_head.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTONum_head as 
select   Num_headID
, 
Num_head.Name 
Num_head_Name 
, 
 Num_head.Shema  
Num_head_Shema_VAL, 
 decode(Num_head.Shema 
, 0 ,'Единая зона'
, 1 ,'По году'
, 4 ,'По дню'
, 2 ,'По кварталу'
, 3 ,'По месяцу'
, 10 ,'Произвольные зоны'
, '???') 
Num_head_Shema 
, Num_head.InstanceID InstanceID 
, Num_head.Num_headID ID 
, 'Num_head' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Num_head
 join INSTANCE on Num_head.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFilterFieldGroup as 
select   FilterFieldGroupID
, 
 FilterFieldGroup.AllowIgnore  
FilterFieldGroup_AllowIgnore_VAL, 
 decode(FilterFieldGroup.AllowIgnore 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FilterFieldGroup_AllowIgnore 
, 
FilterFieldGroup.sequence 
FilterFieldGroup_sequence 
, 
FilterFieldGroup.Name 
FilterFieldGroup_Name 
, 
FilterFieldGroup.Caption 
FilterFieldGroup_Caption 
, FilterFieldGroup.InstanceID InstanceID 
, FilterFieldGroup.FilterFieldGroupID ID 
, 'FilterFieldGroup' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FilterFieldGroup
 join INSTANCE on FilterFieldGroup.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFileterField as 
select   FileterFieldID,FilterFieldGroupID
, 
 FileterField.ValueArray  
FileterField_ValueArray_VAL, 
 decode(FileterField.ValueArray 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FileterField_ValueArray 
, 
FileterField.sequence 
FileterField_sequence 
, 
 FileterField.RefToType  
FileterField_RefToType_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(FileterField.RefToType) 
FileterField_RefToType 
, 
 FileterField.RefType  
FileterField_RefType_VAL, 
 decode(FileterField.RefType 
, 2 ,'На строку раздела'
, 3 ,'На источник данных'
, 0 ,'Скалярное поле ( не ссылка)'
, 1 ,'На объект '
, '???') 
FileterField_RefType 
, 
FileterField.Caption 
FileterField_Caption 
, 
 FileterField.RefToPart  
FileterField_RefToPart_ID, 
 MTZ.Func.PART_BRIEF_F(FileterField.RefToPart) 
FileterField_RefToPart 
, 
FileterField.Name 
FileterField_Name 
, 
FileterField.FieldSize 
FileterField_FieldSize 
, 
 FileterField.FieldType  
FileterField_FieldType_ID, 
 MTZ.Func.FIELDTYPE_BRIEF_F(FileterField.FieldType) 
FileterField_FieldType 
, FilterFieldGroup.InstanceID InstanceID 
, FileterField.FileterFieldID ID 
, 'FileterField' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FileterField
 join FilterFieldGroup on FilterFieldGroup.FilterFieldGroupID=FileterField.ParentStructRowID 
 join INSTANCE on FilterFieldGroup.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZFltr_Filters as 
select   FiltersID
, 
Filters.TheCaption 
Filters_TheCaption 
, 
Filters.Name 
Filters_Name 
, Filters.InstanceID InstanceID 
, Filters.FiltersID ID 
, 'Filters' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Filters
 join INSTANCE on Filters.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFilters as 
select   FiltersID
, 
Filters.TheComment 
Filters_TheComment 
, 
Filters.TheCaption 
Filters_TheCaption 
, 
Filters.Name 
Filters_Name 
, Filters.InstanceID InstanceID 
, Filters.FiltersID ID 
, 'Filters' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Filters
 join INSTANCE on Filters.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOStateAction as 
select   StateActionID
, 
 StateAction.NewSecurityStyle  
StateAction_NewSecurityStyle_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(StateAction.NewSecurityStyle) 
StateAction_NewSecurityStyle 
, 
StateAction.ActionScript 
StateAction_ActionScript 
, 
 StateAction.OnDocStatus  
StateAction_OnDocStatus_ID, 
 MTZ.Func.OBJSTATUS_BRIEF_F(StateAction.OnDocStatus) 
StateAction_OnDocStatus 
, 
StateAction.LibraryFile 
StateAction_LibraryFile 
, 
 StateAction.ClearSecurity  
StateAction_ClearSecurity_VAL, 
 decode(StateAction.ClearSecurity 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
StateAction_ClearSecurity 
, 
StateAction.ActionClass 
StateAction_ActionClass 
, StateAction.InstanceID InstanceID 
, StateAction.StateActionID ID 
, 'StateAction' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from StateAction
 join INSTANCE on StateAction.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZ2JOB_DEF as 
select   MTZ2JOB_DEFID
, 
MTZ2JOB_DEF.ProcessDate 
MTZ2JOB_DEF_ProcessDate 
, 
MTZ2JOB_DEF.EventDate 
MTZ2JOB_DEF_EventDate 
, 
 MTZ2JOB_DEF.ThruObject  
MTZ2JOB_DEF_ThruObject_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(MTZ2JOB_DEF.ThruObject) 
MTZ2JOB_DEF_ThruObject 
, 
MTZ2JOB_DEF.ThruState 
MTZ2JOB_DEF_ThruState 
, 
MTZ2JOB_DEF.NextState 
MTZ2JOB_DEF_NextState 
, 
MTZ2JOB_DEF.EvenType 
MTZ2JOB_DEF_EvenType 
, 
 MTZ2JOB_DEF.Processed  
MTZ2JOB_DEF_Processed_VAL, 
 decode(MTZ2JOB_DEF.Processed 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ2JOB_DEF_Processed 
, MTZ2JOB_DEF.InstanceID InstanceID 
, MTZ2JOB_DEF.MTZ2JOB_DEFID ID 
, 'MTZ2JOB_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ2JOB_DEF
 join INSTANCE on MTZ2JOB_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_LOCKED as 
select   REPD_LOCKEDID
, 
REPD_LOCKED.FirstTry 
REPD_LOCKED_FirstTry 
, 
REPD_LOCKED.SourceFile 
REPD_LOCKED_SourceFile 
, 
REPD_LOCKED.The_RowID 
REPD_LOCKED_The_RowID 
, 
REPD_LOCKED.ReplicaRowID 
REPD_LOCKED_ReplicaRowID 
, 
REPD_LOCKED.ReplicaPackID 
REPD_LOCKED_ReplicaPackID 
, 
REPD_LOCKED.ObjectType 
REPD_LOCKED_ObjectType 
, 
REPD_LOCKED.LastTry 
REPD_LOCKED_LastTry 
, 
REPD_LOCKED.The_InstanceID 
REPD_LOCKED_The_InstanceID 
, 
REPD_LOCKED.StructType 
REPD_LOCKED_StructType 
, 
REPD_LOCKED.PartNumber 
REPD_LOCKED_PartNumber 
, 
REPD_LOCKED.PartCount 
REPD_LOCKED_PartCount 
, REPD_LOCKED.InstanceID InstanceID 
, REPD_LOCKED.REPD_LOCKEDID ID 
, 'REPD_LOCKED' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_LOCKED
 join INSTANCE on REPD_LOCKED.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_RequestQuery as 
select   REPD_RequestQueryID
, 
REPD_RequestQuery.ObjectID 
REPD_RequestQuery_ObjectID 
, 
 REPD_RequestQuery.Provider  
REPD_RequestQuery_Provider_ID, 
 MTZ.Func.REPD_PROV_BRIEF_F(REPD_RequestQuery.Provider) 
REPD_RequestQuery_Provider 
, 
REPD_RequestQuery.ReqPartName 
REPD_RequestQuery_ReqPartName 
, 
REPD_RequestQuery.ReqTypeName 
REPD_RequestQuery_ReqTypeName 
, 
 REPD_RequestQuery.DestSrv  
REPD_RequestQuery_DestSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_RequestQuery.DestSrv) 
REPD_RequestQuery_DestSrv 
, 
 REPD_RequestQuery.SourceSrv  
REPD_RequestQuery_SourceSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_RequestQuery.SourceSrv) 
REPD_RequestQuery_SourceSrv 
, 
 REPD_RequestQuery.SendRecord  
REPD_RequestQuery_SendRecord_ID, 
 MTZ.Func.REPD_SendQ_BRIEF_F(REPD_RequestQuery.SendRecord) 
REPD_RequestQuery_SendRecord 
, 
REPD_RequestQuery.TheRowID 
REPD_RequestQuery_TheRowID 
, REPD_RequestQuery.InstanceID InstanceID 
, REPD_RequestQuery.REPD_RequestQueryID ID 
, 'REPD_RequestQuery' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_RequestQuery
 join INSTANCE on REPD_RequestQuery.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_ResQueryRcv as 
select   REPD_ResQueryRcvID,REPD_RequestQueryID
, 
 REPD_ResQueryRcv.ReceiveRec  
REPD_ResQueryRcv_ReceiveRec_ID, 
 MTZ.Func.REPD_RecvQ_BRIEF_F(REPD_ResQueryRcv.ReceiveRec) 
REPD_ResQueryRcv_ReceiveRec 
, REPD_RequestQuery.InstanceID InstanceID 
, REPD_ResQueryRcv.REPD_ResQueryRcvID ID 
, 'REPD_ResQueryRcv' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_ResQueryRcv
 join REPD_RequestQuery on REPD_RequestQuery.REPD_RequestQueryID=REPD_ResQueryRcv.ParentStructRowID 
 join INSTANCE on REPD_RequestQuery.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_PROV as 
select   REPD_PROVID
, 
REPD_PROV.AssemblyName 
REPD_PROV_AssemblyName 
, 
REPD_PROV.Name 
REPD_PROV_Name 
, 
REPD_PROV.ClassName 
REPD_PROV_ClassName 
, REPD_PROV.InstanceID InstanceID 
, REPD_PROV.REPD_PROVID ID 
, 'REPD_PROV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_PROV
 join INSTANCE on REPD_PROV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_SRV as 
select   REPD_SRVID
, 
 REPD_SRV.Obj1  
REPD_SRV_Obj1_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(REPD_SRV.Obj1) 
REPD_SRV_Obj1 
, 
REPD_SRV.name 
REPD_SRV_name 
, 
 REPD_SRV.Obj2  
REPD_SRV_Obj2_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(REPD_SRV.Obj2) 
REPD_SRV_Obj2 
, 
 REPD_SRV.Obj3  
REPD_SRV_Obj3_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(REPD_SRV.Obj3) 
REPD_SRV_Obj3 
, REPD_SRV.InstanceID InstanceID 
, REPD_SRV.REPD_SRVID ID 
, 'REPD_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_SRV
 join INSTANCE on REPD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_SNDTO as 
select   REPD_SNDTOID,REPD_SRVID
, 
 REPD_SNDTO.DestSrv  
REPD_SNDTO_DestSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_SNDTO.DestSrv) 
REPD_SNDTO_DestSrv 
, 
REPD_SNDTO.Work_Start 
REPD_SNDTO_Work_Start 
, 
REPD_SNDTO.Work_End 
REPD_SNDTO_Work_End 
, 
 REPD_SNDTO.Provider  
REPD_SNDTO_Provider_ID, 
 MTZ.Func.REPD_PROV_BRIEF_F(REPD_SNDTO.Provider) 
REPD_SNDTO_Provider 
, 
REPD_SNDTO.LastScan 
REPD_SNDTO_LastScan 
, 
REPD_SNDTO.The_Interval 
REPD_SNDTO_The_Interval 
, 
REPD_SNDTO.LastReceive 
REPD_SNDTO_LastReceive 
, 
REPD_SNDTO.Config 
REPD_SNDTO_Config 
, REPD_SRV.InstanceID InstanceID 
, REPD_SNDTO.REPD_SNDTOID ID 
, 'REPD_SNDTO' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_SNDTO
 join REPD_SRV on REPD_SRV.REPD_SRVID=REPD_SNDTO.ParentStructRowID 
 join INSTANCE on REPD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_SendQ as 
select   REPD_SendQID
, 
REPD_SendQ.SendSize 
REPD_SendQ_SendSize 
, 
 REPD_SendQ.Acknowelge  
REPD_SendQ_Acknowelge_VAL, 
 decode(REPD_SendQ.Acknowelge 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_SendQ_Acknowelge 
, 
REPD_SendQ.Config 
REPD_SendQ_Config 
, 
REPD_SendQ.CheckDate 
REPD_SendQ_CheckDate 
, 
REPD_SendQ.FileName 
REPD_SendQ_FileName 
, 
REPD_SendQ.ReplicaPackID 
REPD_SendQ_ReplicaPackID 
, 
 REPD_SendQ.SourceSrv  
REPD_SendQ_SourceSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_SendQ.SourceSrv) 
REPD_SendQ_SourceSrv 
, 
 REPD_SendQ.Provider  
REPD_SendQ_Provider_ID, 
 MTZ.Func.REPD_PROV_BRIEF_F(REPD_SendQ.Provider) 
REPD_SendQ_Provider 
, 
 REPD_SendQ.Sent  
REPD_SendQ_Sent_VAL, 
 decode(REPD_SendQ.Sent 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_SendQ_Sent 
, 
REPD_SendQ.PartNumber 
REPD_SendQ_PartNumber 
, 
REPD_SendQ.PartCount 
REPD_SendQ_PartCount 
, 
 REPD_SendQ.DestSrv  
REPD_SendQ_DestSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_SendQ.DestSrv) 
REPD_SendQ_DestSrv 
, 
REPD_SendQ.SentDate 
REPD_SendQ_SentDate 
, REPD_SendQ.InstanceID InstanceID 
, REPD_SendQ.REPD_SendQID ID 
, 'REPD_SendQ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_SendQ
 join INSTANCE on REPD_SendQ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOREPD_RecvQ as 
select   REPD_RecvQID
, 
 REPD_RecvQ.Provider  
REPD_RecvQ_Provider_ID, 
 MTZ.Func.REPD_PROV_BRIEF_F(REPD_RecvQ.Provider) 
REPD_RecvQ_Provider 
, 
REPD_RecvQ.FileName 
REPD_RecvQ_FileName 
, 
REPD_RecvQ.RecvSize 
REPD_RecvQ_RecvSize 
, 
 REPD_RecvQ.SourceSrv  
REPD_RecvQ_SourceSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_RecvQ.SourceSrv) 
REPD_RecvQ_SourceSrv 
, 
REPD_RecvQ.ReplicaPackID 
REPD_RecvQ_ReplicaPackID 
, 
REPD_RecvQ.TheRowID 
REPD_RecvQ_TheRowID 
, 
REPD_RecvQ.PartNumber 
REPD_RecvQ_PartNumber 
, 
 REPD_RecvQ.Completed  
REPD_RecvQ_Completed_VAL, 
 decode(REPD_RecvQ.Completed 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_RecvQ_Completed 
, 
REPD_RecvQ.PartCount 
REPD_RecvQ_PartCount 
, 
 REPD_RecvQ.Acknowelge  
REPD_RecvQ_Acknowelge_VAL, 
 decode(REPD_RecvQ.Acknowelge 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
REPD_RecvQ_Acknowelge 
, 
 REPD_RecvQ.DestSrv  
REPD_RecvQ_DestSrv_ID, 
 MTZ.Func.REPD_SRV_BRIEF_F(REPD_RecvQ.DestSrv) 
REPD_RecvQ_DestSrv 
, 
REPD_RecvQ.Received 
REPD_RecvQ_Received 
, REPD_RecvQ.InstanceID InstanceID 
, REPD_RecvQ.REPD_RecvQID ID 
, 'REPD_RecvQ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from REPD_RecvQ
 join INSTANCE on REPD_RecvQ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_MOROZ as 
select   ITTD_MOROZID
, 
ITTD_MOROZ.MorozConst 
ITTD_MOROZ_MorozConst 
, 
ITTD_MOROZ.WeightConst 
ITTD_MOROZ_WeightConst 
, 
 ITTD_MOROZ.TheClient  
ITTD_MOROZ_TheClient_ID, 
ITTD_MOROZ.TheClient 
ITTD_MOROZ_TheClient 
, ITTD_MOROZ.InstanceID InstanceID 
, ITTD_MOROZ.ITTD_MOROZID ID 
, 'ITTD_MOROZ' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_MOROZ
 join INSTANCE on ITTD_MOROZ.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_RULE as 
select   ITTD_RULEID
, 
 ITTD_RULE.TheCountry  
ITTD_RULE_TheCountry_VAL, 
 decode(ITTD_RULE.TheCountry 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_RULE_TheCountry 
, 
ITTD_RULE.Name 
ITTD_RULE_Name 
, 
 ITTD_RULE.UseExpDate  
ITTD_RULE_UseExpDate_VAL, 
 decode(ITTD_RULE.UseExpDate 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_RULE_UseExpDate 
, 
 ITTD_RULE.UseBrak  
ITTD_RULE_UseBrak_VAL, 
 decode(ITTD_RULE.UseBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_RULE_UseBrak 
, 
 ITTD_RULE.TheFactory  
ITTD_RULE_TheFactory_VAL, 
 decode(ITTD_RULE.TheFactory 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_RULE_TheFactory 
, 
 ITTD_RULE.UseProduct  
ITTD_RULE_UseProduct_VAL, 
 decode(ITTD_RULE.UseProduct 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_RULE_UseProduct 
, 
 ITTD_RULE.KillPlace  
ITTD_RULE_KillPlace_VAL, 
 decode(ITTD_RULE.KillPlace 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_RULE_KillPlace 
, ITTD_RULE.InstanceID InstanceID 
, ITTD_RULE.ITTD_RULEID ID 
, 'ITTD_RULE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_RULE
 join INSTANCE on ITTD_RULE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_PLTYPE as 
select   ITTD_PLTYPEID
, 
ITTD_PLTYPE.Name 
ITTD_PLTYPE_Name 
, ITTD_PLTYPE.InstanceID InstanceID 
, ITTD_PLTYPE.ITTD_PLTYPEID ID 
, 'ITTD_PLTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_PLTYPE
 join INSTANCE on ITTD_PLTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_PLTYPE as 
select   ITTD_PLTYPEID
, 
ITTD_PLTYPE.Name 
ITTD_PLTYPE_Name 
, ITTD_PLTYPE.InstanceID InstanceID 
, ITTD_PLTYPE.ITTD_PLTYPEID ID 
, 'ITTD_PLTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_PLTYPE
 join INSTANCE on ITTD_PLTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_FACTORY as 
select   ITTD_FACTORYID
, 
ITTD_FACTORY.Code1 
ITTD_FACTORY_Code1 
, 
ITTD_FACTORY.Name 
ITTD_FACTORY_Name 
, 
ITTD_FACTORY.Code2 
ITTD_FACTORY_Code2 
, 
 ITTD_FACTORY.Country  
ITTD_FACTORY_Country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTD_FACTORY.Country) 
ITTD_FACTORY_Country 
, ITTD_FACTORY.InstanceID InstanceID 
, ITTD_FACTORY.ITTD_FACTORYID ID 
, 'ITTD_FACTORY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_FACTORY
 join INSTANCE on ITTD_FACTORY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_FACTORY as 
select   ITTD_FACTORYID
, 
ITTD_FACTORY.Code1 
ITTD_FACTORY_Code1 
, 
ITTD_FACTORY.Code2 
ITTD_FACTORY_Code2 
, 
ITTD_FACTORY.Name 
ITTD_FACTORY_Name 
, 
 ITTD_FACTORY.Country  
ITTD_FACTORY_Country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTD_FACTORY.Country) 
ITTD_FACTORY_Country 
, ITTD_FACTORY.InstanceID InstanceID 
, ITTD_FACTORY.ITTD_FACTORYID ID 
, 'ITTD_FACTORY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_FACTORY
 join INSTANCE on ITTD_FACTORY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_ZTYPE as 
select   ITTD_ZTYPEID
, 
ITTD_ZTYPE.Name 
ITTD_ZTYPE_Name 
, ITTD_ZTYPE.InstanceID InstanceID 
, ITTD_ZTYPE.ITTD_ZTYPEID ID 
, 'ITTD_ZTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_ZTYPE
 join INSTANCE on ITTD_ZTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_ZTYPE as 
select   ITTD_ZTYPEID
, 
ITTD_ZTYPE.Name 
ITTD_ZTYPE_Name 
, ITTD_ZTYPE.InstanceID InstanceID 
, ITTD_ZTYPE.ITTD_ZTYPEID ID 
, 'ITTD_ZTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_ZTYPE
 join INSTANCE on ITTD_ZTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_GTYPE as 
select   ITTD_GTYPEID
, 
ITTD_GTYPE.Name 
ITTD_GTYPE_Name 
, ITTD_GTYPE.InstanceID InstanceID 
, ITTD_GTYPE.ITTD_GTYPEID ID 
, 'ITTD_GTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_GTYPE
 join INSTANCE on ITTD_GTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_GTYPE as 
select   ITTD_GTYPEID
, 
ITTD_GTYPE.Name 
ITTD_GTYPE_Name 
, ITTD_GTYPE.InstanceID InstanceID 
, ITTD_GTYPE.ITTD_GTYPEID ID 
, 'ITTD_GTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_GTYPE
 join INSTANCE on ITTD_GTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_KILLPLACE as 
select   ITTD_KILLPLACEID
, 
ITTD_KILLPLACE.Code2 
ITTD_KILLPLACE_Code2 
, 
ITTD_KILLPLACE.Name 
ITTD_KILLPLACE_Name 
, 
 ITTD_KILLPLACE.Factory  
ITTD_KILLPLACE_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTD_KILLPLACE.Factory) 
ITTD_KILLPLACE_Factory 
, 
ITTD_KILLPLACE.Code1 
ITTD_KILLPLACE_Code1 
, ITTD_KILLPLACE.InstanceID InstanceID 
, ITTD_KILLPLACE.ITTD_KILLPLACEID ID 
, 'ITTD_KILLPLACE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_KILLPLACE
 join INSTANCE on ITTD_KILLPLACE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_KILLPLACE as 
select   ITTD_KILLPLACEID
, 
 ITTD_KILLPLACE.Factory  
ITTD_KILLPLACE_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTD_KILLPLACE.Factory) 
ITTD_KILLPLACE_Factory 
, 
ITTD_KILLPLACE.Name 
ITTD_KILLPLACE_Name 
, 
ITTD_KILLPLACE.Code2 
ITTD_KILLPLACE_Code2 
, 
ITTD_KILLPLACE.Code1 
ITTD_KILLPLACE_Code1 
, ITTD_KILLPLACE.InstanceID InstanceID 
, ITTD_KILLPLACE.ITTD_KILLPLACEID ID 
, 'ITTD_KILLPLACE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_KILLPLACE
 join INSTANCE on ITTD_KILLPLACE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_COUNTRY as 
select   ITTD_COUNTRYID
, 
ITTD_COUNTRY.Code1 
ITTD_COUNTRY_Code1 
, 
ITTD_COUNTRY.Code2 
ITTD_COUNTRY_Code2 
, 
ITTD_COUNTRY.Name 
ITTD_COUNTRY_Name 
, 
ITTD_COUNTRY.TheSupplier 
ITTD_COUNTRY_TheSupplier 
, ITTD_COUNTRY.InstanceID InstanceID 
, ITTD_COUNTRY.ITTD_COUNTRYID ID 
, 'ITTD_COUNTRY' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_COUNTRY
 join INSTANCE on ITTD_COUNTRY.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_QTYPE as 
select   ITTD_QTYPEID
, 
ITTD_QTYPE.Name 
ITTD_QTYPE_Name 
, ITTD_QTYPE.InstanceID InstanceID 
, ITTD_QTYPE.ITTD_QTYPEID ID 
, 'ITTD_QTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_QTYPE
 join INSTANCE on ITTD_QTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_QTYPE as 
select   ITTD_QTYPEID
, 
ITTD_QTYPE.Name 
ITTD_QTYPE_Name 
, ITTD_QTYPE.InstanceID InstanceID 
, ITTD_QTYPE.ITTD_QTYPEID ID 
, 'ITTD_QTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_QTYPE
 join INSTANCE on ITTD_QTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_CAMERA as 
select   ITTD_CAMERAID
, 
ITTD_CAMERA.CameraMask 
ITTD_CAMERA_CameraMask 
, 
ITTD_CAMERA.Name 
ITTD_CAMERA_Name 
, ITTD_CAMERA.InstanceID InstanceID 
, ITTD_CAMERA.ITTD_CAMERAID ID 
, 'ITTD_CAMERA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_CAMERA
 join INSTANCE on ITTD_CAMERA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_SRV as 
select   ITTD_SRVID
, 
ITTD_SRV.Name 
ITTD_SRV_Name 
, 
ITTD_SRV.LinkCode 
ITTD_SRV_LinkCode 
, 
 ITTD_SRV.ForShipping  
ITTD_SRV_ForShipping_VAL, 
 decode(ITTD_SRV.ForShipping 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_SRV_ForShipping 
, 
 ITTD_SRV.ForReceiving  
ITTD_SRV_ForReceiving_VAL, 
 decode(ITTD_SRV.ForReceiving 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_SRV_ForReceiving 
, ITTD_SRV.InstanceID InstanceID 
, ITTD_SRV.ITTD_SRVID ID 
, 'ITTD_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_SRV
 join INSTANCE on ITTD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_SRV as 
select   ITTD_SRVID
, 
ITTD_SRV.LinkCode 
ITTD_SRV_LinkCode 
, 
 ITTD_SRV.ForShipping  
ITTD_SRV_ForShipping_VAL, 
 decode(ITTD_SRV.ForShipping 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_SRV_ForShipping 
, 
 ITTD_SRV.ForReceiving  
ITTD_SRV_ForReceiving_VAL, 
 decode(ITTD_SRV.ForReceiving 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTD_SRV_ForReceiving 
, 
ITTD_SRV.Name 
ITTD_SRV_Name 
, ITTD_SRV.InstanceID InstanceID 
, ITTD_SRV.ITTD_SRVID ID 
, 'ITTD_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_SRV
 join INSTANCE on ITTD_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_ATYPE as 
select   ITTD_ATYPEID
, 
ITTD_ATYPE.Name 
ITTD_ATYPE_Name 
, ITTD_ATYPE.InstanceID InstanceID 
, ITTD_ATYPE.ITTD_ATYPEID ID 
, 'ITTD_ATYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_ATYPE
 join INSTANCE on ITTD_ATYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_ATYPE as 
select   ITTD_ATYPEID
, 
ITTD_ATYPE.Name 
ITTD_ATYPE_Name 
, ITTD_ATYPE.InstanceID InstanceID 
, ITTD_ATYPE.ITTD_ATYPEID ID 
, 'ITTD_ATYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_ATYPE
 join INSTANCE on ITTD_ATYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_OPTTYPE as 
select   ITTD_OPTTYPEID
, 
ITTD_OPTTYPE.Name 
ITTD_OPTTYPE_Name 
, 
ITTD_OPTTYPE.Code 
ITTD_OPTTYPE_Code 
, ITTD_OPTTYPE.InstanceID InstanceID 
, ITTD_OPTTYPE.ITTD_OPTTYPEID ID 
, 'ITTD_OPTTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_OPTTYPE
 join INSTANCE on ITTD_OPTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_PART as 
select   ITTD_PARTID
, 
 ITTD_PART.TheGood  
ITTD_PART_TheGood_ID, 
ITTD_PART.TheGood 
ITTD_PART_TheGood 
, 
ITTD_PART.Name 
ITTD_PART_Name 
, ITTD_PART.InstanceID InstanceID 
, ITTD_PART.ITTD_PARTID ID 
, 'ITTD_PART' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_PART
 join INSTANCE on ITTD_PART.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTD_PART as 
select   ITTD_PARTID
, 
 ITTD_PART.TheGood  
ITTD_PART_TheGood_ID, 
ITTD_PART.TheGood 
ITTD_PART_TheGood 
, 
ITTD_PART.Name 
ITTD_PART_Name 
, ITTD_PART.InstanceID InstanceID 
, ITTD_PART.ITTD_PARTID ID 
, 'ITTD_PART' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTD_PART
 join INSTANCE on ITTD_PART.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTPL_DEF as 
select   ITTPL_DEFID
, 
ITTPL_DEF.CurrentWeightBrutto 
ITTPL_DEF_CurrentWeightBrutto 
, 
ITTPL_DEF.TheNumber 
ITTPL_DEF_TheNumber 
, 
 ITTPL_DEF.PrivatePalet  
ITTPL_DEF_PrivatePalet_VAL, 
 decode(ITTPL_DEF.PrivatePalet 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTPL_DEF_PrivatePalet 
, 
ITTPL_DEF.WDate 
ITTPL_DEF_WDate 
, 
ITTPL_DEF.Code 
ITTPL_DEF_Code 
, 
 ITTPL_DEF.CurrentGood  
ITTPL_DEF_CurrentGood_ID, 
ITTPL_DEF.CurrentGood 
ITTPL_DEF_CurrentGood 
, 
ITTPL_DEF.CaliberQuantity 
ITTPL_DEF_CaliberQuantity 
, 
ITTPL_DEF.CorePalette_ID 
ITTPL_DEF_CorePalette_ID 
, 
ITTPL_DEF.PalKode 
ITTPL_DEF_PalKode 
, 
ITTPL_DEF.CurrentPosition 
ITTPL_DEF_CurrentPosition 
, 
 ITTPL_DEF.Pltype  
ITTPL_DEF_Pltype_ID, 
 MTZ.Func.ITTD_PLTYPE_BRIEF_F(ITTPL_DEF.Pltype) 
ITTPL_DEF_Pltype 
, 
ITTPL_DEF.Weight 
ITTPL_DEF_Weight 
, 
ITTPL_DEF.PackageWeight 
ITTPL_DEF_PackageWeight 
, ITTPL_DEF.InstanceID InstanceID 
, ITTPL_DEF.ITTPL_DEFID ID 
, 'ITTPL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTPL_DEF
 join INSTANCE on ITTPL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTPL_DEF as 
select   ITTPL_DEFID
, 
ITTPL_DEF.CurrentWeightBrutto 
ITTPL_DEF_CurrentWeightBrutto 
, 
ITTPL_DEF.PalKode 
ITTPL_DEF_PalKode 
, 
ITTPL_DEF.CorePalette_ID 
ITTPL_DEF_CorePalette_ID 
, 
ITTPL_DEF.Weight 
ITTPL_DEF_Weight 
, 
ITTPL_DEF.TheNumber 
ITTPL_DEF_TheNumber 
, 
 ITTPL_DEF.PrivatePalet  
ITTPL_DEF_PrivatePalet_VAL, 
 decode(ITTPL_DEF.PrivatePalet 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTPL_DEF_PrivatePalet 
, 
 ITTPL_DEF.CurrentGood  
ITTPL_DEF_CurrentGood_ID, 
ITTPL_DEF.CurrentGood 
ITTPL_DEF_CurrentGood 
, 
ITTPL_DEF.CaliberQuantity 
ITTPL_DEF_CaliberQuantity 
, 
ITTPL_DEF.CurrentPosition 
ITTPL_DEF_CurrentPosition 
, 
ITTPL_DEF.WDate 
ITTPL_DEF_WDate 
, 
ITTPL_DEF.Code 
ITTPL_DEF_Code 
, 
ITTPL_DEF.PackageWeight 
ITTPL_DEF_PackageWeight 
, 
 ITTPL_DEF.Pltype  
ITTPL_DEF_Pltype_ID, 
 MTZ.Func.ITTD_PLTYPE_BRIEF_F(ITTPL_DEF.Pltype) 
ITTPL_DEF_Pltype 
, ITTPL_DEF.InstanceID InstanceID 
, ITTPL_DEF.ITTPL_DEFID ID 
, 'ITTPL_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTPL_DEF
 join INSTANCE on ITTPL_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOP_OPLNK as 
select   ITTOP_OPLNKID
, 
 ITTOP_OPLNK.TheUser  
ITTOP_OPLNK_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(ITTOP_OPLNK.TheUser) 
ITTOP_OPLNK_TheUser 
, ITTOP_OPLNK.InstanceID InstanceID 
, ITTOP_OPLNK.ITTOP_OPLNKID ID 
, 'ITTOP_OPLNK' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOP_OPLNK
 join INSTANCE on ITTOP_OPLNK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOP_OPKAM as 
select   ITTOP_OPKAMID,ITTOP_OPLNKID
, 
 ITTOP_OPKAM.TheKamera  
ITTOP_OPKAM_TheKamera_ID, 
 MTZ.Func.ITTD_CAMERA_BRIEF_F(ITTOP_OPKAM.TheKamera) 
ITTOP_OPKAM_TheKamera 
, ITTOP_OPLNK.InstanceID InstanceID 
, ITTOP_OPKAM.ITTOP_OPKAMID ID 
, 'ITTOP_OPKAM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOP_OPKAM
 join ITTOP_OPLNK on ITTOP_OPLNK.ITTOP_OPLNKID=ITTOP_OPKAM.ParentStructRowID 
 join INSTANCE on ITTOP_OPLNK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOP_KLNK as 
select   ITTOP_KLNKID
, 
 ITTOP_KLNK.TheUser  
ITTOP_KLNK_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(ITTOP_KLNK.TheUser) 
ITTOP_KLNK_TheUser 
, ITTOP_KLNK.InstanceID InstanceID 
, ITTOP_KLNK.ITTOP_KLNKID ID 
, 'ITTOP_KLNK' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOP_KLNK
 join INSTANCE on ITTOP_KLNK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOP_KCAM as 
select   ITTOP_KCAMID,ITTOP_KLNKID
, 
 ITTOP_KCAM.TheKamera  
ITTOP_KCAM_TheKamera_ID, 
 MTZ.Func.ITTD_CAMERA_BRIEF_F(ITTOP_KCAM.TheKamera) 
ITTOP_KCAM_TheKamera 
, ITTOP_KLNK.InstanceID InstanceID 
, ITTOP_KCAM.ITTOP_KCAMID ID 
, 'ITTOP_KCAM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOP_KCAM
 join ITTOP_KLNK on ITTOP_KLNK.ITTOP_KLNKID=ITTOP_KCAM.ParentStructRowID 
 join INSTANCE on ITTOP_KLNK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOP_KCLI as 
select   ITTOP_KCLIID,ITTOP_KLNKID
, 
 ITTOP_KCLI.TheClient  
ITTOP_KCLI_TheClient_ID, 
ITTOP_KCLI.TheClient 
ITTOP_KCLI_TheClient 
, ITTOP_KLNK.InstanceID InstanceID 
, ITTOP_KCLI.ITTOP_KCLIID ID 
, 'ITTOP_KCLI' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOP_KCLI
 join ITTOP_KLNK on ITTOP_KLNK.ITTOP_KLNKID=ITTOP_KCLI.ParentStructRowID 
 join INSTANCE on ITTOP_KLNK.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTFN_MAX as 
select   ITTFN_MAXID
, 
ITTFN_MAX.PalMaxNum 
ITTFN_MAX_PalMaxNum 
, ITTFN_MAX.InstanceID InstanceID 
, ITTFN_MAX.ITTFN_MAXID ID 
, 'ITTFN_MAX' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTFN_MAX
 join INSTANCE on ITTFN_MAX.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTFN_MAX as 
select   ITTFN_MAXID
, 
ITTFN_MAX.PalMaxNum 
ITTFN_MAX_PalMaxNum 
, ITTFN_MAX.InstanceID InstanceID 
, ITTFN_MAX.ITTFN_MAXID ID 
, 'ITTFN_MAX' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTFN_MAX
 join INSTANCE on ITTFN_MAX.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSTDJournlaExtInfo as 
select   STDJournlaExtInfoID
, 
STDJournlaExtInfo.TheName 
STDJournlaExtInfo_TheName 
, 
 STDJournlaExtInfo.TheJournalRef  
STDJournlaExtInfo_TheJournalRef_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(STDJournlaExtInfo.TheJournalRef) 
STDJournlaExtInfo_TheJournalRef 
, STDJournlaExtInfo.InstanceID InstanceID 
, STDJournlaExtInfo.STDJournlaExtInfoID ID 
, 'STDJournlaExtInfo' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournlaExtInfo
 join INSTANCE on STDJournlaExtInfo.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSTDJournalExtParam as 
select   STDJournalExtParamID
, 
 STDJournalExtParam.TargetPlatform  
STDJournalExtParam_TargetPlatform_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(STDJournalExtParam.TargetPlatform) 
STDJournalExtParam_TargetPlatform 
, 
STDJournalExtParam.ParamName 
STDJournalExtParam_ParamName 
, 
STDJournalExtParam.FieldName 
STDJournalExtParam_FieldName 
, STDJournalExtParam.InstanceID InstanceID 
, STDJournalExtParam.STDJournalExtParamID ID 
, 'STDJournalExtParam' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournalExtParam
 join INSTANCE on STDJournalExtParam.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSTDJournalExtFlt as 
select   STDJournalExtFltID
, 
STDJournalExtFlt.ViewSource 
STDJournalExtFlt_ViewSource 
, STDJournalExtFlt.InstanceID InstanceID 
, STDJournalExtFlt.STDJournalExtFltID ID 
, 'STDJournalExtFlt' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournalExtFlt
 join INSTANCE on STDJournalExtFlt.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSTDJournalExtField as 
select   STDJournalExtFieldID,STDJournalExtFltID
, 
 STDJournalExtField.TargetPlatform  
STDJournalExtField_TargetPlatform_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(STDJournalExtField.TargetPlatform) 
STDJournalExtField_TargetPlatform 
, 
STDJournalExtField.ConstantValue 
STDJournalExtField_ConstantValue 
, 
STDJournalExtField.FieldSource 
STDJournalExtField_FieldSource 
, 
STDJournalExtField.ViewField 
STDJournalExtField_ViewField 
, 
 STDJournalExtField.ConditionType  
STDJournalExtField_ConditionType_VAL, 
 decode(STDJournalExtField.ConditionType 
, 2 ,'&lt;&gt;'
, 3 ,'&gt;'
, 1 ,'='
, 4 ,'&gt;='
, 7 ,'&lt;='
, 8 ,'like'
, 6 ,'&lt;'
, 0 ,'none'
, '???') 
STDJournalExtField_ConditionType 
, STDJournalExtFlt.InstanceID InstanceID 
, STDJournalExtField.STDJournalExtFieldID ID 
, 'STDJournalExtField' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STDJournalExtField
 join STDJournalExtFlt on STDJournalExtFlt.STDJournalExtFltID=STDJournalExtField.ParentStructRowID 
 join INSTANCE on STDJournalExtFlt.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindFieldType as 
select   FIELDTYPEID
, 
 FIELDTYPE.TypeStyle  
FIELDTYPE_TypeStyle_VAL, 
 decode(FIELDTYPE.TypeStyle 
, 3 ,'Интервал'
, 5 ,'Элемент оформления'
, 0 ,'Скалярный тип'
, 4 ,'Ссылка'
, 2 ,'Перечисление'
, 1 ,'Выражение'
, '???') 
FIELDTYPE_TypeStyle 
, 
FIELDTYPE.Name 
FIELDTYPE_Name 
, 
FIELDTYPE.the_Comment 
FIELDTYPE_Comment 
, FIELDTYPE.InstanceID InstanceID 
, FIELDTYPE.FIELDTYPEID ID 
, 'FIELDTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDTYPE
 join INSTANCE on FIELDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDTYPE as 
select   FIELDTYPEID
, 
FIELDTYPE.Name 
FIELDTYPE_Name 
, 
FIELDTYPE.Minimum 
FIELDTYPE_Minimum 
, 
FIELDTYPE.Maximum 
FIELDTYPE_Maximum 
, 
 FIELDTYPE.AllowSize  
FIELDTYPE_AllowSize_VAL, 
 decode(FIELDTYPE.AllowSize 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDTYPE_AllowSize 
, 
 FIELDTYPE.AllowLikeSearch  
FIELDTYPE_AllowLikeSearch_VAL, 
 decode(FIELDTYPE.AllowLikeSearch 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDTYPE_AllowLikeSearch 
, 
 FIELDTYPE.TypeStyle  
FIELDTYPE_TypeStyle_VAL, 
 decode(FIELDTYPE.TypeStyle 
, 3 ,'Интервал'
, 5 ,'Элемент оформления'
, 0 ,'Скалярный тип'
, 4 ,'Ссылка'
, 2 ,'Перечисление'
, 1 ,'Выражение'
, '???') 
FIELDTYPE_TypeStyle 
, 
FIELDTYPE.the_Comment 
FIELDTYPE_the_Comment 
, 
 FIELDTYPE.GridSortType  
FIELDTYPE_GridSortType_VAL, 
 decode(FIELDTYPE.GridSortType 
, 0 ,'As String'
, 1 ,'As Numeric'
, 2 ,'As Date'
, '???') 
FIELDTYPE_GridSortType 
, FIELDTYPE.InstanceID InstanceID 
, FIELDTYPE.FIELDTYPEID ID 
, 'FIELDTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDTYPE
 join INSTANCE on FIELDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDTYPEMAP as 
select   FIELDTYPEMAPID,FIELDTYPEID
, 
FIELDTYPEMAP.StoageType 
FIELDTYPEMAP_StoageType 
, 
 FIELDTYPEMAP.Target  
FIELDTYPEMAP_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(FIELDTYPEMAP.Target) 
FIELDTYPEMAP_Target 
, 
FIELDTYPEMAP.FixedSize 
FIELDTYPEMAP_FixedSize 
, FIELDTYPE.InstanceID InstanceID 
, FIELDTYPEMAP.FIELDTYPEMAPID ID 
, 'FIELDTYPEMAP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDTYPEMAP
 join FIELDTYPE on FIELDTYPE.FIELDTYPEID=FIELDTYPEMAP.ParentStructRowID 
 join INSTANCE on FIELDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOENUMITEM as 
select   ENUMITEMID,FIELDTYPEID
, 
ENUMITEM.Name 
ENUMITEM_Name 
, 
ENUMITEM.NameInCode 
ENUMITEM_NameInCode 
, 
ENUMITEM.NameValue 
ENUMITEM_NameValue 
, FIELDTYPE.InstanceID InstanceID 
, ENUMITEM.ENUMITEMID ID 
, 'ENUMITEM' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ENUMITEM
 join FIELDTYPE on FIELDTYPE.FIELDTYPEID=ENUMITEM.ParentStructRowID 
 join INSTANCE on FIELDTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindMethod as 
select   SHAREDMETHODID
, 
SHAREDMETHOD.Name 
SHAREDMETHOD_Name 
, 
SHAREDMETHOD.the_Comment 
SHAREDMETHOD_Comment 
, SHAREDMETHOD.InstanceID InstanceID 
, SHAREDMETHOD.SHAREDMETHODID ID 
, 'SHAREDMETHOD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SHAREDMETHOD
 join INSTANCE on SHAREDMETHOD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSHAREDMETHOD as 
select   SHAREDMETHODID
, 
SHAREDMETHOD.Name 
SHAREDMETHOD_Name 
, 
SHAREDMETHOD.the_Comment 
SHAREDMETHOD_the_Comment 
, 
 SHAREDMETHOD.ReturnType  
SHAREDMETHOD_ReturnType_ID, 
 MTZ.Func.FIELDTYPE_BRIEF_F(SHAREDMETHOD.ReturnType) 
SHAREDMETHOD_ReturnType 
, SHAREDMETHOD.InstanceID InstanceID 
, SHAREDMETHOD.SHAREDMETHODID ID 
, 'SHAREDMETHOD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SHAREDMETHOD
 join INSTANCE on SHAREDMETHOD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSCRIPT as 
select   SCRIPTID,SHAREDMETHODID
, 
SCRIPT.Code 
SCRIPT_Code 
, 
 SCRIPT.Target  
SCRIPT_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(SCRIPT.Target) 
SCRIPT_Target 
, SHAREDMETHOD.InstanceID InstanceID 
, SCRIPT.SCRIPTID ID 
, 'SCRIPT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SCRIPT
 join SHAREDMETHOD on SHAREDMETHOD.SHAREDMETHODID=SCRIPT.ParentStructRowID 
 join INSTANCE on SHAREDMETHOD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOPARAMETERS as 
select   PARAMETERSID,SCRIPTID,SHAREDMETHODID
, 
 PARAMETERS.RefToType  
PARAMETERS_RefToType_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(PARAMETERS.RefToType) 
PARAMETERS_RefToType 
, 
 PARAMETERS.AllowNull  
PARAMETERS_AllowNull_VAL, 
 decode(PARAMETERS.AllowNull 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PARAMETERS_AllowNull 
, 
PARAMETERS.Name 
PARAMETERS_Name 
, 
 PARAMETERS.OutParam  
PARAMETERS_OutParam_VAL, 
 decode(PARAMETERS.OutParam 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PARAMETERS_OutParam 
, 
 PARAMETERS.ReferenceType  
PARAMETERS_ReferenceType_VAL, 
 decode(PARAMETERS.ReferenceType 
, 2 ,'На строку раздела'
, 3 ,'На источник данных'
, 0 ,'Скалярное поле ( не ссылка)'
, 1 ,'На объект '
, '???') 
PARAMETERS_ReferenceType 
, 
PARAMETERS.DataSize 
PARAMETERS_DataSize 
, 
PARAMETERS.Caption 
PARAMETERS_Caption 
, 
 PARAMETERS.RefToPart  
PARAMETERS_RefToPart_ID, 
 MTZ.Func.PART_BRIEF_F(PARAMETERS.RefToPart) 
PARAMETERS_RefToPart 
, 
 PARAMETERS.TypeOfParm  
PARAMETERS_TypeOfParm_ID, 
 MTZ.Func.FIELDTYPE_BRIEF_F(PARAMETERS.TypeOfParm) 
PARAMETERS_TypeOfParm 
, 
PARAMETERS.sequence 
PARAMETERS_sequence 
, SHAREDMETHOD.InstanceID InstanceID 
, PARAMETERS.PARAMETERSID ID 
, 'PARAMETERS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PARAMETERS
 join SCRIPT on SCRIPT.SCRIPTID=PARAMETERS.ParentStructRowID 
 join SHAREDMETHOD on SHAREDMETHOD.SHAREDMETHODID=SCRIPT.ParentStructRowID 
 join INSTANCE on SHAREDMETHOD.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOOBJECTTYPE as 
select   OBJECTTYPEID
, 
 OBJECTTYPE.IsSingleInstance  
OBJECTTYPE_IsSingleInstance_VAL, 
 decode(OBJECTTYPE.IsSingleInstance 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_IsSingleInstance 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_the_Comment 
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, 
OBJECTTYPE.TheComment 
OBJECTTYPE_TheComment 
, 
 OBJECTTYPE.OnCreate  
OBJECTTYPE_OnCreate_ID, 
 MTZ.Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnCreate) 
OBJECTTYPE_OnCreate 
, 
 OBJECTTYPE.ReplicaType  
OBJECTTYPE_ReplicaType_VAL, 
 decode(OBJECTTYPE.ReplicaType 
, 0 ,'Весь документ'
, 2 ,'Локальный'
, 1 ,'Построчно'
, '???') 
OBJECTTYPE_ReplicaType 
, 
 OBJECTTYPE.AllowRefToObject  
OBJECTTYPE_AllowRefToObject_VAL, 
 decode(OBJECTTYPE.AllowRefToObject 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_AllowRefToObject 
, 
 OBJECTTYPE.ChooseView  
OBJECTTYPE_ChooseView_ID, 
 MTZ.Func.PARTVIEW_BRIEF_F(OBJECTTYPE.ChooseView) 
OBJECTTYPE_ChooseView 
, 
 OBJECTTYPE.OnRun  
OBJECTTYPE_OnRun_ID, 
 MTZ.Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnRun) 
OBJECTTYPE_OnRun 
, 
 OBJECTTYPE.Package  
OBJECTTYPE_Package_ID, 
 MTZ.Func.MTZAPP_BRIEF_F(OBJECTTYPE.Package) 
OBJECTTYPE_Package 
, 
 OBJECTTYPE.AllowSearch  
OBJECTTYPE_AllowSearch_VAL, 
 decode(OBJECTTYPE.AllowSearch 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_AllowSearch 
, 
 OBJECTTYPE.OnDelete  
OBJECTTYPE_OnDelete_ID, 
 MTZ.Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnDelete) 
OBJECTTYPE_OnDelete 
, OBJECTTYPE.InstanceID InstanceID 
, OBJECTTYPE.OBJECTTYPEID ID 
, 'OBJECTTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJECTTYPE
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindOBJECTTYPE as 
select   OBJECTTYPEID
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
 OBJECTTYPE.Package  
OBJECTTYPE_Package_ID, 
 MTZ.Func.MTZAPP_BRIEF_F(OBJECTTYPE.Package) 
OBJECTTYPE_Package 
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, OBJECTTYPE.InstanceID InstanceID 
, OBJECTTYPE.OBJECTTYPEID ID 
, 'OBJECTTYPE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJECTTYPE
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOPART as 
select   PARTID,OBJECTTYPEID
, 
 PART.PartType  
PART_PartType_VAL, 
 decode(PART.PartType 
, 3 ,'Расширение'
, 1 ,'Коллекция'
, 0 ,'Строка'
, 2 ,'Дерево'
, 4 ,'Расширение с данными'
, '???') 
PART_PartType 
, 
 PART.ManualRegister  
PART_ManualRegister_VAL, 
 decode(PART.ManualRegister 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PART_ManualRegister 
, 
PART.Caption 
PART_Caption 
, 
PART.the_Comment 
PART_the_Comment 
, 
 PART.OnRun  
PART_OnRun_ID, 
 MTZ.Func.PARTMENU_BRIEF_F(PART.OnRun) 
PART_OnRun 
, 
 PART.OnDelete  
PART_OnDelete_ID, 
 MTZ.Func.PARTMENU_BRIEF_F(PART.OnDelete) 
PART_OnDelete 
, 
 PART.OnCreate  
PART_OnCreate_ID, 
 MTZ.Func.PARTMENU_BRIEF_F(PART.OnCreate) 
PART_OnCreate 
, 
 PART.OnSave  
PART_OnSave_ID, 
 MTZ.Func.PARTMENU_BRIEF_F(PART.OnSave) 
PART_OnSave 
, 
 PART.ExtenderObject  
PART_ExtenderObject_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(PART.ExtenderObject) 
PART_ExtenderObject 
, 
 PART.NoLog  
PART_NoLog_VAL, 
 decode(PART.NoLog 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PART_NoLog 
, 
PART.Sequence 
PART_Sequence 
, 
PART.shablonBrief 
PART_shablonBrief 
, 
PART.Name 
PART_Name 
, 
 PART.AddBehaivor  
PART_AddBehaivor_VAL, 
 decode(PART.AddBehaivor 
, 0 ,'AddForm'
, 2 ,'RunAction'
, 1 ,'RefreshOnly'
, '???') 
PART_AddBehaivor 
, OBJECTTYPE.InstanceID InstanceID 
, PART.PARTID ID 
, 'PART' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PART
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindPart as 
select   PARTID,OBJECTTYPEID
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, 
PART.Caption 
PART_Caption 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
PART.the_Comment 
PART_Comment 
, 
PART.Name 
PART_Name 
, OBJECTTYPE.InstanceID InstanceID 
, PART.PARTID ID 
, 'PART' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PART
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindPARTMENU as 
select   PARTMENUID,PARTID,OBJECTTYPEID
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
PARTMENU.Name 
PARTMENU_Name 
, 
PART.the_Comment 
PART_Comment 
, OBJECTTYPE.InstanceID InstanceID 
, PARTMENU.PARTMENUID ID 
, 'PARTMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PARTMENU
 join PART on PART.PARTID=PARTMENU.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOPARTMENU as 
select   PARTMENUID,PARTID,OBJECTTYPEID
, 
 PARTMENU.the_Action  
PARTMENU_the_Action_ID, 
 MTZ.Func.SHAREDMETHOD_BRIEF_F(PARTMENU.the_Action) 
PARTMENU_the_Action 
, 
PARTMENU.Name 
PARTMENU_Name 
, 
 PARTMENU.IsToolBarButton  
PARTMENU_IsToolBarButton_VAL, 
 decode(PARTMENU.IsToolBarButton 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PARTMENU_IsToolBarButton 
, 
PARTMENU.ToolTip 
PARTMENU_ToolTip 
, 
 PARTMENU.IsMenuItem  
PARTMENU_IsMenuItem_VAL, 
 decode(PARTMENU.IsMenuItem 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PARTMENU_IsMenuItem 
, 
PARTMENU.Caption 
PARTMENU_Caption 
, 
PARTMENU.HotKey 
PARTMENU_HotKey 
, OBJECTTYPE.InstanceID InstanceID 
, PARTMENU.PARTMENUID ID 
, 'PARTMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PARTMENU
 join PART on PART.PARTID=PARTMENU.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOPARTPARAMMAP as 
select   PARTPARAMMAPID,PARTMENUID,PARTID,OBJECTTYPEID
, 
PARTPARAMMAP.FieldName 
PARTPARAMMAP_FieldName 
, 
 PARTPARAMMAP.NoEdit  
PARTPARAMMAP_NoEdit_VAL, 
 decode(PARTPARAMMAP.NoEdit 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PARTPARAMMAP_NoEdit 
, 
PARTPARAMMAP.ParamName 
PARTPARAMMAP_ParamName 
, OBJECTTYPE.InstanceID InstanceID 
, PARTPARAMMAP.PARTPARAMMAPID ID 
, 'PARTPARAMMAP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PARTPARAMMAP
 join PARTMENU on PARTMENU.PARTMENUID=PARTPARAMMAP.ParentStructRowID 
 join PART on PART.PARTID=PARTMENU.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELD as 
select   FIELDID,PARTID,OBJECTTYPEID
, 
FIELD.Caption 
FIELD_Caption 
, 
 FIELD.IsAutoNumber  
FIELD_IsAutoNumber_VAL, 
 decode(FIELD.IsAutoNumber 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELD_IsAutoNumber 
, 
FIELD.ZoneTemplate 
FIELD_ZoneTemplate 
, 
 FIELD.IsBrief  
FIELD_IsBrief_VAL, 
 decode(FIELD.IsBrief 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELD_IsBrief 
, 
FIELD.TheComment 
FIELD_TheComment 
, 
 FIELD.RefToPart  
FIELD_RefToPart_ID, 
 MTZ.Func.PART_BRIEF_F(FIELD.RefToPart) 
FIELD_RefToPart 
, 
 FIELD.FieldType  
FIELD_FieldType_ID, 
 MTZ.Func.FIELDTYPE_BRIEF_F(FIELD.FieldType) 
FIELD_FieldType 
, 
FIELD.DataSize 
FIELD_DataSize 
, 
 FIELD.RefToType  
FIELD_RefToType_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(FIELD.RefToType) 
FIELD_RefToType 
, 
 FIELD.TheNumerator  
FIELD_TheNumerator_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(FIELD.TheNumerator) 
FIELD_TheNumerator 
, 
 FIELD.CreateRefOnly  
FIELD_CreateRefOnly_VAL, 
 decode(FIELD.CreateRefOnly 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELD_CreateRefOnly 
, 
 FIELD.InternalReference  
FIELD_InternalReference_VAL, 
 decode(FIELD.InternalReference 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELD_InternalReference 
, 
 FIELD.NumberDateField  
FIELD_NumberDateField_ID, 
 MTZ.Func.FIELD_BRIEF_F(FIELD.NumberDateField) 
FIELD_NumberDateField 
, 
FIELD.Sequence 
FIELD_Sequence 
, 
FIELD.Name 
FIELD_Name 
, 
FIELD.shablonBrief 
FIELD_shablonBrief 
, 
 FIELD.AllowNull  
FIELD_AllowNull_VAL, 
 decode(FIELD.AllowNull 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELD_AllowNull 
, 
 FIELD.ReferenceType  
FIELD_ReferenceType_VAL, 
 decode(FIELD.ReferenceType 
, 2 ,'На строку раздела'
, 3 ,'На источник данных'
, 0 ,'Скалярное поле ( не ссылка)'
, 1 ,'На объект '
, '???') 
FIELD_ReferenceType 
, OBJECTTYPE.InstanceID InstanceID 
, FIELD.FIELDID ID 
, 'FIELD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELD
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindField as 
select   FIELDID,PARTID,OBJECTTYPEID
, 
FIELD.Name 
FIELD_Name 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
FIELD.Caption 
FIELD_Caption 
, 
PART.the_Comment 
PART_Comment 
, OBJECTTYPE.InstanceID InstanceID 
, FIELD.FIELDID ID 
, 'FIELD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELD
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDVALIDATOR as 
select   FIELDVALIDATORID,FIELDID,PARTID,OBJECTTYPEID
, 
FIELDVALIDATOR.Code 
FIELDVALIDATOR_Code 
, 
 FIELDVALIDATOR.Target  
FIELDVALIDATOR_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(FIELDVALIDATOR.Target) 
FIELDVALIDATOR_Target 
, OBJECTTYPE.InstanceID InstanceID 
, FIELDVALIDATOR.FIELDVALIDATORID ID 
, 'FIELDVALIDATOR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDVALIDATOR
 join FIELD on FIELD.FIELDID=FIELDVALIDATOR.ParentStructRowID 
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDMENU as 
select   FIELDMENUID,FIELDID,PARTID,OBJECTTYPEID
, 
FIELDMENU.HotKey 
FIELDMENU_HotKey 
, 
FIELDMENU.Name 
FIELDMENU_Name 
, 
 FIELDMENU.IsToolBarButton  
FIELDMENU_IsToolBarButton_VAL, 
 decode(FIELDMENU.IsToolBarButton 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDMENU_IsToolBarButton 
, 
 FIELDMENU.ActionID  
FIELDMENU_ActionID_ID, 
 MTZ.Func.SHAREDMETHOD_BRIEF_F(FIELDMENU.ActionID) 
FIELDMENU_ActionID 
, 
 FIELDMENU.IsMenuItem  
FIELDMENU_IsMenuItem_VAL, 
 decode(FIELDMENU.IsMenuItem 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDMENU_IsMenuItem 
, 
FIELDMENU.Caption 
FIELDMENU_Caption 
, 
FIELDMENU.ToolTip 
FIELDMENU_ToolTip 
, OBJECTTYPE.InstanceID InstanceID 
, FIELDMENU.FIELDMENUID ID 
, 'FIELDMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDMENU
 join FIELD on FIELD.FIELDID=FIELDMENU.ParentStructRowID 
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDPARAMMAP as 
select   FIELDPARAMMAPID,FIELDMENUID,FIELDID,PARTID,OBJECTTYPEID
, 
 FIELDPARAMMAP.NoEdit  
FIELDPARAMMAP_NoEdit_VAL, 
 decode(FIELDPARAMMAP.NoEdit 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDPARAMMAP_NoEdit 
, 
FIELDPARAMMAP.FieldName 
FIELDPARAMMAP_FieldName 
, 
FIELDPARAMMAP.ParamName 
FIELDPARAMMAP_ParamName 
, OBJECTTYPE.InstanceID InstanceID 
, FIELDPARAMMAP.FIELDPARAMMAPID ID 
, 'FIELDPARAMMAP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDPARAMMAP
 join FIELDMENU on FIELDMENU.FIELDMENUID=FIELDPARAMMAP.ParentStructRowID 
 join FIELD on FIELD.FIELDID=FIELDMENU.ParentStructRowID 
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDEXPRESSION as 
select   FIELDEXPRESSIONID,FIELDID,PARTID,OBJECTTYPEID
, 
 FIELDEXPRESSION.Target  
FIELDEXPRESSION_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(FIELDEXPRESSION.Target) 
FIELDEXPRESSION_Target 
, 
FIELDEXPRESSION.Code 
FIELDEXPRESSION_Code 
, OBJECTTYPE.InstanceID InstanceID 
, FIELDEXPRESSION.FIELDEXPRESSIONID ID 
, 'FIELDEXPRESSION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDEXPRESSION
 join FIELD on FIELD.FIELDID=FIELDEXPRESSION.ParentStructRowID 
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTODINAMICFILTERSCRIPT as 
select   DINAMICFILTERSCRIPTID,FIELDID,PARTID,OBJECTTYPEID
, 
DINAMICFILTERSCRIPT.Code 
DINAMICFILTERSCRIPT_Code 
, 
 DINAMICFILTERSCRIPT.Target  
DINAMICFILTERSCRIPT_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(DINAMICFILTERSCRIPT.Target) 
DINAMICFILTERSCRIPT_Target 
, OBJECTTYPE.InstanceID InstanceID 
, DINAMICFILTERSCRIPT.DINAMICFILTERSCRIPTID ID 
, 'DINAMICFILTERSCRIPT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from DINAMICFILTERSCRIPT
 join FIELD on FIELD.FIELDID=DINAMICFILTERSCRIPT.ParentStructRowID 
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDSRCDEF as 
select   FIELDSRCDEFID,FIELDID,PARTID,OBJECTTYPEID
, 
FIELDSRCDEF.DataSource 
FIELDSRCDEF_DataSource 
, 
FIELDSRCDEF.IDField 
FIELDSRCDEF_IDField 
, 
 FIELDSRCDEF.DontShowDialog  
FIELDSRCDEF_DontShowDialog_VAL, 
 decode(FIELDSRCDEF.DontShowDialog 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDSRCDEF_DontShowDialog 
, 
FIELDSRCDEF.FilterString 
FIELDSRCDEF_FilterString 
, 
FIELDSRCDEF.ConnectionString 
FIELDSRCDEF_ConnectionString 
, 
FIELDSRCDEF.BriefString 
FIELDSRCDEF_BriefString 
, 
FIELDSRCDEF.DescriptionString 
FIELDSRCDEF_DescriptionString 
, 
FIELDSRCDEF.SortField 
FIELDSRCDEF_SortField 
, 
FIELDSRCDEF.Provider 
FIELDSRCDEF_Provider 
, OBJECTTYPE.InstanceID InstanceID 
, FIELDSRCDEF.FIELDSRCDEFID ID 
, 'FIELDSRCDEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDSRCDEF
 join FIELD on FIELD.FIELDID=FIELDSRCDEF.ParentStructRowID 
 join PART on PART.PARTID=FIELD.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOPARTVIEW as 
select   PARTVIEWID,PARTID,OBJECTTYPEID
, 
PARTVIEW.FilterField2 
PARTVIEW_FilterField2 
, 
 PARTVIEW.ForChoose  
PARTVIEW_ForChoose_VAL, 
 decode(PARTVIEW.ForChoose 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
PARTVIEW_ForChoose 
, 
PARTVIEW.the_Alias 
PARTVIEW_the_Alias 
, 
PARTVIEW.FilterField3 
PARTVIEW_FilterField3 
, 
PARTVIEW.Name 
PARTVIEW_Name 
, 
PARTVIEW.FilterField0 
PARTVIEW_FilterField0 
, 
PARTVIEW.FilterField1 
PARTVIEW_FilterField1 
, OBJECTTYPE.InstanceID InstanceID 
, PARTVIEW.PARTVIEWID ID 
, 'PARTVIEW' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from PARTVIEW
 join PART on PART.PARTID=PARTVIEW.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOViewColumn as 
select   ViewColumnID,PARTVIEWID,PARTID,OBJECTTYPEID
, 
 ViewColumn.Field  
ViewColumn_Field_ID, 
 MTZ.Func.FIELD_BRIEF_F(ViewColumn.Field) 
ViewColumn_Field 
, 
ViewColumn.sequence 
ViewColumn_sequence 
, 
ViewColumn.Expression 
ViewColumn_Expression 
, 
 ViewColumn.ForCombo  
ViewColumn_ForCombo_VAL, 
 decode(ViewColumn.ForCombo 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ViewColumn_ForCombo 
, 
ViewColumn.Name 
ViewColumn_Name 
, 
 ViewColumn.FromPart  
ViewColumn_FromPart_ID, 
 MTZ.Func.PART_BRIEF_F(ViewColumn.FromPart) 
ViewColumn_FromPart 
, 
 ViewColumn.Aggregation  
ViewColumn_Aggregation_VAL, 
 decode(ViewColumn.Aggregation 
, 5 ,'MAX'
, 1 ,'AVG'
, 3 ,'SUM'
, 2 ,'COUNT'
, 4 ,'MIN'
, 6 ,'CUSTOM'
, 0 ,'none'
, '???') 
ViewColumn_Aggregation 
, 
ViewColumn.the_Alias 
ViewColumn_the_Alias 
, OBJECTTYPE.InstanceID InstanceID 
, ViewColumn.ViewColumnID ID 
, 'ViewColumn' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ViewColumn
 join PARTVIEW on PARTVIEW.PARTVIEWID=ViewColumn.ParentStructRowID 
 join PART on PART.PARTID=PARTVIEW.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOExtenderInterface as 
select   ExtenderInterfaceID,PARTID,OBJECTTYPEID
, 
 ExtenderInterface.TargetPlatform  
ExtenderInterface_TargetPlatform_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(ExtenderInterface.TargetPlatform) 
ExtenderInterface_TargetPlatform 
, 
ExtenderInterface.TheObject 
ExtenderInterface_TheObject 
, 
ExtenderInterface.TheName 
ExtenderInterface_TheName 
, OBJECTTYPE.InstanceID InstanceID 
, ExtenderInterface.ExtenderInterfaceID ID 
, 'ExtenderInterface' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ExtenderInterface
 join PART on PART.PARTID=ExtenderInterface.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOVALIDATOR as 
select   VALIDATORID,PARTID,OBJECTTYPEID
, 
 VALIDATOR.Target  
VALIDATOR_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(VALIDATOR.Target) 
VALIDATOR_Target 
, 
VALIDATOR.Code 
VALIDATOR_Code 
, OBJECTTYPE.InstanceID InstanceID 
, VALIDATOR.VALIDATORID ID 
, 'VALIDATOR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from VALIDATOR
 join PART on PART.PARTID=VALIDATOR.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOUNIQUECONSTRAINT as 
select   UNIQUECONSTRAINTID,PARTID,OBJECTTYPEID
, 
UNIQUECONSTRAINT.TheComment 
UNIQUECONSTRAINT_TheComment 
, 
 UNIQUECONSTRAINT.PerParent  
UNIQUECONSTRAINT_PerParent_VAL, 
 decode(UNIQUECONSTRAINT.PerParent 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
UNIQUECONSTRAINT_PerParent 
, 
UNIQUECONSTRAINT.Name 
UNIQUECONSTRAINT_Name 
, OBJECTTYPE.InstanceID InstanceID 
, UNIQUECONSTRAINT.UNIQUECONSTRAINTID ID 
, 'UNIQUECONSTRAINT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from UNIQUECONSTRAINT
 join PART on PART.PARTID=UNIQUECONSTRAINT.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOCONSTRAINTFIELD as 
select   CONSTRAINTFIELDID,UNIQUECONSTRAINTID,PARTID,OBJECTTYPEID
, 
 CONSTRAINTFIELD.TheField  
CONSTRAINTFIELD_TheField_ID, 
 MTZ.Func.FIELD_BRIEF_F(CONSTRAINTFIELD.TheField) 
CONSTRAINTFIELD_TheField 
, OBJECTTYPE.InstanceID InstanceID 
, CONSTRAINTFIELD.CONSTRAINTFIELDID ID 
, 'CONSTRAINTFIELD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from CONSTRAINTFIELD
 join UNIQUECONSTRAINT on UNIQUECONSTRAINT.UNIQUECONSTRAINTID=CONSTRAINTFIELD.ParentStructRowID 
 join PART on PART.PARTID=UNIQUECONSTRAINT.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=PART.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOINSTANCEVALIDATOR as 
select   INSTANCEVALIDATORID,OBJECTTYPEID
, 
 INSTANCEVALIDATOR.Target  
INSTANCEVALIDATOR_Target_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(INSTANCEVALIDATOR.Target) 
INSTANCEVALIDATOR_Target 
, 
INSTANCEVALIDATOR.Code 
INSTANCEVALIDATOR_Code 
, OBJECTTYPE.InstanceID InstanceID 
, INSTANCEVALIDATOR.INSTANCEVALIDATORID ID 
, 'INSTANCEVALIDATOR' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from INSTANCEVALIDATOR
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=INSTANCEVALIDATOR.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOOBJSTATUS as 
select   OBJSTATUSID,OBJECTTYPEID
, 
OBJSTATUS.name 
OBJSTATUS_name 
, 
 OBJSTATUS.IsArchive  
OBJSTATUS_IsArchive_VAL, 
 decode(OBJSTATUS.IsArchive 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJSTATUS_IsArchive 
, 
 OBJSTATUS.isStartup  
OBJSTATUS_isStartup_VAL, 
 decode(OBJSTATUS.isStartup 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJSTATUS_isStartup 
, 
OBJSTATUS.the_comment 
OBJSTATUS_the_comment 
, OBJECTTYPE.InstanceID InstanceID 
, OBJSTATUS.OBJSTATUSID ID 
, 'OBJSTATUS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJSTATUS
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJSTATUS.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTONEXTSTATE as 
select   NEXTSTATEID,OBJSTATUSID,OBJECTTYPEID
, 
 NEXTSTATE.TheState  
NEXTSTATE_TheState_ID, 
 MTZ.Func.OBJSTATUS_BRIEF_F(NEXTSTATE.TheState) 
NEXTSTATE_TheState 
, OBJECTTYPE.InstanceID InstanceID 
, NEXTSTATE.NEXTSTATEID ID 
, 'NEXTSTATE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from NEXTSTATE
 join OBJSTATUS on OBJSTATUS.OBJSTATUSID=NEXTSTATE.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJSTATUS.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOOBJECTMODE as 
select   OBJECTMODEID,OBJECTTYPEID
, 
 OBJECTMODE.DefaultMode  
OBJECTMODE_DefaultMode_VAL, 
 decode(OBJECTMODE.DefaultMode 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTMODE_DefaultMode 
, 
OBJECTMODE.Name 
OBJECTMODE_Name 
, 
OBJECTMODE.TheComment 
OBJECTMODE_TheComment 
, OBJECTTYPE.InstanceID InstanceID 
, OBJECTMODE.OBJECTMODEID ID 
, 'OBJECTMODE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJECTMODE
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJECTMODE.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZMetaModel_OBJECTMODE as 
select   OBJECTMODEID,OBJECTTYPEID
, 
 OBJECTTYPE.AllowSearch  
OBJECTTYPE_AllowSearch_VAL, 
 decode(OBJECTTYPE.AllowSearch 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_AllowSearch 
, 
 OBJECTTYPE.ReplicaType  
OBJECTTYPE_ReplicaType_VAL, 
 decode(OBJECTTYPE.ReplicaType 
, 0 ,'Весь документ'
, 2 ,'Локальный'
, 1 ,'Построчно'
, '???') 
OBJECTTYPE_ReplicaType 
, 
 OBJECTTYPE.Package  
OBJECTTYPE_Package_ID, 
 MTZ.Func.MTZAPP_BRIEF_F(OBJECTTYPE.Package) 
OBJECTTYPE_Package 
, 
 OBJECTMODE.DefaultMode  
OBJECTMODE_DefaultMode_VAL, 
 decode(OBJECTMODE.DefaultMode 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTMODE_DefaultMode 
, 
 OBJECTTYPE.IsSingleInstance  
OBJECTTYPE_IsSingleInstance_VAL, 
 decode(OBJECTTYPE.IsSingleInstance 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_IsSingleInstance 
, 
 OBJECTTYPE.OnRun  
OBJECTTYPE_OnRun_ID, 
 MTZ.Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnRun) 
OBJECTTYPE_OnRun 
, 
 OBJECTTYPE.ChooseView  
OBJECTTYPE_ChooseView_ID, 
 MTZ.Func.PARTVIEW_BRIEF_F(OBJECTTYPE.ChooseView) 
OBJECTTYPE_ChooseView 
, 
 OBJECTTYPE.OnDelete  
OBJECTTYPE_OnDelete_ID, 
 MTZ.Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnDelete) 
OBJECTTYPE_OnDelete 
, 
OBJECTMODE.Name 
OBJECTMODE_Name 
, 
 OBJECTTYPE.OnCreate  
OBJECTTYPE_OnCreate_ID, 
 MTZ.Func.TYPEMENU_BRIEF_F(OBJECTTYPE.OnCreate) 
OBJECTTYPE_OnCreate 
, 
 OBJECTTYPE.AllowRefToObject  
OBJECTTYPE_AllowRefToObject_VAL, 
 decode(OBJECTTYPE.AllowRefToObject 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
OBJECTTYPE_AllowRefToObject 
, 
OBJECTTYPE.Name 
OBJECTTYPE_Name 
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_the_Comment 
, OBJECTTYPE.InstanceID InstanceID 
, OBJECTMODE.OBJECTMODEID ID 
, 'OBJECTMODE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from OBJECTMODE
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJECTMODE.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSTRUCTRESTRICTION as 
select   STRUCTRESTRICTIONID,OBJECTMODEID,OBJECTTYPEID
, 
 STRUCTRESTRICTION.AllowRead  
STRUCTRESTRICTION_AllowRead_VAL, 
 decode(STRUCTRESTRICTION.AllowRead 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
STRUCTRESTRICTION_AllowRead 
, 
 STRUCTRESTRICTION.AllowAdd  
STRUCTRESTRICTION_AllowAdd_VAL, 
 decode(STRUCTRESTRICTION.AllowAdd 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
STRUCTRESTRICTION_AllowAdd 
, 
 STRUCTRESTRICTION.AllowEdit  
STRUCTRESTRICTION_AllowEdit_VAL, 
 decode(STRUCTRESTRICTION.AllowEdit 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
STRUCTRESTRICTION_AllowEdit 
, 
 STRUCTRESTRICTION.Struct  
STRUCTRESTRICTION_Struct_ID, 
 MTZ.Func.PART_BRIEF_F(STRUCTRESTRICTION.Struct) 
STRUCTRESTRICTION_Struct 
, 
 STRUCTRESTRICTION.AllowDelete  
STRUCTRESTRICTION_AllowDelete_VAL, 
 decode(STRUCTRESTRICTION.AllowDelete 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
STRUCTRESTRICTION_AllowDelete 
, OBJECTTYPE.InstanceID InstanceID 
, STRUCTRESTRICTION.STRUCTRESTRICTIONID ID 
, 'STRUCTRESTRICTION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from STRUCTRESTRICTION
 join OBJECTMODE on OBJECTMODE.OBJECTMODEID=STRUCTRESTRICTION.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJECTMODE.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFIELDRESTRICTION as 
select   FIELDRESTRICTIONID,OBJECTMODEID,OBJECTTYPEID
, 
 FIELDRESTRICTION.AllowRead  
FIELDRESTRICTION_AllowRead_VAL, 
 decode(FIELDRESTRICTION.AllowRead 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDRESTRICTION_AllowRead 
, 
 FIELDRESTRICTION.ThePart  
FIELDRESTRICTION_ThePart_ID, 
 MTZ.Func.PART_BRIEF_F(FIELDRESTRICTION.ThePart) 
FIELDRESTRICTION_ThePart 
, 
 FIELDRESTRICTION.AllowModify  
FIELDRESTRICTION_AllowModify_VAL, 
 decode(FIELDRESTRICTION.AllowModify 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
FIELDRESTRICTION_AllowModify 
, 
 FIELDRESTRICTION.TheField  
FIELDRESTRICTION_TheField_ID, 
 MTZ.Func.FIELD_BRIEF_F(FIELDRESTRICTION.TheField) 
FIELDRESTRICTION_TheField 
, OBJECTTYPE.InstanceID InstanceID 
, FIELDRESTRICTION.FIELDRESTRICTIONID ID 
, 'FIELDRESTRICTION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from FIELDRESTRICTION
 join OBJECTMODE on OBJECTMODE.OBJECTMODEID=FIELDRESTRICTION.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJECTMODE.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMETHODRESTRICTION as 
select   METHODRESTRICTIONID,OBJECTMODEID,OBJECTTYPEID
, 
 METHODRESTRICTION.Method  
METHODRESTRICTION_Method_ID, 
 MTZ.Func.SHAREDMETHOD_BRIEF_F(METHODRESTRICTION.Method) 
METHODRESTRICTION_Method 
, 
 METHODRESTRICTION.IsRestricted  
METHODRESTRICTION_IsRestricted_VAL, 
 decode(METHODRESTRICTION.IsRestricted 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
METHODRESTRICTION_IsRestricted 
, 
 METHODRESTRICTION.Part  
METHODRESTRICTION_Part_ID, 
 MTZ.Func.PART_BRIEF_F(METHODRESTRICTION.Part) 
METHODRESTRICTION_Part 
, OBJECTTYPE.InstanceID InstanceID 
, METHODRESTRICTION.METHODRESTRICTIONID ID 
, 'METHODRESTRICTION' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from METHODRESTRICTION
 join OBJECTMODE on OBJECTMODE.OBJECTMODEID=METHODRESTRICTION.ParentStructRowID 
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=OBJECTMODE.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOTYPEMENU as 
select   TYPEMENUID,OBJECTTYPEID
, 
TYPEMENU.Caption 
TYPEMENU_Caption 
, 
 TYPEMENU.the_Action  
TYPEMENU_the_Action_ID, 
 MTZ.Func.SHAREDMETHOD_BRIEF_F(TYPEMENU.the_Action) 
TYPEMENU_the_Action 
, 
TYPEMENU.ToolTip 
TYPEMENU_ToolTip 
, 
TYPEMENU.HotKey 
TYPEMENU_HotKey 
, 
TYPEMENU.Name 
TYPEMENU_Name 
, 
 TYPEMENU.IsMenuItem  
TYPEMENU_IsMenuItem_VAL, 
 decode(TYPEMENU.IsMenuItem 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
TYPEMENU_IsMenuItem 
, 
 TYPEMENU.IsToolBarButton  
TYPEMENU_IsToolBarButton_VAL, 
 decode(TYPEMENU.IsToolBarButton 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
TYPEMENU_IsToolBarButton 
, OBJECTTYPE.InstanceID InstanceID 
, TYPEMENU.TYPEMENUID ID 
, 'TYPEMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TYPEMENU
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=TYPEMENU.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindTYPEMENU as 
select   TYPEMENUID,OBJECTTYPEID
, 
OBJECTTYPE.the_Comment 
OBJECTTYPE_Comment 
, 
TYPEMENU.Name 
TYPEMENU_Name 
, OBJECTTYPE.InstanceID InstanceID 
, TYPEMENU.TYPEMENUID ID 
, 'TYPEMENU' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from TYPEMENU
 join OBJECTTYPE on OBJECTTYPE.OBJECTTYPEID=TYPEMENU.ParentStructRowID 
 join INSTANCE on OBJECTTYPE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindMTZAPP as 
select   MTZAPPID
, 
MTZAPP.Name 
MTZAPP_Name 
, MTZAPP.InstanceID InstanceID 
, MTZAPP.MTZAPPID ID 
, 'MTZAPP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZAPP
 join INSTANCE on MTZAPP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZAPP as 
select   MTZAPPID
, 
MTZAPP.DBName 
MTZAPP_DBName 
, 
MTZAPP.Name 
MTZAPP_Name 
, 
MTZAPP.TheComment 
MTZAPP_TheComment 
, MTZAPP.InstanceID InstanceID 
, MTZAPP.MTZAPPID ID 
, 'MTZAPP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZAPP
 join INSTANCE on MTZAPP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOParentPackage as 
select   ParentPackageID,MTZAPPID
, 
 ParentPackage.Package  
ParentPackage_Package_ID, 
 MTZ.Func.MTZAPP_BRIEF_F(ParentPackage.Package) 
ParentPackage_Package 
, MTZAPP.InstanceID InstanceID 
, ParentPackage.ParentPackageID ID 
, 'ParentPackage' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ParentPackage
 join MTZAPP on MTZAPP.MTZAPPID=ParentPackage.ParentStructRowID 
 join INSTANCE on MTZAPP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGENPACKAGE as 
select   GENPACKAGEID
, 
GENPACKAGE.Name 
GENPACKAGE_Name 
, GENPACKAGE.InstanceID InstanceID 
, GENPACKAGE.GENPACKAGEID ID 
, 'GENPACKAGE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENPACKAGE
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindGENPACKAGE as 
select   GENPACKAGEID
, 
GENPACKAGE.Name 
GENPACKAGE_Name 
, GENPACKAGE.InstanceID InstanceID 
, GENPACKAGE.GENPACKAGEID ID 
, 'GENPACKAGE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENPACKAGE
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindGENERATOR_TARGET as 
select   GENERATOR_TARGETID,GENPACKAGEID
, 
GENERATOR_TARGET.Name 
GENERATOR_TARGET_Name 
, 
GENPACKAGE.Name 
GENPACKAGE_Name 
, GENPACKAGE.InstanceID InstanceID 
, GENERATOR_TARGET.GENERATOR_TARGETID ID 
, 'GENERATOR_TARGET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENERATOR_TARGET
 join GENPACKAGE on GENPACKAGE.GENPACKAGEID=GENERATOR_TARGET.ParentStructRowID 
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGENERATOR_TARGET as 
select   GENERATOR_TARGETID,GENPACKAGEID
, 
 GENERATOR_TARGET.TargetType  
GENERATOR_TARGET_TargetType_VAL, 
 decode(GENERATOR_TARGET.TargetType 
, 0 ,'СУБД'
, 4 ,'АРМ'
, 3 ,'Документация'
, 1 ,'МОДЕЛЬ'
, 2 ,'Приложение'
, '???') 
GENERATOR_TARGET_TargetType 
, 
 GENERATOR_TARGET.TheDevelopmentEnv  
GENERATOR_TARGET_TheDevelopmentEnv_VAL, 
 decode(GENERATOR_TARGET.TheDevelopmentEnv 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
GENERATOR_TARGET_TheDevelopmentEnv 
, 
GENERATOR_TARGET.QueueName 
GENERATOR_TARGET_QueueName 
, 
 GENERATOR_TARGET.GeneratorStyle  
GENERATOR_TARGET_GeneratorStyle_VAL, 
 decode(GENERATOR_TARGET.GeneratorStyle 
, 0 ,'Один тип'
, 1 ,'Все типы сразу'
, '???') 
GENERATOR_TARGET_GeneratorStyle 
, 
GENERATOR_TARGET.GeneratorProgID 
GENERATOR_TARGET_GeneratorProgID 
, 
GENERATOR_TARGET.Name 
GENERATOR_TARGET_Name 
, GENPACKAGE.InstanceID InstanceID 
, GENERATOR_TARGET.GENERATOR_TARGETID ID 
, 'GENERATOR_TARGET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENERATOR_TARGET
 join GENPACKAGE on GENPACKAGE.GENPACKAGEID=GENERATOR_TARGET.ParentStructRowID 
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGENMANUALCODE as 
select   GENMANUALCODEID,GENERATOR_TARGETID,GENPACKAGEID
, 
GENMANUALCODE.the_Alias 
GENMANUALCODE_the_Alias 
, 
GENMANUALCODE.Name 
GENMANUALCODE_Name 
, 
GENMANUALCODE.Code 
GENMANUALCODE_Code 
, GENPACKAGE.InstanceID InstanceID 
, GENMANUALCODE.GENMANUALCODEID ID 
, 'GENMANUALCODE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENMANUALCODE
 join GENERATOR_TARGET on GENERATOR_TARGET.GENERATOR_TARGETID=GENMANUALCODE.ParentStructRowID 
 join GENPACKAGE on GENPACKAGE.GENPACKAGEID=GENERATOR_TARGET.ParentStructRowID 
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGENCONTROLS as 
select   GENCONTROLSID,GENERATOR_TARGETID,GENPACKAGEID
, 
GENCONTROLS.ControlProgID 
GENCONTROLS_ControlProgID 
, 
GENCONTROLS.ControlClassID 
GENCONTROLS_ControlClassID 
, 
GENCONTROLS.VersionMinor 
GENCONTROLS_VersionMinor 
, 
GENCONTROLS.VersionMajor 
GENCONTROLS_VersionMajor 
, GENPACKAGE.InstanceID InstanceID 
, GENCONTROLS.GENCONTROLSID ID 
, 'GENCONTROLS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENCONTROLS
 join GENERATOR_TARGET on GENERATOR_TARGET.GENERATOR_TARGETID=GENCONTROLS.ParentStructRowID 
 join GENPACKAGE on GENPACKAGE.GENPACKAGEID=GENERATOR_TARGET.ParentStructRowID 
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGENREFERENCE as 
select   GENREFERENCEID,GENERATOR_TARGETID,GENPACKAGEID
, 
GENREFERENCE.RefClassID 
GENREFERENCE_RefClassID 
, 
GENREFERENCE.VersionMajor 
GENREFERENCE_VersionMajor 
, 
GENREFERENCE.Name 
GENREFERENCE_Name 
, 
GENREFERENCE.VersionMinor 
GENREFERENCE_VersionMinor 
, GENPACKAGE.InstanceID InstanceID 
, GENREFERENCE.GENREFERENCEID ID 
, 'GENREFERENCE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GENREFERENCE
 join GENERATOR_TARGET on GENERATOR_TARGET.GENERATOR_TARGETID=GENREFERENCE.ParentStructRowID 
 join GENPACKAGE on GENPACKAGE.GENPACKAGEID=GENERATOR_TARGET.ParentStructRowID 
 join INSTANCE on GENPACKAGE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTNO_YC as 
select   ITTNO_YCID
, 
ITTNO_YC.YNum 
ITTNO_YC_YNum 
, 
ITTNO_YC.TheTime 
ITTNO_YC_TheTime 
, ITTNO_YC.InstanceID InstanceID 
, ITTNO_YC.ITTNO_YCID ID 
, 'ITTNO_YC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTNO_YC
 join INSTANCE on ITTNO_YC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTNO_CMN as 
select   ITTNO_CMNID
, 
ITTNO_CMN.IN_TIME 
ITTNO_CMN_IN_TIME 
, 
ITTNO_CMN.Out_Time 
ITTNO_CMN_Out_Time 
, ITTNO_CMN.InstanceID InstanceID 
, ITTNO_CMN.ITTNO_CMNID ID 
, 'ITTNO_CMN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTNO_CMN
 join INSTANCE on ITTNO_CMN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTNO_ZC as 
select   ITTNO_ZCID
, 
ITTNO_ZC.ZNum 
ITTNO_ZC_ZNum 
, 
ITTNO_ZC.TheTime 
ITTNO_ZC_TheTime 
, ITTNO_ZC.InstanceID InstanceID 
, ITTNO_ZC.ITTNO_ZCID ID 
, 'ITTNO_ZC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTNO_ZC
 join INSTANCE on ITTNO_ZC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOInfoStoreDef as 
select   InfoStoreDefID
, 
 InfoStoreDef.TheGroup  
InfoStoreDef_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(InfoStoreDef.TheGroup) 
InfoStoreDef_TheGroup 
, 
InfoStoreDef.Name 
InfoStoreDef_Name 
, 
 InfoStoreDef.TheUser  
InfoStoreDef_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(InfoStoreDef.TheUser) 
InfoStoreDef_TheUser 
, 
 InfoStoreDef.InfoStoreType  
InfoStoreDef_InfoStoreType_VAL, 
 decode(InfoStoreDef.InfoStoreType 
, 2 ,'Групповой'
, 1 ,'Персональный'
, 0 ,' Общий'
, '???') 
InfoStoreDef_InfoStoreType 
, InfoStoreDef.InstanceID InstanceID 
, InfoStoreDef.InfoStoreDefID ID 
, 'InfoStoreDef' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from InfoStoreDef
 join INSTANCE on InfoStoreDef.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOInfoStoreDef as 
select   InfoStoreDefID
, 
 InfoStoreDef.InfoStoreType  
InfoStoreDef_InfoStoreType_VAL, 
 decode(InfoStoreDef.InfoStoreType 
, 2 ,'Групповой'
, 1 ,'Персональный'
, 0 ,' Общий'
, '???') 
InfoStoreDef_InfoStoreType 
, 
 InfoStoreDef.TheGroup  
InfoStoreDef_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(InfoStoreDef.TheGroup) 
InfoStoreDef_TheGroup 
, 
InfoStoreDef.Name 
InfoStoreDef_Name 
, 
 InfoStoreDef.TheUser  
InfoStoreDef_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(InfoStoreDef.TheUser) 
InfoStoreDef_TheUser 
, InfoStoreDef.InstanceID InstanceID 
, InfoStoreDef.InfoStoreDefID ID 
, 'InfoStoreDef' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from InfoStoreDef
 join INSTANCE on InfoStoreDef.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOInfoStoreDef as 
select   InfoStoreDefID
, 
 InfoStoreDef.InfoStoreType  
InfoStoreDef_InfoStoreType_VAL, 
 decode(InfoStoreDef.InfoStoreType 
, 2 ,'Групповой'
, 1 ,'Персональный'
, 0 ,' Общий'
, '???') 
InfoStoreDef_InfoStoreType 
, 
 InfoStoreDef.TheGroup  
InfoStoreDef_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(InfoStoreDef.TheGroup) 
InfoStoreDef_TheGroup 
, 
 InfoStoreDef.TheUser  
InfoStoreDef_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(InfoStoreDef.TheUser) 
InfoStoreDef_TheUser 
, 
InfoStoreDef.Name 
InfoStoreDef_Name 
, InfoStoreDef.InstanceID InstanceID 
, InfoStoreDef.InfoStoreDefID ID 
, 'InfoStoreDef' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from InfoStoreDef
 join INSTANCE on InfoStoreDef.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFolder as 
select   FolderID
, 
 Folder.FolderType  
Folder_FolderType_VAL, 
 decode(Folder.FolderType 
, 2 ,'Исходящие'
, 10 ,'Завершенные'
, 0 ,'cls__'
, 5 ,'Календарь'
, 1 ,'Входящие'
, 9 ,'Отложенные'
, 4 ,'Журнал'
, 8 ,'В работе'
, 7 ,'Черновики'
, 6 ,'Отправленные'
, 3 ,'Удаленные'
, '???') 
Folder_FolderType 
, 
Folder.Name 
Folder_Name 
, Folder.InstanceID InstanceID 
, Folder.FolderID ID 
, 'Folder' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Folder
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFolder as 
select   FolderID
, 
Folder.Name 
Folder_Name 
, 
 Folder.FolderType  
Folder_FolderType_VAL, 
 decode(Folder.FolderType 
, 2 ,'Исходящие'
, 10 ,'Завершенные'
, 0 ,'cls__'
, 5 ,'Календарь'
, 1 ,'Входящие'
, 9 ,'Отложенные'
, 4 ,'Журнал'
, 8 ,'В работе'
, 7 ,'Черновики'
, 6 ,'Отправленные'
, 3 ,'Удаленные'
, '???') 
Folder_FolderType 
, Folder.InstanceID InstanceID 
, Folder.FolderID ID 
, 'Folder' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Folder
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOFolder as 
select   FolderID
, 
 Folder.FolderType  
Folder_FolderType_VAL, 
 decode(Folder.FolderType 
, 2 ,'Исходящие'
, 10 ,'Завершенные'
, 0 ,'cls__'
, 5 ,'Календарь'
, 1 ,'Входящие'
, 9 ,'Отложенные'
, 4 ,'Журнал'
, 8 ,'В работе'
, 7 ,'Черновики'
, 6 ,'Отправленные'
, 3 ,'Удаленные'
, '???') 
Folder_FolderType 
, 
Folder.Name 
Folder_Name 
, Folder.InstanceID InstanceID 
, Folder.FolderID ID 
, 'Folder' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Folder
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewSTDInfoStore_Folder as 
select   FolderID
, 
 InfoStoreDef.TheUser  
InfoStoreDef_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(InfoStoreDef.TheUser) 
InfoStoreDef_TheUser 
, 
 InfoStoreDef.TheGroup  
InfoStoreDef_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(InfoStoreDef.TheGroup) 
InfoStoreDef_TheGroup 
, 
 InfoStoreDef.InfoStoreType  
InfoStoreDef_InfoStoreType_VAL, 
 decode(InfoStoreDef.InfoStoreType 
, 2 ,'Групповой'
, 1 ,'Персональный'
, 0 ,' Общий'
, '???') 
InfoStoreDef_InfoStoreType 
, 
InfoStoreDef.Name 
InfoStoreDef_Name 
, 
Folder.Name 
Folder_Name 
, 
 Folder.FolderType  
Folder_FolderType_VAL, 
 decode(Folder.FolderType 
, 2 ,'Исходящие'
, 10 ,'Завершенные'
, 0 ,'cls__'
, 5 ,'Календарь'
, 1 ,'Входящие'
, 9 ,'Отложенные'
, 4 ,'Журнал'
, 8 ,'В работе'
, 7 ,'Черновики'
, 6 ,'Отправленные'
, 3 ,'Удаленные'
, '???') 
Folder_FolderType 
, Folder.InstanceID InstanceID 
, Folder.FolderID ID 
, 'Folder' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Folder
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join InfoStoreDef ON InfoStoreDef.InstanceID=Folder.InstanceID 
/
create or replace view V_AUTOShortcut as 
select   ShortcutID,FolderID
, 
Shortcut.StartMode 
Shortcut_StartMode 
, 
 Shortcut.DocItem  
Shortcut_DocItem_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Shortcut.DocItem) 
Shortcut_DocItem 
, Folder.InstanceID InstanceID 
, Shortcut.ShortcutID ID 
, 'Shortcut' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Shortcut
 join Folder on Folder.FolderID=Shortcut.ParentStructRowID 
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOShortcut as 
select   ShortcutID,FolderID
, 
 Shortcut.DocItem  
Shortcut_DocItem_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Shortcut.DocItem) 
Shortcut_DocItem 
, 
Shortcut.StartMode 
Shortcut_StartMode 
, Folder.InstanceID InstanceID 
, Shortcut.ShortcutID ID 
, 'Shortcut' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Shortcut
 join Folder on Folder.FolderID=Shortcut.ParentStructRowID 
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOShortcut as 
select   ShortcutID,FolderID
, 
 Shortcut.DocItem  
Shortcut_DocItem_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Shortcut.DocItem) 
Shortcut_DocItem 
, 
Shortcut.StartMode 
Shortcut_StartMode 
, Folder.InstanceID InstanceID 
, Shortcut.ShortcutID ID 
, 'Shortcut' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Shortcut
 join Folder on Folder.FolderID=Shortcut.ParentStructRowID 
 join INSTANCE on Folder.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOReports as 
select   ReportsID
, 
 Reports.TheReportExt  
Reports_TheReportExt_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Reports.TheReportExt) 
Reports_TheReportExt 
, 
 Reports.ReportType  
Reports_ReportType_VAL, 
 decode(Reports.ReportType 
, 1 ,'Двумерная матрица'
, 0 ,'Таблица'
, 3 ,'Экспорт по WORD шаблону'
, 2 ,'Только расчет'
, 4 ,'Экспорт по Excel шаблону'
, '???') 
Reports_ReportType 
, 
 Reports.PrepareMethod  
Reports_PrepareMethod_ID, 
 MTZ.Func.SHAREDMETHOD_BRIEF_F(Reports.PrepareMethod) 
Reports_PrepareMethod 
, 
Reports.ReportView 
Reports_ReportView 
, 
Reports.Caption 
Reports_Caption 
, 
Reports.ReportFile 
Reports_ReportFile 
, 
Reports.Name 
Reports_Name 
, 
Reports.TheComment 
Reports_TheComment 
, Reports.InstanceID InstanceID 
, Reports.ReportsID ID 
, 'Reports' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Reports
 join INSTANCE on Reports.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindReports as 
select   ReportsID
, 
Reports.Name 
Reports_Name 
, Reports.InstanceID InstanceID 
, Reports.ReportsID ID 
, 'Reports' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Reports
 join INSTANCE on Reports.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTORPTStruct as 
select   RPTStructID
, 
RPTStruct.Name 
RPTStruct_Name 
, 
RPTStruct.Caption 
RPTStruct_Caption 
, RPTStruct.InstanceID InstanceID 
, RPTStruct.RPTStructID ID 
, 'RPTStruct' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RPTStruct
 join INSTANCE on RPTStruct.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTORPTFields as 
select   RPTFieldsID,RPTStructID
, 
RPTFields.Caption 
RPTFields_Caption 
, 
RPTFields.FieldSize 
RPTFields_FieldSize 
, 
RPTFields.Name 
RPTFields_Name 
, 
 RPTFields.FieldType  
RPTFields_FieldType_ID, 
 MTZ.Func.FIELDTYPE_BRIEF_F(RPTFields.FieldType) 
RPTFields_FieldType 
, RPTStruct.InstanceID InstanceID 
, RPTFields.RPTFieldsID ID 
, 'RPTFields' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RPTFields
 join RPTStruct on RPTStruct.RPTStructID=RPTFields.ParentStructRowID 
 join INSTANCE on RPTStruct.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTORPTFormula as 
select   RPTFormulaID
, 
 RPTFormula.Platform  
RPTFormula_Platform_ID, 
 MTZ.Func.GENERATOR_TARGET_BRIEF_F(RPTFormula.Platform) 
RPTFormula_Platform 
, 
RPTFormula.Code 
RPTFormula_Code 
, 
RPTFormula.Name 
RPTFormula_Name 
, RPTFormula.InstanceID InstanceID 
, RPTFormula.RPTFormulaID ID 
, 'RPTFormula' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from RPTFormula
 join INSTANCE on RPTFormula.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTPR_DEF as 
select   ITTPR_DEFID
, 
ITTPR_DEF.InBoxes 
ITTPR_DEF_InBoxes 
, 
ITTPR_DEF.the_Description 
ITTPR_DEF_Description 
, 
ITTPR_DEF.KillPlace 
ITTPR_DEF_KillPlace 
, 
ITTPR_DEF.Poddon 
ITTPR_DEF_Poddon 
, 
ITTPR_DEF.Good 
ITTPR_DEF_Good 
, 
ITTPR_DEF.TheDate 
ITTPR_DEF_TheDate 
, 
ITTPR_DEF.Client 
ITTPR_DEF_Client 
, 
ITTPR_DEF.OutBoxes 
ITTPR_DEF_OutBoxes 
, 
ITTPR_DEF.Country 
ITTPR_DEF_Country 
, 
ITTPR_DEF.Factory 
ITTPR_DEF_Factory 
, 
ITTPR_DEF.InWeight 
ITTPR_DEF_InWeight 
, 
ITTPR_DEF.Vesi 
ITTPR_DEF_Vesi 
, 
ITTPR_DEF.Moroz 
ITTPR_DEF_Moroz 
, 
ITTPR_DEF.OutWeight 
ITTPR_DEF_OutWeight 
, 
ITTPR_DEF.WeightDelta 
ITTPR_DEF_WeightDelta 
, 
ITTPR_DEF.Brak 
ITTPR_DEF_Brak 
, ITTPR_DEF.InstanceID InstanceID 
, ITTPR_DEF.ITTPR_DEFID ID 
, 'ITTPR_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTPR_DEF
 join INSTANCE on ITTPR_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZExt_MTZExt_def as 
select   MTZExt_defID
, 
MTZExt_def.TheDescription 
MTZExt_def_TheDescription 
, 
 MTZExt_def.ExtType  
MTZExt_def_ExtType_VAL, 
 decode(MTZExt_def.ExtType 
, 1 ,'OnFormExt'
, 7 ,'CodeGenerator'
, 3 ,'JrnlAddExt'
, 6 ,'VerifyRowExt'
, 0 ,'StatusExt'
, 8 ,'ARMGenerator'
, 5 ,'DefaultExt'
, 2 ,'CustomExt'
, 4 ,'JrnlRunExt'
, '???') 
MTZExt_def_ExtType 
, 
MTZExt_def.Name 
MTZExt_def_Name 
, MTZExt_def.InstanceID InstanceID 
, MTZExt_def.MTZExt_defID ID 
, 'MTZExt_def' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZExt_def
 join INSTANCE on MTZExt_def.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZExt_def as 
select   MTZExt_defID
, 
 MTZExt_def.ExtType  
MTZExt_def_ExtType_VAL, 
 decode(MTZExt_def.ExtType 
, 1 ,'OnFormExt'
, 7 ,'CodeGenerator'
, 3 ,'JrnlAddExt'
, 6 ,'VerifyRowExt'
, 0 ,'StatusExt'
, 8 ,'ARMGenerator'
, 5 ,'DefaultExt'
, 2 ,'CustomExt'
, 4 ,'JrnlRunExt'
, '???') 
MTZExt_def_ExtType 
, 
MTZExt_def.TheDescription 
MTZExt_def_TheDescription 
, 
MTZExt_def.Name 
MTZExt_def_Name 
, MTZExt_def.InstanceID InstanceID 
, MTZExt_def.MTZExt_defID ID 
, 'MTZExt_def' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZExt_def
 join INSTANCE on MTZExt_def.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZExtRel as 
select   MTZExtRelID
, 
MTZExtRel.TheClassName 
MTZExtRel_TheClassName 
, 
 MTZExtRel.ThePlatform  
MTZExtRel_ThePlatform_VAL, 
 decode(MTZExtRel.ThePlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
MTZExtRel_ThePlatform 
, 
MTZExtRel.TheLibraryName 
MTZExtRel_TheLibraryName 
, MTZExtRel.InstanceID InstanceID 
, MTZExtRel.MTZExtRelID ID 
, 'MTZExtRel' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZExtRel
 join INSTANCE on MTZExtRel.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTCS_LIN as 
select   ITTCS_LINID
, 
 ITTCS_LIN.UseSrv  
ITTCS_LIN_UseSrv_VAL, 
 decode(ITTCS_LIN.UseSrv 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTCS_LIN_UseSrv 
, 
 ITTCS_LIN.SRV  
ITTCS_LIN_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTCS_LIN.SRV) 
ITTCS_LIN_SRV 
, ITTCS_LIN.InstanceID InstanceID 
, ITTCS_LIN.ITTCS_LINID ID 
, 'ITTCS_LIN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTCS_LIN
 join INSTANCE on ITTCS_LIN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTCS_LIN as 
select   ITTCS_LINID
, 
 ITTCS_LIN.SRV  
ITTCS_LIN_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTCS_LIN.SRV) 
ITTCS_LIN_SRV 
, 
 ITTCS_LIN.UseSrv  
ITTCS_LIN_UseSrv_VAL, 
 decode(ITTCS_LIN.UseSrv 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTCS_LIN_UseSrv 
, ITTCS_LIN.InstanceID InstanceID 
, ITTCS_LIN.ITTCS_LINID ID 
, 'ITTCS_LIN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTCS_LIN
 join INSTANCE on ITTCS_LIN.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTCS_DEF as 
select   ITTCS_DEFID
, 
 ITTCS_DEF.CLIENTCODE  
ITTCS_DEF_CLIENTCODE_ID, 
ITTCS_DEF.CLIENTCODE 
ITTCS_DEF_CLIENTCODE 
, ITTCS_DEF.InstanceID InstanceID 
, ITTCS_DEF.ITTCS_DEFID ID 
, 'ITTCS_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTCS_DEF
 join INSTANCE on ITTCS_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTCS_DEF as 
select   ITTCS_DEFID
, 
 ITTCS_DEF.CLIENTCODE  
ITTCS_DEF_CLIENTCODE_ID, 
ITTCS_DEF.CLIENTCODE 
ITTCS_DEF_CLIENTCODE 
, ITTCS_DEF.InstanceID InstanceID 
, ITTCS_DEF.ITTCS_DEFID ID 
, 'ITTCS_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTCS_DEF
 join INSTANCE on ITTCS_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOSysLog as 
select   SysLogID
, 
SysLog.LogInstanceID 
SysLog_LogInstanceID 
, 
SysLog.VERB 
SysLog_VERB 
, 
SysLog.LogStructID 
SysLog_LogStructID 
, 
SysLog.the_Resource 
SysLog_the_Resource 
, 
 SysLog.TheSession  
SysLog_TheSession_ID, 
 MTZ.Func.the_Session_BRIEF_F(SysLog.TheSession) 
SysLog_TheSession 
, SysLog.InstanceID InstanceID 
, SysLog.SysLogID ID 
, 'SysLog' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from SysLog
 join INSTANCE on SysLog.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOthe_Session as 
select   the_SessionID
, 
 the_Session.Usersid  
the_Session_Usersid_ID, 
 MTZ.Func.Users_BRIEF_F(the_Session.Usersid) 
the_Session_Usersid 
, 
the_Session.LastAccess 
the_Session_LastAccess 
, 
the_Session.ClosedAt 
the_Session_ClosedAt 
, 
the_Session.StartAt 
the_Session_StartAt 
, 
 the_Session.Closed  
the_Session_Closed_VAL, 
 decode(the_Session.Closed 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
the_Session_Closed 
, 
 the_Session.UserRole  
the_Session_UserRole_ID, 
 MTZ.Func.Groups_BRIEF_F(the_Session.UserRole) 
the_Session_UserRole 
, the_Session.InstanceID InstanceID 
, the_Session.the_SessionID ID 
, 'the_Session' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from the_Session
 join INSTANCE on the_Session.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOLogReader as 
select   LogReaderID
, 
LogReader.Name 
LogReader_Name 
, 
LogReader.LastStart 
LogReader_LastStart 
, 
LogReader.StartInterval 
LogReader_StartInterval 
, 
LogReader.ReadMarker 
LogReader_ReadMarker 
, 
LogReader.LastStop 
LogReader_LastStop 
, 
LogReader.AutoProgid 
LogReader_AutoProgid 
, 
 LogReader.AutoStart  
LogReader_AutoStart_VAL, 
 decode(LogReader.AutoStart 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
LogReader_AutoStart 
, LogReader.InstanceID InstanceID 
, LogReader.LogReaderID ID 
, 'LogReader' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from LogReader
 join INSTANCE on LogReader.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOVerb as 
select   VerbID
, 
Verb.Name 
Verb_Name 
, Verb.InstanceID InstanceID 
, Verb.VerbID ID 
, 'Verb' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Verb
 join INSTANCE on Verb.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindUsers as 
select   UsersID
, 
Users.LocalPhone 
Users_LocalPhone 
, 
Users.Family 
Users_Family 
, 
Users.SurName 
Users_SurName 
, 
Users.MobilePhone 
Users_MobilePhone 
, 
Users.EMail 
Users_EMail 
, 
Users.Phone 
Users_Phone 
, 
Users.Name 
Users_Name 
, Users.InstanceID InstanceID 
, Users.UsersID ID 
, 'Users' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Users
 join INSTANCE on Users.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOUsers as 
select   UsersID
, 
Users.Login 
Users_Login 
, 
Users.Phone 
Users_Phone 
, 
Users.BirthDay 
Users_BirthDay 
, 
Users.Photo 
Users_Photo 
, 
Users.Name 
Users_Name 
, 
Users.LocalPhone 
Users_LocalPhone 
, 
Users.CertificateID 
Users_CertificateID 
, 
 Users.PersonaData  
Users_PersonaData_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Users.PersonaData) 
Users_PersonaData 
, 
Users.CertData 
Users_CertData 
, 
Users.SurName 
Users_SurName 
, 
Users.MobilePhone 
Users_MobilePhone 
, 
 Users.Activity  
Users_Activity_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Users.Activity) 
Users_Activity 
, 
 Users.ClientDef  
Users_ClientDef_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Users.ClientDef) 
Users_ClientDef 
, 
Users.Password 
Users_Password 
, 
Users.EMail 
Users_EMail 
, 
Users.Family 
Users_Family 
, 
Users.DomaiName 
Users_DomaiName 
, Users.InstanceID InstanceID 
, Users.UsersID ID 
, 'Users' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Users
 join INSTANCE on Users.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOUsers as 
select   UsersID
, 
Users.Login 
Users_Login 
, 
Users.Name 
Users_Name 
, 
Users.Phone 
Users_Phone 
, 
Users.EMail 
Users_EMail 
, 
 Users.PersonaData  
Users_PersonaData_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Users.PersonaData) 
Users_PersonaData 
, 
Users.PositionU 
Users_PositionU 
, 
Users.Family 
Users_Family 
, 
 Users.ClientDef  
Users_ClientDef_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Users.ClientDef) 
Users_ClientDef 
, 
Users.CertData 
Users_CertData 
, 
Users.CertificateID 
Users_CertificateID 
, 
Users.WorkPlace 
Users_WorkPlace 
, 
Users.SurName 
Users_SurName 
, 
Users.MobilePhone 
Users_MobilePhone 
, 
Users.BirthDay 
Users_BirthDay 
, 
Users.Password 
Users_Password 
, 
Users.LocalPhone 
Users_LocalPhone 
, 
Users.Photo 
Users_Photo 
, 
Users.DomaiName 
Users_DomaiName 
, 
 Users.Activity  
Users_Activity_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(Users.Activity) 
Users_Activity 
, Users.InstanceID InstanceID 
, Users.UsersID ID 
, 'Users' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Users
 join INSTANCE on Users.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGroups as 
select   GroupsID
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, Groups.GroupsID ID 
, 'Groups' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Groups
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGroups as 
select   GroupsID
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, Groups.GroupsID ID 
, 'Groups' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Groups
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindGroups as 
select   GroupsID
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, Groups.GroupsID ID 
, 'Groups' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Groups
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZUsers_GroupUser as 
select   GroupUserID,GroupsID
, 
 GroupUser.TheUser  
GroupUser_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(GroupUser.TheUser) 
GroupUser_TheUser 
, 
Groups.Name 
Groups_Name 
, Groups.InstanceID InstanceID 
, GroupUser.GroupUserID ID 
, 'GroupUser' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GroupUser
 join Groups on Groups.GroupsID=GroupUser.ParentStructRowID 
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGroupUser as 
select   GroupUserID,GroupsID
, 
 GroupUser.TheUser  
GroupUser_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(GroupUser.TheUser) 
GroupUser_TheUser 
, Groups.InstanceID InstanceID 
, GroupUser.GroupUserID ID 
, 'GroupUser' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GroupUser
 join Groups on Groups.GroupsID=GroupUser.ParentStructRowID 
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOGroupUser as 
select   GroupUserID,GroupsID
, 
 GroupUser.TheUser  
GroupUser_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(GroupUser.TheUser) 
GroupUser_TheUser 
, Groups.InstanceID InstanceID 
, GroupUser.GroupUserID ID 
, 'GroupUser' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from GroupUser
 join Groups on Groups.GroupsID=GroupUser.ParentStructRowID 
 join INSTANCE on Groups.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_FindMTZSEC_RIGHT as 
select   MTZSEC_RIGHTID
, 
MTZSEC_RIGHT.ProtectedItem 
MTZSEC_RIGHT_ProtectedItem 
, 
MTZSEC_RIGHT.Piority 
MTZSEC_RIGHT_Piority 
, 
 MTZSEC_RIGHT.Allow  
MTZSEC_RIGHT_Allow_VAL, 
 decode(MTZSEC_RIGHT.Allow 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZSEC_RIGHT_Allow 
, 
 MTZSEC_RIGHT.TheGroup  
MTZSEC_RIGHT_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(MTZSEC_RIGHT.TheGroup) 
MTZSEC_RIGHT_TheGroup 
, MTZSEC_RIGHT.InstanceID InstanceID 
, MTZSEC_RIGHT.MTZSEC_RIGHTID ID 
, 'MTZSEC_RIGHT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZSEC_RIGHT
 join INSTANCE on MTZSEC_RIGHT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZSEC_RIGHT as 
select   MTZSEC_RIGHTID
, 
MTZSEC_RIGHT.Piority 
MTZSEC_RIGHT_Piority 
, 
 MTZSEC_RIGHT.Allow  
MTZSEC_RIGHT_Allow_VAL, 
 decode(MTZSEC_RIGHT.Allow 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZSEC_RIGHT_Allow 
, 
 MTZSEC_RIGHT.TheGroup  
MTZSEC_RIGHT_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(MTZSEC_RIGHT.TheGroup) 
MTZSEC_RIGHT_TheGroup 
, 
MTZSEC_RIGHT.ProtectedItem 
MTZSEC_RIGHT_ProtectedItem 
, MTZSEC_RIGHT.InstanceID InstanceID 
, MTZSEC_RIGHT.MTZSEC_RIGHTID ID 
, 'MTZSEC_RIGHT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZSEC_RIGHT
 join INSTANCE on MTZSEC_RIGHT.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_USER as 
select   ROLES_USERID
, 
 ROLES_USER.TheUser  
ROLES_USER_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(ROLES_USER.TheUser) 
ROLES_USER_TheUser 
, ROLES_USER.InstanceID InstanceID 
, ROLES_USER.ROLES_USERID ID 
, 'ROLES_USER' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_USER
 join INSTANCE on ROLES_USER.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_USER as 
select   ROLES_USERID
, 
 ROLES_USER.TheUser  
ROLES_USER_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(ROLES_USER.TheUser) 
ROLES_USER_TheUser 
, ROLES_USER.InstanceID InstanceID 
, ROLES_USER.ROLES_USERID ID 
, 'ROLES_USER' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_USER
 join INSTANCE on ROLES_USER.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_MAP as 
select   ROLES_MAPID
, 
 ROLES_MAP.TheGroup  
ROLES_MAP_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(ROLES_MAP.TheGroup) 
ROLES_MAP_TheGroup 
, ROLES_MAP.InstanceID InstanceID 
, ROLES_MAP.ROLES_MAPID ID 
, 'ROLES_MAP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_MAP
 join INSTANCE on ROLES_MAP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_MAP as 
select   ROLES_MAPID
, 
 ROLES_MAP.TheGroup  
ROLES_MAP_TheGroup_ID, 
 MTZ.Func.Groups_BRIEF_F(ROLES_MAP.TheGroup) 
ROLES_MAP_TheGroup 
, ROLES_MAP.InstanceID InstanceID 
, ROLES_MAP.ROLES_MAPID ID 
, 'ROLES_MAP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_MAP
 join INSTANCE on ROLES_MAP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_DOC as 
select   ROLES_DOCID
, 
 ROLES_DOC.The_Document  
ROLES_DOC_The_Document_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(ROLES_DOC.The_Document) 
ROLES_DOC_The_Document 
, 
 ROLES_DOC.AllowDeleteDoc  
ROLES_DOC_AllowDeleteDoc_VAL, 
 decode(ROLES_DOC.AllowDeleteDoc 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_AllowDeleteDoc 
, 
 ROLES_DOC.The_Denied  
ROLES_DOC_The_Denied_VAL, 
 decode(ROLES_DOC.The_Denied 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_The_Denied 
, ROLES_DOC.InstanceID InstanceID 
, ROLES_DOC.ROLES_DOCID ID 
, 'ROLES_DOC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DOC
 join INSTANCE on ROLES_DOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_DOC as 
select   ROLES_DOCID
, 
 ROLES_DOC.AllowDeleteDoc  
ROLES_DOC_AllowDeleteDoc_VAL, 
 decode(ROLES_DOC.AllowDeleteDoc 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_AllowDeleteDoc 
, 
 ROLES_DOC.The_Denied  
ROLES_DOC_The_Denied_VAL, 
 decode(ROLES_DOC.The_Denied 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_The_Denied 
, 
 ROLES_DOC.The_Document  
ROLES_DOC_The_Document_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(ROLES_DOC.The_Document) 
ROLES_DOC_The_Document 
, ROLES_DOC.InstanceID InstanceID 
, ROLES_DOC.ROLES_DOCID ID 
, 'ROLES_DOC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DOC
 join INSTANCE on ROLES_DOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_DOC_STATE as 
select   ROLES_DOC_STATEID,ROLES_DOCID
, 
 ROLES_DOC_STATE.StateChangeDisabled  
ROLES_DOC_STATE_StateChangeDisabled_VAL, 
 decode(ROLES_DOC_STATE.StateChangeDisabled 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_STATE_StateChangeDisabled 
, 
 ROLES_DOC_STATE.The_Mode  
ROLES_DOC_STATE_The_Mode_ID, 
 MTZ.Func.OBJECTMODE_BRIEF_F(ROLES_DOC_STATE.The_Mode) 
ROLES_DOC_STATE_The_Mode 
, 
 ROLES_DOC_STATE.The_State  
ROLES_DOC_STATE_The_State_ID, 
 MTZ.Func.OBJSTATUS_BRIEF_F(ROLES_DOC_STATE.The_State) 
ROLES_DOC_STATE_The_State 
, 
 ROLES_DOC_STATE.AllowDelete  
ROLES_DOC_STATE_AllowDelete_VAL, 
 decode(ROLES_DOC_STATE.AllowDelete 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_STATE_AllowDelete 
, ROLES_DOC.InstanceID InstanceID 
, ROLES_DOC_STATE.ROLES_DOC_STATEID ID 
, 'ROLES_DOC_STATE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DOC_STATE
 join ROLES_DOC on ROLES_DOC.ROLES_DOCID=ROLES_DOC_STATE.ParentStructRowID 
 join INSTANCE on ROLES_DOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_DOC_STATE as 
select   ROLES_DOC_STATEID,ROLES_DOCID
, 
 ROLES_DOC_STATE.The_Mode  
ROLES_DOC_STATE_The_Mode_ID, 
 MTZ.Func.OBJECTMODE_BRIEF_F(ROLES_DOC_STATE.The_Mode) 
ROLES_DOC_STATE_The_Mode 
, 
 ROLES_DOC_STATE.StateChangeDisabled  
ROLES_DOC_STATE_StateChangeDisabled_VAL, 
 decode(ROLES_DOC_STATE.StateChangeDisabled 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_STATE_StateChangeDisabled 
, 
 ROLES_DOC_STATE.AllowDelete  
ROLES_DOC_STATE_AllowDelete_VAL, 
 decode(ROLES_DOC_STATE.AllowDelete 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DOC_STATE_AllowDelete 
, 
 ROLES_DOC_STATE.The_State  
ROLES_DOC_STATE_The_State_ID, 
 MTZ.Func.OBJSTATUS_BRIEF_F(ROLES_DOC_STATE.The_State) 
ROLES_DOC_STATE_The_State 
, ROLES_DOC.InstanceID InstanceID 
, ROLES_DOC_STATE.ROLES_DOC_STATEID ID 
, 'ROLES_DOC_STATE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DOC_STATE
 join ROLES_DOC on ROLES_DOC.ROLES_DOCID=ROLES_DOC_STATE.ParentStructRowID 
 join INSTANCE on ROLES_DOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_DEF as 
select   ROLES_DEFID
, 
 ROLES_DEF.ListCFG_Denied  
ROLES_DEF_ListCFG_Denied_VAL, 
 decode(ROLES_DEF.ListCFG_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_ListCFG_Denied 
, 
ROLES_DEF.TheComment 
ROLES_DEF_TheComment 
, 
 ROLES_DEF.FormCFG_Denied  
ROLES_DEF_FormCFG_Denied_VAL, 
 decode(ROLES_DEF.FormCFG_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FormCFG_Denied 
, 
 ROLES_DEF.FileExch_Denied  
ROLES_DEF_FileExch_Denied_VAL, 
 decode(ROLES_DEF.FileExch_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FileExch_Denied 
, 
 ROLES_DEF.RightsSet_Denied  
ROLES_DEF_RightsSet_Denied_VAL, 
 decode(ROLES_DEF.RightsSet_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_RightsSet_Denied 
, 
ROLES_DEF.name 
ROLES_DEF_name 
, ROLES_DEF.InstanceID InstanceID 
, ROLES_DEF.ROLES_DEFID ID 
, 'ROLES_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DEF
 join INSTANCE on ROLES_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_DEF as 
select   ROLES_DEFID
, 
ROLES_DEF.TheComment 
ROLES_DEF_TheComment 
, 
 ROLES_DEF.FormCFG_Denied  
ROLES_DEF_FormCFG_Denied_VAL, 
 decode(ROLES_DEF.FormCFG_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FormCFG_Denied 
, 
ROLES_DEF.name 
ROLES_DEF_name 
, 
 ROLES_DEF.RightsSet_Denied  
ROLES_DEF_RightsSet_Denied_VAL, 
 decode(ROLES_DEF.RightsSet_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_RightsSet_Denied 
, 
 ROLES_DEF.FileExch_Denied  
ROLES_DEF_FileExch_Denied_VAL, 
 decode(ROLES_DEF.FileExch_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FileExch_Denied 
, 
 ROLES_DEF.ListCFG_Denied  
ROLES_DEF_ListCFG_Denied_VAL, 
 decode(ROLES_DEF.ListCFG_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_ListCFG_Denied 
, ROLES_DEF.InstanceID InstanceID 
, ROLES_DEF.ROLES_DEFID ID 
, 'ROLES_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DEF
 join INSTANCE on ROLES_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewROLES_ROLES_DEF as 
select   ROLES_DEFID
, 
ROLES_DEF.name 
ROLES_DEF_name 
, 
 ROLES_DEF.RightsSet_Denied  
ROLES_DEF_RightsSet_Denied_VAL, 
 decode(ROLES_DEF.RightsSet_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_RightsSet_Denied 
, 
ROLES_DEF.TheComment 
ROLES_DEF_TheComment 
, 
 ROLES_DEF.FileExch_Denied  
ROLES_DEF_FileExch_Denied_VAL, 
 decode(ROLES_DEF.FileExch_Denied 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_DEF_FileExch_Denied 
, ROLES_DEF.InstanceID InstanceID 
, ROLES_DEF.ROLES_DEFID ID 
, 'ROLES_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_DEF
 join INSTANCE on ROLES_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_REPORTS as 
select   ROLES_REPORTSID
, 
 ROLES_REPORTS.The_Report  
ROLES_REPORTS_The_Report_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ROLES_REPORTS.The_Report) 
ROLES_REPORTS_The_Report 
, ROLES_REPORTS.InstanceID InstanceID 
, ROLES_REPORTS.ROLES_REPORTSID ID 
, 'ROLES_REPORTS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_REPORTS
 join INSTANCE on ROLES_REPORTS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_REPORTS as 
select   ROLES_REPORTSID
, 
 ROLES_REPORTS.The_Report  
ROLES_REPORTS_The_Report_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ROLES_REPORTS.The_Report) 
ROLES_REPORTS_The_Report 
, ROLES_REPORTS.InstanceID InstanceID 
, ROLES_REPORTS.ROLES_REPORTSID ID 
, 'ROLES_REPORTS' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_REPORTS
 join INSTANCE on ROLES_REPORTS.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_WP as 
select   ROLES_WPID
, 
 ROLES_WP.WP  
ROLES_WP_WP_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ROLES_WP.WP) 
ROLES_WP_WP 
, ROLES_WP.InstanceID InstanceID 
, ROLES_WP.ROLES_WPID ID 
, 'ROLES_WP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_WP
 join INSTANCE on ROLES_WP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_WP as 
select   ROLES_WPID
, 
 ROLES_WP.WP  
ROLES_WP_WP_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ROLES_WP.WP) 
ROLES_WP_WP 
, ROLES_WP.InstanceID InstanceID 
, ROLES_WP.ROLES_WPID ID 
, 'ROLES_WP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_WP
 join INSTANCE on ROLES_WP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_ACT as 
select   ROLES_ACTID,ROLES_WPID
, 
 ROLES_ACT.EntryPoints  
ROLES_ACT_EntryPoints_ID, 
 MTZ.Func.EntryPoints_BRIEF_F(ROLES_ACT.EntryPoints) 
ROLES_ACT_EntryPoints 
, 
 ROLES_ACT.Accesible  
ROLES_ACT_Accesible_VAL, 
 decode(ROLES_ACT.Accesible 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_ACT_Accesible 
, ROLES_WP.InstanceID InstanceID 
, ROLES_ACT.ROLES_ACTID ID 
, 'ROLES_ACT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_ACT
 join ROLES_WP on ROLES_WP.ROLES_WPID=ROLES_ACT.ParentStructRowID 
 join INSTANCE on ROLES_WP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOROLES_ACT as 
select   ROLES_ACTID,ROLES_WPID
, 
 ROLES_ACT.Accesible  
ROLES_ACT_Accesible_VAL, 
 decode(ROLES_ACT.Accesible 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
ROLES_ACT_Accesible 
, 
 ROLES_ACT.EntryPoints  
ROLES_ACT_EntryPoints_ID, 
 MTZ.Func.EntryPoints_BRIEF_F(ROLES_ACT.EntryPoints) 
ROLES_ACT_EntryPoints 
, ROLES_WP.InstanceID InstanceID 
, ROLES_ACT.ROLES_ACTID ID 
, 'ROLES_ACT' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ROLES_ACT
 join ROLES_WP on ROLES_WP.ROLES_WPID=ROLES_ACT.ParentStructRowID 
 join INSTANCE on ROLES_WP.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOJournalColumn as 
select   JournalColumnID
, 
JournalColumn.sequence 
JournalColumn_sequence 
, 
JournalColumn.name 
JournalColumn_name 
, 
 JournalColumn.ColSort  
JournalColumn_ColSort_VAL, 
 decode(JournalColumn.ColSort 
, 0 ,'As String'
, 1 ,'As Numeric'
, 2 ,'As Date'
, '???') 
JournalColumn_ColSort 
, 
 JournalColumn.ColumnAlignment  
JournalColumn_ColumnAlignment_VAL, 
 decode(JournalColumn.ColumnAlignment 
, 4 ,'Center Center'
, 3 ,'Center Top'
, 6 ,'Right Top'
, 8 ,'Right Bottom'
, 2 ,'Left Bottom'
, 7 ,'Right Center'
, 5 ,'Center Bottom'
, 1 ,'Left Center'
, 0 ,'Left Top'
, '???') 
JournalColumn_ColumnAlignment 
, 
 JournalColumn.GroupAggregation  
JournalColumn_GroupAggregation_VAL, 
 decode(JournalColumn.GroupAggregation 
, 5 ,'MAX'
, 1 ,'AVG'
, 3 ,'SUM'
, 2 ,'COUNT'
, 4 ,'MIN'
, 6 ,'CUSTOM'
, 0 ,'none'
, '???') 
JournalColumn_GroupAggregation 
, JournalColumn.InstanceID InstanceID 
, JournalColumn.JournalColumnID ID 
, 'JournalColumn' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from JournalColumn
 join INSTANCE on JournalColumn.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOJColumnSource as 
select   JColumnSourceID,JournalColumnID
, 
 JColumnSource.SrcPartView  
JColumnSource_SrcPartView_ID, 
 MTZ.Func.JournalSrc_BRIEF_F(JColumnSource.SrcPartView) 
JColumnSource_SrcPartView 
, 
JColumnSource.ViewField 
JColumnSource_ViewField 
, JournalColumn.InstanceID InstanceID 
, JColumnSource.JColumnSourceID ID 
, 'JColumnSource' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from JColumnSource
 join JournalColumn on JournalColumn.JournalColumnID=JColumnSource.ParentStructRowID 
 join INSTANCE on JournalColumn.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOJournal as 
select   JournalID
, 
Journal.Name 
Journal_Name 
, 
Journal.the_Alias 
Journal_the_Alias 
, 
Journal.TheComment 
Journal_TheComment 
, Journal.InstanceID InstanceID 
, Journal.JournalID ID 
, 'Journal' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Journal
 join INSTANCE on Journal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZJrnl_Jo as 
select   JournalID
, 
Journal.TheComment 
Journal_TheComment 
, 
Journal.Name 
Journal_Name 
, 
Journal.the_Alias 
Journal_the_Alias 
, Journal.InstanceID InstanceID 
, Journal.JournalID ID 
, 'Journal' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from Journal
 join INSTANCE on Journal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOJournalSrc as 
select   JournalSrcID
, 
JournalSrc.OpenMode 
JournalSrc_OpenMode 
, 
JournalSrc.PartView 
JournalSrc_PartView 
, 
JournalSrc.ViewAlias 
JournalSrc_ViewAlias 
, 
 JournalSrc.OnRun  
JournalSrc_OnRun_VAL, 
 decode(JournalSrc.OnRun 
, 2 ,'Открыть документ'
, 1 ,'Открыть строку'
, 0 ,'Ничего не делать'
, '???') 
JournalSrc_OnRun 
, JournalSrc.InstanceID InstanceID 
, JournalSrc.JournalSrcID ID 
, 'JournalSrc' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from JournalSrc
 join INSTANCE on JournalSrc.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZ_Inst_Build as 
select   MTZ_Inst_BuildID
, 
MTZ_Inst_Build.InstallDir 
MTZ_Inst_Build_InstallDir 
, 
MTZ_Inst_Build.PRODUCT_WEB_SITE 
MTZ_Inst_Build_PRODUCT_WEB_SITE 
, 
MTZ_Inst_Build.ShortCutDir 
MTZ_Inst_Build_ShortCutDir 
, 
 MTZ_Inst_Build.MainFileRef  
MTZ_Inst_Build_MainFileRef_ID, 
 MTZ.Func.MTZ_Inst_Sec_Files_BRIEF_F(MTZ_Inst_Build.MainFileRef) 
MTZ_Inst_Build_MainFileRef 
, 
MTZ_Inst_Build.PRODUCT_VERSION 
MTZ_Inst_Build_PRODUCT_VERSION 
, 
MTZ_Inst_Build.LicensFilePath 
MTZ_Inst_Build_LicensFilePath 
, 
MTZ_Inst_Build.PRODUCT_PUBLISHER 
MTZ_Inst_Build_PRODUCT_PUBLISHER 
, 
MTZ_Inst_Build.PRODUCT_NAME 
MTZ_Inst_Build_PRODUCT_NAME 
, MTZ_Inst_Build.InstanceID InstanceID 
, MTZ_Inst_Build.MTZ_Inst_BuildID ID 
, 'MTZ_Inst_Build' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Build
 join INSTANCE on MTZ_Inst_Build.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZ_Install_MTZ_Inst_Build as 
select   MTZ_Inst_BuildID
, 
MTZ_Inst_Build.LicensFilePath 
MTZ_Inst_Build_LicensFilePath 
, 
MTZ_Inst_Build.PRODUCT_NAME 
MTZ_Inst_Build_PRODUCT_NAME 
, 
MTZ_Inst_Build.InstallDir 
MTZ_Inst_Build_InstallDir 
, 
MTZ_Inst_Build.PRODUCT_VERSION 
MTZ_Inst_Build_PRODUCT_VERSION 
, 
MTZ_Inst_Build.PRODUCT_PUBLISHER 
MTZ_Inst_Build_PRODUCT_PUBLISHER 
, 
MTZ_Inst_Build.PRODUCT_WEB_SITE 
MTZ_Inst_Build_PRODUCT_WEB_SITE 
, 
 MTZ_Inst_Build.MainFileRef  
MTZ_Inst_Build_MainFileRef_ID, 
 MTZ.Func.MTZ_Inst_Sec_Files_BRIEF_F(MTZ_Inst_Build.MainFileRef) 
MTZ_Inst_Build_MainFileRef 
, 
MTZ_Inst_Build.ShortCutDir 
MTZ_Inst_Build_ShortCutDir 
, MTZ_Inst_Build.InstanceID InstanceID 
, MTZ_Inst_Build.MTZ_Inst_BuildID ID 
, 'MTZ_Inst_Build' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Build
 join INSTANCE on MTZ_Inst_Build.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZ_Inst_Build_Sec as 
select   MTZ_Inst_Build_SecID,MTZ_Inst_BuildID
, 
 MTZ_Inst_Build_Sec.IsRewriteSectionDesc  
MTZ_Inst_Build_Sec_IsRewriteSectionDesc_VAL, 
 decode(MTZ_Inst_Build_Sec.IsRewriteSectionDesc 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Build_Sec_IsRewriteSectionDesc 
, 
 MTZ_Inst_Build_Sec.TheSection  
MTZ_Inst_Build_Sec_TheSection_ID, 
 MTZ.Func.MTZ_Inst_Section_BRIEF_F(MTZ_Inst_Build_Sec.TheSection) 
MTZ_Inst_Build_Sec_TheSection 
, 
MTZ_Inst_Build_Sec.SEQ 
MTZ_Inst_Build_Sec_SEQ 
, 
MTZ_Inst_Build_Sec.TheDescription 
MTZ_Inst_Build_Sec_TheDescription 
, MTZ_Inst_Build.InstanceID InstanceID 
, MTZ_Inst_Build_Sec.MTZ_Inst_Build_SecID ID 
, 'MTZ_Inst_Build_Sec' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Build_Sec
 join MTZ_Inst_Build on MTZ_Inst_Build.MTZ_Inst_BuildID=MTZ_Inst_Build_Sec.ParentStructRowID 
 join INSTANCE on MTZ_Inst_Build.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZ_Inst_Section as 
select   MTZ_Inst_SectionID
, 
MTZ_Inst_Section.TheName 
MTZ_Inst_Section_TheName 
, 
 MTZ_Inst_Section.IsCustomSection  
MTZ_Inst_Section_IsCustomSection_VAL, 
 decode(MTZ_Inst_Section.IsCustomSection 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Section_IsCustomSection 
, 
 MTZ_Inst_Section.CustomSectionUnInstall  
MTZ_Inst_Section_CustomSectionUnInstall_ID, 
 MTZ.Func.MTZ_Inst_Common_BRIEF_F(MTZ_Inst_Section.CustomSectionUnInstall) 
MTZ_Inst_Section_CustomSectionUnInstall 
, 
 MTZ_Inst_Section.IsVisible  
MTZ_Inst_Section_IsVisible_VAL, 
 decode(MTZ_Inst_Section.IsVisible 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Section_IsVisible 
, 
MTZ_Inst_Section.TheDescription 
MTZ_Inst_Section_TheDescription 
, 
 MTZ_Inst_Section.CustomSectionInstall  
MTZ_Inst_Section_CustomSectionInstall_ID, 
 MTZ.Func.MTZ_Inst_Common_BRIEF_F(MTZ_Inst_Section.CustomSectionInstall) 
MTZ_Inst_Section_CustomSectionInstall 
, 
 MTZ_Inst_Section.IsNotDeletable  
MTZ_Inst_Section_IsNotDeletable_VAL, 
 decode(MTZ_Inst_Section.IsNotDeletable 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Section_IsNotDeletable 
, 
 MTZ_Inst_Section.TheTargetPlatform  
MTZ_Inst_Section_TheTargetPlatform_VAL, 
 decode(MTZ_Inst_Section.TheTargetPlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
MTZ_Inst_Section_TheTargetPlatform 
, MTZ_Inst_Section.InstanceID InstanceID 
, MTZ_Inst_Section.MTZ_Inst_SectionID ID 
, 'MTZ_Inst_Section' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Section
 join INSTANCE on MTZ_Inst_Section.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZ_Inst_Sec_Files as 
select   MTZ_Inst_Sec_FilesID,MTZ_Inst_SectionID
, 
MTZ_Inst_Sec_Files.SEQ 
MTZ_Inst_Sec_Files_SEQ 
, 
MTZ_Inst_Sec_Files.ShortCutInfo 
MTZ_Inst_Sec_Files_ShortCutInfo 
, 
 MTZ_Inst_Sec_Files.IsCOM  
MTZ_Inst_Sec_Files_IsCOM_VAL, 
 decode(MTZ_Inst_Sec_Files.IsCOM 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Sec_Files_IsCOM 
, 
 MTZ_Inst_Sec_Files.IsShortcut  
MTZ_Inst_Sec_Files_IsShortcut_VAL, 
 decode(MTZ_Inst_Sec_Files.IsShortcut 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Sec_Files_IsShortcut 
, 
MTZ_Inst_Sec_Files.DefaultInterface 
MTZ_Inst_Sec_Files_DefaultInterface 
, 
MTZ_Inst_Sec_Files.ShortcutName 
MTZ_Inst_Sec_Files_ShortcutName 
, 
MTZ_Inst_Sec_Files.DeinstallComandParam 
MTZ_Inst_Sec_Files_DeinstallComandParam 
, 
 MTZ_Inst_Sec_Files.HaveToRun  
MTZ_Inst_Sec_Files_HaveToRun_VAL, 
 decode(MTZ_Inst_Sec_Files.HaveToRun 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Sec_Files_HaveToRun 
, 
 MTZ_Inst_Sec_Files.CustomScriptUnInstall  
MTZ_Inst_Sec_Files_CustomScriptUnInstall_ID, 
 MTZ.Func.MTZ_Inst_Common_BRIEF_F(MTZ_Inst_Sec_Files.CustomScriptUnInstall) 
MTZ_Inst_Sec_Files_CustomScriptUnInstall 
, 
MTZ_Inst_Sec_Files.CommanLineParams 
MTZ_Inst_Sec_Files_CommanLineParams 
, 
MTZ_Inst_Sec_Files.TheSource 
MTZ_Inst_Sec_Files_TheSource 
, 
 MTZ_Inst_Sec_Files.SysstemObject  
MTZ_Inst_Sec_Files_SysstemObject_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(MTZ_Inst_Sec_Files.SysstemObject) 
MTZ_Inst_Sec_Files_SysstemObject 
, 
 MTZ_Inst_Sec_Files.IsCustomScript  
MTZ_Inst_Sec_Files_IsCustomScript_VAL, 
 decode(MTZ_Inst_Sec_Files.IsCustomScript 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Sec_Files_IsCustomScript 
, 
MTZ_Inst_Sec_Files.SubDir 
MTZ_Inst_Sec_Files_SubDir 
, 
 MTZ_Inst_Sec_Files.TheApplication  
MTZ_Inst_Sec_Files_TheApplication_ID, 
 MTZ.Func.MTZAPP_BRIEF_F(MTZ_Inst_Sec_Files.TheApplication) 
MTZ_Inst_Sec_Files_TheApplication 
, 
 MTZ_Inst_Sec_Files.HaveToRunDeinst  
MTZ_Inst_Sec_Files_HaveToRunDeinst_VAL, 
 decode(MTZ_Inst_Sec_Files.HaveToRunDeinst 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Sec_Files_HaveToRunDeinst 
, 
 MTZ_Inst_Sec_Files.CustomScriptInstall  
MTZ_Inst_Sec_Files_CustomScriptInstall_ID, 
 MTZ.Func.MTZ_Inst_Common_BRIEF_F(MTZ_Inst_Sec_Files.CustomScriptInstall) 
MTZ_Inst_Sec_Files_CustomScriptInstall 
, MTZ_Inst_Section.InstanceID InstanceID 
, MTZ_Inst_Sec_Files.MTZ_Inst_Sec_FilesID ID 
, 'MTZ_Inst_Sec_Files' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Sec_Files
 join MTZ_Inst_Section on MTZ_Inst_Section.MTZ_Inst_SectionID=MTZ_Inst_Sec_Files.ParentStructRowID 
 join INSTANCE on MTZ_Inst_Section.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOMTZ_Inst_Common as 
select   MTZ_Inst_CommonID
, 
MTZ_Inst_Common.TheName 
MTZ_Inst_Common_TheName 
, 
MTZ_Inst_Common.TheInstallScript 
MTZ_Inst_Common_TheInstallScript 
, 
 MTZ_Inst_Common.IsDeinstallUSE  
MTZ_Inst_Common_IsDeinstallUSE_VAL, 
 decode(MTZ_Inst_Common.IsDeinstallUSE 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Common_IsDeinstallUSE 
, 
MTZ_Inst_Common.SEQ 
MTZ_Inst_Common_SEQ 
, MTZ_Inst_Common.InstanceID InstanceID 
, MTZ_Inst_Common.MTZ_Inst_CommonID ID 
, 'MTZ_Inst_Common' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Common
 join INSTANCE on MTZ_Inst_Common.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZ_Install_MTZ_Inst_Common as 
select   MTZ_Inst_CommonID
, 
 MTZ_Inst_Common.IsDeinstallUSE  
MTZ_Inst_Common_IsDeinstallUSE_VAL, 
 decode(MTZ_Inst_Common.IsDeinstallUSE 
, 1 ,'Да'
, 0 ,'Нет'
, '???') 
MTZ_Inst_Common_IsDeinstallUSE 
, 
MTZ_Inst_Common.TheName 
MTZ_Inst_Common_TheName 
, MTZ_Inst_Common.InstanceID InstanceID 
, MTZ_Inst_Common.MTZ_Inst_CommonID ID 
, 'MTZ_Inst_Common' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from MTZ_Inst_Common
 join INSTANCE on MTZ_Inst_Common.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTTZ_DEF as 
select   ITTTZ_DEFID
, 
ITTTZ_DEF.Code 
ITTTZ_DEF_Code 
, 
ITTTZ_DEF.TheNumber 
ITTTZ_DEF_TheNumber 
, 
ITTTZ_DEF.DocDate 
ITTTZ_DEF_DocDate 
, 
ITTTZ_DEF.SupplierCode 
ITTTZ_DEF_SupplierCode 
, 
ITTTZ_DEF.Direction 
ITTTZ_DEF_Direction 
, 
ITTTZ_DEF.TheClient 
ITTTZ_DEF_TheClient 
, ITTTZ_DEF.InstanceID InstanceID 
, ITTTZ_DEF.ITTTZ_DEFID ID 
, 'ITTTZ_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTTZ_DEF
 join INSTANCE on ITTTZ_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTTZ_LINES as 
select   ITTTZ_LINESID
, 
ITTTZ_LINES.FileLink 
ITTTZ_LINES_FileLink 
, 
ITTTZ_LINES.TheArticul 
ITTTZ_LINES_TheArticul 
, 
ITTTZ_LINES.EDIZM 
ITTTZ_LINES_EDIZM 
, 
ITTTZ_LINES.TheNumber 
ITTTZ_LINES_TheNumber 
, 
ITTTZ_LINES.sequence 
ITTTZ_LINES_sequence 
, 
ITTTZ_LINES.Partia 
ITTTZ_LINES_Partia 
, 
ITTTZ_LINES.SupplierCode 
ITTTZ_LINES_SupplierCode 
, 
ITTTZ_LINES.Direction 
ITTTZ_LINES_Direction 
, 
ITTTZ_LINES.Quantity 
ITTTZ_LINES_Quantity 
, 
ITTTZ_LINES.SSCC 
ITTTZ_LINES_SSCC 
, ITTTZ_LINES.InstanceID InstanceID 
, ITTTZ_LINES.ITTTZ_LINESID ID 
, 'ITTTZ_LINES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTTZ_LINES
 join INSTANCE on ITTTZ_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITT2OPT_DEF as 
select   ITT2OPT_DEFID
, 
ITT2OPT_DEF.DateToOptimize 
ITT2OPT_DEF_DateToOptimize 
, 
 ITT2OPT_DEF.TheRule  
ITT2OPT_DEF_TheRule_ID, 
 MTZ.Func.ITTD_RULE_BRIEF_F(ITT2OPT_DEF.TheRule) 
ITT2OPT_DEF_TheRule 
, 
 ITT2OPT_DEF.OptType  
ITT2OPT_DEF_OptType_ID, 
 MTZ.Func.ITTD_OPTTYPE_BRIEF_F(ITT2OPT_DEF.OptType) 
ITT2OPT_DEF_OptType 
, 
ITT2OPT_DEF.OPtDate 
ITT2OPT_DEF_OPtDate 
, ITT2OPT_DEF.InstanceID InstanceID 
, ITT2OPT_DEF.ITT2OPT_DEFID ID 
, 'ITT2OPT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITT2OPT_DEF
 join INSTANCE on ITT2OPT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTOUT_ITTOUT_SRV as 
select   ITTOUT_SRVID
, 
ITTOUT_DEF.ProcessDate 
ITTOUT_DEF_ProcessDate 
, 
ITTOUT_DEF.TTNDate 
ITTOUT_DEF_TTNDate 
, 
ITTOUT_DEF.TranspNumber 
ITTOUT_DEF_TranspNumber 
, 
 ITTOUT_DEF.ShipOrder  
ITTOUT_DEF_ShipOrder_ID, 
ITTOUT_DEF.ShipOrder 
ITTOUT_DEF_ShipOrder 
, 
 ITTOUT_DEF.TheClient  
ITTOUT_DEF_TheClient_ID, 
ITTOUT_DEF.TheClient 
ITTOUT_DEF_TheClient 
, 
ITTOUT_DEF.StampStatus 
ITTOUT_DEF_StampStatus 
, 
ITTOUT_DEF.TTN 
ITTOUT_DEF_TTN 
, 
ITTOUT_DEF.Supplier 
ITTOUT_DEF_Supplier 
, 
ITTOUT_DEF.StampNumber 
ITTOUT_DEF_StampNumber 
, 
ITTOUT_DEF.temp_in_track 
ITTOUT_DEF_temp_in_track 
, 
 ITTOUT_SRV.SRV  
ITTOUT_SRV_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTOUT_SRV.SRV) 
ITTOUT_SRV_SRV 
, 
ITTOUT_DEF.Container 
ITTOUT_DEF_Container 
, 
ITTOUT_DEF.Track_time_in 
ITTOUT_DEF_Track_time_in 
, 
ITTOUT_SRV.Quantity 
ITTOUT_SRV_Quantity 
, 
ITTOUT_DEF.track_time_out 
ITTOUT_DEF_track_time_out 
, ITTOUT_SRV.InstanceID InstanceID 
, ITTOUT_SRV.ITTOUT_SRVID ID 
, 'ITTOUT_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_SRV
 join INSTANCE on ITTOUT_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTOUT_DEF ON ITTOUT_DEF.InstanceID=ITTOUT_SRV.InstanceID 
/
create or replace view V_AUTOITTOUT_SRV as 
select   ITTOUT_SRVID
, 
ITTOUT_SRV.Quantity 
ITTOUT_SRV_Quantity 
, 
 ITTOUT_SRV.SRV  
ITTOUT_SRV_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTOUT_SRV.SRV) 
ITTOUT_SRV_SRV 
, ITTOUT_SRV.InstanceID InstanceID 
, ITTOUT_SRV.ITTOUT_SRVID ID 
, 'ITTOUT_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_SRV
 join INSTANCE on ITTOUT_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_SRV as 
select   ITTOUT_SRVID
, 
ITTOUT_SRV.Quantity 
ITTOUT_SRV_Quantity 
, 
 ITTOUT_SRV.SRV  
ITTOUT_SRV_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTOUT_SRV.SRV) 
ITTOUT_SRV_SRV 
, ITTOUT_SRV.InstanceID InstanceID 
, ITTOUT_SRV.ITTOUT_SRVID ID 
, 'ITTOUT_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_SRV
 join INSTANCE on ITTOUT_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_DEF as 
select   ITTOUT_DEFID
, 
ITTOUT_DEF.temp_in_track 
ITTOUT_DEF_temp_in_track 
, 
 ITTOUT_DEF.ThePartyRule  
ITTOUT_DEF_ThePartyRule_ID, 
 MTZ.Func.ITTD_RULE_BRIEF_F(ITTOUT_DEF.ThePartyRule) 
ITTOUT_DEF_ThePartyRule 
, 
ITTOUT_DEF.Track_time_in 
ITTOUT_DEF_Track_time_in 
, 
 ITTOUT_DEF.ShipOrder  
ITTOUT_DEF_ShipOrder_ID, 
ITTOUT_DEF.ShipOrder 
ITTOUT_DEF_ShipOrder 
, 
ITTOUT_DEF.TTN 
ITTOUT_DEF_TTN 
, 
 ITTOUT_DEF.TheClient  
ITTOUT_DEF_TheClient_ID, 
ITTOUT_DEF.TheClient 
ITTOUT_DEF_TheClient 
, 
ITTOUT_DEF.track_time_out 
ITTOUT_DEF_track_time_out 
, 
ITTOUT_DEF.Container 
ITTOUT_DEF_Container 
, 
ITTOUT_DEF.ProcessDate 
ITTOUT_DEF_ProcessDate 
, 
ITTOUT_DEF.StampStatus 
ITTOUT_DEF_StampStatus 
, 
ITTOUT_DEF.TTNDate 
ITTOUT_DEF_TTNDate 
, 
ITTOUT_DEF.TranspNumber 
ITTOUT_DEF_TranspNumber 
, 
ITTOUT_DEF.Supplier 
ITTOUT_DEF_Supplier 
, 
ITTOUT_DEF.StampNumber 
ITTOUT_DEF_StampNumber 
, ITTOUT_DEF.InstanceID InstanceID 
, ITTOUT_DEF.ITTOUT_DEFID ID 
, 'ITTOUT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_DEF
 join INSTANCE on ITTOUT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_DEF as 
select   ITTOUT_DEFID
, 
ITTOUT_DEF.TTN 
ITTOUT_DEF_TTN 
, 
ITTOUT_DEF.StampNumber 
ITTOUT_DEF_StampNumber 
, 
 ITTOUT_DEF.TheClient  
ITTOUT_DEF_TheClient_ID, 
ITTOUT_DEF.TheClient 
ITTOUT_DEF_TheClient 
, 
ITTOUT_DEF.Track_time_in 
ITTOUT_DEF_Track_time_in 
, 
ITTOUT_DEF.StampStatus 
ITTOUT_DEF_StampStatus 
, 
ITTOUT_DEF.Container 
ITTOUT_DEF_Container 
, 
 ITTOUT_DEF.ThePartyRule  
ITTOUT_DEF_ThePartyRule_ID, 
 MTZ.Func.ITTD_RULE_BRIEF_F(ITTOUT_DEF.ThePartyRule) 
ITTOUT_DEF_ThePartyRule 
, 
ITTOUT_DEF.temp_in_track 
ITTOUT_DEF_temp_in_track 
, 
ITTOUT_DEF.TranspNumber 
ITTOUT_DEF_TranspNumber 
, 
ITTOUT_DEF.Supplier 
ITTOUT_DEF_Supplier 
, 
ITTOUT_DEF.track_time_out 
ITTOUT_DEF_track_time_out 
, 
ITTOUT_DEF.ProcessDate 
ITTOUT_DEF_ProcessDate 
, 
ITTOUT_DEF.TTNDate 
ITTOUT_DEF_TTNDate 
, 
 ITTOUT_DEF.ShipOrder  
ITTOUT_DEF_ShipOrder_ID, 
ITTOUT_DEF.ShipOrder 
ITTOUT_DEF_ShipOrder 
, ITTOUT_DEF.InstanceID InstanceID 
, ITTOUT_DEF.ITTOUT_DEFID ID 
, 'ITTOUT_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_DEF
 join INSTANCE on ITTOUT_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_EPL as 
select   ITTOUT_EPLID
, 
ITTOUT_EPL.Palet_ID 
ITTOUT_EPL_Palet_ID 
, 
ITTOUT_EPL.PalWeight 
ITTOUT_EPL_PalWeight 
, 
 ITTOUT_EPL.TheNumber  
ITTOUT_EPL_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTOUT_EPL.TheNumber) 
ITTOUT_EPL_TheNumber 
, ITTOUT_EPL.InstanceID InstanceID 
, ITTOUT_EPL.ITTOUT_EPLID ID 
, 'ITTOUT_EPL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_EPL
 join INSTANCE on ITTOUT_EPL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTOUT_ITTOUT_EPL as 
select   ITTOUT_EPLID
, 
ITTOUT_EPL.Palet_ID 
ITTOUT_EPL_Palet_ID 
, 
 ITTOUT_DEF.ShipOrder  
ITTOUT_DEF_ShipOrder_ID, 
ITTOUT_DEF.ShipOrder 
ITTOUT_DEF_ShipOrder 
, 
 ITTOUT_DEF.TheClient  
ITTOUT_DEF_TheClient_ID, 
ITTOUT_DEF.TheClient 
ITTOUT_DEF_TheClient 
, 
 ITTOUT_EPL.TheNumber  
ITTOUT_EPL_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTOUT_EPL.TheNumber) 
ITTOUT_EPL_TheNumber 
, 
ITTOUT_EPL.PalWeight 
ITTOUT_EPL_PalWeight 
, ITTOUT_EPL.InstanceID InstanceID 
, ITTOUT_EPL.ITTOUT_EPLID ID 
, 'ITTOUT_EPL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_EPL
 join INSTANCE on ITTOUT_EPL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTOUT_DEF ON ITTOUT_DEF.InstanceID=ITTOUT_EPL.InstanceID 
/
create or replace view V_AUTOITTOUT_EPL as 
select   ITTOUT_EPLID
, 
ITTOUT_EPL.PalWeight 
ITTOUT_EPL_PalWeight 
, 
ITTOUT_EPL.Palet_ID 
ITTOUT_EPL_Palet_ID 
, 
 ITTOUT_EPL.TheNumber  
ITTOUT_EPL_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTOUT_EPL.TheNumber) 
ITTOUT_EPL_TheNumber 
, ITTOUT_EPL.InstanceID InstanceID 
, ITTOUT_EPL.ITTOUT_EPLID ID 
, 'ITTOUT_EPL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_EPL
 join INSTANCE on ITTOUT_EPL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_LINES as 
select   ITTOUT_LINESID
, 
ITTOUT_LINES.Made_date 
ITTOUT_LINES_Made_date 
, 
ITTOUT_LINES.Quanity 
ITTOUT_LINES_Quanity 
, 
 ITTOUT_LINES.made_country  
ITTOUT_LINES_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTOUT_LINES.made_country) 
ITTOUT_LINES_made_country 
, 
 ITTOUT_LINES.good_ID  
ITTOUT_LINES_good_ID_ID, 
ITTOUT_LINES.good_ID 
ITTOUT_LINES_good_ID 
, 
ITTOUT_LINES.articul 
ITTOUT_LINES_articul 
, 
ITTOUT_LINES.edizm 
ITTOUT_LINES_edizm 
, 
 ITTOUT_LINES.QRY_NUM  
ITTOUT_LINES_QRY_NUM_ID, 
ITTOUT_LINES.QRY_NUM 
ITTOUT_LINES_QRY_NUM 
, 
 ITTOUT_LINES.PartRef  
ITTOUT_LINES_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTOUT_LINES.PartRef) 
ITTOUT_LINES_PartRef 
, 
 ITTOUT_LINES.Navalom  
ITTOUT_LINES_Navalom_VAL, 
 decode(ITTOUT_LINES.Navalom 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_LINES_Navalom 
, 
ITTOUT_LINES.sequence 
ITTOUT_LINES_sequence 
, 
ITTOUT_LINES.PackageWeight 
ITTOUT_LINES_PackageWeight 
, 
ITTOUT_LINES.VidOtruba 
ITTOUT_LINES_VidOtruba 
, 
 ITTOUT_LINES.LineAtQuery  
ITTOUT_LINES_LineAtQuery_ID, 
ITTOUT_LINES.LineAtQuery 
ITTOUT_LINES_LineAtQuery 
, 
 ITTOUT_LINES.KILL_NUMBER  
ITTOUT_LINES_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTOUT_LINES.KILL_NUMBER) 
ITTOUT_LINES_KILL_NUMBER 
, 
ITTOUT_LINES.NumInBufZone 
ITTOUT_LINES_NumInBufZone 
, 
 ITTOUT_LINES.Factory  
ITTOUT_LINES_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTOUT_LINES.Factory) 
ITTOUT_LINES_Factory 
, 
ITTOUT_LINES.FullPackageWeight 
ITTOUT_LINES_FullPackageWeight 
, 
ITTOUT_LINES.CurValue 
ITTOUT_LINES_CurValue 
, 
ITTOUT_LINES.exp_date 
ITTOUT_LINES_exp_date 
, ITTOUT_LINES.InstanceID InstanceID 
, ITTOUT_LINES.ITTOUT_LINESID ID 
, 'ITTOUT_LINES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_LINES
 join INSTANCE on ITTOUT_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_LINES as 
select   ITTOUT_LINESID
, 
 ITTOUT_LINES.Factory  
ITTOUT_LINES_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTOUT_LINES.Factory) 
ITTOUT_LINES_Factory 
, 
ITTOUT_LINES.NumInBufZone 
ITTOUT_LINES_NumInBufZone 
, 
ITTOUT_LINES.vetsved 
ITTOUT_LINES_vetsved 
, 
 ITTOUT_LINES.good_ID  
ITTOUT_LINES_good_ID_ID, 
ITTOUT_LINES.good_ID 
ITTOUT_LINES_good_ID 
, 
ITTOUT_LINES.PackageWeight 
ITTOUT_LINES_PackageWeight 
, 
 ITTOUT_LINES.LineAtQuery  
ITTOUT_LINES_LineAtQuery_ID, 
ITTOUT_LINES.LineAtQuery 
ITTOUT_LINES_LineAtQuery 
, 
ITTOUT_LINES.VidOtruba 
ITTOUT_LINES_VidOtruba 
, 
ITTOUT_LINES.sequence 
ITTOUT_LINES_sequence 
, 
ITTOUT_LINES.exp_date 
ITTOUT_LINES_exp_date 
, 
ITTOUT_LINES.CurValue 
ITTOUT_LINES_CurValue 
, 
 ITTOUT_LINES.made_country  
ITTOUT_LINES_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTOUT_LINES.made_country) 
ITTOUT_LINES_made_country 
, 
 ITTOUT_LINES.Navalom  
ITTOUT_LINES_Navalom_VAL, 
 decode(ITTOUT_LINES.Navalom 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_LINES_Navalom 
, 
ITTOUT_LINES.edizm 
ITTOUT_LINES_edizm 
, 
ITTOUT_LINES.made_date_to 
ITTOUT_LINES_made_date_to 
, 
ITTOUT_LINES.Quanity 
ITTOUT_LINES_Quanity 
, 
 ITTOUT_LINES.QRY_NUM  
ITTOUT_LINES_QRY_NUM_ID, 
ITTOUT_LINES.QRY_NUM 
ITTOUT_LINES_QRY_NUM 
, 
ITTOUT_LINES.articul 
ITTOUT_LINES_articul 
, 
ITTOUT_LINES.FullPackageWeight 
ITTOUT_LINES_FullPackageWeight 
, 
ITTOUT_LINES.Made_date 
ITTOUT_LINES_Made_date 
, 
 ITTOUT_LINES.KILL_NUMBER  
ITTOUT_LINES_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTOUT_LINES.KILL_NUMBER) 
ITTOUT_LINES_KILL_NUMBER 
, 
 ITTOUT_LINES.PartRef  
ITTOUT_LINES_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTOUT_LINES.PartRef) 
ITTOUT_LINES_PartRef 
, ITTOUT_LINES.InstanceID InstanceID 
, ITTOUT_LINES.ITTOUT_LINESID ID 
, 'ITTOUT_LINES' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_LINES
 join INSTANCE on ITTOUT_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTOUT_ITTOUT_PALET as 
select   ITTOUT_PALETID,ITTOUT_LINESID
, 
ITTOUT_DEF.Track_time_in 
ITTOUT_DEF_Track_time_in 
, 
ITTOUT_LINES.exp_date 
ITTOUT_LINES_exp_date 
, 
ITTOUT_DEF.ProcessDate 
ITTOUT_DEF_ProcessDate 
, 
ITTOUT_DEF.TTNDate 
ITTOUT_DEF_TTNDate 
, 
ITTOUT_LINES.sequence 
ITTOUT_LINES_sequence 
, 
ITTOUT_PALET.GoodWithPaletWeight 
ITTOUT_PALET_GoodWithPaletWeight 
, 
ITTOUT_DEF.temp_in_track 
ITTOUT_DEF_temp_in_track 
, 
ITTOUT_PALET.ReorgCaliberQuantity 
ITTOUT_PALET_ReorgCaliberQuantity 
, 
 ITTOUT_PALET.Factory  
ITTOUT_PALET_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTOUT_PALET.Factory) 
ITTOUT_PALET_Factory 
, 
 ITTOUT_PALET.KILL_NUMBER  
ITTOUT_PALET_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTOUT_PALET.KILL_NUMBER) 
ITTOUT_PALET_KILL_NUMBER 
, 
ITTOUT_DEF.TranspNumber 
ITTOUT_DEF_TranspNumber 
, 
 ITTOUT_PALET.TheNumber  
ITTOUT_PALET_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTOUT_PALET.TheNumber) 
ITTOUT_PALET_TheNumber 
, 
 ITTOUT_LINES.PartRef  
ITTOUT_LINES_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTOUT_LINES.PartRef) 
ITTOUT_LINES_PartRef 
, 
ITTOUT_DEF.StampStatus 
ITTOUT_DEF_StampStatus 
, 
ITTOUT_DEF.StampNumber 
ITTOUT_DEF_StampNumber 
, 
 ITTOUT_DEF.ShipOrder  
ITTOUT_DEF_ShipOrder_ID, 
ITTOUT_DEF.ShipOrder 
ITTOUT_DEF_ShipOrder 
, 
ITTOUT_LINES.NumInBufZone 
ITTOUT_LINES_NumInBufZone 
, 
 ITTOUT_LINES.Factory  
ITTOUT_LINES_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTOUT_LINES.Factory) 
ITTOUT_LINES_Factory 
, 
ITTOUT_DEF.Supplier 
ITTOUT_DEF_Supplier 
, 
ITTOUT_PALET.BufferCell 
ITTOUT_PALET_BufferCell 
, 
 ITTOUT_PALET.PartRef  
ITTOUT_PALET_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTOUT_PALET.PartRef) 
ITTOUT_PALET_PartRef 
, 
ITTOUT_DEF.Container 
ITTOUT_DEF_Container 
, 
 ITTOUT_PALET.IsEmpty  
ITTOUT_PALET_IsEmpty_VAL, 
 decode(ITTOUT_PALET.IsEmpty 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsEmpty 
, 
ITTOUT_PALET.CaliberQuantity 
ITTOUT_PALET_CaliberQuantity 
, 
ITTOUT_DEF.track_time_out 
ITTOUT_DEF_track_time_out 
, 
 ITTOUT_PALET.made_country  
ITTOUT_PALET_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTOUT_PALET.made_country) 
ITTOUT_PALET_made_country 
, 
ITTOUT_LINES.Quanity 
ITTOUT_LINES_Quanity 
, 
 ITTOUT_LINES.made_country  
ITTOUT_LINES_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTOUT_LINES.made_country) 
ITTOUT_LINES_made_country 
, 
ITTOUT_LINES.VidOtruba 
ITTOUT_LINES_VidOtruba 
, 
ITTOUT_LINES.Made_date 
ITTOUT_LINES_Made_date 
, 
ITTOUT_PALET.ReorgWeight 
ITTOUT_PALET_ReorgWeight 
, 
ITTOUT_PALET.ReorgPackageFullWeight 
ITTOUT_PALET_ReorgPackageFullWeight 
, 
ITTOUT_PALET.Made_date 
ITTOUT_PALET_Made_date 
, 
ITTOUT_LINES.PackageWeight 
ITTOUT_LINES_PackageWeight 
, 
ITTOUT_LINES.CurValue 
ITTOUT_LINES_CurValue 
, 
ITTOUT_PALET.FullPackageWeight 
ITTOUT_PALET_FullPackageWeight 
, 
 ITTOUT_LINES.LineAtQuery  
ITTOUT_LINES_LineAtQuery_ID, 
ITTOUT_LINES.LineAtQuery 
ITTOUT_LINES_LineAtQuery 
, 
ITTOUT_PALET.StoreCell 
ITTOUT_PALET_StoreCell 
, 
 ITTOUT_LINES.KILL_NUMBER  
ITTOUT_LINES_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTOUT_LINES.KILL_NUMBER) 
ITTOUT_LINES_KILL_NUMBER 
, 
ITTOUT_PALET.VidOtruba 
ITTOUT_PALET_VidOtruba 
, 
ITTOUT_LINES.articul 
ITTOUT_LINES_articul 
, 
 ITTOUT_LINES.Navalom  
ITTOUT_LINES_Navalom_VAL, 
 decode(ITTOUT_LINES.Navalom 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_LINES_Navalom 
, 
ITTOUT_PALET.PackageWeight 
ITTOUT_PALET_PackageWeight 
, 
 ITTOUT_LINES.good_ID  
ITTOUT_LINES_good_ID_ID, 
ITTOUT_LINES.good_ID 
ITTOUT_LINES_good_ID 
, 
 ITTOUT_PALET.IsBrak  
ITTOUT_PALET_IsBrak_VAL, 
 decode(ITTOUT_PALET.IsBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsBrak 
, 
ITTOUT_DEF.TTN 
ITTOUT_DEF_TTN 
, 
ITTOUT_PALET.exp_date 
ITTOUT_PALET_exp_date 
, 
ITTOUT_LINES.edizm 
ITTOUT_LINES_edizm 
, 
 ITTOUT_PALET.IsCalibrated  
ITTOUT_PALET_IsCalibrated_VAL, 
 decode(ITTOUT_PALET.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsCalibrated 
, 
 ITTOUT_LINES.QRY_NUM  
ITTOUT_LINES_QRY_NUM_ID, 
ITTOUT_LINES.QRY_NUM 
ITTOUT_LINES_QRY_NUM 
, 
 ITTOUT_DEF.TheClient  
ITTOUT_DEF_TheClient_ID, 
ITTOUT_DEF.TheClient 
ITTOUT_DEF_TheClient 
, 
ITTOUT_LINES.FullPackageWeight 
ITTOUT_LINES_FullPackageWeight 
, 
ITTOUT_PALET.sequence 
ITTOUT_PALET_sequence 
, ITTOUT_LINES.InstanceID InstanceID 
, ITTOUT_PALET.ITTOUT_PALETID ID 
, 'ITTOUT_PALET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_PALET
 join ITTOUT_LINES on ITTOUT_LINES.ITTOUT_LINESID=ITTOUT_PALET.ParentStructRowID 
 join INSTANCE on ITTOUT_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTOUT_DEF ON ITTOUT_DEF.InstanceID=ITTOUT_LINES.InstanceID 
/
create or replace view V_AUTOITTOUT_PALET as 
select   ITTOUT_PALETID,ITTOUT_LINESID
, 
ITTOUT_PALET.ReorgCaliberQuantity 
ITTOUT_PALET_ReorgCaliberQuantity 
, 
ITTOUT_PALET.PackageWeight 
ITTOUT_PALET_PackageWeight 
, 
ITTOUT_PALET.ReorgWeight 
ITTOUT_PALET_ReorgWeight 
, 
ITTOUT_PALET.exp_date 
ITTOUT_PALET_exp_date 
, 
 ITTOUT_PALET.IsBrak  
ITTOUT_PALET_IsBrak_VAL, 
 decode(ITTOUT_PALET.IsBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsBrak 
, 
ITTOUT_PALET.BufferCell 
ITTOUT_PALET_BufferCell 
, 
 ITTOUT_PALET.made_country  
ITTOUT_PALET_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTOUT_PALET.made_country) 
ITTOUT_PALET_made_country 
, 
ITTOUT_PALET.ReorgPackageFullWeight 
ITTOUT_PALET_ReorgPackageFullWeight 
, 
ITTOUT_PALET.VidOtruba 
ITTOUT_PALET_VidOtruba 
, 
ITTOUT_PALET.StoreCell 
ITTOUT_PALET_StoreCell 
, 
ITTOUT_PALET.sequence 
ITTOUT_PALET_sequence 
, 
 ITTOUT_PALET.IsCalibrated  
ITTOUT_PALET_IsCalibrated_VAL, 
 decode(ITTOUT_PALET.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsCalibrated 
, 
 ITTOUT_PALET.KILL_NUMBER  
ITTOUT_PALET_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTOUT_PALET.KILL_NUMBER) 
ITTOUT_PALET_KILL_NUMBER 
, 
ITTOUT_PALET.CaliberQuantity 
ITTOUT_PALET_CaliberQuantity 
, 
 ITTOUT_PALET.TheNumber  
ITTOUT_PALET_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTOUT_PALET.TheNumber) 
ITTOUT_PALET_TheNumber 
, 
ITTOUT_PALET.GoodWithPaletWeight 
ITTOUT_PALET_GoodWithPaletWeight 
, 
 ITTOUT_PALET.PartRef  
ITTOUT_PALET_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTOUT_PALET.PartRef) 
ITTOUT_PALET_PartRef 
, 
ITTOUT_PALET.Made_date 
ITTOUT_PALET_Made_date 
, 
 ITTOUT_PALET.IsEmpty  
ITTOUT_PALET_IsEmpty_VAL, 
 decode(ITTOUT_PALET.IsEmpty 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsEmpty 
, 
 ITTOUT_PALET.Factory  
ITTOUT_PALET_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTOUT_PALET.Factory) 
ITTOUT_PALET_Factory 
, 
ITTOUT_PALET.FullPackageWeight 
ITTOUT_PALET_FullPackageWeight 
, ITTOUT_LINES.InstanceID InstanceID 
, ITTOUT_PALET.ITTOUT_PALETID ID 
, 'ITTOUT_PALET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_PALET
 join ITTOUT_LINES on ITTOUT_LINES.ITTOUT_LINESID=ITTOUT_PALET.ParentStructRowID 
 join INSTANCE on ITTOUT_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTOUT_PALET as 
select   ITTOUT_PALETID,ITTOUT_LINESID
, 
ITTOUT_PALET.FullPackageWeight 
ITTOUT_PALET_FullPackageWeight 
, 
ITTOUT_PALET.PackageWeight 
ITTOUT_PALET_PackageWeight 
, 
ITTOUT_PALET.BufferCell 
ITTOUT_PALET_BufferCell 
, 
ITTOUT_PALET.BarCode1 
ITTOUT_PALET_BarCode1 
, 
ITTOUT_PALET.BarCode2 
ITTOUT_PALET_BarCode2 
, 
ITTOUT_PALET.Made_date 
ITTOUT_PALET_Made_date 
, 
ITTOUT_PALET.CaliberQuantity 
ITTOUT_PALET_CaliberQuantity 
, 
ITTOUT_PALET.SSCC 
ITTOUT_PALET_SSCC 
, 
 ITTOUT_PALET.IsBrak  
ITTOUT_PALET_IsBrak_VAL, 
 decode(ITTOUT_PALET.IsBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsBrak 
, 
 ITTOUT_PALET.KILL_NUMBER  
ITTOUT_PALET_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTOUT_PALET.KILL_NUMBER) 
ITTOUT_PALET_KILL_NUMBER 
, 
ITTOUT_PALET.StoreCell 
ITTOUT_PALET_StoreCell 
, 
ITTOUT_PALET.exp_date 
ITTOUT_PALET_exp_date 
, 
ITTOUT_PALET.made_date_to 
ITTOUT_PALET_made_date_to 
, 
 ITTOUT_PALET.TheNumber  
ITTOUT_PALET_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTOUT_PALET.TheNumber) 
ITTOUT_PALET_TheNumber 
, 
 ITTOUT_PALET.PartRef  
ITTOUT_PALET_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTOUT_PALET.PartRef) 
ITTOUT_PALET_PartRef 
, 
ITTOUT_PALET.GoodWithPaletWeight 
ITTOUT_PALET_GoodWithPaletWeight 
, 
 ITTOUT_PALET.IsEmpty  
ITTOUT_PALET_IsEmpty_VAL, 
 decode(ITTOUT_PALET.IsEmpty 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsEmpty 
, 
ITTOUT_PALET.ReorgPackageFullWeight 
ITTOUT_PALET_ReorgPackageFullWeight 
, 
ITTOUT_PALET.sequence 
ITTOUT_PALET_sequence 
, 
 ITTOUT_PALET.IsCalibrated  
ITTOUT_PALET_IsCalibrated_VAL, 
 decode(ITTOUT_PALET.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTOUT_PALET_IsCalibrated 
, 
 ITTOUT_PALET.Factory  
ITTOUT_PALET_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTOUT_PALET.Factory) 
ITTOUT_PALET_Factory 
, 
ITTOUT_PALET.ReorgCaliberQuantity 
ITTOUT_PALET_ReorgCaliberQuantity 
, 
ITTOUT_PALET.ReorgWeight 
ITTOUT_PALET_ReorgWeight 
, 
 ITTOUT_PALET.made_country  
ITTOUT_PALET_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTOUT_PALET.made_country) 
ITTOUT_PALET_made_country 
, 
ITTOUT_PALET.vetsved 
ITTOUT_PALET_vetsved 
, 
ITTOUT_PALET.VidOtruba 
ITTOUT_PALET_VidOtruba 
, ITTOUT_LINES.InstanceID InstanceID 
, ITTOUT_PALET.ITTOUT_PALETID ID 
, 'ITTOUT_PALET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTOUT_PALET
 join ITTOUT_LINES on ITTOUT_LINES.ITTOUT_LINESID=ITTOUT_PALET.ParentStructRowID 
 join INSTANCE on ITTOUT_LINES.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_QLINE as 
select   ITTIN_QLINEID
, 
ITTIN_QLINE.FullPackageWeight 
ITTIN_QLINE_FullPackageWeight 
, 
ITTIN_QLINE.KorobNetto 
ITTIN_QLINE_KorobNetto 
, 
 ITTIN_QLINE.KILL_NUMBER  
ITTIN_QLINE_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTIN_QLINE.KILL_NUMBER) 
ITTIN_QLINE_KILL_NUMBER 
, 
 ITTIN_QLINE.made_country  
ITTIN_QLINE_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTIN_QLINE.made_country) 
ITTIN_QLINE_made_country 
, 
 ITTIN_QLINE.Navalom  
ITTIN_QLINE_Navalom_VAL, 
 decode(ITTIN_QLINE.Navalom 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_QLINE_Navalom 
, 
 ITTIN_QLINE.QRY_NUM  
ITTIN_QLINE_QRY_NUM_ID, 
ITTIN_QLINE.QRY_NUM 
ITTIN_QLINE_QRY_NUM 
, 
ITTIN_QLINE.exp_date 
ITTIN_QLINE_exp_date 
, 
ITTIN_QLINE.KorobBrutto 
ITTIN_QLINE_KorobBrutto 
, 
ITTIN_QLINE.sequence 
ITTIN_QLINE_sequence 
, 
ITTIN_QLINE.PackageWeight 
ITTIN_QLINE_PackageWeight 
, 
 ITTIN_QLINE.good_id  
ITTIN_QLINE_good_id_ID, 
ITTIN_QLINE.good_id 
ITTIN_QLINE_good_id 
, 
ITTIN_QLINE.VidOtruba 
ITTIN_QLINE_VidOtruba 
, 
 ITTIN_QLINE.IsCalibrated  
ITTIN_QLINE_IsCalibrated_VAL, 
 decode(ITTIN_QLINE.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_QLINE_IsCalibrated 
, 
ITTIN_QLINE.articul 
ITTIN_QLINE_articul 
, 
ITTIN_QLINE.Made_date 
ITTIN_QLINE_Made_date 
, 
 ITTIN_QLINE.Factory  
ITTIN_QLINE_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTIN_QLINE.Factory) 
ITTIN_QLINE_Factory 
, 
 ITTIN_QLINE.LineAtQuery  
ITTIN_QLINE_LineAtQuery_ID, 
ITTIN_QLINE.LineAtQuery 
ITTIN_QLINE_LineAtQuery 
, 
ITTIN_QLINE.CaliberWeight 
ITTIN_QLINE_CaliberWeight 
, 
ITTIN_QLINE.edizm 
ITTIN_QLINE_edizm 
, 
ITTIN_QLINE.CurValue 
ITTIN_QLINE_CurValue 
, 
 ITTIN_QLINE.PartRef  
ITTIN_QLINE_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTIN_QLINE.PartRef) 
ITTIN_QLINE_PartRef 
, ITTIN_QLINE.InstanceID InstanceID 
, ITTIN_QLINE.ITTIN_QLINEID ID 
, 'ITTIN_QLINE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_QLINE
 join INSTANCE on ITTIN_QLINE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_QLINE as 
select   ITTIN_QLINEID
, 
ITTIN_QLINE.sequence 
ITTIN_QLINE_sequence 
, 
ITTIN_QLINE.VidOtruba 
ITTIN_QLINE_VidOtruba 
, 
 ITTIN_QLINE.IsCalibrated  
ITTIN_QLINE_IsCalibrated_VAL, 
 decode(ITTIN_QLINE.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_QLINE_IsCalibrated 
, 
ITTIN_QLINE.articul 
ITTIN_QLINE_articul 
, 
 ITTIN_QLINE.KILL_NUMBER  
ITTIN_QLINE_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTIN_QLINE.KILL_NUMBER) 
ITTIN_QLINE_KILL_NUMBER 
, 
ITTIN_QLINE.CaliberWeight 
ITTIN_QLINE_CaliberWeight 
, 
ITTIN_QLINE.PackageWeight 
ITTIN_QLINE_PackageWeight 
, 
 ITTIN_QLINE.LineAtQuery  
ITTIN_QLINE_LineAtQuery_ID, 
ITTIN_QLINE.LineAtQuery 
ITTIN_QLINE_LineAtQuery 
, 
 ITTIN_QLINE.made_country  
ITTIN_QLINE_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTIN_QLINE.made_country) 
ITTIN_QLINE_made_country 
, 
 ITTIN_QLINE.good_id  
ITTIN_QLINE_good_id_ID, 
ITTIN_QLINE.good_id 
ITTIN_QLINE_good_id 
, 
ITTIN_QLINE.KorobBrutto 
ITTIN_QLINE_KorobBrutto 
, 
 ITTIN_QLINE.Navalom  
ITTIN_QLINE_Navalom_VAL, 
 decode(ITTIN_QLINE.Navalom 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_QLINE_Navalom 
, 
ITTIN_QLINE.made_date_to 
ITTIN_QLINE_made_date_to 
, 
ITTIN_QLINE.Made_date 
ITTIN_QLINE_Made_date 
, 
ITTIN_QLINE.KorobNetto 
ITTIN_QLINE_KorobNetto 
, 
 ITTIN_QLINE.Factory  
ITTIN_QLINE_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTIN_QLINE.Factory) 
ITTIN_QLINE_Factory 
, 
 ITTIN_QLINE.PartRef  
ITTIN_QLINE_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTIN_QLINE.PartRef) 
ITTIN_QLINE_PartRef 
, 
ITTIN_QLINE.vetsved 
ITTIN_QLINE_vetsved 
, 
ITTIN_QLINE.CurValue 
ITTIN_QLINE_CurValue 
, 
ITTIN_QLINE.edizm 
ITTIN_QLINE_edizm 
, 
 ITTIN_QLINE.QRY_NUM  
ITTIN_QLINE_QRY_NUM_ID, 
ITTIN_QLINE.QRY_NUM 
ITTIN_QLINE_QRY_NUM 
, 
ITTIN_QLINE.exp_date 
ITTIN_QLINE_exp_date 
, 
ITTIN_QLINE.FullPackageWeight 
ITTIN_QLINE_FullPackageWeight 
, ITTIN_QLINE.InstanceID InstanceID 
, ITTIN_QLINE.ITTIN_QLINEID ID 
, 'ITTIN_QLINE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_QLINE
 join INSTANCE on ITTIN_QLINE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_PALET as 
select   ITTIN_PALETID,ITTIN_QLINEID
, 
ITTIN_PALET.VidOtruba 
ITTIN_PALET_VidOtruba 
, 
ITTIN_PALET.PalWeight 
ITTIN_PALET_PalWeight 
, 
ITTIN_PALET.Stock_ID 
ITTIN_PALET_Stock_ID 
, 
ITTIN_PALET.CaliberQuantity 
ITTIN_PALET_CaliberQuantity 
, 
ITTIN_PALET.PackageWeight 
ITTIN_PALET_PackageWeight 
, 
 ITTIN_PALET.made_country  
ITTIN_PALET_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTIN_PALET.made_country) 
ITTIN_PALET_made_country 
, 
ITTIN_PALET.palet_id 
ITTIN_PALET_palet_id 
, 
ITTIN_PALET.FullPackageWeight 
ITTIN_PALET_FullPackageWeight 
, 
 ITTIN_PALET.Factory  
ITTIN_PALET_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTIN_PALET.Factory) 
ITTIN_PALET_Factory 
, 
 ITTIN_PALET.TheNumber  
ITTIN_PALET_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTIN_PALET.TheNumber) 
ITTIN_PALET_TheNumber 
, 
ITTIN_PALET.KorobNetto 
ITTIN_PALET_KorobNetto 
, 
ITTIN_PALET.Made_date 
ITTIN_PALET_Made_date 
, 
 ITTIN_PALET.PartRef  
ITTIN_PALET_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTIN_PALET.PartRef) 
ITTIN_PALET_PartRef 
, 
ITTIN_PALET.sequence 
ITTIN_PALET_sequence 
, 
 ITTIN_PALET.KILL_NUMBER  
ITTIN_PALET_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTIN_PALET.KILL_NUMBER) 
ITTIN_PALET_KILL_NUMBER 
, 
ITTIN_PALET.GoodWithPaletWeight 
ITTIN_PALET_GoodWithPaletWeight 
, 
ITTIN_PALET.BufferZonePlace 
ITTIN_PALET_BufferZonePlace 
, 
ITTIN_PALET.KorobBrutto 
ITTIN_PALET_KorobBrutto 
, 
ITTIN_PALET.exp_date 
ITTIN_PALET_exp_date 
, 
 ITTIN_PALET.IsBrak  
ITTIN_PALET_IsBrak_VAL, 
 decode(ITTIN_PALET.IsBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_PALET_IsBrak 
, ITTIN_QLINE.InstanceID InstanceID 
, ITTIN_PALET.ITTIN_PALETID ID 
, 'ITTIN_PALET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_PALET
 join ITTIN_QLINE on ITTIN_QLINE.ITTIN_QLINEID=ITTIN_PALET.ParentStructRowID 
 join INSTANCE on ITTIN_QLINE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_PALET as 
select   ITTIN_PALETID,ITTIN_QLINEID
, 
ITTIN_PALET.vetsved 
ITTIN_PALET_vetsved 
, 
ITTIN_PALET.BarCode2 
ITTIN_PALET_BarCode2 
, 
 ITTIN_PALET.TheNumber  
ITTIN_PALET_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTIN_PALET.TheNumber) 
ITTIN_PALET_TheNumber 
, 
ITTIN_PALET.sequence 
ITTIN_PALET_sequence 
, 
ITTIN_PALET.Made_date 
ITTIN_PALET_Made_date 
, 
ITTIN_PALET.KorobBrutto 
ITTIN_PALET_KorobBrutto 
, 
ITTIN_PALET.Stock_ID 
ITTIN_PALET_Stock_ID 
, 
ITTIN_PALET.BufferZonePlace 
ITTIN_PALET_BufferZonePlace 
, 
 ITTIN_PALET.KILL_NUMBER  
ITTIN_PALET_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTIN_PALET.KILL_NUMBER) 
ITTIN_PALET_KILL_NUMBER 
, 
ITTIN_PALET.exp_date 
ITTIN_PALET_exp_date 
, 
 ITTIN_PALET.Factory  
ITTIN_PALET_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTIN_PALET.Factory) 
ITTIN_PALET_Factory 
, 
ITTIN_PALET.KorobNetto 
ITTIN_PALET_KorobNetto 
, 
 ITTIN_PALET.made_country  
ITTIN_PALET_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTIN_PALET.made_country) 
ITTIN_PALET_made_country 
, 
 ITTIN_PALET.IsBrak  
ITTIN_PALET_IsBrak_VAL, 
 decode(ITTIN_PALET.IsBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_PALET_IsBrak 
, 
ITTIN_PALET.VidOtruba 
ITTIN_PALET_VidOtruba 
, 
 ITTIN_PALET.IsCalibrated  
ITTIN_PALET_IsCalibrated_VAL, 
 decode(ITTIN_PALET.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_PALET_IsCalibrated 
, 
ITTIN_PALET.palet_id 
ITTIN_PALET_palet_id 
, 
ITTIN_PALET.FullPackageWeight 
ITTIN_PALET_FullPackageWeight 
, 
ITTIN_PALET.PalWeight 
ITTIN_PALET_PalWeight 
, 
ITTIN_PALET.BarCode1 
ITTIN_PALET_BarCode1 
, 
ITTIN_PALET.SSCC 
ITTIN_PALET_SSCC 
, 
ITTIN_PALET.CaliberQuantity 
ITTIN_PALET_CaliberQuantity 
, 
ITTIN_PALET.made_date_to 
ITTIN_PALET_made_date_to 
, 
 ITTIN_PALET.PartRef  
ITTIN_PALET_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTIN_PALET.PartRef) 
ITTIN_PALET_PartRef 
, 
ITTIN_PALET.PackageWeight 
ITTIN_PALET_PackageWeight 
, 
ITTIN_PALET.GoodWithPaletWeight 
ITTIN_PALET_GoodWithPaletWeight 
, ITTIN_QLINE.InstanceID InstanceID 
, ITTIN_PALET.ITTIN_PALETID ID 
, 'ITTIN_PALET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_PALET
 join ITTIN_QLINE on ITTIN_QLINE.ITTIN_QLINEID=ITTIN_PALET.ParentStructRowID 
 join INSTANCE on ITTIN_QLINE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTIN_ITTIN_PALET as 
select   ITTIN_PALETID,ITTIN_QLINEID
, 
ITTIN_QLINE.exp_date 
ITTIN_QLINE_exp_date 
, 
 ITTIN_PALET.IsBrak  
ITTIN_PALET_IsBrak_VAL, 
 decode(ITTIN_PALET.IsBrak 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_PALET_IsBrak 
, 
ITTIN_PALET.PalWeight 
ITTIN_PALET_PalWeight 
, 
ITTIN_PALET.GoodWithPaletWeight 
ITTIN_PALET_GoodWithPaletWeight 
, 
ITTIN_DEF.Supplier 
ITTIN_DEF_Supplier 
, 
ITTIN_QLINE.KorobNetto 
ITTIN_QLINE_KorobNetto 
, 
ITTIN_DEF.temp_in_track 
ITTIN_DEF_temp_in_track 
, 
 ITTIN_QLINE.Factory  
ITTIN_QLINE_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTIN_QLINE.Factory) 
ITTIN_QLINE_Factory 
, 
ITTIN_DEF.StampNumber 
ITTIN_DEF_StampNumber 
, 
 ITTIN_QLINE.good_id  
ITTIN_QLINE_good_id_ID, 
ITTIN_QLINE.good_id 
ITTIN_QLINE_good_id 
, 
ITTIN_PALET.BufferZonePlace 
ITTIN_PALET_BufferZonePlace 
, 
 ITTIN_PALET.made_country  
ITTIN_PALET_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTIN_PALET.made_country) 
ITTIN_PALET_made_country 
, 
ITTIN_DEF.TranspNumber 
ITTIN_DEF_TranspNumber 
, 
ITTIN_QLINE.FullPackageWeight 
ITTIN_QLINE_FullPackageWeight 
, 
ITTIN_PALET.CaliberQuantity 
ITTIN_PALET_CaliberQuantity 
, 
 ITTIN_QLINE.QRY_NUM  
ITTIN_QLINE_QRY_NUM_ID, 
ITTIN_QLINE.QRY_NUM 
ITTIN_QLINE_QRY_NUM 
, 
ITTIN_PALET.FullPackageWeight 
ITTIN_PALET_FullPackageWeight 
, 
ITTIN_DEF.TTN 
ITTIN_DEF_TTN 
, 
ITTIN_PALET.PackageWeight 
ITTIN_PALET_PackageWeight 
, 
 ITTIN_QLINE.LineAtQuery  
ITTIN_QLINE_LineAtQuery_ID, 
ITTIN_QLINE.LineAtQuery 
ITTIN_QLINE_LineAtQuery 
, 
ITTIN_PALET.palet_id 
ITTIN_PALET_palet_id 
, 
ITTIN_QLINE.articul 
ITTIN_QLINE_articul 
, 
ITTIN_PALET.Made_date 
ITTIN_PALET_Made_date 
, 
 ITTIN_QLINE.PartRef  
ITTIN_QLINE_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTIN_QLINE.PartRef) 
ITTIN_QLINE_PartRef 
, 
 ITTIN_QLINE.KILL_NUMBER  
ITTIN_QLINE_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTIN_QLINE.KILL_NUMBER) 
ITTIN_QLINE_KILL_NUMBER 
, 
 ITTIN_QLINE.Navalom  
ITTIN_QLINE_Navalom_VAL, 
 decode(ITTIN_QLINE.Navalom 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_QLINE_Navalom 
, 
ITTIN_PALET.Stock_ID 
ITTIN_PALET_Stock_ID 
, 
ITTIN_PALET.KorobNetto 
ITTIN_PALET_KorobNetto 
, 
ITTIN_PALET.exp_date 
ITTIN_PALET_exp_date 
, 
ITTIN_QLINE.edizm 
ITTIN_QLINE_edizm 
, 
ITTIN_QLINE.CaliberWeight 
ITTIN_QLINE_CaliberWeight 
, 
 ITTIN_DEF.QryCode  
ITTIN_DEF_QryCode_ID, 
ITTIN_DEF.QryCode 
ITTIN_DEF_QryCode 
, 
ITTIN_DEF.ProcessDate 
ITTIN_DEF_ProcessDate 
, 
ITTIN_DEF.StampStatus 
ITTIN_DEF_StampStatus 
, 
 ITTIN_PALET.PartRef  
ITTIN_PALET_PartRef_ID, 
 MTZ.Func.ITTD_PART_BRIEF_F(ITTIN_PALET.PartRef) 
ITTIN_PALET_PartRef 
, 
ITTIN_QLINE.VidOtruba 
ITTIN_QLINE_VidOtruba 
, 
ITTIN_DEF.Container 
ITTIN_DEF_Container 
, 
ITTIN_DEF.Track_time_in 
ITTIN_DEF_Track_time_in 
, 
ITTIN_QLINE.CurValue 
ITTIN_QLINE_CurValue 
, 
ITTIN_QLINE.sequence 
ITTIN_QLINE_sequence 
, 
 ITTIN_QLINE.IsCalibrated  
ITTIN_QLINE_IsCalibrated_VAL, 
 decode(ITTIN_QLINE.IsCalibrated 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTIN_QLINE_IsCalibrated 
, 
ITTIN_QLINE.KorobBrutto 
ITTIN_QLINE_KorobBrutto 
, 
ITTIN_DEF.TTNDate 
ITTIN_DEF_TTNDate 
, 
ITTIN_DEF.track_time_out 
ITTIN_DEF_track_time_out 
, 
ITTIN_PALET.KorobBrutto 
ITTIN_PALET_KorobBrutto 
, 
 ITTIN_PALET.TheNumber  
ITTIN_PALET_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTIN_PALET.TheNumber) 
ITTIN_PALET_TheNumber 
, 
 ITTIN_DEF.TheClient  
ITTIN_DEF_TheClient_ID, 
ITTIN_DEF.TheClient 
ITTIN_DEF_TheClient 
, 
ITTIN_PALET.VidOtruba 
ITTIN_PALET_VidOtruba 
, 
 ITTIN_QLINE.made_country  
ITTIN_QLINE_made_country_ID, 
 MTZ.Func.ITTD_COUNTRY_BRIEF_F(ITTIN_QLINE.made_country) 
ITTIN_QLINE_made_country 
, 
 ITTIN_PALET.KILL_NUMBER  
ITTIN_PALET_KILL_NUMBER_ID, 
 MTZ.Func.ITTD_KILLPLACE_BRIEF_F(ITTIN_PALET.KILL_NUMBER) 
ITTIN_PALET_KILL_NUMBER 
, 
ITTIN_QLINE.PackageWeight 
ITTIN_QLINE_PackageWeight 
, 
ITTIN_QLINE.Made_date 
ITTIN_QLINE_Made_date 
, 
 ITTIN_PALET.Factory  
ITTIN_PALET_Factory_ID, 
 MTZ.Func.ITTD_FACTORY_BRIEF_F(ITTIN_PALET.Factory) 
ITTIN_PALET_Factory 
, 
ITTIN_PALET.sequence 
ITTIN_PALET_sequence 
, ITTIN_QLINE.InstanceID InstanceID 
, ITTIN_PALET.ITTIN_PALETID ID 
, 'ITTIN_PALET' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_PALET
 join ITTIN_QLINE on ITTIN_QLINE.ITTIN_QLINEID=ITTIN_PALET.ParentStructRowID 
 join INSTANCE on ITTIN_QLINE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTIN_DEF ON ITTIN_DEF.InstanceID=ITTIN_QLINE.InstanceID 
/
create or replace view V_AUTOITTIN_SRV as 
select   ITTIN_SRVID
, 
ITTIN_SRV.Quantity 
ITTIN_SRV_Quantity 
, 
 ITTIN_SRV.SRV  
ITTIN_SRV_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTIN_SRV.SRV) 
ITTIN_SRV_SRV 
, ITTIN_SRV.InstanceID InstanceID 
, ITTIN_SRV.ITTIN_SRVID ID 
, 'ITTIN_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_SRV
 join INSTANCE on ITTIN_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTIN_ITTIN_SRV as 
select   ITTIN_SRVID
, 
ITTIN_DEF.TranspNumber 
ITTIN_DEF_TranspNumber 
, 
ITTIN_DEF.TTNDate 
ITTIN_DEF_TTNDate 
, 
 ITTIN_DEF.TheClient  
ITTIN_DEF_TheClient_ID, 
ITTIN_DEF.TheClient 
ITTIN_DEF_TheClient 
, 
 ITTIN_DEF.QryCode  
ITTIN_DEF_QryCode_ID, 
ITTIN_DEF.QryCode 
ITTIN_DEF_QryCode 
, 
ITTIN_DEF.Track_time_in 
ITTIN_DEF_Track_time_in 
, 
ITTIN_DEF.TTN 
ITTIN_DEF_TTN 
, 
ITTIN_DEF.ProcessDate 
ITTIN_DEF_ProcessDate 
, 
ITTIN_DEF.StampNumber 
ITTIN_DEF_StampNumber 
, 
 ITTIN_SRV.SRV  
ITTIN_SRV_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTIN_SRV.SRV) 
ITTIN_SRV_SRV 
, 
ITTIN_DEF.Container 
ITTIN_DEF_Container 
, 
ITTIN_DEF.temp_in_track 
ITTIN_DEF_temp_in_track 
, 
ITTIN_SRV.Quantity 
ITTIN_SRV_Quantity 
, 
ITTIN_DEF.StampStatus 
ITTIN_DEF_StampStatus 
, 
ITTIN_DEF.track_time_out 
ITTIN_DEF_track_time_out 
, 
ITTIN_DEF.Supplier 
ITTIN_DEF_Supplier 
, ITTIN_SRV.InstanceID InstanceID 
, ITTIN_SRV.ITTIN_SRVID ID 
, 'ITTIN_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_SRV
 join INSTANCE on ITTIN_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTIN_DEF ON ITTIN_DEF.InstanceID=ITTIN_SRV.InstanceID 
/
create or replace view V_AUTOITTIN_SRV as 
select   ITTIN_SRVID
, 
 ITTIN_SRV.SRV  
ITTIN_SRV_SRV_ID, 
 MTZ.Func.ITTD_SRV_BRIEF_F(ITTIN_SRV.SRV) 
ITTIN_SRV_SRV 
, 
ITTIN_SRV.Quantity 
ITTIN_SRV_Quantity 
, ITTIN_SRV.InstanceID InstanceID 
, ITTIN_SRV.ITTIN_SRVID ID 
, 'ITTIN_SRV' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_SRV
 join INSTANCE on ITTIN_SRV.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_DEF as 
select   ITTIN_DEFID
, 
 ITTIN_DEF.TheClient  
ITTIN_DEF_TheClient_ID, 
ITTIN_DEF.TheClient 
ITTIN_DEF_TheClient 
, 
 ITTIN_DEF.QryCode  
ITTIN_DEF_QryCode_ID, 
ITTIN_DEF.QryCode 
ITTIN_DEF_QryCode 
, 
 ITTIN_DEF.ThePartyRule  
ITTIN_DEF_ThePartyRule_ID, 
 MTZ.Func.ITTD_RULE_BRIEF_F(ITTIN_DEF.ThePartyRule) 
ITTIN_DEF_ThePartyRule 
, 
ITTIN_DEF.track_time_out 
ITTIN_DEF_track_time_out 
, 
ITTIN_DEF.Supplier 
ITTIN_DEF_Supplier 
, 
ITTIN_DEF.TTNDate 
ITTIN_DEF_TTNDate 
, 
ITTIN_DEF.temp_in_track 
ITTIN_DEF_temp_in_track 
, 
ITTIN_DEF.StampNumber 
ITTIN_DEF_StampNumber 
, 
ITTIN_DEF.StampStatus 
ITTIN_DEF_StampStatus 
, 
ITTIN_DEF.ProcessDate 
ITTIN_DEF_ProcessDate 
, 
ITTIN_DEF.Container 
ITTIN_DEF_Container 
, 
ITTIN_DEF.TranspNumber 
ITTIN_DEF_TranspNumber 
, 
ITTIN_DEF.TTN 
ITTIN_DEF_TTN 
, 
ITTIN_DEF.Track_time_in 
ITTIN_DEF_Track_time_in 
, ITTIN_DEF.InstanceID InstanceID 
, ITTIN_DEF.ITTIN_DEFID ID 
, 'ITTIN_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_DEF
 join INSTANCE on ITTIN_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_DEF as 
select   ITTIN_DEFID
, 
ITTIN_DEF.TranspNumber 
ITTIN_DEF_TranspNumber 
, 
ITTIN_DEF.Container 
ITTIN_DEF_Container 
, 
ITTIN_DEF.Track_time_in 
ITTIN_DEF_Track_time_in 
, 
ITTIN_DEF.ProcessDate 
ITTIN_DEF_ProcessDate 
, 
ITTIN_DEF.track_time_out 
ITTIN_DEF_track_time_out 
, 
ITTIN_DEF.temp_in_track 
ITTIN_DEF_temp_in_track 
, 
ITTIN_DEF.TTNDate 
ITTIN_DEF_TTNDate 
, 
ITTIN_DEF.StampStatus 
ITTIN_DEF_StampStatus 
, 
 ITTIN_DEF.TheClient  
ITTIN_DEF_TheClient_ID, 
ITTIN_DEF.TheClient 
ITTIN_DEF_TheClient 
, 
 ITTIN_DEF.QryCode  
ITTIN_DEF_QryCode_ID, 
ITTIN_DEF.QryCode 
ITTIN_DEF_QryCode 
, 
ITTIN_DEF.TTN 
ITTIN_DEF_TTN 
, 
 ITTIN_DEF.ThePartyRule  
ITTIN_DEF_ThePartyRule_ID, 
 MTZ.Func.ITTD_RULE_BRIEF_F(ITTIN_DEF.ThePartyRule) 
ITTIN_DEF_ThePartyRule 
, 
ITTIN_DEF.Supplier 
ITTIN_DEF_Supplier 
, 
ITTIN_DEF.StampNumber 
ITTIN_DEF_StampNumber 
, ITTIN_DEF.InstanceID InstanceID 
, ITTIN_DEF.ITTIN_DEFID ID 
, 'ITTIN_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_DEF
 join INSTANCE on ITTIN_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewITTIN_ITTIN_EPL as 
select   ITTIN_EPLID
, 
ITTIN_EPL.PalWeight 
ITTIN_EPL_PalWeight 
, 
 ITTIN_DEF.QryCode  
ITTIN_DEF_QryCode_ID, 
ITTIN_DEF.QryCode 
ITTIN_DEF_QryCode 
, 
 ITTIN_DEF.TheClient  
ITTIN_DEF_TheClient_ID, 
ITTIN_DEF.TheClient 
ITTIN_DEF_TheClient 
, 
 ITTIN_EPL.TheNumber  
ITTIN_EPL_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTIN_EPL.TheNumber) 
ITTIN_EPL_TheNumber 
, ITTIN_EPL.InstanceID InstanceID 
, ITTIN_EPL.ITTIN_EPLID ID 
, 'ITTIN_EPL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_EPL
 join INSTANCE on ITTIN_EPL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid left join ITTIN_DEF ON ITTIN_DEF.InstanceID=ITTIN_EPL.InstanceID 
/
create or replace view V_AUTOITTIN_EPL as 
select   ITTIN_EPLID
, 
ITTIN_EPL.PalWeight 
ITTIN_EPL_PalWeight 
, 
 ITTIN_EPL.TheNumber  
ITTIN_EPL_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTIN_EPL.TheNumber) 
ITTIN_EPL_TheNumber 
, ITTIN_EPL.InstanceID InstanceID 
, ITTIN_EPL.ITTIN_EPLID ID 
, 'ITTIN_EPL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_EPL
 join INSTANCE on ITTIN_EPL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTIN_EPL as 
select   ITTIN_EPLID
, 
ITTIN_EPL.PalWeight 
ITTIN_EPL_PalWeight 
, 
 ITTIN_EPL.TheNumber  
ITTIN_EPL_TheNumber_ID, 
 MTZ.Func.ITTPL_DEF_BRIEF_F(ITTIN_EPL.TheNumber) 
ITTIN_EPL_TheNumber 
, ITTIN_EPL.InstanceID InstanceID 
, ITTIN_EPL.ITTIN_EPLID ID 
, 'ITTIN_EPL' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTIN_EPL
 join INSTANCE on ITTIN_EPL.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTSSCC_LINE as 
select   ITTSSCC_LINEID
, 
ITTSSCC_LINE.PalletCode 
ITTSSCC_LINE_PalletCode 
, 
ITTSSCC_LINE.Barcode1 
ITTSSCC_LINE_Barcode1 
, 
ITTSSCC_LINE.Barcode2 
ITTSSCC_LINE_Barcode2 
, 
ITTSSCC_LINE.Result 
ITTSSCC_LINE_Result 
, 
 ITTSSCC_LINE.Processed  
ITTSSCC_LINE_Processed_VAL, 
 decode(ITTSSCC_LINE.Processed 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
ITTSSCC_LINE_Processed 
, ITTSSCC_LINE.InstanceID InstanceID 
, ITTSSCC_LINE.ITTSSCC_LINEID ID 
, 'ITTSSCC_LINE' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTSSCC_LINE
 join INSTANCE on ITTSSCC_LINE.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOITTSSCC_DEF as 
select   ITTSSCC_DEFID
, 
ITTSSCC_DEF.TheDate 
ITTSSCC_DEF_TheDate 
, 
 ITTSSCC_DEF.TheUser  
ITTSSCC_DEF_TheUser_ID, 
 MTZ.Func.Users_BRIEF_F(ITTSSCC_DEF.TheUser) 
ITTSSCC_DEF_TheUser 
, 
ITTSSCC_DEF.TCode 
ITTSSCC_DEF_TCode 
, ITTSSCC_DEF.InstanceID InstanceID 
, ITTSSCC_DEF.ITTSSCC_DEFID ID 
, 'ITTSSCC_DEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ITTSSCC_DEF
 join INSTANCE on ITTSSCC_DEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewMTZwp_WorkPlace as 
select   WorkPlaceID
, 
 WorkPlace.ThePlatform  
WorkPlace_ThePlatform_VAL, 
 decode(WorkPlace.ThePlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
WorkPlace_ThePlatform 
, 
WorkPlace.Name 
WorkPlace_Name 
, 
WorkPlace.TheVersion 
WorkPlace_TheVersion 
, WorkPlace.InstanceID InstanceID 
, WorkPlace.WorkPlaceID ID 
, 'WorkPlace' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WorkPlace
 join INSTANCE on WorkPlace.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOWorkPlace as 
select   WorkPlaceID
, 
WorkPlace.Caption 
WorkPlace_Caption 
, 
WorkPlace.Name 
WorkPlace_Name 
, 
 WorkPlace.ThePlatform  
WorkPlace_ThePlatform_VAL, 
 decode(WorkPlace.ThePlatform 
, 2 ,'JAVA'
, 3 ,'OTHER'
, 1 ,'DOTNET'
, 0 ,'VB6'
, '???') 
WorkPlace_ThePlatform 
, 
WorkPlace.TheComment 
WorkPlace_TheComment 
, 
WorkPlace.TheVersion 
WorkPlace_TheVersion 
, WorkPlace.InstanceID InstanceID 
, WorkPlace.WorkPlaceID ID 
, 'WorkPlace' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WorkPlace
 join INSTANCE on WorkPlace.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOEntryPoints as 
select   EntryPointsID
, 
EntryPoints.IconFile 
EntryPoints_IconFile 
, 
 EntryPoints.Journal  
EntryPoints_Journal_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(EntryPoints.Journal) 
EntryPoints_Journal 
, 
EntryPoints.TheComment 
EntryPoints_TheComment 
, 
 EntryPoints.Document  
EntryPoints_Document_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(EntryPoints.Document) 
EntryPoints_Document 
, 
 EntryPoints.ActionType  
EntryPoints_ActionType_VAL, 
 decode(EntryPoints.ActionType 
, 5 ,'Открыть отчет'
, 0 ,'Ничего не делать'
, 2 ,'Выполнить метод'
, 1 ,'Открыть документ'
, 4 ,'Запустить АРМ'
, 3 ,'Открыть журнал'
, '???') 
EntryPoints_ActionType 
, 
 EntryPoints.Report  
EntryPoints_Report_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(EntryPoints.Report) 
EntryPoints_Report 
, 
 EntryPoints.Method  
EntryPoints_Method_ID, 
 MTZ.Func.SHAREDMETHOD_BRIEF_F(EntryPoints.Method) 
EntryPoints_Method 
, 
EntryPoints.Caption 
EntryPoints_Caption 
, 
 EntryPoints.AsToolbarItem  
EntryPoints_AsToolbarItem_VAL, 
 decode(EntryPoints.AsToolbarItem 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
EntryPoints_AsToolbarItem 
, 
EntryPoints.Name 
EntryPoints_Name 
, 
 EntryPoints.ObjectType  
EntryPoints_ObjectType_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(EntryPoints.ObjectType) 
EntryPoints_ObjectType 
, 
 EntryPoints.TheExtention  
EntryPoints_TheExtention_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(EntryPoints.TheExtention) 
EntryPoints_TheExtention 
, 
 EntryPoints.TheFilter  
EntryPoints_TheFilter_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(EntryPoints.TheFilter) 
EntryPoints_TheFilter 
, 
 EntryPoints.ARM  
EntryPoints_ARM_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(EntryPoints.ARM) 
EntryPoints_ARM 
, 
EntryPoints.JournalFixedQuery 
EntryPoints_JournalFixedQuery 
, 
EntryPoints.sequence 
EntryPoints_sequence 
, EntryPoints.InstanceID InstanceID 
, EntryPoints.EntryPointsID ID 
, 'EntryPoints' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from EntryPoints
 join INSTANCE on EntryPoints.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOEPFilterLink as 
select   EPFilterLinkID,EntryPointsID
, 
EPFilterLink.TheExpression 
EPFilterLink_TheExpression 
, 
EPFilterLink.FilterField 
EPFilterLink_FilterField 
, 
EPFilterLink.RowSource 
EPFilterLink_RowSource 
, EntryPoints.InstanceID InstanceID 
, EPFilterLink.EPFilterLinkID ID 
, 'EPFilterLink' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from EPFilterLink
 join EntryPoints on EntryPoints.EntryPointsID=EPFilterLink.ParentStructRowID 
 join INSTANCE on EntryPoints.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOARMTypes as 
select   ARMTypesID
, 
 ARMTypes.TheDocumentType  
ARMTypes_TheDocumentType_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(ARMTypes.TheDocumentType) 
ARMTypes_TheDocumentType 
, ARMTypes.InstanceID InstanceID 
, ARMTypes.ARMTypesID ID 
, 'ARMTypes' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMTypes
 join INSTANCE on ARMTypes.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOARMJournal as 
select   ARMJournalID
, 
 ARMJournal.TheJournal  
ARMJournal_TheJournal_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ARMJournal.TheJournal) 
ARMJournal_TheJournal 
, ARMJournal.InstanceID InstanceID 
, ARMJournal.ARMJournalID ID 
, 'ARMJournal' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJournal
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOARMJRNLADD as 
select   ARMJRNLADDID,ARMJournalID
, 
ARMJRNLADD.Name 
ARMJRNLADD_Name 
, 
 ARMJRNLADD.TheExtention  
ARMJRNLADD_TheExtention_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ARMJRNLADD.TheExtention) 
ARMJRNLADD_TheExtention 
, ARMJournal.InstanceID InstanceID 
, ARMJRNLADD.ARMJRNLADDID ID 
, 'ARMJRNLADD' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJRNLADD
 join ARMJournal on ARMJournal.ARMJournalID=ARMJRNLADD.ParentStructRowID 
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOARMJRNLREP as 
select   ARMJRNLREPID,ARMJournalID
, 
 ARMJRNLREP.TheReport  
ARMJRNLREP_TheReport_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ARMJRNLREP.TheReport) 
ARMJRNLREP_TheReport 
, 
ARMJRNLREP.repname 
ARMJRNLREP_repname 
, ARMJournal.InstanceID InstanceID 
, ARMJRNLREP.ARMJRNLREPID ID 
, 'ARMJRNLREP' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJRNLREP
 join ARMJournal on ARMJournal.ARMJournalID=ARMJRNLREP.ParentStructRowID 
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOARMJRNLRUN as 
select   ARMJRNLRUNID,ARMJournalID
, 
ARMJRNLRUN.Name 
ARMJRNLRUN_Name 
, 
 ARMJRNLRUN.TheExtention  
ARMJRNLRUN_TheExtention_ID, 
 MTZ.Func.INSTANCE_BRIEF_F(ARMJRNLRUN.TheExtention) 
ARMJRNLRUN_TheExtention 
, ARMJournal.InstanceID InstanceID 
, ARMJRNLRUN.ARMJRNLRUNID ID 
, 'ARMJRNLRUN' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from ARMJRNLRUN
 join ARMJournal on ARMJournal.ARMJournalID=ARMJRNLRUN.ParentStructRowID 
 join INSTANCE on ARMJournal.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOWEBS_MAILLIST as 
select   WEBS_MAILLISTID
, 
WEBS_MAILLIST.Email 
WEBS_MAILLIST_Email 
, WEBS_MAILLIST.InstanceID InstanceID 
, WEBS_MAILLIST.WEBS_MAILLISTID ID 
, 'WEBS_MAILLIST' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_MAILLIST
 join INSTANCE on WEBS_MAILLIST.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewWEBS_WEBS_PAGEDEF as 
select   WEBS_PAGEDEFID
, 
WEBS_PAGEDEF.Name 
WEBS_PAGEDEF_Name 
, 
WEBS_PAGEDEF.QueueNumber 
WEBS_PAGEDEF_QueueNumber 
, 
WEBS_PAGEDEF.Url 
WEBS_PAGEDEF_Url 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGEDEF.WEBS_PAGEDEFID ID 
, 'WEBS_PAGEDEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGEDEF
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_AUTOWEBS_PAGEDEF as 
select   WEBS_PAGEDEFID
, 
 WEBS_PAGEDEF.ObjectName  
WEBS_PAGEDEF_ObjectName_ID, 
 MTZ.Func.OBJECTTYPE_BRIEF_F(WEBS_PAGEDEF.ObjectName) 
WEBS_PAGEDEF_ObjectName 
, 
 WEBS_PAGEDEF.PageType  
WEBS_PAGEDEF_PageType_ID, 
 MTZ.Func.WEBSDIC_PAGETYPE_BRIEF_F(WEBS_PAGEDEF.PageType) 
WEBS_PAGEDEF_PageType 
, 
WEBS_PAGEDEF.PageContent 
WEBS_PAGEDEF_PageContent 
, 
WEBS_PAGEDEF.Title 
WEBS_PAGEDEF_Title 
, 
WEBS_PAGEDEF.SelectIDParameterName 
WEBS_PAGEDEF_SelectIDParameterName 
, 
WEBS_PAGEDEF.QueueNumber 
WEBS_PAGEDEF_QueueNumber 
, 
WEBS_PAGEDEF.Name 
WEBS_PAGEDEF_Name 
, 
WEBS_PAGEDEF.the_Mode 
WEBS_PAGEDEF_the_Mode 
, 
 WEBS_PAGEDEF.IsShowHisory  
WEBS_PAGEDEF_IsShowHisory_VAL, 
 decode(WEBS_PAGEDEF.IsShowHisory 
, -1 ,'Да'
, 0 ,'Нет'
, '???') 
WEBS_PAGEDEF_IsShowHisory 
, WEBS_PAGEDEF.InstanceID InstanceID 
, WEBS_PAGEDEF.WEBS_PAGEDEFID ID 
, 'WEBS_PAGEDEF' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_PAGEDEF
 join INSTANCE on WEBS_PAGEDEF.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewWEBS_WEBS_ANKETA as 
select   WEBS_ANKETAID
, 
WEBS_ANKETA.the_Description 
WEBS_ANKETA_the_Description 
, 
WEBS_ANKETA.Name 
WEBS_ANKETA_Name 
, WEBS_ANKETA.InstanceID InstanceID 
, WEBS_ANKETA.WEBS_ANKETAID ID 
, 'WEBS_ANKETA' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_ANKETA
 join INSTANCE on WEBS_ANKETA.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
create or replace view V_viewWEBS_WEBS_DDOC as 
select   WEBS_DDOCID
, 
WEBS_DDOC.FileName 
WEBS_DDOC_FileName 
, 
WEBS_DDOC.Name 
WEBS_DDOC_Name 
, 
WEBS_DDOC.Title 
WEBS_DDOC_Title 
, WEBS_DDOC.InstanceID InstanceID 
, WEBS_DDOC.WEBS_DDOCID ID 
, 'WEBS_DDOC' VIEWBASE 
, XXXMYSTATUSXXX.Name StatusName 
, XXXMYSTATUSXXX.objstatusid INTSANCEStatusID
  from WEBS_DDOC
 join INSTANCE on WEBS_DDOC.INSTANCEID=INSTANCE.INSTANCEID
 left join objstatus XXXMYSTATUSXXX on instance.status=XXXMYSTATUSXXX.objstatusid 
/
"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Kernel.Header" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Type.Header" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Methods" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Custom" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Functions.Body" File=""><BlockHolder BlockName="--body" BlockCode=" 

 create or replace package body Func as

  function instance_BRIEF_F  (
 ainstanceid CHAR
)return varchar2 as  
 aBRIEF varchar2(4000);
 atmpCnt numeric;
 begin
if ainstanceid is null then aBRIEF:=''; return (aBRIEF); end if;
 -- Brief body --
select count(*) into aTmpCnt from instance where instanceID=ainstanceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select aBRIEF
  ||  nvl(Name,' ')||'; ' into aBrief
  from instance where  instanceID = ainstanceID;
else 
  aBRIEF:= 'неверный идентификатор';
End if;
 aBRIEF:=substr(aBRIEF,1,255);
  return (aBRIEF);
End;


function SrvMessageInfo_BRIEF_F  (
 aSrvMessageInfoid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSrvMessageInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SrvMessageInfo where SrvMessageInfoID=aSrvMessageInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ForUser
 into atmpID  from SrvMessageInfo  where  SrvMessageInfoID = aSrvMessageInfoID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(msgDate),' ') ||'; '
  into aBrief from SrvMessageInfo  where  SrvMessageInfoID = aSrvMessageInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDMail_To_BRIEF_F  (
 aSTDMail_Toid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDMail_Toid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDMail_To where STDMail_ToID=aSTDMail_ToID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheTo),' ') ||'; '
  into aBrief from STDMail_To  where  STDMail_ToID = aSTDMail_ToID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDMail_Attach_BRIEF_F  (
 aSTDMail_Attachid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDMail_Attachid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDMail_Attach where STDMail_AttachID=aSTDMail_AttachID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from STDMail_Attach  where  STDMail_AttachID = aSTDMail_AttachID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDMail_Info_BRIEF_F  (
 aSTDMail_Infoid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDMail_Infoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDMail_Info where STDMail_InfoID=aSTDMail_InfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Subject),' ') ||'; '
  into aBrief from STDMail_Info  where  STDMail_InfoID = aSTDMail_InfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOPT_MOVE_BRIEF_F  (
 aITTOPT_MOVEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOPT_MOVEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOPT_MOVE where ITTOPT_MOVEID=aITTOPT_MOVEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(sequence),' ') ||'; '
  into aBrief from ITTOPT_MOVE  where  ITTOPT_MOVEID = aITTOPT_MOVEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOPT_DEF_BRIEF_F  (
 aITTOPT_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOPT_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOPT_DEF where ITTOPT_DEFID=aITTOPT_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select OptType
 into atmpID  from ITTOPT_DEF  where  ITTOPT_DEFID = aITTOPT_DEFID ;
 atmpBrief := func.ITTD_OPTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(OPtDate),' ') ||'; '
  into aBrief from ITTOPT_DEF  where  ITTOPT_DEFID = aITTOPT_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(DateToOptimize),' ') ||'; '
  into aBrief from ITTOPT_DEF  where  ITTOPT_DEFID = aITTOPT_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Num_zones_BRIEF_F  (
 aNum_zonesid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNum_zonesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Num_zones where Num_zonesID=aNum_zonesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ZoneMask),' ') ||'; '
  into aBrief from Num_zones  where  Num_zonesID = aNum_zonesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Num_Values_BRIEF_F  (
 aNum_Valuesid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNum_Valuesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Num_Values where Num_ValuesID=aNum_ValuesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Value),' ') ||'; '
  into aBrief from Num_Values  where  Num_ValuesID = aNum_ValuesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Num_head_BRIEF_F  (
 aNum_headid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNum_headid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Num_head where Num_headID=aNum_headID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Num_head  where  Num_headID = aNum_headID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FilterFieldGroup_BRIEF_F  (
 aFilterFieldGroupid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFilterFieldGroupid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FilterFieldGroup where FilterFieldGroupID=aFilterFieldGroupID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FilterFieldGroup  where  FilterFieldGroupID = aFilterFieldGroupID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from FilterFieldGroup  where  FilterFieldGroupID = aFilterFieldGroupID; 
  select  aBRIEF ||
  Decode( AllowIgnore
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FilterFieldGroup where FilterFieldGroupID=aFilterFieldGroupID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FileterField_BRIEF_F  (
 aFileterFieldid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFileterFieldid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FileterField where FileterFieldID=aFileterFieldID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FileterField  where  FileterFieldID = aFileterFieldID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from FileterField  where  FileterFieldID = aFileterFieldID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Filters_BRIEF_F  (
 aFiltersid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFiltersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Filters where FiltersID=aFiltersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Filters  where  FiltersID = aFiltersID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function StateAction_BRIEF_F  (
 aStateActionid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aStateActionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from StateAction where StateActionID=aStateActionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select OnDocStatus
 into atmpID  from StateAction  where  StateActionID = aStateActionID ;
 atmpBrief := func.OBJSTATUS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBSDIC_QTYPE_BRIEF_F  (
 aWEBSDIC_QTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBSDIC_QTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBSDIC_QTYPE where WEBSDIC_QTYPEID=aWEBSDIC_QTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Sequence),' ') ||'; '
  into aBrief from WEBSDIC_QTYPE  where  WEBSDIC_QTYPEID = aWEBSDIC_QTYPEID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBSDIC_QTYPE  where  WEBSDIC_QTYPEID = aWEBSDIC_QTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBSDIC_DEF_BRIEF_F  (
 aWEBSDIC_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBSDIC_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBSDIC_DEF where WEBSDIC_DEFID=aWEBSDIC_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select WEBS
 into atmpID  from WEBSDIC_DEF  where  WEBSDIC_DEFID = aWEBSDIC_DEFID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBSDIC_PAGETYPE_BRIEF_F  (
 aWEBSDIC_PAGETYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBSDIC_PAGETYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBSDIC_PAGETYPE where WEBSDIC_PAGETYPEID=aWEBSDIC_PAGETYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Sequence),' ') ||'; '
  into aBrief from WEBSDIC_PAGETYPE  where  WEBSDIC_PAGETYPEID = aWEBSDIC_PAGETYPEID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBSDIC_PAGETYPE  where  WEBSDIC_PAGETYPEID = aWEBSDIC_PAGETYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ2JOB_DEF_BRIEF_F  (
 aMTZ2JOB_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ2JOB_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ2JOB_DEF where MTZ2JOB_DEFID=aMTZ2JOB_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(EventDate),' ') ||'; '
  into aBrief from MTZ2JOB_DEF  where  MTZ2JOB_DEFID = aMTZ2JOB_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(EvenType),' ') ||'; '
  into aBrief from MTZ2JOB_DEF  where  MTZ2JOB_DEFID = aMTZ2JOB_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_LOCKED_BRIEF_F  (
 aREPD_LOCKEDid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_LOCKEDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_LOCKED where REPD_LOCKEDID=aREPD_LOCKEDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(StructType),' ') ||'; '
  into aBrief from REPD_LOCKED  where  REPD_LOCKEDID = aREPD_LOCKEDID; 
 select aBRIEF 
  ||  nvl(to_char(ObjectType),' ') ||'; '
  into aBrief from REPD_LOCKED  where  REPD_LOCKEDID = aREPD_LOCKEDID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_RequestQuery_BRIEF_F  (
 aREPD_RequestQueryid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_RequestQueryid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_RequestQuery where REPD_RequestQueryID=aREPD_RequestQueryID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SourceSrv
 into atmpID  from REPD_RequestQuery  where  REPD_RequestQueryID = aREPD_RequestQueryID ;
 atmpBrief := func.REPD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_ResQueryRcv_BRIEF_F  (
 aREPD_ResQueryRcvid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_ResQueryRcvid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_ResQueryRcv where REPD_ResQueryRcvID=aREPD_ResQueryRcvID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ReceiveRec
 into atmpID  from REPD_ResQueryRcv  where  REPD_ResQueryRcvID = aREPD_ResQueryRcvID ;
 atmpBrief := func.REPD_RecvQ_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_PROV_BRIEF_F  (
 aREPD_PROVid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_PROVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_PROV where REPD_PROVID=aREPD_PROVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from REPD_PROV  where  REPD_PROVID = aREPD_PROVID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_SRV_BRIEF_F  (
 aREPD_SRVid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_SRV where REPD_SRVID=aREPD_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from REPD_SRV  where  REPD_SRVID = aREPD_SRVID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_SNDTO_BRIEF_F  (
 aREPD_SNDTOid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_SNDTOid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_SNDTO where REPD_SNDTOID=aREPD_SNDTOID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DestSrv
 into atmpID  from REPD_SNDTO  where  REPD_SNDTOID = aREPD_SNDTOID ;
 atmpBrief := func.REPD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_CONST_BRIEF_F  (
 aREPD_CONSTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_CONSTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_CONST where REPD_CONSTID=aREPD_CONSTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from REPD_CONST  where  REPD_CONSTID = aREPD_CONSTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_REPTYPE_BRIEF_F  (
 aREPD_REPTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_REPTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_REPTYPE where REPD_REPTYPEID=aREPD_REPTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( ReplicaType
 ,0
 ,'Весь документ'
 ,2
 ,'Локальный'
 ,1
 ,'Построчно'
,'.') into aBrief from REPD_REPTYPE where REPD_REPTYPEID=aREPD_REPTYPEID;
select TheObjectType
 into atmpID  from REPD_REPTYPE  where  REPD_REPTYPEID = aREPD_REPTYPEID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_SendQ_BRIEF_F  (
 aREPD_SendQid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_SendQid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_SendQ where REPD_SendQID=aREPD_SendQID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FileName),' ') ||'; '
  into aBrief from REPD_SendQ  where  REPD_SendQID = aREPD_SendQID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function REPD_RecvQ_BRIEF_F  (
 aREPD_RecvQid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aREPD_RecvQid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from REPD_RecvQ where REPD_RecvQID=aREPD_RecvQID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SourceSrv
 into atmpID  from REPD_RecvQ  where  REPD_RecvQID = aREPD_RecvQID ;
 atmpBrief := func.REPD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ST_MAIN_BRIEF_F  (
 aST_MAINid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aST_MAINid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ST_MAIN where ST_MAINID=aST_MAINID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(AccessDate),' ') ||'; '
  into aBrief from ST_MAIN  where  ST_MAINID = aST_MAINID; 
select WEBS_Page
 into atmpID  from ST_MAIN  where  ST_MAINID = aST_MAINID ;
 atmpBrief := func.WEBS_PAGEDEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ST_DEF_BRIEF_F  (
 aST_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aST_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ST_DEF where ST_DEFID=aST_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ST_DEF  where  ST_DEFID = aST_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ST_PAGES_BRIEF_F  (
 aST_PAGESid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aST_PAGESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ST_PAGES where ST_PAGESID=aST_PAGESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(AccessDate),' ') ||'; '
  into aBrief from ST_PAGES  where  ST_PAGESID = aST_PAGESID; 
select WEBS_Page
 into atmpID  from ST_PAGES  where  ST_PAGESID = aST_PAGESID ;
 atmpBrief := func.WEBS_PAGEDEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_MOROZ_BRIEF_F  (
 aITTD_MOROZid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_MOROZid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_MOROZ where ITTD_MOROZID=aITTD_MOROZID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheClient
 into atmpID  from ITTD_MOROZ  where  ITTD_MOROZID = aITTD_MOROZID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(MorozConst),' ') ||'; '
  into aBrief from ITTD_MOROZ  where  ITTD_MOROZID = aITTD_MOROZID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_RULE_BRIEF_F  (
 aITTD_RULEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_RULEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_RULE where ITTD_RULEID=aITTD_RULEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_RULE  where  ITTD_RULEID = aITTD_RULEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_PLTYPE_BRIEF_F  (
 aITTD_PLTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_PLTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_PLTYPE where ITTD_PLTYPEID=aITTD_PLTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_PLTYPE  where  ITTD_PLTYPEID = aITTD_PLTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_FACTORY_BRIEF_F  (
 aITTD_FACTORYid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_FACTORYid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_FACTORY where ITTD_FACTORYID=aITTD_FACTORYID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_FACTORY  where  ITTD_FACTORYID = aITTD_FACTORYID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_ZTYPE_BRIEF_F  (
 aITTD_ZTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_ZTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_ZTYPE where ITTD_ZTYPEID=aITTD_ZTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_ZTYPE  where  ITTD_ZTYPEID = aITTD_ZTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_GTYPE_BRIEF_F  (
 aITTD_GTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_GTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_GTYPE where ITTD_GTYPEID=aITTD_GTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_GTYPE  where  ITTD_GTYPEID = aITTD_GTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_KILLPLACE_BRIEF_F  (
 aITTD_KILLPLACEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_KILLPLACEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_KILLPLACE where ITTD_KILLPLACEID=aITTD_KILLPLACEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_KILLPLACE  where  ITTD_KILLPLACEID = aITTD_KILLPLACEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_COUNTRY_BRIEF_F  (
 aITTD_COUNTRYid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_COUNTRYid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_COUNTRY where ITTD_COUNTRYID=aITTD_COUNTRYID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_COUNTRY  where  ITTD_COUNTRYID = aITTD_COUNTRYID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_QTYPE_BRIEF_F  (
 aITTD_QTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_QTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_QTYPE where ITTD_QTYPEID=aITTD_QTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_QTYPE  where  ITTD_QTYPEID = aITTD_QTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_CAMERA_BRIEF_F  (
 aITTD_CAMERAid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_CAMERAid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_CAMERA where ITTD_CAMERAID=aITTD_CAMERAID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_CAMERA  where  ITTD_CAMERAID = aITTD_CAMERAID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_SRV_BRIEF_F  (
 aITTD_SRVid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_SRV where ITTD_SRVID=aITTD_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_SRV  where  ITTD_SRVID = aITTD_SRVID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_ATYPE_BRIEF_F  (
 aITTD_ATYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_ATYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_ATYPE where ITTD_ATYPEID=aITTD_ATYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_ATYPE  where  ITTD_ATYPEID = aITTD_ATYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_OPTTYPE_BRIEF_F  (
 aITTD_OPTTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_OPTTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_OPTTYPE where ITTD_OPTTYPEID=aITTD_OPTTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_OPTTYPE  where  ITTD_OPTTYPEID = aITTD_OPTTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_EMAIL_BRIEF_F  (
 aITTD_EMAILid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_EMAILid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_EMAIL where ITTD_EMAILID=aITTD_EMAILID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FIO),' ') ||'; '
  into aBrief from ITTD_EMAIL  where  ITTD_EMAILID = aITTD_EMAILID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTD_PART_BRIEF_F  (
 aITTD_PARTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTD_PARTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTD_PART where ITTD_PARTID=aITTD_PARTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ITTD_PART  where  ITTD_PARTID = aITTD_PARTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTPL_DEF_BRIEF_F  (
 aITTPL_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTPL_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTPL_DEF where ITTPL_DEFID=aITTPL_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Code),' ') ||'; '
  into aBrief from ITTPL_DEF  where  ITTPL_DEFID = aITTPL_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOP_OPLNK_BRIEF_F  (
 aITTOP_OPLNKid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOP_OPLNKid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOP_OPLNK where ITTOP_OPLNKID=aITTOP_OPLNKID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheUser
 into atmpID  from ITTOP_OPLNK  where  ITTOP_OPLNKID = aITTOP_OPLNKID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOP_OPKAM_BRIEF_F  (
 aITTOP_OPKAMid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOP_OPKAMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOP_OPKAM where ITTOP_OPKAMID=aITTOP_OPKAMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheKamera
 into atmpID  from ITTOP_OPKAM  where  ITTOP_OPKAMID = aITTOP_OPKAMID ;
 atmpBrief := func.ITTD_CAMERA_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOP_KLNK_BRIEF_F  (
 aITTOP_KLNKid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOP_KLNKid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOP_KLNK where ITTOP_KLNKID=aITTOP_KLNKID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheUser
 into atmpID  from ITTOP_KLNK  where  ITTOP_KLNKID = aITTOP_KLNKID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOP_KCAM_BRIEF_F  (
 aITTOP_KCAMid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOP_KCAMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOP_KCAM where ITTOP_KCAMID=aITTOP_KCAMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheKamera
 into atmpID  from ITTOP_KCAM  where  ITTOP_KCAMID = aITTOP_KCAMID ;
 atmpBrief := func.ITTD_CAMERA_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOP_KCLI_BRIEF_F  (
 aITTOP_KCLIid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOP_KCLIid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOP_KCLI where ITTOP_KCLIID=aITTOP_KCLIID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheClient
 into atmpID  from ITTOP_KCLI  where  ITTOP_KCLIID = aITTOP_KCLIID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTFN_MAX_BRIEF_F  (
 aITTFN_MAXid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTFN_MAXid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTFN_MAX where ITTFN_MAXID=aITTFN_MAXID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PalMaxNum),' ') ||'; '
  into aBrief from ITTFN_MAX  where  ITTFN_MAXID = aITTFN_MAXID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournlaExtInfo_BRIEF_F  (
 aSTDJournlaExtInfoid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournlaExtInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournlaExtInfo where STDJournlaExtInfoID=aSTDJournlaExtInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from STDJournlaExtInfo  where  STDJournlaExtInfoID = aSTDJournlaExtInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournalExtParam_BRIEF_F  (
 aSTDJournalExtParamid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournalExtParamid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournalExtParam where STDJournalExtParamID=aSTDJournalExtParamID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FieldName),' ') ||'; '
  into aBrief from STDJournalExtParam  where  STDJournalExtParamID = aSTDJournalExtParamID; 
 select aBRIEF 
  ||  nvl(to_char(ParamName),' ') ||'; '
  into aBrief from STDJournalExtParam  where  STDJournalExtParamID = aSTDJournalExtParamID; 
select TargetPlatform
 into atmpID  from STDJournalExtParam  where  STDJournalExtParamID = aSTDJournalExtParamID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournalExtFlt_BRIEF_F  (
 aSTDJournalExtFltid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournalExtFltid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournalExtFlt where STDJournalExtFltID=aSTDJournalExtFltID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ViewSource),' ') ||'; '
  into aBrief from STDJournalExtFlt  where  STDJournalExtFltID = aSTDJournalExtFltID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STDJournalExtField_BRIEF_F  (
 aSTDJournalExtFieldid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTDJournalExtFieldid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STDJournalExtField where STDJournalExtFieldID=aSTDJournalExtFieldID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ViewField),' ') ||'; '
  into aBrief from STDJournalExtField  where  STDJournalExtFieldID = aSTDJournalExtFieldID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Ext_Photos_BRIEF_F  (
 aExt_Photosid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aExt_Photosid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Ext_Photos where Ext_PhotosID=aExt_PhotosID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from Ext_Photos  where  Ext_PhotosID = aExt_PhotosID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Ext_Photo_Call_BRIEF_F  (
 aExt_Photo_Callid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aExt_Photo_Callid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Ext_Photo_Call where Ext_Photo_CallID=aExt_Photo_CallID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TargetPlatform
 into atmpID  from Ext_Photo_Call  where  Ext_Photo_CallID = aExt_Photo_CallID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDTYPE_BRIEF_F  (
 aFIELDTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDTYPE where FIELDTYPEID=aFIELDTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FIELDTYPE  where  FIELDTYPEID = aFIELDTYPEID; 
  select  aBRIEF ||
  Decode( TypeStyle
 ,3
 ,'Интервал'
 ,5
 ,'Элемент оформления'
 ,0
 ,'Скалярный тип'
 ,4
 ,'Ссылка'
 ,2
 ,'Перечисление'
 ,1
 ,'Выражение'
,'.') into aBrief from FIELDTYPE where FIELDTYPEID=aFIELDTYPEID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDTYPEMAP_BRIEF_F  (
 aFIELDTYPEMAPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDTYPEMAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDTYPEMAP where FIELDTYPEMAPID=aFIELDTYPEMAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from FIELDTYPEMAP  where  FIELDTYPEMAPID = aFIELDTYPEMAPID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(StoageType),' ') ||'; '
  into aBrief from FIELDTYPEMAP  where  FIELDTYPEMAPID = aFIELDTYPEMAPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ENUMITEM_BRIEF_F  (
 aENUMITEMid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aENUMITEMid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ENUMITEM where ENUMITEMID=aENUMITEMID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ENUMITEM  where  ENUMITEMID = aENUMITEMID; 
 select aBRIEF 
  ||  nvl(to_char(NameValue),' ') ||'; '
  into aBrief from ENUMITEM  where  ENUMITEMID = aENUMITEMID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SHAREDMETHOD_BRIEF_F  (
 aSHAREDMETHODid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSHAREDMETHODid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SHAREDMETHOD where SHAREDMETHODID=aSHAREDMETHODID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from SHAREDMETHOD  where  SHAREDMETHODID = aSHAREDMETHODID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SCRIPT_BRIEF_F  (
 aSCRIPTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSCRIPTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SCRIPT where SCRIPTID=aSCRIPTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from SCRIPT  where  SCRIPTID = aSCRIPTID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARAMETERS_BRIEF_F  (
 aPARAMETERSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARAMETERSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARAMETERS where PARAMETERSID=aPARAMETERSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PARAMETERS  where  PARAMETERSID = aPARAMETERSID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from PARAMETERS  where  PARAMETERSID = aPARAMETERSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function OBJECTTYPE_BRIEF_F  (
 aOBJECTTYPEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aOBJECTTYPEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from OBJECTTYPE where OBJECTTYPEID=aOBJECTTYPEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Package
 into atmpID  from OBJECTTYPE  where  OBJECTTYPEID = aOBJECTTYPEID ;
 atmpBrief := func.MTZAPP_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(the_Comment),' ') ||'; '
  into aBrief from OBJECTTYPE  where  OBJECTTYPEID = aOBJECTTYPEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PART_BRIEF_F  (
 aPARTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PART where PARTID=aPARTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from PART  where  PARTID = aPARTID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PART  where  PARTID = aPARTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTMENU_BRIEF_F  (
 aPARTMENUid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTMENU where PARTMENUID=aPARTMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PARTMENU  where  PARTMENUID = aPARTMENUID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTPARAMMAP_BRIEF_F  (
 aPARTPARAMMAPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTPARAMMAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTPARAMMAP where PARTPARAMMAPID=aPARTPARAMMAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FieldName),' ') ||'; '
  into aBrief from PARTPARAMMAP  where  PARTPARAMMAPID = aPARTPARAMMAPID; 
 select aBRIEF 
  ||  nvl(to_char(ParamName),' ') ||'; '
  into aBrief from PARTPARAMMAP  where  PARTPARAMMAPID = aPARTPARAMMAPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELD_BRIEF_F  (
 aFIELDid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELD where FIELDID=aFIELDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from FIELD  where  FIELDID = aFIELDID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FIELD  where  FIELDID = aFIELDID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDVALIDATOR_BRIEF_F  (
 aFIELDVALIDATORid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDVALIDATORid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDVALIDATOR where FIELDVALIDATORID=aFIELDVALIDATORID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from FIELDVALIDATOR  where  FIELDVALIDATORID = aFIELDVALIDATORID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDMENU_BRIEF_F  (
 aFIELDMENUid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDMENU where FIELDMENUID=aFIELDMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from FIELDMENU  where  FIELDMENUID = aFIELDMENUID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDPARAMMAP_BRIEF_F  (
 aFIELDPARAMMAPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDPARAMMAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDPARAMMAP where FIELDPARAMMAPID=aFIELDPARAMMAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FieldName),' ') ||'; '
  into aBrief from FIELDPARAMMAP  where  FIELDPARAMMAPID = aFIELDPARAMMAPID; 
 select aBRIEF 
  ||  nvl(to_char(ParamName),' ') ||'; '
  into aBrief from FIELDPARAMMAP  where  FIELDPARAMMAPID = aFIELDPARAMMAPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FldExtenders_BRIEF_F  (
 aFldExtendersid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFldExtendersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FldExtenders where FldExtendersID=aFldExtendersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from FldExtenders  where  FldExtendersID = aFldExtendersID; 
select TargetPlatform
 into atmpID  from FldExtenders  where  FldExtendersID = aFldExtendersID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheObject),' ') ||'; '
  into aBrief from FldExtenders  where  FldExtendersID = aFldExtendersID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDEXPRESSION_BRIEF_F  (
 aFIELDEXPRESSIONid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDEXPRESSIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDEXPRESSION where FIELDEXPRESSIONID=aFIELDEXPRESSIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from FIELDEXPRESSION  where  FIELDEXPRESSIONID = aFIELDEXPRESSIONID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DINAMICFILTERSCRIPT_BRIEF_F  (
 aDINAMICFILTERSCRIPTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDINAMICFILTERSCRIPTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DINAMICFILTERSCRIPT where DINAMICFILTERSCRIPTID=aDINAMICFILTERSCRIPTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from DINAMICFILTERSCRIPT  where  DINAMICFILTERSCRIPTID = aDINAMICFILTERSCRIPTID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDSRCDEF_BRIEF_F  (
 aFIELDSRCDEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDSRCDEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDSRCDEF where FIELDSRCDEFID=aFIELDSRCDEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DataSource),' ') ||'; '
  into aBrief from FIELDSRCDEF  where  FIELDSRCDEFID = aFIELDSRCDEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTVIEW_BRIEF_F  (
 aPARTVIEWid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTVIEWid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTVIEW where PARTVIEWID=aPARTVIEWID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from PARTVIEW  where  PARTVIEWID = aPARTVIEWID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ViewColumn_BRIEF_F  (
 aViewColumnid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aViewColumnid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ViewColumn where ViewColumnID=aViewColumnID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ViewColumn  where  ViewColumnID = aViewColumnID; 
select FromPart
 into atmpID  from ViewColumn  where  ViewColumnID = aViewColumnID ;
 atmpBrief := func.PART_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( Aggregation
 ,5
 ,'MAX'
 ,1
 ,'AVG'
 ,3
 ,'SUM'
 ,2
 ,'COUNT'
 ,4
 ,'MIN'
 ,6
 ,'CUSTOM'
 ,0
 ,'none'
,'.') into aBrief from ViewColumn where ViewColumnID=aViewColumnID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function PARTVIEW_LNK_BRIEF_F  (
 aPARTVIEW_LNKid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aPARTVIEW_LNKid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from PARTVIEW_LNK where PARTVIEW_LNKID=aPARTVIEW_LNKID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheView
 into atmpID  from PARTVIEW_LNK  where  PARTVIEW_LNKID = aPARTVIEW_LNKID ;
 atmpBrief := func.PARTVIEW_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ExtenderInterface_BRIEF_F  (
 aExtenderInterfaceid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aExtenderInterfaceid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ExtenderInterface where ExtenderInterfaceID=aExtenderInterfaceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from ExtenderInterface  where  ExtenderInterfaceID = aExtenderInterfaceID; 
select TargetPlatform
 into atmpID  from ExtenderInterface  where  ExtenderInterfaceID = aExtenderInterfaceID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(TheObject),' ') ||'; '
  into aBrief from ExtenderInterface  where  ExtenderInterfaceID = aExtenderInterfaceID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function VALIDATOR_BRIEF_F  (
 aVALIDATORid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVALIDATORid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from VALIDATOR where VALIDATORID=aVALIDATORID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from VALIDATOR  where  VALIDATORID = aVALIDATORID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function UNIQUECONSTRAINT_BRIEF_F  (
 aUNIQUECONSTRAINTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aUNIQUECONSTRAINTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from UNIQUECONSTRAINT where UNIQUECONSTRAINTID=aUNIQUECONSTRAINTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from UNIQUECONSTRAINT  where  UNIQUECONSTRAINTID = aUNIQUECONSTRAINTID; 
  select  aBRIEF ||
  Decode( PerParent
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from UNIQUECONSTRAINT where UNIQUECONSTRAINTID=aUNIQUECONSTRAINTID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function CONSTRAINTFIELD_BRIEF_F  (
 aCONSTRAINTFIELDid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aCONSTRAINTFIELDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from CONSTRAINTFIELD where CONSTRAINTFIELDID=aCONSTRAINTFIELDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheField
 into atmpID  from CONSTRAINTFIELD  where  CONSTRAINTFIELDID = aCONSTRAINTFIELDID ;
 atmpBrief := func.FIELD_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function INSTANCEVALIDATOR_BRIEF_F  (
 aINSTANCEVALIDATORid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aINSTANCEVALIDATORid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from INSTANCEVALIDATOR where INSTANCEVALIDATORID=aINSTANCEVALIDATORID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Target
 into atmpID  from INSTANCEVALIDATOR  where  INSTANCEVALIDATORID = aINSTANCEVALIDATORID ;
 atmpBrief := func.GENERATOR_TARGET_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function OBJSTATUS_BRIEF_F  (
 aOBJSTATUSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aOBJSTATUSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from OBJSTATUS where OBJSTATUSID=aOBJSTATUSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from OBJSTATUS  where  OBJSTATUSID = aOBJSTATUSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function NEXTSTATE_BRIEF_F  (
 aNEXTSTATEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNEXTSTATEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from NEXTSTATE where NEXTSTATEID=aNEXTSTATEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheState
 into atmpID  from NEXTSTATE  where  NEXTSTATEID = aNEXTSTATEID ;
 atmpBrief := func.OBJSTATUS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function OBJECTMODE_BRIEF_F  (
 aOBJECTMODEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aOBJECTMODEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from OBJECTMODE where OBJECTMODEID=aOBJECTMODEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from OBJECTMODE  where  OBJECTMODEID = aOBJECTMODEID; 
  select  aBRIEF ||
  Decode( DefaultMode
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from OBJECTMODE where OBJECTMODEID=aOBJECTMODEID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function STRUCTRESTRICTION_BRIEF_F  (
 aSTRUCTRESTRICTIONid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSTRUCTRESTRICTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Struct
 into atmpID  from STRUCTRESTRICTION  where  STRUCTRESTRICTIONID = aSTRUCTRESTRICTIONID ;
 atmpBrief := func.PART_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( AllowRead
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowAdd
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowEdit
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowDelete
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from STRUCTRESTRICTION where STRUCTRESTRICTIONID=aSTRUCTRESTRICTIONID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function FIELDRESTRICTION_BRIEF_F  (
 aFIELDRESTRICTIONid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFIELDRESTRICTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from FIELDRESTRICTION where FIELDRESTRICTIONID=aFIELDRESTRICTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ThePart
 into atmpID  from FIELDRESTRICTION  where  FIELDRESTRICTIONID = aFIELDRESTRICTIONID ;
 atmpBrief := func.PART_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select TheField
 into atmpID  from FIELDRESTRICTION  where  FIELDRESTRICTIONID = aFIELDRESTRICTIONID ;
 atmpBrief := func.FIELD_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( AllowRead
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FIELDRESTRICTION where FIELDRESTRICTIONID=aFIELDRESTRICTIONID;
  select  aBRIEF ||
  Decode( AllowModify
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from FIELDRESTRICTION where FIELDRESTRICTIONID=aFIELDRESTRICTIONID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function METHODRESTRICTION_BRIEF_F  (
 aMETHODRESTRICTIONid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMETHODRESTRICTIONid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from METHODRESTRICTION where METHODRESTRICTIONID=aMETHODRESTRICTIONID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Method
 into atmpID  from METHODRESTRICTION  where  METHODRESTRICTIONID = aMETHODRESTRICTIONID ;
 atmpBrief := func.SHAREDMETHOD_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( IsRestricted
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from METHODRESTRICTION where METHODRESTRICTIONID=aMETHODRESTRICTIONID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function TYPEMENU_BRIEF_F  (
 aTYPEMENUid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aTYPEMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from TYPEMENU where TYPEMENUID=aTYPEMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from TYPEMENU  where  TYPEMENUID = aTYPEMENUID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZAPP_BRIEF_F  (
 aMTZAPPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZAPPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZAPP where MTZAPPID=aMTZAPPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from MTZAPP  where  MTZAPPID = aMTZAPPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ParentPackage_BRIEF_F  (
 aParentPackageid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aParentPackageid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ParentPackage where ParentPackageID=aParentPackageID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select Package
 into atmpID  from ParentPackage  where  ParentPackageID = aParentPackageID ;
 atmpBrief := func.MTZAPP_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENPACKAGE_BRIEF_F  (
 aGENPACKAGEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENPACKAGEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENPACKAGE where GENPACKAGEID=aGENPACKAGEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENPACKAGE  where  GENPACKAGEID = aGENPACKAGEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENERATOR_TARGET_BRIEF_F  (
 aGENERATOR_TARGETid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENERATOR_TARGETid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENERATOR_TARGET where GENERATOR_TARGETID=aGENERATOR_TARGETID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENERATOR_TARGET  where  GENERATOR_TARGETID = aGENERATOR_TARGETID; 
  select  aBRIEF ||
  Decode( TargetType
 ,0
 ,'СУБД'
 ,4
 ,'АРМ'
 ,3
 ,'Документация'
 ,1
 ,'МОДЕЛЬ'
 ,2
 ,'Приложение'
,'.') into aBrief from GENERATOR_TARGET where GENERATOR_TARGETID=aGENERATOR_TARGETID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENMANUALCODE_BRIEF_F  (
 aGENMANUALCODEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENMANUALCODEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENMANUALCODE where GENMANUALCODEID=aGENMANUALCODEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENMANUALCODE  where  GENMANUALCODEID = aGENMANUALCODEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENCONTROLS_BRIEF_F  (
 aGENCONTROLSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENCONTROLSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENCONTROLS where GENCONTROLSID=aGENCONTROLSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ControlProgID),' ') ||'; '
  into aBrief from GENCONTROLS  where  GENCONTROLSID = aGENCONTROLSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GENREFERENCE_BRIEF_F  (
 aGENREFERENCEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGENREFERENCEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GENREFERENCE where GENREFERENCEID=aGENREFERENCEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from GENREFERENCE  where  GENREFERENCEID = aGENREFERENCEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function LocalizeInfo_BRIEF_F  (
 aLocalizeInfoid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aLocalizeInfoid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from LocalizeInfo where LocalizeInfoID=aLocalizeInfoID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(LangFull),' ') ||'; '
  into aBrief from LocalizeInfo  where  LocalizeInfoID = aLocalizeInfoID; 
 select aBRIEF 
  ||  nvl(to_char(LangShort),' ') ||'; '
  into aBrief from LocalizeInfo  where  LocalizeInfoID = aLocalizeInfoID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTNO_YC_BRIEF_F  (
 aITTNO_YCid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTNO_YCid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTNO_YC where ITTNO_YCID=aITTNO_YCID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(YNum),' ') ||'; '
  into aBrief from ITTNO_YC  where  ITTNO_YCID = aITTNO_YCID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTNO_CMN_BRIEF_F  (
 aITTNO_CMNid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTNO_CMNid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTNO_CMN where ITTNO_CMNID=aITTNO_CMNID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(IN_TIME),' ') ||'; '
  into aBrief from ITTNO_CMN  where  ITTNO_CMNID = aITTNO_CMNID; 
 select aBRIEF 
  ||  nvl(to_char(Out_Time),' ') ||'; '
  into aBrief from ITTNO_CMN  where  ITTNO_CMNID = aITTNO_CMNID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTNO_ZC_BRIEF_F  (
 aITTNO_ZCid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTNO_ZCid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTNO_ZC where ITTNO_ZCID=aITTNO_ZCID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ZNum),' ') ||'; '
  into aBrief from ITTNO_ZC  where  ITTNO_ZCID = aITTNO_ZCID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function InfoStoreDef_BRIEF_F  (
 aInfoStoreDefid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aInfoStoreDefid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from InfoStoreDef where InfoStoreDefID=aInfoStoreDefID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from InfoStoreDef  where  InfoStoreDefID = aInfoStoreDefID; 
  select  aBRIEF ||
  Decode( InfoStoreType
 ,2
 ,'Групповой'
 ,1
 ,'Персональный'
 ,0
 ,' Общий'
,'.') into aBrief from InfoStoreDef where InfoStoreDefID=aInfoStoreDefID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Folder_BRIEF_F  (
 aFolderid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aFolderid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Folder where FolderID=aFolderID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Folder  where  FolderID = aFolderID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Shortcut_BRIEF_F  (
 aShortcutid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aShortcutid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Shortcut where ShortcutID=aShortcutID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select DocItem
 into atmpID  from Shortcut  where  ShortcutID = aShortcutID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Reports_BRIEF_F  (
 aReportsid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aReportsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Reports where ReportsID=aReportsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Reports  where  ReportsID = aReportsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RPTStruct_BRIEF_F  (
 aRPTStructid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRPTStructid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RPTStruct where RPTStructID=aRPTStructID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RPTStruct  where  RPTStructID = aRPTStructID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RPTFields_BRIEF_F  (
 aRPTFieldsid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRPTFieldsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RPTFields where RPTFieldsID=aRPTFieldsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RPTFields  where  RPTFieldsID = aRPTFieldsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function RPTFormula_BRIEF_F  (
 aRPTFormulaid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aRPTFormulaid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from RPTFormula where RPTFormulaID=aRPTFormulaID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from RPTFormula  where  RPTFormulaID = aRPTFormulaID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTPR_DEF_BRIEF_F  (
 aITTPR_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTPR_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTPR_DEF where ITTPR_DEFID=aITTPR_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Poddon),' ') ||'; '
  into aBrief from ITTPR_DEF  where  ITTPR_DEFID = aITTPR_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(Client),' ') ||'; '
  into aBrief from ITTPR_DEF  where  ITTPR_DEFID = aITTPR_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from ITTPR_DEF  where  ITTPR_DEFID = aITTPR_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZExt_def_BRIEF_F  (
 aMTZExt_defid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZExt_defid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZExt_def where MTZExt_defID=aMTZExt_defID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from MTZExt_def  where  MTZExt_defID = aMTZExt_defID; 
  select  aBRIEF ||
  Decode( ExtType
 ,1
 ,'OnFormExt'
 ,7
 ,'CodeGenerator'
 ,3
 ,'JrnlAddExt'
 ,6
 ,'VerifyRowExt'
 ,0
 ,'StatusExt'
 ,8
 ,'ARMGenerator'
 ,5
 ,'DefaultExt'
 ,2
 ,'CustomExt'
 ,4
 ,'JrnlRunExt'
,'.') into aBrief from MTZExt_def where MTZExt_defID=aMTZExt_defID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZExtRel_BRIEF_F  (
 aMTZExtRelid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZExtRelid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZExtRel where MTZExtRelID=aMTZExtRelID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( ThePlatform
 ,2
 ,'JAVA'
 ,3
 ,'OTHER'
 ,1
 ,'DOTNET'
 ,0
 ,'VB6'
,'.') into aBrief from MTZExtRel where MTZExtRelID=aMTZExtRelID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTCS_LIN_BRIEF_F  (
 aITTCS_LINid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTCS_LINid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTCS_LIN where ITTCS_LINID=aITTCS_LINID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SRV
 into atmpID  from ITTCS_LIN  where  ITTCS_LINID = aITTCS_LINID ;
 atmpBrief := func.ITTD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( UseSrv
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from ITTCS_LIN where ITTCS_LINID=aITTCS_LINID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTCS_DEF_BRIEF_F  (
 aITTCS_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTCS_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTCS_DEF where ITTCS_DEFID=aITTCS_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select CLIENTCODE
 into atmpID  from ITTCS_DEF  where  ITTCS_DEFID = aITTCS_DEFID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function SysLog_BRIEF_F  (
 aSysLogid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aSysLogid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from SysLog where SysLogID=aSysLogID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheSession
 into atmpID  from SysLog  where  SysLogID = aSysLogID ;
 atmpBrief := func.the_Session_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(LogStructID),' ') ||'; '
  into aBrief from SysLog  where  SysLogID = aSysLogID; 
 select aBRIEF 
  ||  nvl(to_char(VERB),' ') ||'; '
  into aBrief from SysLog  where  SysLogID = aSysLogID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function the_Session_BRIEF_F  (
 athe_Sessionid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if athe_Sessionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from the_Session where the_SessionID=athe_SessionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select UserRole
 into atmpID  from the_Session  where  the_SessionID = athe_SessionID ;
 atmpBrief := func.Groups_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
  select  aBRIEF ||
  Decode( Closed
 ,1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from the_Session where the_SessionID=athe_SessionID;
select Usersid
 into atmpID  from the_Session  where  the_SessionID = athe_SessionID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function LogReader_BRIEF_F  (
 aLogReaderid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aLogReaderid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from LogReader where LogReaderID=aLogReaderID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from LogReader  where  LogReaderID = aLogReaderID; 
 select aBRIEF 
  ||  nvl(to_char(ReadMarker),' ') ||'; '
  into aBrief from LogReader  where  LogReaderID = aLogReaderID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Verb_BRIEF_F  (
 aVerbid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aVerbid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Verb where VerbID=aVerbID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Verb  where  VerbID = aVerbID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Users_BRIEF_F  (
 aUsersid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aUsersid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Users where UsersID=aUsersID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Family),' ') ||'; '
  into aBrief from Users  where  UsersID = aUsersID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Users  where  UsersID = aUsersID; 
 select aBRIEF 
  ||  nvl(to_char(SurName),' ') ||'; '
  into aBrief from Users  where  UsersID = aUsersID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Groups_BRIEF_F  (
 aGroupsid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGroupsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Groups where GroupsID=aGroupsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Groups  where  GroupsID = aGroupsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function GroupUser_BRIEF_F  (
 aGroupUserid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aGroupUserid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from GroupUser where GroupUserID=aGroupUserID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheUser
 into atmpID  from GroupUser  where  GroupUserID = aGroupUserID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZSEC_RIGHT_BRIEF_F  (
 aMTZSEC_RIGHTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZSEC_RIGHTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZSEC_RIGHT where MTZSEC_RIGHTID=aMTZSEC_RIGHTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheGroup
 into atmpID  from MTZSEC_RIGHT  where  MTZSEC_RIGHTID = aMTZSEC_RIGHTID ;
 atmpBrief := func.Groups_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 select aBRIEF 
  ||  nvl(to_char(ProtectedItem),' ') ||'; '
  into aBrief from MTZSEC_RIGHT  where  MTZSEC_RIGHTID = aMTZSEC_RIGHTID; 
  select  aBRIEF ||
  Decode( Allow
 ,-1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from MTZSEC_RIGHT where MTZSEC_RIGHTID=aMTZSEC_RIGHTID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_USER_BRIEF_F  (
 aROLES_USERid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_USERid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_USER where ROLES_USERID=aROLES_USERID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheUser
 into atmpID  from ROLES_USER  where  ROLES_USERID = aROLES_USERID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_MAP_BRIEF_F  (
 aROLES_MAPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_MAPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_MAP where ROLES_MAPID=aROLES_MAPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheGroup
 into atmpID  from ROLES_MAP  where  ROLES_MAPID = aROLES_MAPID ;
 atmpBrief := func.Groups_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_DOC_BRIEF_F  (
 aROLES_DOCid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_DOCid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_DOC where ROLES_DOCID=aROLES_DOCID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select The_Document
 into atmpID  from ROLES_DOC  where  ROLES_DOCID = aROLES_DOCID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_DOC_STATE_BRIEF_F  (
 aROLES_DOC_STATEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_DOC_STATEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_DOC_STATE where ROLES_DOC_STATEID=aROLES_DOC_STATEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select The_State
 into atmpID  from ROLES_DOC_STATE  where  ROLES_DOC_STATEID = aROLES_DOC_STATEID ;
 atmpBrief := func.OBJSTATUS_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select The_Mode
 into atmpID  from ROLES_DOC_STATE  where  ROLES_DOC_STATEID = aROLES_DOC_STATEID ;
 atmpBrief := func.OBJECTMODE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_DEF_BRIEF_F  (
 aROLES_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_DEF where ROLES_DEFID=aROLES_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from ROLES_DEF  where  ROLES_DEFID = aROLES_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_REPORTS_BRIEF_F  (
 aROLES_REPORTSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_REPORTSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_REPORTS where ROLES_REPORTSID=aROLES_REPORTSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select The_Report
 into atmpID  from ROLES_REPORTS  where  ROLES_REPORTSID = aROLES_REPORTSID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_WP_BRIEF_F  (
 aROLES_WPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_WPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_WP where ROLES_WPID=aROLES_WPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select WP
 into atmpID  from ROLES_WP  where  ROLES_WPID = aROLES_WPID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ROLES_ACT_BRIEF_F  (
 aROLES_ACTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aROLES_ACTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ROLES_ACT where ROLES_ACTID=aROLES_ACTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
  select  aBRIEF ||
  Decode( Accesible
 ,1
 ,'Да'
 ,0
 ,'Нет'
,'.') into aBrief from ROLES_ACT where ROLES_ACTID=aROLES_ACTID;
select EntryPoints
 into atmpID  from ROLES_ACT  where  ROLES_ACTID = aROLES_ACTID ;
 atmpBrief := func.EntryPoints_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function JournalColumn_BRIEF_F  (
 aJournalColumnid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJournalColumnid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from JournalColumn where JournalColumnID=aJournalColumnID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(name),' ') ||'; '
  into aBrief from JournalColumn  where  JournalColumnID = aJournalColumnID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function JColumnSource_BRIEF_F  (
 aJColumnSourceid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJColumnSourceid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from JColumnSource where JColumnSourceID=aJColumnSourceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(ViewField),' ') ||'; '
  into aBrief from JColumnSource  where  JColumnSourceID = aJColumnSourceID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function Journal_BRIEF_F  (
 aJournalid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJournalid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from Journal where JournalID=aJournalID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from Journal  where  JournalID = aJournalID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function JournalSrc_BRIEF_F  (
 aJournalSrcid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aJournalSrcid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from JournalSrc where JournalSrcID=aJournalSrcID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PartView),' ') ||'; '
  into aBrief from JournalSrc  where  JournalSrcID = aJournalSrcID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ_Inst_Build_BRIEF_F  (
 aMTZ_Inst_Buildid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ_Inst_Buildid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ_Inst_Build where MTZ_Inst_BuildID=aMTZ_Inst_BuildID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PRODUCT_NAME),' ') ||'; '
  into aBrief from MTZ_Inst_Build  where  MTZ_Inst_BuildID = aMTZ_Inst_BuildID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ_Inst_Build_Sec_BRIEF_F  (
 aMTZ_Inst_Build_Secid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ_Inst_Build_Secid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ_Inst_Build_Sec where MTZ_Inst_Build_SecID=aMTZ_Inst_Build_SecID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheSection
 into atmpID  from MTZ_Inst_Build_Sec  where  MTZ_Inst_Build_SecID = aMTZ_Inst_Build_SecID ;
 atmpBrief := func.MTZ_Inst_Section_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ_Inst_Section_BRIEF_F  (
 aMTZ_Inst_Sectionid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ_Inst_Sectionid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ_Inst_Section where MTZ_Inst_SectionID=aMTZ_Inst_SectionID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from MTZ_Inst_Section  where  MTZ_Inst_SectionID = aMTZ_Inst_SectionID; 
  select  aBRIEF ||
  Decode( TheTargetPlatform
 ,2
 ,'JAVA'
 ,3
 ,'OTHER'
 ,1
 ,'DOTNET'
 ,0
 ,'VB6'
,'.') into aBrief from MTZ_Inst_Section where MTZ_Inst_SectionID=aMTZ_Inst_SectionID;
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ_Inst_Sec_Files_BRIEF_F  (
 aMTZ_Inst_Sec_Filesid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ_Inst_Sec_Filesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ_Inst_Sec_Files where MTZ_Inst_Sec_FilesID=aMTZ_Inst_Sec_FilesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheSource),' ') ||'; '
  into aBrief from MTZ_Inst_Sec_Files  where  MTZ_Inst_Sec_FilesID = aMTZ_Inst_Sec_FilesID; 
select SysstemObject
 into atmpID  from MTZ_Inst_Sec_Files  where  MTZ_Inst_Sec_FilesID = aMTZ_Inst_Sec_FilesID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
select TheApplication
 into atmpID  from MTZ_Inst_Sec_Files  where  MTZ_Inst_Sec_FilesID = aMTZ_Inst_Sec_FilesID ;
 atmpBrief := func.MTZAPP_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function MTZ_Inst_Common_BRIEF_F  (
 aMTZ_Inst_Commonid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aMTZ_Inst_Commonid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from MTZ_Inst_Common where MTZ_Inst_CommonID=aMTZ_Inst_CommonID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheName),' ') ||'; '
  into aBrief from MTZ_Inst_Common  where  MTZ_Inst_CommonID = aMTZ_Inst_CommonID; 
 select aBRIEF 
  ||  nvl(to_char(SEQ),' ') ||'; '
  into aBrief from MTZ_Inst_Common  where  MTZ_Inst_CommonID = aMTZ_Inst_CommonID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTTZ_DEF_BRIEF_F  (
 aITTTZ_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTTZ_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTTZ_DEF where ITTTZ_DEFID=aITTTZ_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(DocDate),' ') ||'; '
  into aBrief from ITTTZ_DEF  where  ITTTZ_DEFID = aITTTZ_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from ITTTZ_DEF  where  ITTTZ_DEFID = aITTTZ_DEFID; 
 select aBRIEF 
  ||  nvl(to_char(SupplierCode),' ') ||'; '
  into aBrief from ITTTZ_DEF  where  ITTTZ_DEFID = aITTTZ_DEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTTZ_LINES_BRIEF_F  (
 aITTTZ_LINESid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTTZ_LINESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTTZ_LINES where ITTTZ_LINESID=aITTTZ_LINESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheNumber),' ') ||'; '
  into aBrief from ITTTZ_LINES  where  ITTTZ_LINESID = aITTTZ_LINESID; 
 select aBRIEF 
  ||  nvl(to_char(SupplierCode),' ') ||'; '
  into aBrief from ITTTZ_LINES  where  ITTTZ_LINESID = aITTTZ_LINESID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITT2OPT_DEF_BRIEF_F  (
 aITT2OPT_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITT2OPT_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITT2OPT_DEF where ITT2OPT_DEFID=aITT2OPT_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select OptType
 into atmpID  from ITT2OPT_DEF  where  ITT2OPT_DEFID = aITT2OPT_DEFID ;
 atmpBrief := func.ITTD_OPTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOUT_SRV_BRIEF_F  (
 aITTOUT_SRVid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOUT_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOUT_SRV where ITTOUT_SRVID=aITTOUT_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SRV
 into atmpID  from ITTOUT_SRV  where  ITTOUT_SRVID = aITTOUT_SRVID ;
 atmpBrief := func.ITTD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOUT_DEF_BRIEF_F  (
 aITTOUT_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOUT_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOUT_DEF where ITTOUT_DEFID=aITTOUT_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select ShipOrder
 into atmpID  from ITTOUT_DEF  where  ITTOUT_DEFID = aITTOUT_DEFID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOUT_EPL_BRIEF_F  (
 aITTOUT_EPLid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOUT_EPLid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOUT_EPL where ITTOUT_EPLID=aITTOUT_EPLID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheNumber
 into atmpID  from ITTOUT_EPL  where  ITTOUT_EPLID = aITTOUT_EPLID ;
 atmpBrief := func.ITTPL_DEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOUT_LINES_BRIEF_F  (
 aITTOUT_LINESid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOUT_LINESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOUT_LINES where ITTOUT_LINESID=aITTOUT_LINESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select LineAtQuery
 into atmpID  from ITTOUT_LINES  where  ITTOUT_LINESID = aITTOUT_LINESID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTOUT_PALET_BRIEF_F  (
 aITTOUT_PALETid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTOUT_PALETid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTOUT_PALET where ITTOUT_PALETID=aITTOUT_PALETID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheNumber
 into atmpID  from ITTOUT_PALET  where  ITTOUT_PALETID = aITTOUT_PALETID ;
 atmpBrief := func.ITTPL_DEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTIN_QLINE_BRIEF_F  (
 aITTIN_QLINEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTIN_QLINEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTIN_QLINE where ITTIN_QLINEID=aITTIN_QLINEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select LineAtQuery
 into atmpID  from ITTIN_QLINE  where  ITTIN_QLINEID = aITTIN_QLINEID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTIN_PALET_BRIEF_F  (
 aITTIN_PALETid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTIN_PALETid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTIN_PALET where ITTIN_PALETID=aITTIN_PALETID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheNumber
 into atmpID  from ITTIN_PALET  where  ITTIN_PALETID = aITTIN_PALETID ;
 atmpBrief := func.ITTPL_DEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTIN_SRV_BRIEF_F  (
 aITTIN_SRVid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTIN_SRVid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTIN_SRV where ITTIN_SRVID=aITTIN_SRVID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select SRV
 into atmpID  from ITTIN_SRV  where  ITTIN_SRVID = aITTIN_SRVID ;
 atmpBrief := func.ITTD_SRV_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTIN_DEF_BRIEF_F  (
 aITTIN_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTIN_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTIN_DEF where ITTIN_DEFID=aITTIN_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select QryCode
 into atmpID  from ITTIN_DEF  where  ITTIN_DEFID = aITTIN_DEFID ;
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTIN_EPL_BRIEF_F  (
 aITTIN_EPLid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTIN_EPLid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTIN_EPL where ITTIN_EPLID=aITTIN_EPLID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheNumber
 into atmpID  from ITTIN_EPL  where  ITTIN_EPLID = aITTIN_EPLID ;
 atmpBrief := func.ITTPL_DEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTSSCC_LINE_BRIEF_F  (
 aITTSSCC_LINEid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTSSCC_LINEid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTSSCC_LINE where ITTSSCC_LINEID=aITTSSCC_LINEID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(PalletCode),' ') ||'; '
  into aBrief from ITTSSCC_LINE  where  ITTSSCC_LINEID = aITTSSCC_LINEID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ITTSSCC_DEF_BRIEF_F  (
 aITTSSCC_DEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aITTSSCC_DEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ITTSSCC_DEF where ITTSSCC_DEFID=aITTSSCC_DEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(TheDate),' ') ||'; '
  into aBrief from ITTSSCC_DEF  where  ITTSSCC_DEFID = aITTSSCC_DEFID; 
select TheUser
 into atmpID  from ITTSSCC_DEF  where  ITTSSCC_DEFID = aITTSSCC_DEFID ;
 atmpBrief := func.Users_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WorkPlace_BRIEF_F  (
 aWorkPlaceid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWorkPlaceid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WorkPlace where WorkPlaceID=aWorkPlaceID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from WorkPlace  where  WorkPlaceID = aWorkPlaceID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function EntryPoints_BRIEF_F  (
 aEntryPointsid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aEntryPointsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from EntryPoints where EntryPointsID=aEntryPointsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from EntryPoints  where  EntryPointsID = aEntryPointsID; 
 select aBRIEF 
  ||  nvl(to_char(Caption),' ') ||'; '
  into aBrief from EntryPoints  where  EntryPointsID = aEntryPointsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function EPFilterLink_BRIEF_F  (
 aEPFilterLinkid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aEPFilterLinkid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from EPFilterLink where EPFilterLinkID=aEPFilterLinkID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(RowSource),' ') ||'; '
  into aBrief from EPFilterLink  where  EPFilterLinkID = aEPFilterLinkID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMTypes_BRIEF_F  (
 aARMTypesid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMTypesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMTypes where ARMTypesID=aARMTypesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheDocumentType
 into atmpID  from ARMTypes  where  ARMTypesID = aARMTypesID ;
 atmpBrief := func.OBJECTTYPE_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJournal_BRIEF_F  (
 aARMJournalid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJournalid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJournal where ARMJournalID=aARMJournalID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select TheJournal
 into atmpID  from ARMJournal  where  ARMJournalID = aARMJournalID ;
 atmpBrief:= Func.Instance_BRIEF_F( atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJRNLADD_BRIEF_F  (
 aARMJRNLADDid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJRNLADDid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJRNLADD where ARMJRNLADDID=aARMJRNLADDID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ARMJRNLADD  where  ARMJRNLADDID = aARMJRNLADDID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJRNLREP_BRIEF_F  (
 aARMJRNLREPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJRNLREPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJRNLREP where ARMJRNLREPID=aARMJRNLREPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(repname),' ') ||'; '
  into aBrief from ARMJRNLREP  where  ARMJRNLREPID = aARMJRNLREPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ARMJRNLRUN_BRIEF_F  (
 aARMJRNLRUNid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aARMJRNLRUNid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ARMJRNLRUN where ARMJRNLRUNID=aARMJRNLRUNID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ARMJRNLRUN  where  ARMJRNLRUNID = aARMJRNLRUNID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_MAILLIST_BRIEF_F  (
 aWEBS_MAILLISTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_MAILLISTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_MAILLIST where WEBS_MAILLISTID=aWEBS_MAILLISTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Email),' ') ||'; '
  into aBrief from WEBS_MAILLIST  where  WEBS_MAILLISTID = aWEBS_MAILLISTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_ROLES_BRIEF_F  (
 aWEBS_ROLESid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_ROLESid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_ROLES where WEBS_ROLESID=aWEBS_ROLESID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_ROLES  where  WEBS_ROLESID = aWEBS_ROLESID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGEDEF_BRIEF_F  (
 aWEBS_PAGEDEFid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGEDEFid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGEDEF where WEBS_PAGEDEFID=aWEBS_PAGEDEFID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(QueueNumber),' ') ||'; '
  into aBrief from WEBS_PAGEDEF  where  WEBS_PAGEDEFID = aWEBS_PAGEDEFID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PAGEDEF  where  WEBS_PAGEDEFID = aWEBS_PAGEDEFID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PICS_BRIEF_F  (
 aWEBS_PICSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PICSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PICS where WEBS_PICSID=aWEBS_PICSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PICS  where  WEBS_PICSID = aWEBS_PICSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGEMENU_BRIEF_F  (
 aWEBS_PAGEMENUid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGEMENUid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGEMENU where WEBS_PAGEMENUID=aWEBS_PAGEMENUID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
select UsePartRowsEditForm
 into atmpID  from WEBS_PAGEMENU  where  WEBS_PAGEMENUID = aWEBS_PAGEMENUID ;
 atmpBrief := func.WEBS_PAGEDEF_BRIEF_F(atmpID);
  aBRIEF:= aBRIEF || '{' || nvl(atmpbrief,' ') || '}; ';
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGECONTENT_BRIEF_F  (
 aWEBS_PAGECONTENTid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGECONTENTid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGECONTENT where WEBS_PAGECONTENTID=aWEBS_PAGECONTENTID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Content),' ') ||'; '
  into aBrief from WEBS_PAGECONTENT  where  WEBS_PAGECONTENTID = aWEBS_PAGECONTENTID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGEPARS_BRIEF_F  (
 aWEBS_PAGEPARSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGEPARSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGEPARS where WEBS_PAGEPARSID=aWEBS_PAGEPARSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PAGEPARS  where  WEBS_PAGEPARSID = aWEBS_PAGEPARSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_PAGECOMP_BRIEF_F  (
 aWEBS_PAGECOMPid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_PAGECOMPid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_PAGECOMP where WEBS_PAGECOMPID=aWEBS_PAGECOMPID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_PAGECOMP  where  WEBS_PAGECOMPID = aWEBS_PAGECOMPID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function TablePart_BRIEF_F  (
 aTablePartid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aTablePartid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from TablePart where TablePartID=aTablePartID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(FilterUserIDFieldName_),' ') ||'; '
  into aBrief from TablePart  where  TablePartID = aTablePartID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ReplaceValues_BRIEF_F  (
 aReplaceValuesid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aReplaceValuesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ReplaceValues where ReplaceValuesID=aReplaceValuesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ReplaceValues  where  ReplaceValuesID = aReplaceValuesID; 
 select aBRIEF 
  ||  nvl(to_char(SourceName),' ') ||'; '
  into aBrief from ReplaceValues  where  ReplaceValuesID = aReplaceValuesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DenyEdit_BRIEF_F  (
 aDenyEditid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDenyEditid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DenyEdit where DenyEditID=aDenyEditID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from DenyEdit  where  DenyEditID = aDenyEditID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function DenyVisible_BRIEF_F  (
 aDenyVisibleid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aDenyVisibleid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from DenyVisible where DenyVisibleID=aDenyVisibleID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from DenyVisible  where  DenyVisibleID = aDenyVisibleID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function AllowEditFieldValues_BRIEF_F  (
 aAllowEditFieldValuesid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aAllowEditFieldValuesid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from AllowEditFieldValues where AllowEditFieldValuesID=aAllowEditFieldValuesID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from AllowEditFieldValues  where  AllowEditFieldValuesID = aAllowEditFieldValuesID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function ComboFields_BRIEF_F  (
 aComboFieldsid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aComboFieldsid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from ComboFields where ComboFieldsID=aComboFieldsID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from ComboFields  where  ComboFieldsID = aComboFieldsID; 
 select aBRIEF 
  ||  nvl(to_char(SourceName),' ') ||'; '
  into aBrief from ComboFields  where  ComboFieldsID = aComboFieldsID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_USERS_BRIEF_F  (
 aWEBS_USERSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_USERSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_USERS where WEBS_USERSID=aWEBS_USERSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(LoginName),' ') ||'; '
  into aBrief from WEBS_USERS  where  WEBS_USERSID = aWEBS_USERSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_ANKETA_BRIEF_F  (
 aWEBS_ANKETAid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_ANKETAid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_ANKETA where WEBS_ANKETAID=aWEBS_ANKETAID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_ANKETA  where  WEBS_ANKETAID = aWEBS_ANKETAID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_QUESTIONS_BRIEF_F  (
 aWEBS_QUESTIONSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_QUESTIONSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_QUESTIONS where WEBS_QUESTIONSID=aWEBS_QUESTIONSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Number),' ') ||'; '
  into aBrief from WEBS_QUESTIONS  where  WEBS_QUESTIONSID = aWEBS_QUESTIONSID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_QUESTIONS  where  WEBS_QUESTIONSID = aWEBS_QUESTIONSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_ANSWERS_BRIEF_F  (
 aWEBS_ANSWERSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_ANSWERSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_ANSWERS where WEBS_ANSWERSID=aWEBS_ANSWERSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(the_Number),' ') ||'; '
  into aBrief from WEBS_ANSWERS  where  WEBS_ANSWERSID = aWEBS_ANSWERSID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_ANSWERS  where  WEBS_ANSWERSID = aWEBS_ANSWERSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_DDOC_BRIEF_F  (
 aWEBS_DDOCid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_DDOCid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_DDOC where WEBS_DDOCID=aWEBS_DDOCID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_DDOC  where  WEBS_DDOCID = aWEBS_DDOCID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function WEBS_NEWS_BRIEF_F  (
 aWEBS_NEWSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aWEBS_NEWSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from WEBS_NEWS where WEBS_NEWSID=aWEBS_NEWSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(QueueNumber),' ') ||'; '
  into aBrief from WEBS_NEWS  where  WEBS_NEWSID = aWEBS_NEWSID; 
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from WEBS_NEWS  where  WEBS_NEWSID = aWEBS_NEWSID; 
 select aBRIEF 
  ||  nvl(to_char(NewsDate),' ') ||'; '
  into aBrief from WEBS_NEWS  where  WEBS_NEWSID = aWEBS_NEWSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;



function NEWS_PICS_BRIEF_F  (
 aNEWS_PICSid CHAR
) return varchar2 as 
 aBRIEF varchar2(255);
 atmpStr varchar2(255);
 atmpBrief varchar2(2000);
 atmpID CHAR(38);
 atmpCnt Numeric;
 begin  
if aNEWS_PICSid is null  then  aBRIEF:=' '; return (aBRIEF); end if;
 -- Brief body -- 
select count(*) into aTmpCnt from NEWS_PICS where NEWS_PICSID=aNEWS_PICSID;
if aTmpCnt &gt;0 then
  aBRIEF:='';
 select aBRIEF 
  ||  nvl(to_char(Name),' ') ||'; '
  into aBrief from NEWS_PICS  where  NEWS_PICSID = aNEWS_PICSID; 
 else 
  aBRIEF:= '-';
end if;
 aBRIEF:=substr(aBRIEF,1,255);
return (aBRIEF);
end;


 end Func;

/

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Kernel.Body" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Procedures.Type.Body" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="--Init" File=""><BlockHolder BlockName="--body" BlockCode=" 

"><FormData Name=""/></BlockHolder></ModuleHolder></root>
