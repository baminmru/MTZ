<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="dll"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221}"/><AttributeHolder Name="Name" Value="PEK2Z"/><AttributeHolder Name="Description" Value="Заявка"/><ModuleHolder ModuleName="Application" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="multiuse"/><BlockHolder BlockName="'description" BlockCode="'корневой интерфейс документа (Заявка)
private m_Logger as MTZUtil.Logger
private m_MTZSession as MTZSession.Session
private m_Manager as MTZManager.Main
Private findCash As Collection
private m_ID as string
private m_SecureStyleID as string
private m_StatusID as string
private m_Name as string
private const m_TypeName as string=&quot;PEK2Z&quot;
private m_WorkOffline as boolean
private m_AutoLoadPart as boolean


enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
enum enumPCB_FileType'Тип файла
  PCB_FileType_Proekt_PP=0'Проект ПП
  PCB_FileType_HZ=1'ХЗ
end enum 
enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
enum enumtypeFace'Физическое лицо \ Юрифическое лицо
  typeFace_FizLico=0'ФизЛицо
  typeFace_UrLico=1'ЮрЛицо
end enum 
enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
  TypeStyle_Element_oformleniy=5'Элемент оформления
end enum 
enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
enum enumtypePackage'Тип отправления
  typePackage_Vse=-1'Все
  typePackage_Tovar=1'Товар
  typePackage_Dokumenti=0'Документы
end enum 
enum enumPCB_HoleType'Тип отверстия
  PCB_HoleType_Gluhoe=2'Глухое
  PCB_HoleType_Metalizirovannoe=0'Метализированное
  PCB_HoleType_Nemetallizirovannoe=1'Неметаллизированное
end enum 
enum enumWEBS_PageType'
  WEBS_PageType_Ne_susestvenno=0'Не существенно
  WEBS_PageType_Ob_ekt=1'Объект
  WEBS_PageType_Razdel=3'Раздел
  WEBS_PageType_Tablica=2'Таблица
end enum 
enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
enum enumTypeSempling'Тип выборки
  TypeSempling_Klienti=-1'Клиенты
  TypeSempling_Adresati_operatorov=0'Адресаты операторов
  TypeSempling_Spisok_adresov_SPb=2'Список адресов СПб
  TypeSempling_Spisok_adresatov=1'Список адресатов
end enum 
enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
enum enumDeliveryOn'
  DeliveryOn_Gorod=4'Город
  DeliveryOn_Strana=1'Страна
  DeliveryOn_Megdunarodnay=0'Международная
  DeliveryOn_Strana2=2'Страна2
  DeliveryOn_Sub_ekt=3'Субъект
end enum 
enum enumtypeOperatorSystem'
  typeOperatorSystem_Menedger=2'Менеджер
  typeOperatorSystem_Procee=0'Прочее
  typeOperatorSystem_Operator=1'Оператор
end enum 
enum enumstateNomen'
  stateNomen_Pereadresaciy=6'Переадресация
  stateNomen_Oformlyetsy=0'Оформляется
  stateNomen_Dostavleno=4'Доставлено
  stateNomen_V_processe=3'В процессе
  stateNomen_Vozvrat=5'Возврат
  stateNomen_Prinyto=2'Принято
end enum 
enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_Kalendar_=5'Календарь
  FolderType_cls__=0' 
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
enum enummsgState'Состояние заявки
  msgState_Sostoynie_zayvki=0'Состояние заявки
  msgState_Soobseno_abonentu=1'Сообщено абоненту
  msgState_Abonent_ne_otvetil=2'Абонент не ответил
  msgState_Promegutocniy_otvet=3'Промежуточный ответ
end enum 
enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Na_istocnik_dannih=3'На источник данных
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
enum enumtypeOrder'
  typeOrder_Dostavka_bez_uvedomleniy=2'Доставка без уведомления
  typeOrder_Bezadresniy_zakaz=0'Безадресный заказ
  typeOrder_Adresniy_zakaz=1'Адресный заказ
end enum 
enum enummsgResult'Результат
  msgResult_Vipolneno=2'Выполнено
  msgResult_V_rabote=1'В работе
  msgResult_Rezul_tat=0'Результат
end enum 
enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
enum enumtypeDocOrder'Тип документов для печати заказчику
  typeDocOrder_Nalicniy_OPNPKO_PLS_kasDOTcekCLS=1'Наличный (ПКО + кас.чек)
  typeDocOrder_Nalicniy_OPNtovarniy_cek_PLS_kasDOTcekCLS=0'Наличный (товарный чек + кас.чек)
  typeDocOrder_Beznalicniy_rascet=3'Безналичный расчет
end enum 
enum enumPCB_LayerP'Представление поля
  PCB_LayerP_Negativ=2'Негатив
  PCB_LayerP_Ne_imeet_znaceniy=0'Не имеет значения
  PCB_LayerP_Pozitiv=1'Позитив
end enum 
enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
enum enumPartType'PartType
  PartType_Kollekciy=1'Коллекция
  PartType_Rassirenie=3'Расширение
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
  PartType_Rassirenie_s_dannimi=4'Расширение с данными
end enum 
enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
enum enumtypeClient'Тип заказчика
  typeClient_Razoviy=0'Разовый
end enum 
enum enumtypeNomen'Тип номенкатуры
  typeNomen_Listovki=2'Листовки
  typeNomen_Tovar=1'Товар
  typeNomen_GazetiCOMA_gurnaliCOMA_brosuri=4'Газеты, журналы, брошюры
  typeNomen_Pis_mo=3'Письмо
  typeNomen_Dokument=0'Документ
end enum 
enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
enum enumtypePersonPay'
  typePersonPay_Otpravitel_=0'Отправитель
  typePersonPay_Polucatel_=1'Получатель
end enum 
enum enumJournalLinkType'Для связи журналов друг с другом
  JournalLinkType_Ssilka_na_stroku=2'Ссылка на строку
  JournalLinkType_Ssilka_na_ob_ekt=1'Ссылка на объект
  JournalLinkType_Svyzka_InstanceID_OPNv_peredlah_ob_ektaCLS=3'Связка InstanceID (в передлах объекта)
  JournalLinkType_Svyzka_ParentStructRowID__OPNv_peredlah_ob_ektaCLS=4'Связка ParentStructRowID  (в передлах объекта)
  JournalLinkType_Net=0'Нет
end enum 
enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
enum enumtypePay'Сдельная \ Ставка
  typePay_Stavka=1'Ставка
  typePay_Sdel_nay=0'Сдельная
end enum 
enum enumPCB_TaskType'Тип задачи
  PCB_TaskType_Dostavka=4'Доставка
  PCB_TaskType_Izgotovlenie_PP=1'Изготовление ПП
  PCB_TaskType_Postavka_komplektuusih=2'Поставка комплектующих
  PCB_TaskType_Montag_PP=0'Монтаж ПП
  PCB_TaskType_Proektirovanie_PP=3'Проектирование ПП
end enum 
enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
enum enumtypeReceiv'
  typeReceiv_PTS=1'ПТС
  typeReceiv_SVS=0'СВС
end enum 
enum enumPCB_CustomerType'Статус заказчика
  PCB_CustomerType_Real_niy=1'Реальный
  PCB_CustomerType_Potencial_niy=0'Потенциальный
end enum 
enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
enum enumtypeRowCheque'Тип строки чека
  typeRowCheque_PO=1'ПО
  typeRowCheque_Procee=0'Прочее
  typeRowCheque_Prostoe_PO=4'Простое ПО
  typeRowCheque_dopDOTusluga_PO=2'доп.услуга ПО
  typeRowCheque_dopDOTusluga_zakaza=3'доп.услуга заказа
  typeRowCheque_Tovar=5'Товар
end enum 
enum enumPCB_clear'Тип задачи
  PCB_clear_Zadaca_1=1'Задача 1
  PCB_clear_Zadaca_2=0'Задача 2
end enum 
enum enumtypeTariff'
  typeTariff_Usluga=1'Услуга
  typeTariff_Dostavka=0'Доставка
end enum 
enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
enum enumtypeTRF'Тип тарифа СС
  typeTRF_Tarif_podrydcika=0'Тариф подрядчика
  typeTRF_Tarif_klienta=1'Тариф клиента
  typeTRF_Obsiy_tarif=-1'Общий тариф
end enum 
enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
enum enumtypeCourier'Договор \ ТрудКнижка
  typeCourier_Trudovay_knigka=1'Трудовая книжка
  typeCourier_Dogovor_podryda=0'Договор подряда
end enum 
enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
enum enumMailSenderType'Да / Нет
  MailSenderType_Komu=0'Кому
  MailSenderType_Skritay_kopiy=2'Скрытая копия
  MailSenderType_Kopiy=1'Копия
end enum 
enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 
private m_pekz_path as pekz_path_col
private m_PEKZ_DOCS as PEKZ_DOCS_col
private m_PEKZ_1CLINK as PEKZ_1CLINK_col
private m_pekz_def as pekz_def_col
private m_PEKZ_ACLCT as PEKZ_ACLCT_col
private m_PEKZ_ADLVR as PEKZ_ADLVR_col
private m_pekz_dop as pekz_dop_col
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="


'Название типа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TypeName
public property get TypeName() as string
  TypeName = m_TypeName
end property


'Отладочный компонент
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZUtil.Logger
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZUtil.Logger
' Set variable = me. Logger
public property get Logger() as MTZUtil.Logger
  if m_Logger is nothing then
    set m_Logger = new MTZUtil.Logger
    m_Logger.CreateLog TypeName &amp; &quot;_&quot; &amp; ID ,TypeName
  end if
  set Logger = m_Logger
end property


'Получить Название документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Name
public property get Name() as string
  Name = m_Name
end property


'Задать название документа
'Parameters:
'[IN][OUT]  n , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Name = value
public property Let Name(n as string)
  m_Name = n
end property


'Получить корневой объект системы - менеджер документов
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZManager.Main
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZManager.Main
' Set variable = me. Manager
public property get Manager() as MTZManager.Main
  set Manager = m_Manager
end property


'Задать менеджер документов
'Parameters:
'[IN][OUT]  m , тип параметра: MTZManager.Main  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Manager = value
public property Set Manager(m as MTZManager.Main)
  if not m_Manager is nothing then exit property
  set m_Manager = m
  Logger.Message &quot;Manager defined&quot;
end property


'Получить текущую сессию пользователя
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZSession.Session
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZSession.Session
' Set variable = me. MTZSession
public property get MTZSession() as MTZSession.Session
  set MTZSession = m_MTZSession
end property


'Задть текущую сессию пользователя
'Parameters:
'[IN][OUT]  m , тип параметра: MTZSession.Session  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. MTZSession = value
public property Set MTZSession(m as MTZSession.Session)
  if not m_MTZSession is nothing then exit property
  set m_MTZSession = m
  Logger.Message &quot;Session defined&quot;
  m_AutoLoadPart=true
end property


'Признак - работа без соединения с базой
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. WorkOffline
public property Get WorkOffline() as boolean
    WorkOffline = m_WorkOffline
end property


'Получить значение признака работы без соединения
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. WorkOffline = value
public property Let WorkOffline(v as boolean)
  if MTZSession is nothing then 
    m_WorkOffline = false
  else 
    m_WorkOffline = v
  end if 
end property


'Получить признак автоматической загрузки всеех полей
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. AutoLoadPart
public property Get AutoLoadPart() as boolean
    AutoLoadPart = m_AutoLoadPart
end property


'Признак загрузки всех полей (не только идентификатора)
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AutoLoadPart = value
public property Let AutoLoadPart(v as boolean)
    m_AutoLoadPart = v
end property


'Идентификатор документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  ID = m_ID
end property


'Задать идентификатор документа
'Parameters:
'[IN][OUT]  v , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
public property Let ID(v as string)
  m_ID=v
end property


'Родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = nothing
end property


'Корневой объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = me
end property


'Добавить в оптимизтор поиска строку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string, 
'[IN]   Item , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.AddToCash({параметры})
public Sub AddToCash( byval Key as string, byval Item as Object)
  on error resume next
  findCash.Add Item,Key
end sub


'Исключить из оптимизатора сторку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string  - ...
'See Also:
'Example:
'  call me.RemoveFromCash({параметры})
public Sub RemoveFromCash( byval Key as string)
  on error resume next
  findCash.Remove Key
end sub

'Задать идентификатор стиля защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
public property let SecureStyleID(byval newID as string)
  Secure newID
  GetStatus
end property

'Получить идентификатор стиля защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  GetStatus
  SecureStyleID = m_SecureStyleID
end property

'Задать идентификатор сосотяния документа
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. StatusID = value
public property let StatusID(byval newID as string)
    SetStatus newID
    GetStatus
end property

'Получить идентификатор состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusID
public property Get StatusID() as string
  GetStatus
  StatusID = m_StatusID
end property

'Получить название состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusName
public property Get StatusName() as string
  GetStatus
  StatusName=&quot;&quot;
if statusid =&quot;{B09E64F9-13CA-4FFB-994A-02A5D239B22E}&quot; then StatusName = &quot;Частично взвешена&quot; : exit property
if statusid =&quot;{C450C343-4D0E-4010-AEF1-18C4627E6D80}&quot; then StatusName = &quot;Принято на склад&quot; : exit property
if statusid =&quot;{AC071E63-C112-4581-88B6-3116EED165C2}&quot; then StatusName = &quot;Документы напечатаны&quot; : exit property
if statusid =&quot;{D1E1D481-8515-41F5-A468-32542513431F}&quot; then StatusName = &quot;На взвешивании&quot; : exit property
if statusid =&quot;{F4C3A104-B225-450F-84C9-4226F9E4F57B}&quot; then StatusName = &quot;Согласована&quot; : exit property
if statusid =&quot;{A8B3EF3B-6547-4BEC-A687-750FFC7C4E99}&quot; then StatusName = &quot;Отвергнута&quot; : exit property
if statusid =&quot;{2A121E0F-A8AA-4060-9093-7F3F8135D242}&quot; then StatusName = &quot;Оформлена&quot; : exit property
if statusid =&quot;{78A69448-43EF-436B-82ED-9ABC3CBB56E3}&quot; then StatusName = &quot;Утеряна&quot; : exit property
if statusid =&quot;{C30B597E-E523-4532-887A-9B9DD57EF06C}&quot; then StatusName = &quot;Оформляется&quot; : exit property
if statusid =&quot;{A324A45F-2617-48C5-BC65-A334013A0401}&quot; then StatusName = &quot;В пути&quot; : exit property
if statusid =&quot;{32AE371F-8388-405C-8ACF-B372EE3EACEF}&quot; then StatusName = &quot;Возврат&quot; : exit property
if statusid =&quot;{8CAD6987-A200-484B-A1A7-C22B7877A2E1}&quot; then StatusName = &quot;Получатель оповещен&quot; : exit property
if statusid =&quot;{E2A83D8A-BFB7-47D3-9C1D-DF2812BF9383}&quot; then StatusName = &quot;Доставлена&quot; : exit property
end property

'Даные раздела Маршрут доставки
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса pekz_path_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path_col
' Set variable = me. pekz_path (...параметры...)
public property Get pekz_path (optional byval Refresh as boolean = true) as pekz_path_col
 if m_pekz_path is nothing then
   set  m_pekz_path = new pekz_path_col
   set m_pekz_path.Parent = me
   set m_pekz_path.Application = me.Application
   if Refresh then m_pekz_path.Refresh
 end if
 set  pekz_path = m_pekz_path
end property

'Даные раздела Почтовые документы
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PEKZ_DOCS_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS_col
' Set variable = me. PEKZ_DOCS (...параметры...)
public property Get PEKZ_DOCS (optional byval Refresh as boolean = true) as PEKZ_DOCS_col
 if m_PEKZ_DOCS is nothing then
   set  m_PEKZ_DOCS = new PEKZ_DOCS_col
   set m_PEKZ_DOCS.Parent = me
   set m_PEKZ_DOCS.Application = me.Application
   if Refresh then m_PEKZ_DOCS.Refresh
 end if
 set  PEKZ_DOCS = m_PEKZ_DOCS
end property

'Даные раздела Связь с 1С
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PEKZ_1CLINK_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK_col
' Set variable = me. PEKZ_1CLINK (...параметры...)
public property Get PEKZ_1CLINK (optional byval Refresh as boolean = true) as PEKZ_1CLINK_col
 if m_PEKZ_1CLINK is nothing then
   set  m_PEKZ_1CLINK = new PEKZ_1CLINK_col
   set m_PEKZ_1CLINK.Parent = me
   set m_PEKZ_1CLINK.Application = me.Application
   if Refresh then m_PEKZ_1CLINK.Refresh
 end if
 set  PEKZ_1CLINK = m_PEKZ_1CLINK
end property

'Даные раздела Описание заявки
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса pekz_def_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def_col
' Set variable = me. pekz_def (...параметры...)
public property Get pekz_def (optional byval Refresh as boolean = true) as pekz_def_col
 if m_pekz_def is nothing then
   set  m_pekz_def = new pekz_def_col
   set m_pekz_def.Parent = me
   set m_pekz_def.Application = me.Application
   if Refresh then m_pekz_def.Refresh
 end if
 set  pekz_def = m_pekz_def
end property

'Даные раздела Сбор груза
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PEKZ_ACLCT_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT_col
' Set variable = me. PEKZ_ACLCT (...параметры...)
public property Get PEKZ_ACLCT (optional byval Refresh as boolean = true) as PEKZ_ACLCT_col
 if m_PEKZ_ACLCT is nothing then
   set  m_PEKZ_ACLCT = new PEKZ_ACLCT_col
   set m_PEKZ_ACLCT.Parent = me
   set m_PEKZ_ACLCT.Application = me.Application
   if Refresh then m_PEKZ_ACLCT.Refresh
 end if
 set  PEKZ_ACLCT = m_PEKZ_ACLCT
end property

'Даные раздела Авто доставка
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PEKZ_ADLVR_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR_col
' Set variable = me. PEKZ_ADLVR (...параметры...)
public property Get PEKZ_ADLVR (optional byval Refresh as boolean = true) as PEKZ_ADLVR_col
 if m_PEKZ_ADLVR is nothing then
   set  m_PEKZ_ADLVR = new PEKZ_ADLVR_col
   set m_PEKZ_ADLVR.Parent = me
   set m_PEKZ_ADLVR.Application = me.Application
   if Refresh then m_PEKZ_ADLVR.Refresh
 end if
 set  PEKZ_ADLVR = m_PEKZ_ADLVR
end property

'Даные раздела Дополнительные услуги
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса pekz_dop_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop_col
' Set variable = me. pekz_dop (...параметры...)
public property Get pekz_dop (optional byval Refresh as boolean = true) as pekz_dop_col
 if m_pekz_dop is nothing then
   set  m_pekz_dop = new pekz_dop_col
   set m_pekz_dop.Parent = me
   set m_pekz_dop.Application = me.Application
   if Refresh then m_pekz_dop.Refresh
 end if
 set  pekz_dop = m_pekz_dop
end property

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public sub CloseClass()
 on error resume next
 Set findCash = Nothing

  if not m_pekz_path is nothing then 
    m_pekz_path.CloseClass 
    set m_pekz_path = nothing 
  end if
  if not m_PEKZ_DOCS is nothing then 
    m_PEKZ_DOCS.CloseClass 
    set m_PEKZ_DOCS = nothing 
  end if
  if not m_PEKZ_1CLINK is nothing then 
    m_PEKZ_1CLINK.CloseClass 
    set m_PEKZ_1CLINK = nothing 
  end if
  if not m_pekz_def is nothing then 
    m_pekz_def.CloseClass 
    set m_pekz_def = nothing 
  end if
  if not m_PEKZ_ACLCT is nothing then 
    m_PEKZ_ACLCT.CloseClass 
    set m_PEKZ_ACLCT = nothing 
  end if
  if not m_PEKZ_ADLVR is nothing then 
    m_PEKZ_ADLVR.CloseClass 
    set m_PEKZ_ADLVR = nothing 
  end if
  if not m_pekz_dop is nothing then 
    m_pekz_dop.CloseClass 
    set m_pekz_dop = nothing 
  end if
  if not m_manager is nothing then
    set m_manager = nothing
  end if
  if not m_MTZSession is nothing then
    set m_MTZSession = nothing
  end if
  if not m_Logger is nothing then
    m_Logger.Message &quot;Application.CloseClass&quot; 
    set m_Logger = nothing
  end if
end sub

'Поиск  строки раздела по ключу и названию раздела во всех документах
'Parameters:
'[IN]   StrID , тип параметра: String, 
'[IN]   RowID , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as Object
' Set variable = me.FindRowObject(...параметры...)
Public Function FindRowObject(ByVal StrID As String, ByVal RowID As String) As Object
  Dim obj As Object
  Dim Rowobj As Object
  Dim i As Long
Dim m_FindObject As Object

If StrID = &quot;&quot; Then Exit Function
If RowID = &quot;&quot; Then Exit Function
If findCash Is Nothing Then
 Set findCash = New Collection
End If
On Error Resume Next
Set m_FindObject = findCash.Item(StrID &amp; RowID)
If Not m_FindObject Is Nothing Then
  If m_FindObject.Application Is Nothing Then
    Set m_FindObject = Nothing
    findCash.Remove StrID &amp; RowID
  Else
   Set FindRowObject = m_FindObject
   Exit Function
  End If
End If

  Dim rpl As RowParentList
  Set rpl = MTZSession.TheFinder.RowParents(StrID, RowID)
  If rpl.Count &gt; 0 Then

 If rpl.Item(1).RowID = ID Then
    Set Rowobj = Me
    For i = 2 To rpl.Count
     Set Rowobj = Rowobj.FindObject(rpl.Item(i).PartName, rpl.Item(i).RowID)
    Next

' reference from another object
 Else
   Set obj = Manager.GetInstanceObject(rpl.Item(1).RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindRowObject(StrID, RowID)
 End If

  Else
' use old search style
 Set Rowobj = FindObject(StrID, RowID)
 If Rowobj Is Nothing Then
   Set obj = Manager.FindInstanceByRow(StrID, RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindObject(StrID, RowID)
 End If
  End If
  If Rowobj Is Nothing Then Exit Function
  Set FindRowObject = Rowobj
  Set Rowobj = Nothing
  Set obj = Nothing
End Function


'Поиск строки только в текщем документе
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
  If findCash Is Nothing Then
  Set findCash = New Collection
 End If
 On Error Resume Next
 Set m_FindObject = findCash.item(StrID &amp; InstID)
 if  not m_FindObject is nothing then
   if  m_FindObject.application is nothing then
     set m_FindObject = nothing
     findCash.remove StrID &amp; InstID
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  pekz_path.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  PEKZ_DOCS.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  PEKZ_1CLINK.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  pekz_def.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  PEKZ_ACLCT.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  PEKZ_ADLVR.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  pekz_dop.FindObject(StrID,InstID)
 end if
 If findCash.item(StrID &amp; InstID) Is Nothing Then
   findCash.Add m_FindObject, StrID &amp; InstID
 End If
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function


'Оптимизировать объем занятой памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()

pekz_path.Compact
PEKZ_DOCS.Compact
PEKZ_1CLINK.Compact
pekz_def.Compact
PEKZ_ACLCT.Compact
PEKZ_ADLVR.Compact
pekz_dop.Compact
end sub

'Задать стиль защиты документа
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;INSTANCE&quot; ,ID,SecurityStyleID)
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Secure&quot;,err.description
end sub

'Распространить стиль защиты на все строки документа
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.Propagate &quot;INSTANCE&quot;, ID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Propagate&quot;,err.description
end sub

'Сохранить изменения (новое имя)
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save()
public sub Save()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.NewInstance ID, TypeName, Name
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Save&quot;,err.description
end sub

'Задать состояние
'Parameters:
'[IN]   StatusID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.SetStatus({параметры})
private sub SetStatus(byval StatusID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.SetStatus id,StatusID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub

'Получтиь актуальное состояние
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.GetStatus()
private sub GetStatus() 
if application.WorkOffline then exit sub
Dim rs as adodb.recordset
On Error goto bye
set rs =application.MTZSession.GetRow( &quot;INSTANCE&quot;, ID)
m_statusid=rs!status &amp; &quot;&quot; 
m_SecureStyleID = rs!SecurityStyleID &amp; &quot;&quot; 
exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
 on error resume next
  Dim anode As IXMLDOMElement
  Dim e_list As IXMLDOMNodeList
 on error resume next
  set anode = node.firstchild  
  if m_typename &lt;&gt; anode.Attributes.getNamedItem(&quot;TYPENAME&quot;).nodeValue then exit sub
  m_IsLocked=anode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  if LoadMode &lt;&gt;2 then 
    m_ID=anode.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    SetStatus anode.Attributes.getNamedItem(&quot;STATUSID&quot;).nodeValue
    Secure anode.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
    WorkOffline =anode.Attributes.getNamedItem(&quot;WorkOffline&quot;).nodevalue
    if workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  end if 
  m_Name=anode.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue
Set e_list = anode.selectNodes(&quot;PEKZ_PATH_COL&quot;)
  pekz_path.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PEKZ_DOCS_COL&quot;)
  PEKZ_DOCS.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PEKZ_1CLINK_COL&quot;)
  PEKZ_1CLINK.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PEKZ_DEF_COL&quot;)
  pekz_def.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PEKZ_ACLCT_COL&quot;)
  PEKZ_ACLCT.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PEKZ_ADLVR_COL&quot;)
  PEKZ_ADLVR.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;PEKZ_DOP_COL&quot;)
  pekz_dop.XMLLoad e_list, LoadMode
end sub



'Сохранить данные в XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
  dim anode as IXMLDOMElement
  set anode = xdom.CreateElement(&quot;APPLICATION&quot;)
  anode.setAttribute &quot;ID&quot;, m_ID
  anode.setAttribute &quot;TYPENAME&quot;, m_TypeName
  anode.setAttribute &quot;NAME&quot;, m_Name
  anode.setAttribute &quot;STATUSID&quot;, m_StatusID
  anode.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  anode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  anode.setAttribute &quot;WorkOffline&quot;, WorkOffline
  node.appendChild anode
  pekz_path.XMLSave anode,xdom
  PEKZ_DOCS.XMLSave anode,xdom
  PEKZ_1CLINK.XMLSave anode,xdom
  pekz_def.XMLSave anode,xdom
  PEKZ_ACLCT.XMLSave anode,xdom
  PEKZ_ADLVR.XMLSave anode,xdom
  pekz_dop.XMLSave anode,xdom
end sub


'Краткое название
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.Brief() 
public function Brief() as string
 Brief= Name 
end function

'Загрузка корня объекта в дерево
'Parameters:
'[IN][OUT]   tree , тип параметра: object, 
'[IN]   pkey , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;, 
'[IN][OUT]   optional CollectionName , тип параметра: string=&quot;&quot;   - ...
'See Also:
'Example:
'  call me.FillTree({параметры})
public sub FillTree( tree as object, byval pkey as string, byval mode as string, optional Mask as string =&quot;&quot;, optional CollectionName as string=&quot;&quot; )
 dim node as object,key as string
If CollectionName = &quot;&quot; Then
 key = createguid2() &amp; ID
 if pkey =&quot;&quot; then
   set node=tree.nodes.add(,0,key,Brief)
 else
   set node=tree.nodes.add(pkey,4,key,Brief)
 end if
 node.tag=&quot;object&quot;
else
 key=&quot;&quot; 
end if
  if mode = &quot;prnt&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;path&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;read&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;main&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;sent&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;done&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
       end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
       end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
       end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
       end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
       end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
       end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
       end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_path&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_path&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
       node.tag=&quot;pekz_path&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;pekz_path&quot;,&quot;Маршрут доставки&quot;)
    end if
    node.tag=&quot;pekz_path&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_DOCS&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_DOCS&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
       node.tag=&quot;PEKZ_DOCS&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;PEKZ_DOCS&quot;,&quot;Почтовые документы&quot;)
    end if
    node.tag=&quot;PEKZ_DOCS&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_1CLINK&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_1CLINK&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
       node.tag=&quot;PEKZ_1CLINK&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;PEKZ_1CLINK&quot;,&quot;Связь с 1С&quot;)
    end if
    node.tag=&quot;PEKZ_1CLINK&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_def&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_def&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
       node.tag=&quot;pekz_def&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;pekz_def&quot;,&quot;Описание заявки&quot;)
    end if
    node.tag=&quot;pekz_def&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ACLCT&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ACLCT&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
       node.tag=&quot;PEKZ_ACLCT&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;PEKZ_ACLCT&quot;,&quot;Сбор груза&quot;)
    end if
    node.tag=&quot;PEKZ_ACLCT&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;PEKZ_ADLVR&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;PEKZ_ADLVR&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
       node.tag=&quot;PEKZ_ADLVR&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;PEKZ_ADLVR&quot;,&quot;Авто доставка&quot;)
    end if
    node.tag=&quot;PEKZ_ADLVR&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;pekz_dop&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;pekz_dop&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
       node.tag=&quot;pekz_dop&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;pekz_dop&quot;,&quot;Дополнительные услуги&quot;)
    end if
    node.tag=&quot;pekz_dop&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if

end sub


'Раскрытие объекта при выборе узла в дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string =&quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 id = mid(key,39,38)
 on error resume next
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if trim(struct)=&quot;&quot;  then 
   set item =manager.GetInstanceObject(id)
   if  item is nothing then exit sub
   If Not item Is Me Then
     item.Expand tree, Key, mode,mask
     Exit Sub
   End If
 else
    set item =FindRowObject(struct,id)
    if  item is nothing then exit sub
    call item.Expand(tree,key,mode,mask)
    exit sub
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 case &quot;pekz_path&quot; 
    item.pekz_path.refresh
    for i=1 to item.pekz_path.count
    nid =createguid2() &amp;  item.pekz_path.item(i).id  
    tree.nodes.add( key,4,nid,  item.pekz_path.item(i).brief(true)).tag=&quot;Row&quot; 
if Mask&lt;&gt;&quot;&quot; then
  if application.MTZSession.IsDescendant(mask,&quot;PEKZ_WLIST&quot;) then
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
  end if
else
    tree.nodes.add( nid,4,nid &amp; &quot;PEKZ_WLIST&quot; ,&quot;Весовой список ППО&quot;).tag=&quot;PEKZ_WLIST&quot;
    tree.nodes.add( nid &amp; &quot;PEKZ_WLIST&quot;,4, createguid2(),&quot;Expanding ...&quot;).tag=&quot;ToDelete&quot;
end if
    next
 case &quot;PEKZ_DOCS&quot; 
    item.PEKZ_DOCS.refresh
    for i=1 to item.PEKZ_DOCS.count
    nid =createguid2() &amp;  item.PEKZ_DOCS.item(i).id  
    tree.nodes.add( key,4,nid,  item.PEKZ_DOCS.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_1CLINK&quot; 
    item.PEKZ_1CLINK.refresh
    for i=1 to item.PEKZ_1CLINK.count
    nid =createguid2() &amp;  item.PEKZ_1CLINK.item(i).id  
    tree.nodes.add( key,4,nid,  item.PEKZ_1CLINK.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_def&quot; 
    item.pekz_def.refresh
    for i=1 to item.pekz_def.count
    nid =createguid2() &amp;  item.pekz_def.item(i).id  
    tree.nodes.add( key,4,nid,  item.pekz_def.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ACLCT&quot; 
    item.PEKZ_ACLCT.refresh
    for i=1 to item.PEKZ_ACLCT.count
    nid =createguid2() &amp;  item.PEKZ_ACLCT.item(i).id  
    tree.nodes.add( key,4,nid,  item.PEKZ_ACLCT.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;PEKZ_ADLVR&quot; 
    item.PEKZ_ADLVR.refresh
    for i=1 to item.PEKZ_ADLVR.count
    nid =createguid2() &amp;  item.PEKZ_ADLVR.item(i).id  
    tree.nodes.add( key,4,nid,  item.PEKZ_ADLVR.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;pekz_dop&quot; 
    item.pekz_dop.refresh
    for i=1 to item.pekz_dop.count
    nid =createguid2() &amp;  item.pekz_dop.item(i).id  
    tree.nodes.add( key,4,nid,  item.pekz_dop.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot;
end sub

'Получить дочерний раздел по имени
'Parameters:
'[IN][OUT]   Item , тип параметра: object, 
'[IN]   CollectionName , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ItemCollection(...параметры...)
public property Get ItemCollection( Item as object, byval CollectionName as string) as object
  set ItemCollection = CallByName(Item,CollectionName,vbGet)
end property

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
 ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, ID)
end function

'Массовое обновление строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
public sub BatchUpdate()
If not Application.WorkOffline Then
    pekz_path.BatchUpdate
    PEKZ_DOCS.BatchUpdate
    PEKZ_1CLINK.BatchUpdate
    pekz_def.BatchUpdate
    PEKZ_ACLCT.BatchUpdate
    PEKZ_ADLVR.BatchUpdate
    pekz_dop.BatchUpdate
End If
End sub

'Загрузка всех данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
public sub LoadAll()
dim prevAutoLoad as boolean
If not Application.WorkOffline Then
prevAutoLoad= Application.autoloadpart
Application.autoloadpart = true
    pekz_path.LoadAll
    PEKZ_DOCS.LoadAll
    PEKZ_1CLINK.LoadAll
    pekz_def.LoadAll
    PEKZ_ACLCT.LoadAll
    PEKZ_ADLVR.LoadAll
    pekz_dop.LoadAll
Application.autoloadpart = prevAutoLoad
End If
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="pekz_path" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Маршрут доставки
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_PEKZ_WLIST as PEKZ_WLIST_col
private m_sequence as long
private m_IsTranzit as enumBoolean
private m_PathFilial as object
Dim m_PathFilial_ID as string
Dim m_PathFilial_ID_BRIEF as string
private m_TransSupplier as object
Dim m_TransSupplier_ID as string
Dim m_TransSupplier_ID_BRIEF as string
private m_TheDirection as object
Dim m_TheDirection_ID as string
Dim m_TheDirection_ID_BRIEF as string
private m_PPONum as long
private m_DestStation as object
Dim m_DestStation_ID as string
Dim m_DestStation_ID_BRIEF as string
private m_PPODescription as object
Dim m_PPODescription_ID as string
Dim m_PPODescription_ID_BRIEF as string
private m_Receiver as object
Dim m_Receiver_ID as string
Dim m_Receiver_ID_BRIEF as string
private m_PPOWeight as double
private m_WeightEDIZM as object
Dim m_WeightEDIZM_ID as string
Dim m_WeightEDIZM_ID_BRIEF as string
private m_PPOVol as double
private m_ValueEDIZM as object
Dim m_ValueEDIZM_ID as string
Dim m_ValueEDIZM_ID_BRIEF as string
private m_RCVInfo as STRING
private m_PathPlanedDate as DATE
private m_RcvWaitDate as DATE
private m_trainNo as object
Dim m_trainNo_ID as string
Dim m_trainNo_ID_BRIEF as string
private m_vagNo as String
private m_SendDate as DATE
private m_SupMoneyDate as DATE
private m_PassFIO as String
private m_PassDate as DATE
private m_RcvFIO as String
private m_RcvDate as DATE
private m_InforRcvFIO as String
private m_InfoDate as DATE
private m_InfoSendType as object
Dim m_InfoSendType_ID as string
Dim m_InfoSendType_ID_BRIEF as string
private m_CalcWithNDS as enumBoolean
private m_TheCurrency as object
Dim m_TheCurrency_ID as string
Dim m_TheCurrency_ID_BRIEF as string
private m_TRF as double
private m_SummNDS as double
private m_Summ as double
private m_SupTRF as double
private m_SupSumm as double
private m_SupSummNDS as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;pekz_path&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;pekz_path.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 

'Данные дочернего раздела Весовой список ППО
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PEKZ_WLIST_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST_col
' Set variable = me. PEKZ_WLIST (...параметры...)
public property Get PEKZ_WLIST (optional byval Refresh as boolean = true) as PEKZ_WLIST_col
 if m_PEKZ_WLIST is nothing then
   set  m_PEKZ_WLIST = new PEKZ_WLIST_col
   set m_PEKZ_WLIST.Parent = me
   set m_PEKZ_WLIST.Application = me.Application
   if Refresh then m_PEKZ_WLIST.Refresh
 end if
 set  PEKZ_WLIST = m_PEKZ_WLIST
end property
' let 
'№

'№
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let sequence(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;sequence&quot;,sequence,newvalue

   m_sequence= newValue
end if
end property

'№
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. sequence
public property Get sequence() as long
 LoadFromDatabase
 AccessTime=Now

   sequence = m_sequence
end property
' let 
'Транзит

'Транзит
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsTranzit(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsTranzit&quot;,IsTranzit,newvalue

   m_IsTranzit= newValue
end if
end property

'Транзит
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsTranzit
public property Get IsTranzit() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsTranzit = m_IsTranzit
end property
' let 
'Филиал

'Филиал
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PathFilial(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PathFilial&quot;,PathFilial,newvalue
on error resume next
m_PathFilial_ID=&quot;&quot;
m_PathFilial_ID=newValue.id
'  set   m_PathFilial= newValue
end if
end property

'Филиал
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PathFilial
public property Get PathFilial() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PathFilial as object
if  m_PathFilial_ID&lt;&gt;&quot;&quot; then 
  set tmp_PathFilial=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_PathFilial_ID)
  if tmp_PathFilial is nothing then
    m_PathFilial_ID_BRIEF = &quot;&quot; 
  else
    m_PathFilial_ID_BRIEF = tmp_PathFilial.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_PathFilial_ID, tmp_PathFilial
  set PathFilial=tmp_PathFilial
  exit property
end if
  '  set PathFilial = m_PathFilial
end property
' let 
'Поставщик

'Поставщик
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TransSupplier(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TransSupplier&quot;,TransSupplier,newvalue
on error resume next
m_TransSupplier_ID=&quot;&quot;
m_TransSupplier_ID=newValue.id
' set   m_TransSupplier= newValue
end if
end property

'Поставщик
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TransSupplier
public property Get TransSupplier() as object
 LoadFromDatabase
 AccessTime=Now
if  m_TransSupplier_ID&lt;&gt;&quot;&quot; then 
  set TransSupplier=application.Manager.GetInstanceObject(right(m_TransSupplier_ID,38))
 EXIT PROPERTY
end if
  ' set TransSupplier = m_TransSupplier
end property
' let 
'Направление

'Направление
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheDirection(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDirection&quot;,TheDirection,newvalue
on error resume next
m_TheDirection_ID=&quot;&quot;
m_TheDirection_ID=newValue.id
'  set   m_TheDirection= newValue
end if
end property

'Направление
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheDirection
public property Get TheDirection() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheDirection as object
if  m_TheDirection_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheDirection=Application.FindRowObject(&quot;PEKD_DIRECTION&quot;,m_TheDirection_ID)
  if tmp_TheDirection is nothing then
    m_TheDirection_ID_BRIEF = &quot;&quot; 
  else
    m_TheDirection_ID_BRIEF = tmp_TheDirection.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DIRECTION&quot; &amp; m_TheDirection_ID, tmp_TheDirection
  set TheDirection=tmp_TheDirection
  exit property
end if
  '  set TheDirection = m_TheDirection
end property
' let 
'Кол-во ПО

'Кол-во ПО
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PPONum(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PPONum&quot;,PPONum,newvalue

   m_PPONum= newValue
end if
end property

'Кол-во ПО
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. PPONum
public property Get PPONum() as long
 LoadFromDatabase
 AccessTime=Now

   PPONum = m_PPONum
end property
' let 
'Станция назначения

'Станция назначения
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set DestStation(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DestStation&quot;,DestStation,newvalue
on error resume next
m_DestStation_ID=&quot;&quot;
m_DestStation_ID=newValue.id
'  set   m_DestStation= newValue
end if
end property

'Станция назначения
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. DestStation
public property Get DestStation() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_DestStation as object
if  m_DestStation_ID&lt;&gt;&quot;&quot; then 
  set tmp_DestStation=Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,m_DestStation_ID)
  if tmp_DestStation is nothing then
    m_DestStation_ID_BRIEF = &quot;&quot; 
  else
    m_DestStation_ID_BRIEF = tmp_DestStation.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DIRSTATION&quot; &amp; m_DestStation_ID, tmp_DestStation
  set DestStation=tmp_DestStation
  exit property
end if
  '  set DestStation = m_DestStation
end property
' let 
'Характер груза

'Характер груза
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PPODescription(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PPODescription&quot;,PPODescription,newvalue
on error resume next
m_PPODescription_ID=&quot;&quot;
m_PPODescription_ID=newValue.id
'  set   m_PPODescription= newValue
end if
end property

'Характер груза
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PPODescription
public property Get PPODescription() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PPODescription as object
if  m_PPODescription_ID&lt;&gt;&quot;&quot; then 
  set tmp_PPODescription=Application.FindRowObject(&quot;PEKD_POSTTYPE&quot;,m_PPODescription_ID)
  if tmp_PPODescription is nothing then
    m_PPODescription_ID_BRIEF = &quot;&quot; 
  else
    m_PPODescription_ID_BRIEF = tmp_PPODescription.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_POSTTYPE&quot; &amp; m_PPODescription_ID, tmp_PPODescription
  set PPODescription=tmp_PPODescription
  exit property
end if
  '  set PPODescription = m_PPODescription
end property
' let 
'Получатель

'Получатель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Receiver(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Receiver&quot;,Receiver,newvalue
on error resume next
m_Receiver_ID=&quot;&quot;
m_Receiver_ID=newValue.id
' set   m_Receiver= newValue
end if
end property

'Получатель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Receiver
public property Get Receiver() as object
 LoadFromDatabase
 AccessTime=Now
if  m_Receiver_ID&lt;&gt;&quot;&quot; then 
  set Receiver=application.Manager.GetInstanceObject(right(m_Receiver_ID,38))
 EXIT PROPERTY
end if
  ' set Receiver = m_Receiver
end property
' let 
'Вес ПО

'Вес ПО
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PPOWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PPOWeight&quot;,PPOWeight,newvalue

   m_PPOWeight= newValue
end if
end property

'Вес ПО
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PPOWeight
public property Get PPOWeight() as double
 LoadFromDatabase
 AccessTime=Now

   PPOWeight = m_PPOWeight
end property
' let 
'Ед. изм. веса

'Ед. изм. веса
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set WeightEDIZM(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;WeightEDIZM&quot;,WeightEDIZM,newvalue
on error resume next
m_WeightEDIZM_ID=&quot;&quot;
m_WeightEDIZM_ID=newValue.id
'  set   m_WeightEDIZM= newValue
end if
end property

'Ед. изм. веса
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. WeightEDIZM
public property Get WeightEDIZM() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_WeightEDIZM as object
if  m_WeightEDIZM_ID&lt;&gt;&quot;&quot; then 
  set tmp_WeightEDIZM=Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,m_WeightEDIZM_ID)
  if tmp_WeightEDIZM is nothing then
    m_WeightEDIZM_ID_BRIEF = &quot;&quot; 
  else
    m_WeightEDIZM_ID_BRIEF = tmp_WeightEDIZM.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_EDIZM&quot; &amp; m_WeightEDIZM_ID, tmp_WeightEDIZM
  set WeightEDIZM=tmp_WeightEDIZM
  exit property
end if
  '  set WeightEDIZM = m_WeightEDIZM
end property
' let 
'Объем ПО

'Объем ПО
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PPOVol(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PPOVol&quot;,PPOVol,newvalue

   m_PPOVol= newValue
end if
end property

'Объем ПО
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. PPOVol
public property Get PPOVol() as double
 LoadFromDatabase
 AccessTime=Now

   PPOVol = m_PPOVol
end property
' let 
'Ед.изм. объема

'Ед.изм. объема
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ValueEDIZM(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ValueEDIZM&quot;,ValueEDIZM,newvalue
on error resume next
m_ValueEDIZM_ID=&quot;&quot;
m_ValueEDIZM_ID=newValue.id
'  set   m_ValueEDIZM= newValue
end if
end property

'Ед.изм. объема
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ValueEDIZM
public property Get ValueEDIZM() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ValueEDIZM as object
if  m_ValueEDIZM_ID&lt;&gt;&quot;&quot; then 
  set tmp_ValueEDIZM=Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,m_ValueEDIZM_ID)
  if tmp_ValueEDIZM is nothing then
    m_ValueEDIZM_ID_BRIEF = &quot;&quot; 
  else
    m_ValueEDIZM_ID_BRIEF = tmp_ValueEDIZM.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_EDIZM&quot; &amp; m_ValueEDIZM_ID, tmp_ValueEDIZM
  set ValueEDIZM=tmp_ValueEDIZM
  exit property
end if
  '  set ValueEDIZM = m_ValueEDIZM
end property
' let 
'Данные получателя

'Данные получателя
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let RCVInfo(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;RCVInfo&quot;,RCVInfo,newvalue

   m_RCVInfo= newValue
end if
end property

'Данные получателя
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. RCVInfo
public property Get RCVInfo() as STRING
 LoadFromDatabase
 AccessTime=Now

   RCVInfo = m_RCVInfo
end property
' let 
'Дата предполагаемой отправки

'Дата предполагаемой отправки
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PathPlanedDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PathPlanedDate&quot;,PathPlanedDate,newvalue

   m_PathPlanedDate= newValue
end if
end property

'Дата предполагаемой отправки
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. PathPlanedDate
public property Get PathPlanedDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   PathPlanedDate = m_PathPlanedDate
end property
' let 
'Ориентировочная дата получения

'Ориентировочная дата получения
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let RcvWaitDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;RcvWaitDate&quot;,RcvWaitDate,newvalue

   m_RcvWaitDate= newValue
end if
end property

'Ориентировочная дата получения
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. RcvWaitDate
public property Get RcvWaitDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   RcvWaitDate = m_RcvWaitDate
end property
' let 
'Поезд

'Поезд
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set trainNo(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;trainNo&quot;,trainNo,newvalue
on error resume next
m_trainNo_ID=&quot;&quot;
m_trainNo_ID=newValue.id
'  set   m_trainNo= newValue
end if
end property

'Поезд
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. trainNo
public property Get trainNo() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_trainNo as object
if  m_trainNo_ID&lt;&gt;&quot;&quot; then 
  set tmp_trainNo=Application.FindRowObject(&quot;PEKD_TRAINS&quot;,m_trainNo_ID)
  if tmp_trainNo is nothing then
    m_trainNo_ID_BRIEF = &quot;&quot; 
  else
    m_trainNo_ID_BRIEF = tmp_trainNo.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_TRAINS&quot; &amp; m_trainNo_ID, tmp_trainNo
  set trainNo=tmp_trainNo
  exit property
end if
  '  set trainNo = m_trainNo
end property
' let 
'Вагон №

'Вагон №
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let vagNo(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;vagNo&quot;,vagNo,newvalue

   m_vagNo= newValue
end if
end property

'Вагон №
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. vagNo
public property Get vagNo() as String
 LoadFromDatabase
 AccessTime=Now

   vagNo = m_vagNo
end property
' let 
'Дата отправки

'Дата отправки
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SendDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SendDate&quot;,SendDate,newvalue

   m_SendDate= newValue
end if
end property

'Дата отправки
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. SendDate
public property Get SendDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   SendDate = m_SendDate
end property
' let 
'Cписание денежных средств поставщиком

'Cписание денежных средств поставщиком
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupMoneyDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupMoneyDate&quot;,SupMoneyDate,newvalue

   m_SupMoneyDate= newValue
end if
end property

'Cписание денежных средств поставщиком
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. SupMoneyDate
public property Get SupMoneyDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   SupMoneyDate = m_SupMoneyDate
end property
' let 
'ФИО Кладовщика

'ФИО Кладовщика
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PassFIO(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PassFIO&quot;,PassFIO,newvalue

   m_PassFIO= newValue
end if
end property

'ФИО Кладовщика
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PassFIO
public property Get PassFIO() as String
 LoadFromDatabase
 AccessTime=Now

   PassFIO = m_PassFIO
end property
' let 
'Дата передачи груза в вагон

'Дата передачи груза в вагон
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PassDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PassDate&quot;,PassDate,newvalue

   m_PassDate= newValue
end if
end property

'Дата передачи груза в вагон
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. PassDate
public property Get PassDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   PassDate = m_PassDate
end property
' let 
'ФИО ВПН

'ФИО ВПН
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let RcvFIO(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;RcvFIO&quot;,RcvFIO,newvalue

   m_RcvFIO= newValue
end if
end property

'ФИО ВПН
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. RcvFIO
public property Get RcvFIO() as String
 LoadFromDatabase
 AccessTime=Now

   RcvFIO = m_RcvFIO
end property
' let 
'Дата получения груза в ПО

'Дата получения груза в ПО
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let RcvDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;RcvDate&quot;,RcvDate,newvalue

   m_RcvDate= newValue
end if
end property

'Дата получения груза в ПО
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. RcvDate
public property Get RcvDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   RcvDate = m_RcvDate
end property
' let 
'Кому передана информация

'Кому передана информация
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let InforRcvFIO(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;InforRcvFIO&quot;,InforRcvFIO,newvalue

   m_InforRcvFIO= newValue
end if
end property

'Кому передана информация
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. InforRcvFIO
public property Get InforRcvFIO() as String
 LoadFromDatabase
 AccessTime=Now

   InforRcvFIO = m_InforRcvFIO
end property
' let 
'Дата передачи информации

'Дата передачи информации
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let InfoDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;InfoDate&quot;,InfoDate,newvalue

   m_InfoDate= newValue
end if
end property

'Дата передачи информации
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. InfoDate
public property Get InfoDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   InfoDate = m_InfoDate
end property
' let 
'Способ передачи информации

'Способ передачи информации
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set InfoSendType(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;InfoSendType&quot;,InfoSendType,newvalue
on error resume next
m_InfoSendType_ID=&quot;&quot;
m_InfoSendType_ID=newValue.id
'  set   m_InfoSendType= newValue
end if
end property

'Способ передачи информации
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. InfoSendType
public property Get InfoSendType() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_InfoSendType as object
if  m_InfoSendType_ID&lt;&gt;&quot;&quot; then 
  set tmp_InfoSendType=Application.FindRowObject(&quot;PEKD_INFOSENDTYPE&quot;,m_InfoSendType_ID)
  if tmp_InfoSendType is nothing then
    m_InfoSendType_ID_BRIEF = &quot;&quot; 
  else
    m_InfoSendType_ID_BRIEF = tmp_InfoSendType.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_INFOSENDTYPE&quot; &amp; m_InfoSendType_ID, tmp_InfoSendType
  set InfoSendType=tmp_InfoSendType
  exit property
end if
  '  set InfoSendType = m_InfoSendType
end property
' let 
'Расчет с НДС

'Расчет с НДС
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CalcWithNDS(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CalcWithNDS&quot;,CalcWithNDS,newvalue

   m_CalcWithNDS= newValue
end if
end property

'Расчет с НДС
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CalcWithNDS
public property Get CalcWithNDS() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CalcWithNDS = m_CalcWithNDS
end property
' let 
'Валюта

'Валюта
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheCurrency(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheCurrency&quot;,TheCurrency,newvalue
on error resume next
m_TheCurrency_ID=&quot;&quot;
m_TheCurrency_ID=newValue.id
'  set   m_TheCurrency= newValue
end if
end property

'Валюта
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheCurrency
public property Get TheCurrency() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheCurrency as object
if  m_TheCurrency_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheCurrency=Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,m_TheCurrency_ID)
  if tmp_TheCurrency is nothing then
    m_TheCurrency_ID_BRIEF = &quot;&quot; 
  else
    m_TheCurrency_ID_BRIEF = tmp_TheCurrency.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_CURRENCY&quot; &amp; m_TheCurrency_ID, tmp_TheCurrency
  set TheCurrency=tmp_TheCurrency
  exit property
end if
  '  set TheCurrency = m_TheCurrency
end property
' let 
'Тариф

'Тариф
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TRF(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TRF&quot;,TRF,newvalue

   m_TRF= newValue
end if
end property

'Тариф
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TRF
public property Get TRF() as double
 LoadFromDatabase
 AccessTime=Now

   TRF = m_TRF
end property
' let 
'Сумма с НДС

'Сумма с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummNDS&quot;,SummNDS,newvalue

   m_SummNDS= newValue
end if
end property

'Сумма с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummNDS
public property Get SummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SummNDS = m_SummNDS
end property
' let 
'Сумма без НДС

'Сумма без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Summ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Summ&quot;,Summ,newvalue

   m_Summ= newValue
end if
end property

'Сумма без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Summ
public property Get Summ() as double
 LoadFromDatabase
 AccessTime=Now

   Summ = m_Summ
end property
' let 
'Тариф поставщика

'Тариф поставщика
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupTRF(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupTRF&quot;,SupTRF,newvalue

   m_SupTRF= newValue
end if
end property

'Тариф поставщика
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupTRF
public property Get SupTRF() as double
 LoadFromDatabase
 AccessTime=Now

   SupTRF = m_SupTRF
end property
' let 
'Сумма поставщику без НДС

'Сумма поставщику без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSumm(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSumm&quot;,SupSumm,newvalue

   m_SupSumm= newValue
end if
end property

'Сумма поставщику без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSumm
public property Get SupSumm() as double
 LoadFromDatabase
 AccessTime=Now

   SupSumm = m_SupSumm
end property
' let 
'Сумма поставщику с НДС

'Сумма поставщику с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSummNDS&quot;,SupSummNDS,newvalue

   m_SupSummNDS= newValue
end if
end property

'Сумма поставщику с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSummNDS
public property Get SupSummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SupSummNDS = m_SupSummNDS
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;sequence&quot;,m_sequence)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IsTranzit&quot;,m_IsTranzit)
nvi.ValueType = adInteger 
 ' Reference to PEKD_DEPT
    if m_PathFilial_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PathFilial&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PathFilial&quot;,m_PathFilial_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to object
    if m_TransSupplier_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TransSupplier&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TransSupplier&quot;,m_TransSupplier_ID)
    end if 
    nvi.oracle_guid 
 ' Reference to PEKD_DIRECTION
    if m_TheDirection_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheDirection&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheDirection&quot;,m_TheDirection_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;PPONum&quot;,m_PPONum)
nvi.ValueType = adInteger 
 ' Reference to PEKD_DIRSTATION
    if m_DestStation_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;DestStation&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;DestStation&quot;,m_DestStation_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to PEKD_POSTTYPE
    if m_PPODescription_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PPODescription&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PPODescription&quot;,m_PPODescription_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to object
    if m_Receiver_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Receiver&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Receiver&quot;,m_Receiver_ID)
    end if 
    nvi.oracle_guid 
  set nvi=nv.Add( &quot;PPOWeight&quot;,m_PPOWeight)
nvi.ValueType =  adDouble 
 ' Reference to ENTDIC_EDIZM
    if m_WeightEDIZM_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;WeightEDIZM&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;WeightEDIZM&quot;,m_WeightEDIZM_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;PPOVol&quot;,m_PPOVol)
nvi.ValueType =  adDouble 
 ' Reference to ENTDIC_EDIZM
    if m_ValueEDIZM_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ValueEDIZM&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ValueEDIZM&quot;,m_ValueEDIZM_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;RCVInfo&quot;,m_RCVInfo)
  set nvi=nv.Add( &quot;PathPlanedDate&quot;,m_PathPlanedDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;RcvWaitDate&quot;,m_RcvWaitDate)
nvi.ValueType = adDate 
 ' Reference to PEKD_TRAINS
    if m_trainNo_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;trainNo&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;trainNo&quot;,m_trainNo_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;vagNo&quot;,m_vagNo)
nvi.ValueSize = 8
  set nvi=nv.Add( &quot;SendDate&quot;,m_SendDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;SupMoneyDate&quot;,m_SupMoneyDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;PassFIO&quot;,m_PassFIO)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;PassDate&quot;,m_PassDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;RcvFIO&quot;,m_RcvFIO)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;RcvDate&quot;,m_RcvDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;InforRcvFIO&quot;,m_InforRcvFIO)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;InfoDate&quot;,m_InfoDate)
nvi.ValueType = adDate 
 ' Reference to PEKD_INFOSENDTYPE
    if m_InfoSendType_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;InfoSendType&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;InfoSendType&quot;,m_InfoSendType_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;CalcWithNDS&quot;,m_CalcWithNDS)
nvi.ValueType = adInteger 
 ' Reference to ENTDIC_CURRENCY
    if m_TheCurrency_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheCurrency&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheCurrency&quot;,m_TheCurrency_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;TRF&quot;,m_TRF)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SummNDS&quot;,m_SummNDS)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Summ&quot;,m_Summ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupTRF&quot;,m_SupTRF)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSumm&quot;,m_SupSumm)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSummNDS&quot;,m_SupSummNDS)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheDirection is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheDirection_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheDirection.Brief  &amp; &quot;}; &quot;
   end if
 m_BRIEF= m_BRIEF &amp; vagNo &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_sequence=nv.item( &quot;sequence&quot;).Value
m_IsTranzit=nv.item( &quot;IsTranzit&quot;).Value
  m_PathFilial_ID=nv.item( &quot;PathFilial&quot;).Value
  m_TransSupplier_ID=nv.item( &quot;TransSupplier&quot;).Value
  m_TheDirection_ID=nv.item( &quot;TheDirection&quot;).Value
m_PPONum=nv.item( &quot;PPONum&quot;).Value
  m_DestStation_ID=nv.item( &quot;DestStation&quot;).Value
  m_PPODescription_ID=nv.item( &quot;PPODescription&quot;).Value
  m_Receiver_ID=nv.item( &quot;Receiver&quot;).Value
m_PPOWeight=nv.item( &quot;PPOWeight&quot;).Value
  m_WeightEDIZM_ID=nv.item( &quot;WeightEDIZM&quot;).Value
m_PPOVol=nv.item( &quot;PPOVol&quot;).Value
  m_ValueEDIZM_ID=nv.item( &quot;ValueEDIZM&quot;).Value
m_RCVInfo=nv.item( &quot;RCVInfo&quot;).Value
m_PathPlanedDate=nv.item( &quot;PathPlanedDate&quot;).Value
m_RcvWaitDate=nv.item( &quot;RcvWaitDate&quot;).Value
  m_trainNo_ID=nv.item( &quot;trainNo&quot;).Value
m_vagNo=nv.item( &quot;vagNo&quot;).Value
m_SendDate=nv.item( &quot;SendDate&quot;).Value
m_SupMoneyDate=nv.item( &quot;SupMoneyDate&quot;).Value
m_PassFIO=nv.item( &quot;PassFIO&quot;).Value
m_PassDate=nv.item( &quot;PassDate&quot;).Value
m_RcvFIO=nv.item( &quot;RcvFIO&quot;).Value
m_RcvDate=nv.item( &quot;RcvDate&quot;).Value
m_InforRcvFIO=nv.item( &quot;InforRcvFIO&quot;).Value
m_InfoDate=nv.item( &quot;InfoDate&quot;).Value
  m_InfoSendType_ID=nv.item( &quot;InfoSendType&quot;).Value
m_CalcWithNDS=nv.item( &quot;CalcWithNDS&quot;).Value
  m_TheCurrency_ID=nv.item( &quot;TheCurrency&quot;).Value
m_TRF=nv.item( &quot;TRF&quot;).Value
m_SummNDS=nv.item( &quot;SummNDS&quot;).Value
m_Summ=nv.item( &quot;Summ&quot;).Value
m_SupTRF=nv.item( &quot;SupTRF&quot;).Value
m_SupSumm=nv.item( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.item( &quot;SupSummNDS&quot;).Value
else

m_sequence=nv.fields( &quot;sequence&quot;).Value
m_IsTranzit=nv.fields( &quot;IsTranzit&quot;).Value
  m_PathFilial_ID=nv.fields( &quot;PathFilial&quot;).Value
  m_TransSupplier_ID=nv.fields( &quot;TransSupplier&quot;).Value
  m_TheDirection_ID=nv.fields( &quot;TheDirection&quot;).Value
m_PPONum=nv.fields( &quot;PPONum&quot;).Value
  m_DestStation_ID=nv.fields( &quot;DestStation&quot;).Value
  m_PPODescription_ID=nv.fields( &quot;PPODescription&quot;).Value
  m_Receiver_ID=nv.fields( &quot;Receiver&quot;).Value
m_PPOWeight=nv.fields( &quot;PPOWeight&quot;).Value
  m_WeightEDIZM_ID=nv.fields( &quot;WeightEDIZM&quot;).Value
m_PPOVol=nv.fields( &quot;PPOVol&quot;).Value
  m_ValueEDIZM_ID=nv.fields( &quot;ValueEDIZM&quot;).Value
m_RCVInfo=nv.fields( &quot;RCVInfo&quot;).Value
m_PathPlanedDate=nv.fields( &quot;PathPlanedDate&quot;).Value
m_RcvWaitDate=nv.fields( &quot;RcvWaitDate&quot;).Value
  m_trainNo_ID=nv.fields( &quot;trainNo&quot;).Value
m_vagNo=nv.fields( &quot;vagNo&quot;).Value
m_SendDate=nv.fields( &quot;SendDate&quot;).Value
m_SupMoneyDate=nv.fields( &quot;SupMoneyDate&quot;).Value
m_PassFIO=nv.fields( &quot;PassFIO&quot;).Value
m_PassDate=nv.fields( &quot;PassDate&quot;).Value
m_RcvFIO=nv.fields( &quot;RcvFIO&quot;).Value
m_RcvDate=nv.fields( &quot;RcvDate&quot;).Value
m_InforRcvFIO=nv.fields( &quot;InforRcvFIO&quot;).Value
m_InfoDate=nv.fields( &quot;InfoDate&quot;).Value
  m_InfoSendType_ID=nv.fields( &quot;InfoSendType&quot;).Value
m_CalcWithNDS=nv.fields( &quot;CalcWithNDS&quot;).Value
  m_TheCurrency_ID=nv.fields( &quot;TheCurrency&quot;).Value
m_TRF=nv.fields( &quot;TRF&quot;).Value
m_SummNDS=nv.fields( &quot;SummNDS&quot;).Value
m_Summ=nv.fields( &quot;Summ&quot;).Value
m_SupTRF=nv.fields( &quot;SupTRF&quot;).Value
m_SupSumm=nv.fields( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.fields( &quot;SupSummNDS&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as pekz_path
   set o = new pekz_path
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;pekz_path.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;pekz_path.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;pekz_path&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;pekz_path.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;pekz_path&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;pekz_path.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

if not m_PEKZ_WLIST is nothing then 
  m_PEKZ_WLIST.CloseClass 
  set m_PEKZ_WLIST = nothing 
end if
 m_PathFilial_ID=&quot;&quot;
 set m_PathFilial= nothing
 m_TransSupplier_ID=&quot;&quot;
 set m_TransSupplier= nothing
 m_TheDirection_ID=&quot;&quot;
 set m_TheDirection= nothing
 m_DestStation_ID=&quot;&quot;
 set m_DestStation= nothing
 m_PPODescription_ID=&quot;&quot;
 set m_PPODescription= nothing
 m_Receiver_ID=&quot;&quot;
 set m_Receiver= nothing
 m_WeightEDIZM_ID=&quot;&quot;
 set m_WeightEDIZM= nothing
 m_ValueEDIZM_ID=&quot;&quot;
 set m_ValueEDIZM= nothing
 m_trainNo_ID=&quot;&quot;
 set m_trainNo= nothing
 m_InfoSendType_ID=&quot;&quot;
 set m_InfoSendType= nothing
 m_TheCurrency_ID=&quot;&quot;
 set m_TheCurrency= nothing
 if not Application is nothing then Application.Logger.Message &quot;pekz_path.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  PEKZ_WLIST.FindObject(StrID,InstID)
 end if
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

PEKZ_WLIST.Compact
end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  sequence=node.Attributes.getNamedItem(&quot;SEQUENCE&quot;).nodeValue
  IsTranzit=node.Attributes.getNamedItem(&quot;ISTRANZIT&quot;).nodeValue
  set PathFilial=nothing
  m_PathFilial_ID=node.Attributes.getNamedItem(&quot;PATHFILIAL&quot;).nodeValue
  m_PathFilial_ID_BRIEF=node.Attributes.getNamedItem(&quot;PATHFILIAL_BRIEF&quot;).nodeValue
  set TransSupplier=nothing
  m_TransSupplier_ID=node.Attributes.getNamedItem(&quot;TRANSSUPPLIER&quot;).nodeValue
  m_TransSupplier_ID_BRIEF=node.Attributes.getNamedItem(&quot;TRANSSUPPLIER_BRIEF&quot;).nodeValue
  set TheDirection=nothing
  m_TheDirection_ID=node.Attributes.getNamedItem(&quot;THEDIRECTION&quot;).nodeValue
  m_TheDirection_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEDIRECTION_BRIEF&quot;).nodeValue
  PPONum=node.Attributes.getNamedItem(&quot;PPONUM&quot;).nodeValue
  set DestStation=nothing
  m_DestStation_ID=node.Attributes.getNamedItem(&quot;DESTSTATION&quot;).nodeValue
  m_DestStation_ID_BRIEF=node.Attributes.getNamedItem(&quot;DESTSTATION_BRIEF&quot;).nodeValue
  set PPODescription=nothing
  m_PPODescription_ID=node.Attributes.getNamedItem(&quot;PPODESCRIPTION&quot;).nodeValue
  m_PPODescription_ID_BRIEF=node.Attributes.getNamedItem(&quot;PPODESCRIPTION_BRIEF&quot;).nodeValue
  set Receiver=nothing
  m_Receiver_ID=node.Attributes.getNamedItem(&quot;RECEIVER&quot;).nodeValue
  m_Receiver_ID_BRIEF=node.Attributes.getNamedItem(&quot;RECEIVER_BRIEF&quot;).nodeValue
  PPOWeight=val(Replace(node.Attributes.getNamedItem(&quot;PPOWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  set WeightEDIZM=nothing
  m_WeightEDIZM_ID=node.Attributes.getNamedItem(&quot;WEIGHTEDIZM&quot;).nodeValue
  m_WeightEDIZM_ID_BRIEF=node.Attributes.getNamedItem(&quot;WEIGHTEDIZM_BRIEF&quot;).nodeValue
  PPOVol=val(Replace(node.Attributes.getNamedItem(&quot;PPOVOL&quot;).nodeValue,vbLf,vbcrlf))
  set ValueEDIZM=nothing
  m_ValueEDIZM_ID=node.Attributes.getNamedItem(&quot;VALUEEDIZM&quot;).nodeValue
  m_ValueEDIZM_ID_BRIEF=node.Attributes.getNamedItem(&quot;VALUEEDIZM_BRIEF&quot;).nodeValue
  RCVInfo=Replace(node.Attributes.getNamedItem(&quot;RCVINFO&quot;).nodeValue,vbLf,vbcrlf)
  PathPlanedDate=node.Attributes.getNamedItem(&quot;PATHPLANEDDATE&quot;).nodeValue
  RcvWaitDate=node.Attributes.getNamedItem(&quot;RCVWAITDATE&quot;).nodeValue
  set trainNo=nothing
  m_trainNo_ID=node.Attributes.getNamedItem(&quot;TRAINNO&quot;).nodeValue
  m_trainNo_ID_BRIEF=node.Attributes.getNamedItem(&quot;TRAINNO_BRIEF&quot;).nodeValue
  vagNo=Replace(node.Attributes.getNamedItem(&quot;VAGNO&quot;).nodeValue,vbLf,vbcrlf)
  SendDate=node.Attributes.getNamedItem(&quot;SENDDATE&quot;).nodeValue
  SupMoneyDate=node.Attributes.getNamedItem(&quot;SUPMONEYDATE&quot;).nodeValue
  PassFIO=Replace(node.Attributes.getNamedItem(&quot;PASSFIO&quot;).nodeValue,vbLf,vbcrlf)
  PassDate=node.Attributes.getNamedItem(&quot;PASSDATE&quot;).nodeValue
  RcvFIO=Replace(node.Attributes.getNamedItem(&quot;RCVFIO&quot;).nodeValue,vbLf,vbcrlf)
  RcvDate=node.Attributes.getNamedItem(&quot;RCVDATE&quot;).nodeValue
  InforRcvFIO=Replace(node.Attributes.getNamedItem(&quot;INFORRCVFIO&quot;).nodeValue,vbLf,vbcrlf)
  InfoDate=node.Attributes.getNamedItem(&quot;INFODATE&quot;).nodeValue
  set InfoSendType=nothing
  m_InfoSendType_ID=node.Attributes.getNamedItem(&quot;INFOSENDTYPE&quot;).nodeValue
  m_InfoSendType_ID_BRIEF=node.Attributes.getNamedItem(&quot;INFOSENDTYPE_BRIEF&quot;).nodeValue
  CalcWithNDS=node.Attributes.getNamedItem(&quot;CALCWITHNDS&quot;).nodeValue
  set TheCurrency=nothing
  m_TheCurrency_ID=node.Attributes.getNamedItem(&quot;THECURRENCY&quot;).nodeValue
  m_TheCurrency_ID_BRIEF=node.Attributes.getNamedItem(&quot;THECURRENCY_BRIEF&quot;).nodeValue
  TRF=val(Replace(node.Attributes.getNamedItem(&quot;TRF&quot;).nodeValue,vbLf,vbcrlf))
  SummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  Summ=val(Replace(node.Attributes.getNamedItem(&quot;SUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupTRF=val(Replace(node.Attributes.getNamedItem(&quot;SUPTRF&quot;).nodeValue,vbLf,vbcrlf))
  SupSumm=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupSummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  Set e_list = node.selectNodes(&quot;PEKZ_WLIST_COL&quot;)
  PEKZ_WLIST.XMLLoad e_list, LoadMode
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SEQUENCE&quot;, sequence
  node.setAttribute &quot;ISTRANZIT&quot;, IsTranzit
  node.setAttribute &quot;PATHFILIAL&quot;, m_PathFilial_ID
  if not (PathFilial is nothing) then 
    node.setAttribute &quot;PATHFILIAL_BRIEF&quot;, PathFilial.BRIEF
  else
    node.setAttribute &quot;PATHFILIAL_BRIEF&quot;, m_PathFilial_ID_BRIEF
  end if
  node.setAttribute &quot;TRANSSUPPLIER&quot;, m_TransSupplier_ID
  if not (TransSupplier is nothing) then 
    node.setAttribute &quot;TRANSSUPPLIER_BRIEF&quot;, TransSupplier.BRIEF
  else
    node.setAttribute &quot;TRANSSUPPLIER_BRIEF&quot;, m_TransSupplier_ID_BRIEF
  end if
  node.setAttribute &quot;THEDIRECTION&quot;, m_TheDirection_ID
  if not (TheDirection is nothing) then 
    node.setAttribute &quot;THEDIRECTION_BRIEF&quot;, TheDirection.BRIEF
  else
    node.setAttribute &quot;THEDIRECTION_BRIEF&quot;, m_TheDirection_ID_BRIEF
  end if
  node.setAttribute &quot;PPONUM&quot;, PPONum
  node.setAttribute &quot;DESTSTATION&quot;, m_DestStation_ID
  if not (DestStation is nothing) then 
    node.setAttribute &quot;DESTSTATION_BRIEF&quot;, DestStation.BRIEF
  else
    node.setAttribute &quot;DESTSTATION_BRIEF&quot;, m_DestStation_ID_BRIEF
  end if
  node.setAttribute &quot;PPODESCRIPTION&quot;, m_PPODescription_ID
  if not (PPODescription is nothing) then 
    node.setAttribute &quot;PPODESCRIPTION_BRIEF&quot;, PPODescription.BRIEF
  else
    node.setAttribute &quot;PPODESCRIPTION_BRIEF&quot;, m_PPODescription_ID_BRIEF
  end if
  node.setAttribute &quot;RECEIVER&quot;, m_Receiver_ID
  if not (Receiver is nothing) then 
    node.setAttribute &quot;RECEIVER_BRIEF&quot;, Receiver.BRIEF
  else
    node.setAttribute &quot;RECEIVER_BRIEF&quot;, m_Receiver_ID_BRIEF
  end if
  node.setAttribute &quot;PPOWEIGHT&quot;, replace(cstr(PPOWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;WEIGHTEDIZM&quot;, m_WeightEDIZM_ID
  if not (WeightEDIZM is nothing) then 
    node.setAttribute &quot;WEIGHTEDIZM_BRIEF&quot;, WeightEDIZM.BRIEF
  else
    node.setAttribute &quot;WEIGHTEDIZM_BRIEF&quot;, m_WeightEDIZM_ID_BRIEF
  end if
  node.setAttribute &quot;PPOVOL&quot;, replace(cstr(PPOVol),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;VALUEEDIZM&quot;, m_ValueEDIZM_ID
  if not (ValueEDIZM is nothing) then 
    node.setAttribute &quot;VALUEEDIZM_BRIEF&quot;, ValueEDIZM.BRIEF
  else
    node.setAttribute &quot;VALUEEDIZM_BRIEF&quot;, m_ValueEDIZM_ID_BRIEF
  end if
  node.setAttribute &quot;RCVINFO&quot;, RCVInfo
  node.setAttribute &quot;PATHPLANEDDATE&quot;, Cdbl(PathPlanedDate)
  node.setAttribute &quot;RCVWAITDATE&quot;, Cdbl(RcvWaitDate)
  node.setAttribute &quot;TRAINNO&quot;, m_trainNo_ID
  if not (trainNo is nothing) then 
    node.setAttribute &quot;TRAINNO_BRIEF&quot;, trainNo.BRIEF
  else
    node.setAttribute &quot;TRAINNO_BRIEF&quot;, m_trainNo_ID_BRIEF
  end if
  node.setAttribute &quot;VAGNO&quot;, vagNo
  node.setAttribute &quot;SENDDATE&quot;, Cdbl(SendDate)
  node.setAttribute &quot;SUPMONEYDATE&quot;, Cdbl(SupMoneyDate)
  node.setAttribute &quot;PASSFIO&quot;, PassFIO
  node.setAttribute &quot;PASSDATE&quot;, Cdbl(PassDate)
  node.setAttribute &quot;RCVFIO&quot;, RcvFIO
  node.setAttribute &quot;RCVDATE&quot;, Cdbl(RcvDate)
  node.setAttribute &quot;INFORRCVFIO&quot;, InforRcvFIO
  node.setAttribute &quot;INFODATE&quot;, Cdbl(InfoDate)
  node.setAttribute &quot;INFOSENDTYPE&quot;, m_InfoSendType_ID
  if not (InfoSendType is nothing) then 
    node.setAttribute &quot;INFOSENDTYPE_BRIEF&quot;, InfoSendType.BRIEF
  else
    node.setAttribute &quot;INFOSENDTYPE_BRIEF&quot;, m_InfoSendType_ID_BRIEF
  end if
  node.setAttribute &quot;CALCWITHNDS&quot;, CalcWithNDS
  node.setAttribute &quot;THECURRENCY&quot;, m_TheCurrency_ID
  if not (TheCurrency is nothing) then 
    node.setAttribute &quot;THECURRENCY_BRIEF&quot;, TheCurrency.BRIEF
  else
    node.setAttribute &quot;THECURRENCY_BRIEF&quot;, m_TheCurrency_ID_BRIEF
  end if
  node.setAttribute &quot;TRF&quot;, replace(cstr(TRF),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMMNDS&quot;, replace(cstr(SummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMM&quot;, replace(cstr(Summ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPTRF&quot;, replace(cstr(SupTRF),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMM&quot;, replace(cstr(SupSumm),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMMNDS&quot;, replace(cstr(SupSummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
  PEKZ_WLIST.XMLSave node,xdom
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;pekz_path&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;pekz_path&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;pekz_path&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;pekz_path&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
 PEKZ_WLIST.BatchUpdate
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
  PEKZ_WLIST.LoadAll
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
      nid =createguid2() &amp;  item.PEKZ_WLIST.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
      nid =createguid2() &amp;  item.PEKZ_WLIST.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
      nid =createguid2() &amp;  item.PEKZ_WLIST.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
      nid =createguid2() &amp;  item.PEKZ_WLIST.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
      nid =createguid2() &amp;  item.PEKZ_WLIST.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
      nid =createguid2() &amp;  item.PEKZ_WLIST.item(i).id &amp; child 
      tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 case &quot;PEKZ_WLIST&quot; 
    item.PEKZ_WLIST.refresh
    for i=1 to item.PEKZ_WLIST.count
    nid =createguid2()  &amp; item.PEKZ_WLIST.item(i).id 
    tree.nodes.add( key,4,nid,  item.PEKZ_WLIST.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_WLIST" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Весовой список ППО
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_PEKZ_WLADDS as PEKZ_WLADDS_col
private m_sequence as long
private m_theWeight as double
private m_shCode as String
private m_NettoWeight as double
private m_TNBED as String
private m_TheCountry as object
Dim m_TheCountry_ID as string
Dim m_TheCountry_ID_BRIEF as string
private m_ItemPrice as double
private m_VozmCost as double
private m_TheCurrency as object
Dim m_TheCurrency_ID as string
Dim m_TheCurrency_ID_BRIEF as string
private m_IsPodarok as enumBoolean
private m_IsDocument as enumBoolean
private m_IsObrazec as enumBoolean
private m_IsVozvrat as enumBoolean
private m_IsProchee as enumBoolean
private m_ItemDescription as String
private m_QLicense as long
private m_QSertif as long
private m_OrderNum as String
private m_QDocs as long
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PEKZ_WLIST&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_WLIST.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 

'Данные дочернего раздела Надбавки
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса PEKZ_WLADDS_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS_col
' Set variable = me. PEKZ_WLADDS (...параметры...)
public property Get PEKZ_WLADDS (optional byval Refresh as boolean = true) as PEKZ_WLADDS_col
 if m_PEKZ_WLADDS is nothing then
   set  m_PEKZ_WLADDS = new PEKZ_WLADDS_col
   set m_PEKZ_WLADDS.Parent = me
   set m_PEKZ_WLADDS.Application = me.Application
   if Refresh then m_PEKZ_WLADDS.Refresh
 end if
 set  PEKZ_WLADDS = m_PEKZ_WLADDS
end property
' let 
'№

'№
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let sequence(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;sequence&quot;,sequence,newvalue

   m_sequence= newValue
end if
end property

'№
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. sequence
public property Get sequence() as long
 LoadFromDatabase
 AccessTime=Now

   sequence = m_sequence
end property
' let 
'Вес

'Вес
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let theWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;theWeight&quot;,theWeight,newvalue

   m_theWeight= newValue
end if
end property

'Вес
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. theWeight
public property Get theWeight() as double
 LoadFromDatabase
 AccessTime=Now

   theWeight = m_theWeight
end property
' let 
'Штрих Код

'Штрих Код
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let shCode(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;shCode&quot;,shCode,newvalue

   m_shCode= newValue
end if
end property

'Штрих Код
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. shCode
public property Get shCode() as String
 LoadFromDatabase
 AccessTime=Now

   shCode = m_shCode
end property
' let 
'Вес нетто

'Вес нетто
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NettoWeight(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NettoWeight&quot;,NettoWeight,newvalue

   m_NettoWeight= newValue
end if
end property

'Вес нетто
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. NettoWeight
public property Get NettoWeight() as double
 LoadFromDatabase
 AccessTime=Now

   NettoWeight = m_NettoWeight
end property
' let 
'Код ТНВЭД

'Код ТНВЭД
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TNBED(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TNBED&quot;,TNBED,newvalue

   m_TNBED= newValue
end if
end property

'Код ТНВЭД
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. TNBED
public property Get TNBED() as String
 LoadFromDatabase
 AccessTime=Now

   TNBED = m_TNBED
end property
' let 
'Страна происхождения

'Страна происхождения
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheCountry(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheCountry&quot;,TheCountry,newvalue
on error resume next
m_TheCountry_ID=&quot;&quot;
m_TheCountry_ID=newValue.id
'  set   m_TheCountry= newValue
end if
end property

'Страна происхождения
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheCountry
public property Get TheCountry() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheCountry as object
if  m_TheCountry_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheCountry=Application.FindRowObject(&quot;ENTDIC_COUNTRY&quot;,m_TheCountry_ID)
  if tmp_TheCountry is nothing then
    m_TheCountry_ID_BRIEF = &quot;&quot; 
  else
    m_TheCountry_ID_BRIEF = tmp_TheCountry.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_COUNTRY&quot; &amp; m_TheCountry_ID, tmp_TheCountry
  set TheCountry=tmp_TheCountry
  exit property
end if
  '  set TheCountry = m_TheCountry
end property
' let 
'Стоимость посылки

'Стоимость посылки
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ItemPrice(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ItemPrice&quot;,ItemPrice,newvalue

   m_ItemPrice= newValue
end if
end property

'Стоимость посылки
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. ItemPrice
public property Get ItemPrice() as double
 LoadFromDatabase
 AccessTime=Now

   ItemPrice = m_ItemPrice
end property
' let 
'Стоимость возмщения

'Стоимость возмщения
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VozmCost(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VozmCost&quot;,VozmCost,newvalue

   m_VozmCost= newValue
end if
end property

'Стоимость возмщения
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. VozmCost
public property Get VozmCost() as double
 LoadFromDatabase
 AccessTime=Now

   VozmCost = m_VozmCost
end property
' let 
'Валюта стоимости

'Валюта стоимости
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheCurrency(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheCurrency&quot;,TheCurrency,newvalue
on error resume next
m_TheCurrency_ID=&quot;&quot;
m_TheCurrency_ID=newValue.id
'  set   m_TheCurrency= newValue
end if
end property

'Валюта стоимости
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheCurrency
public property Get TheCurrency() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheCurrency as object
if  m_TheCurrency_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheCurrency=Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,m_TheCurrency_ID)
  if tmp_TheCurrency is nothing then
    m_TheCurrency_ID_BRIEF = &quot;&quot; 
  else
    m_TheCurrency_ID_BRIEF = tmp_TheCurrency.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_CURRENCY&quot; &amp; m_TheCurrency_ID, tmp_TheCurrency
  set TheCurrency=tmp_TheCurrency
  exit property
end if
  '  set TheCurrency = m_TheCurrency
end property
' let 
'Подарок

'Подарок
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsPodarok(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsPodarok&quot;,IsPodarok,newvalue

   m_IsPodarok= newValue
end if
end property

'Подарок
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsPodarok
public property Get IsPodarok() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsPodarok = m_IsPodarok
end property
' let 
'Документ

'Документ
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsDocument(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsDocument&quot;,IsDocument,newvalue

   m_IsDocument= newValue
end if
end property

'Документ
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsDocument
public property Get IsDocument() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsDocument = m_IsDocument
end property
' let 
'Коммерческий образец

'Коммерческий образец
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsObrazec(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsObrazec&quot;,IsObrazec,newvalue

   m_IsObrazec= newValue
end if
end property

'Коммерческий образец
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsObrazec
public property Get IsObrazec() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsObrazec = m_IsObrazec
end property
' let 
'Возврат товара

'Возврат товара
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsVozvrat(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsVozvrat&quot;,IsVozvrat,newvalue

   m_IsVozvrat= newValue
end if
end property

'Возврат товара
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsVozvrat
public property Get IsVozvrat() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsVozvrat = m_IsVozvrat
end property
' let 
'Прочее отправление

'Прочее отправление
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsProchee(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsProchee&quot;,IsProchee,newvalue

   m_IsProchee= newValue
end if
end property

'Прочее отправление
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsProchee
public property Get IsProchee() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsProchee = m_IsProchee
end property
' let 
'Описание отправления

'Описание отправления
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ItemDescription(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ItemDescription&quot;,ItemDescription,newvalue

   m_ItemDescription= newValue
end if
end property

'Описание отправления
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. ItemDescription
public property Get ItemDescription() as String
 LoadFromDatabase
 AccessTime=Now

   ItemDescription = m_ItemDescription
end property
' let 
'Количество лицензий

'Количество лицензий
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QLicense(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QLicense&quot;,QLicense,newvalue

   m_QLicense= newValue
end if
end property

'Количество лицензий
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. QLicense
public property Get QLicense() as long
 LoadFromDatabase
 AccessTime=Now

   QLicense = m_QLicense
end property
' let 
'Количество сертификатов

'Количество сертификатов
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QSertif(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QSertif&quot;,QSertif,newvalue

   m_QSertif= newValue
end if
end property

'Количество сертификатов
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. QSertif
public property Get QSertif() as long
 LoadFromDatabase
 AccessTime=Now

   QSertif = m_QSertif
end property
' let 
'№ счета

'№ счета
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OrderNum(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OrderNum&quot;,OrderNum,newvalue

   m_OrderNum= newValue
end if
end property

'№ счета
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. OrderNum
public property Get OrderNum() as String
 LoadFromDatabase
 AccessTime=Now

   OrderNum = m_OrderNum
end property
' let 
'Количество сопроводительных документов

'Количество сопроводительных документов
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QDocs(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QDocs&quot;,QDocs,newvalue

   m_QDocs= newValue
end if
end property

'Количество сопроводительных документов
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. QDocs
public property Get QDocs() as long
 LoadFromDatabase
 AccessTime=Now

   QDocs = m_QDocs
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;sequence&quot;,m_sequence)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;theWeight&quot;,m_theWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;shCode&quot;,m_shCode)
nvi.ValueSize = 14
  set nvi=nv.Add( &quot;NettoWeight&quot;,m_NettoWeight)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TNBED&quot;,m_TNBED)
nvi.ValueSize = 40
 ' Reference to ENTDIC_COUNTRY
    if m_TheCountry_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheCountry&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheCountry&quot;,m_TheCountry_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;ItemPrice&quot;,m_ItemPrice)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;VozmCost&quot;,m_VozmCost)
nvi.ValueType =  adDouble 
 ' Reference to ENTDIC_CURRENCY
    if m_TheCurrency_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheCurrency&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheCurrency&quot;,m_TheCurrency_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;IsPodarok&quot;,m_IsPodarok)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IsDocument&quot;,m_IsDocument)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IsObrazec&quot;,m_IsObrazec)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IsVozvrat&quot;,m_IsVozvrat)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IsProchee&quot;,m_IsProchee)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;ItemDescription&quot;,m_ItemDescription)
nvi.ValueSize = 60
  set nvi=nv.Add( &quot;QLicense&quot;,m_QLicense)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;QSertif&quot;,m_QSertif)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;OrderNum&quot;,m_OrderNum)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;QDocs&quot;,m_QDocs)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; sequence &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_sequence=nv.item( &quot;sequence&quot;).Value
m_theWeight=nv.item( &quot;theWeight&quot;).Value
m_shCode=nv.item( &quot;shCode&quot;).Value
m_NettoWeight=nv.item( &quot;NettoWeight&quot;).Value
m_TNBED=nv.item( &quot;TNBED&quot;).Value
  m_TheCountry_ID=nv.item( &quot;TheCountry&quot;).Value
m_ItemPrice=nv.item( &quot;ItemPrice&quot;).Value
m_VozmCost=nv.item( &quot;VozmCost&quot;).Value
  m_TheCurrency_ID=nv.item( &quot;TheCurrency&quot;).Value
m_IsPodarok=nv.item( &quot;IsPodarok&quot;).Value
m_IsDocument=nv.item( &quot;IsDocument&quot;).Value
m_IsObrazec=nv.item( &quot;IsObrazec&quot;).Value
m_IsVozvrat=nv.item( &quot;IsVozvrat&quot;).Value
m_IsProchee=nv.item( &quot;IsProchee&quot;).Value
m_ItemDescription=nv.item( &quot;ItemDescription&quot;).Value
m_QLicense=nv.item( &quot;QLicense&quot;).Value
m_QSertif=nv.item( &quot;QSertif&quot;).Value
m_OrderNum=nv.item( &quot;OrderNum&quot;).Value
m_QDocs=nv.item( &quot;QDocs&quot;).Value
else

m_sequence=nv.fields( &quot;sequence&quot;).Value
m_theWeight=nv.fields( &quot;theWeight&quot;).Value
m_shCode=nv.fields( &quot;shCode&quot;).Value
m_NettoWeight=nv.fields( &quot;NettoWeight&quot;).Value
m_TNBED=nv.fields( &quot;TNBED&quot;).Value
  m_TheCountry_ID=nv.fields( &quot;TheCountry&quot;).Value
m_ItemPrice=nv.fields( &quot;ItemPrice&quot;).Value
m_VozmCost=nv.fields( &quot;VozmCost&quot;).Value
  m_TheCurrency_ID=nv.fields( &quot;TheCurrency&quot;).Value
m_IsPodarok=nv.fields( &quot;IsPodarok&quot;).Value
m_IsDocument=nv.fields( &quot;IsDocument&quot;).Value
m_IsObrazec=nv.fields( &quot;IsObrazec&quot;).Value
m_IsVozvrat=nv.fields( &quot;IsVozvrat&quot;).Value
m_IsProchee=nv.fields( &quot;IsProchee&quot;).Value
m_ItemDescription=nv.fields( &quot;ItemDescription&quot;).Value
m_QLicense=nv.fields( &quot;QLicense&quot;).Value
m_QSertif=nv.fields( &quot;QSertif&quot;).Value
m_OrderNum=nv.fields( &quot;OrderNum&quot;).Value
m_QDocs=nv.fields( &quot;QDocs&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PEKZ_WLIST
   set o = new PEKZ_WLIST
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PEKZ_WLIST.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PEKZ_WLIST.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PEKZ_WLIST&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PEKZ_WLIST.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PEKZ_WLIST&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PEKZ_WLIST.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

if not m_PEKZ_WLADDS is nothing then 
  m_PEKZ_WLADDS.CloseClass 
  set m_PEKZ_WLADDS = nothing 
end if
 m_TheCountry_ID=&quot;&quot;
 set m_TheCountry= nothing
 m_TheCurrency_ID=&quot;&quot;
 set m_TheCurrency= nothing
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_WLIST.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  PEKZ_WLADDS.FindObject(StrID,InstID)
 end if
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

PEKZ_WLADDS.Compact
end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  sequence=node.Attributes.getNamedItem(&quot;SEQUENCE&quot;).nodeValue
  theWeight=val(Replace(node.Attributes.getNamedItem(&quot;THEWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  shCode=Replace(node.Attributes.getNamedItem(&quot;SHCODE&quot;).nodeValue,vbLf,vbcrlf)
  NettoWeight=val(Replace(node.Attributes.getNamedItem(&quot;NETTOWEIGHT&quot;).nodeValue,vbLf,vbcrlf))
  TNBED=Replace(node.Attributes.getNamedItem(&quot;TNBED&quot;).nodeValue,vbLf,vbcrlf)
  set TheCountry=nothing
  m_TheCountry_ID=node.Attributes.getNamedItem(&quot;THECOUNTRY&quot;).nodeValue
  m_TheCountry_ID_BRIEF=node.Attributes.getNamedItem(&quot;THECOUNTRY_BRIEF&quot;).nodeValue
  ItemPrice=val(Replace(node.Attributes.getNamedItem(&quot;ITEMPRICE&quot;).nodeValue,vbLf,vbcrlf))
  VozmCost=val(Replace(node.Attributes.getNamedItem(&quot;VOZMCOST&quot;).nodeValue,vbLf,vbcrlf))
  set TheCurrency=nothing
  m_TheCurrency_ID=node.Attributes.getNamedItem(&quot;THECURRENCY&quot;).nodeValue
  m_TheCurrency_ID_BRIEF=node.Attributes.getNamedItem(&quot;THECURRENCY_BRIEF&quot;).nodeValue
  IsPodarok=node.Attributes.getNamedItem(&quot;ISPODAROK&quot;).nodeValue
  IsDocument=node.Attributes.getNamedItem(&quot;ISDOCUMENT&quot;).nodeValue
  IsObrazec=node.Attributes.getNamedItem(&quot;ISOBRAZEC&quot;).nodeValue
  IsVozvrat=node.Attributes.getNamedItem(&quot;ISVOZVRAT&quot;).nodeValue
  IsProchee=node.Attributes.getNamedItem(&quot;ISPROCHEE&quot;).nodeValue
  ItemDescription=Replace(node.Attributes.getNamedItem(&quot;ITEMDESCRIPTION&quot;).nodeValue,vbLf,vbcrlf)
  QLicense=node.Attributes.getNamedItem(&quot;QLICENSE&quot;).nodeValue
  QSertif=node.Attributes.getNamedItem(&quot;QSERTIF&quot;).nodeValue
  OrderNum=Replace(node.Attributes.getNamedItem(&quot;ORDERNUM&quot;).nodeValue,vbLf,vbcrlf)
  QDocs=node.Attributes.getNamedItem(&quot;QDOCS&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  Set e_list = node.selectNodes(&quot;PEKZ_WLADDS_COL&quot;)
  PEKZ_WLADDS.XMLLoad e_list, LoadMode
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SEQUENCE&quot;, sequence
  node.setAttribute &quot;THEWEIGHT&quot;, replace(cstr(theWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SHCODE&quot;, shCode
  node.setAttribute &quot;NETTOWEIGHT&quot;, replace(cstr(NettoWeight),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;TNBED&quot;, TNBED
  node.setAttribute &quot;THECOUNTRY&quot;, m_TheCountry_ID
  if not (TheCountry is nothing) then 
    node.setAttribute &quot;THECOUNTRY_BRIEF&quot;, TheCountry.BRIEF
  else
    node.setAttribute &quot;THECOUNTRY_BRIEF&quot;, m_TheCountry_ID_BRIEF
  end if
  node.setAttribute &quot;ITEMPRICE&quot;, replace(cstr(ItemPrice),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;VOZMCOST&quot;, replace(cstr(VozmCost),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;THECURRENCY&quot;, m_TheCurrency_ID
  if not (TheCurrency is nothing) then 
    node.setAttribute &quot;THECURRENCY_BRIEF&quot;, TheCurrency.BRIEF
  else
    node.setAttribute &quot;THECURRENCY_BRIEF&quot;, m_TheCurrency_ID_BRIEF
  end if
  node.setAttribute &quot;ISPODAROK&quot;, IsPodarok
  node.setAttribute &quot;ISDOCUMENT&quot;, IsDocument
  node.setAttribute &quot;ISOBRAZEC&quot;, IsObrazec
  node.setAttribute &quot;ISVOZVRAT&quot;, IsVozvrat
  node.setAttribute &quot;ISPROCHEE&quot;, IsProchee
  node.setAttribute &quot;ITEMDESCRIPTION&quot;, ItemDescription
  node.setAttribute &quot;QLICENSE&quot;, QLicense
  node.setAttribute &quot;QSERTIF&quot;, QSertif
  node.setAttribute &quot;ORDERNUM&quot;, OrderNum
  node.setAttribute &quot;QDOCS&quot;, QDocs
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
  PEKZ_WLADDS.XMLSave node,xdom
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_WLIST&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_WLIST&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_WLIST&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_WLIST&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
 PEKZ_WLADDS.BatchUpdate
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
  PEKZ_WLADDS.LoadAll
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_WLADDS" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Надбавки для посылки
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheAdds as object
Dim m_TheAdds_ID as string
Dim m_TheAdds_ID_BRIEF as string
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PEKZ_WLADDS&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_WLADDS.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Надбавка

'Надбавка
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheAdds(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheAdds&quot;,TheAdds,newvalue
on error resume next
m_TheAdds_ID=&quot;&quot;
m_TheAdds_ID=newValue.id
'  set   m_TheAdds= newValue
end if
end property

'Надбавка
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheAdds
public property Get TheAdds() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheAdds as object
if  m_TheAdds_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheAdds=Application.FindRowObject(&quot;PEKD_ADDS&quot;,m_TheAdds_ID)
  if tmp_TheAdds is nothing then
    m_TheAdds_ID_BRIEF = &quot;&quot; 
  else
    m_TheAdds_ID_BRIEF = tmp_TheAdds.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_ADDS&quot; &amp; m_TheAdds_ID, tmp_TheAdds
  set TheAdds=tmp_TheAdds
  exit property
end if
  '  set TheAdds = m_TheAdds
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to PEKD_ADDS
    if m_TheAdds_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheAdds&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheAdds&quot;,m_TheAdds_ID)
    end if 
    nvi.ORACLE_GUID 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheAdds is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheAdds_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheAdds.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheAdds_ID=nv.item( &quot;TheAdds&quot;).Value
else

  m_TheAdds_ID=nv.fields( &quot;TheAdds&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PEKZ_WLADDS
   set o = new PEKZ_WLADDS
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PEKZ_WLADDS.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PEKZ_WLADDS.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PEKZ_WLADDS&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PEKZ_WLADDS.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PEKZ_WLADDS&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PEKZ_WLADDS.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheAdds_ID=&quot;&quot;
 set m_TheAdds= nothing
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_WLADDS.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheAdds=nothing
  m_TheAdds_ID=node.Attributes.getNamedItem(&quot;THEADDS&quot;).nodeValue
  m_TheAdds_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEADDS_BRIEF&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THEADDS&quot;, m_TheAdds_ID
  if not (TheAdds is nothing) then 
    node.setAttribute &quot;THEADDS_BRIEF&quot;, TheAdds.BRIEF
  else
    node.setAttribute &quot;THEADDS_BRIEF&quot;, m_TheAdds_ID_BRIEF
  end if
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_WLADDS&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_WLADDS&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_WLADDS&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_WLADDS&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="pekz_path_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Маршрут доставки
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;pekz_path&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;pekz_path.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as  pekz_path
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  pekz_path
 dim LID as  string
 dim o as  pekz_path
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  pekz_path
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as pekz_path
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as pekz_path
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as pekz_path
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as pekz_path
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as pekz_path
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as pekz_path
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_path
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_path
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as pekz_path
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  pekz_path
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;pekz_path.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As pekz_path
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As pekz_path
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!pekz_pathID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as pekz_path
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_PATH_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_PATH&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as pekz_path
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_PATH&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;№&quot;, 0, 0, &quot;sequence&quot;).SortType =2
  YGrid.Columns.Add(&quot;Транзит&quot;, 0, 0, &quot;IsTranzit&quot;).SortType =1
  YGrid.Columns.Add(&quot;Филиал&quot;, 0, 0, &quot;PathFilial&quot;).SortType =1
  YGrid.Columns.Add(&quot;Поставщик&quot;, 0, 0, &quot;TransSupplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Направление&quot;, 0, 0, &quot;TheDirection&quot;).SortType =1
  YGrid.Columns.Add(&quot;Кол-во ПО&quot;, 0, 0, &quot;PPONum&quot;).SortType =2
  YGrid.Columns.Add(&quot;Станция назначения&quot;, 0, 0, &quot;DestStation&quot;).SortType =1
  YGrid.Columns.Add(&quot;Характер груза&quot;, 0, 0, &quot;PPODescription&quot;).SortType =1
  YGrid.Columns.Add(&quot;Получатель&quot;, 0, 0, &quot;Receiver&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вес ПО&quot;, 0, 0, &quot;PPOWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Ед. изм. веса&quot;, 0, 0, &quot;WeightEDIZM&quot;).SortType =1
  YGrid.Columns.Add(&quot;Объем ПО&quot;, 0, 0, &quot;PPOVol&quot;).SortType =2
  YGrid.Columns.Add(&quot;Ед.изм. объема&quot;, 0, 0, &quot;ValueEDIZM&quot;).SortType =1
  YGrid.Columns.Add(&quot;Данные получателя&quot;, 0, 0, &quot;RCVInfo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата предполагаемой отправки&quot;, 0, 0, &quot;PathPlanedDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Ориентировочная дата получения&quot;, 0, 0, &quot;RcvWaitDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Поезд&quot;, 0, 0, &quot;trainNo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вагон №&quot;, 0, 0, &quot;vagNo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата отправки&quot;, 0, 0, &quot;SendDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Cписание денежных средств поставщиком&quot;, 0, 0, &quot;SupMoneyDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;ФИО Кладовщика&quot;, 0, 0, &quot;PassFIO&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата передачи груза в вагон&quot;, 0, 0, &quot;PassDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;ФИО ВПН&quot;, 0, 0, &quot;RcvFIO&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата получения груза в ПО&quot;, 0, 0, &quot;RcvDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Кому передана информация&quot;, 0, 0, &quot;InforRcvFIO&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата передачи информации&quot;, 0, 0, &quot;InfoDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Способ передачи информации&quot;, 0, 0, &quot;InfoSendType&quot;).SortType =1
  YGrid.Columns.Add(&quot;Расчет с НДС&quot;, 0, 0, &quot;CalcWithNDS&quot;).SortType =1
  YGrid.Columns.Add(&quot;Валюта&quot;, 0, 0, &quot;TheCurrency&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тариф&quot;, 0, 0, &quot;TRF&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма с НДС&quot;, 0, 0, &quot;SummNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма без НДС&quot;, 0, 0, &quot;Summ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тариф поставщика&quot;, 0, 0, &quot;SupTRF&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику без НДС&quot;, 0, 0, &quot;SupSumm&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику с НДС&quot;, 0, 0, &quot;SupSummNDS&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as pekz_path
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.sequence, vbCrLf, &quot; &quot;), 255)
   if obj.IsTranzit =-1 then
     Values.Value(2) = &quot;Да&quot;
   end if
   if obj.IsTranzit =0 then
     Values.Value(2) = &quot;Нет&quot;
   end if
   if obj.PathFilial is nothing then
    Values.Value(3) = &quot;Не задано&quot;
   else 
    Values.Value(3) = Left(Replace(obj.PathFilial.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.TransSupplier is nothing then
    Values.Value(4) = &quot;Не задано&quot;
   else 
    Values.Value(4) = Left(Replace(obj.TransSupplier.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.TheDirection is nothing then
    Values.Value(5) = &quot;Не задано&quot;
   else 
    Values.Value(5) = Left(Replace(obj.TheDirection.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(6) = Left(Replace(obj.PPONum, vbCrLf, &quot; &quot;), 255)
   if obj.DestStation is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.DestStation.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.PPODescription is nothing then
    Values.Value(8) = &quot;Не задано&quot;
   else 
    Values.Value(8) = Left(Replace(obj.PPODescription.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.Receiver is nothing then
    Values.Value(9) = &quot;Не задано&quot;
   else 
    Values.Value(9) = Left(Replace(obj.Receiver.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(10) = Left(Replace(obj.PPOWeight, vbCrLf, &quot; &quot;), 255)
   if obj.WeightEDIZM is nothing then
    Values.Value(11) = &quot;Не задано&quot;
   else 
    Values.Value(11) = Left(Replace(obj.WeightEDIZM.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(12) = Left(Replace(obj.PPOVol, vbCrLf, &quot; &quot;), 255)
   if obj.ValueEDIZM is nothing then
    Values.Value(13) = &quot;Не задано&quot;
   else 
    Values.Value(13) = Left(Replace(obj.ValueEDIZM.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(14) = Left(Replace(obj.RCVInfo, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.PathPlanedDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.RcvWaitDate, vbCrLf, &quot; &quot;), 255)
   if obj.trainNo is nothing then
    Values.Value(17) = &quot;Не задано&quot;
   else 
    Values.Value(17) = Left(Replace(obj.trainNo.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(18) = Left(Replace(obj.vagNo, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.SendDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.SupMoneyDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.PassFIO, vbCrLf, &quot; &quot;), 255)
    Values.Value(22) = Left(Replace(obj.PassDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(23) = Left(Replace(obj.RcvFIO, vbCrLf, &quot; &quot;), 255)
    Values.Value(24) = Left(Replace(obj.RcvDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(25) = Left(Replace(obj.InforRcvFIO, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.InfoDate, vbCrLf, &quot; &quot;), 255)
   if obj.InfoSendType is nothing then
    Values.Value(27) = &quot;Не задано&quot;
   else 
    Values.Value(27) = Left(Replace(obj.InfoSendType.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.CalcWithNDS =-1 then
     Values.Value(28) = &quot;Да&quot;
   end if
   if obj.CalcWithNDS =0 then
     Values.Value(28) = &quot;Нет&quot;
   end if
   if obj.TheCurrency is nothing then
    Values.Value(29) = &quot;Не задано&quot;
   else 
    Values.Value(29) = Left(Replace(obj.TheCurrency.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(30) = Left(Replace(obj.TRF, vbCrLf, &quot; &quot;), 255)
    Values.Value(31) = Left(Replace(obj.SummNDS, vbCrLf, &quot; &quot;), 255)
    Values.Value(32) = Left(Replace(obj.Summ, vbCrLf, &quot; &quot;), 255)
    Values.Value(33) = Left(Replace(obj.SupTRF, vbCrLf, &quot; &quot;), 255)
    Values.Value(34) = Left(Replace(obj.SupSumm, vbCrLf, &quot; &quot;), 255)
    Values.Value(35) = Left(Replace(obj.SupSummNDS, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;pekz_path&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_WLIST_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Весовой список ППО
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PEKZ_WLIST&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_WLIST.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PEKZ_WLIST
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PEKZ_WLIST
 dim LID as  string
 dim o as  PEKZ_WLIST
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PEKZ_WLIST
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PEKZ_WLIST
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PEKZ_WLIST
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PEKZ_WLIST
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PEKZ_WLIST
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PEKZ_WLIST
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PEKZ_WLIST
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLIST
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLIST
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PEKZ_WLIST
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PEKZ_WLIST
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_WLIST.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PEKZ_WLIST
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PEKZ_WLIST
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PEKZ_WLISTID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PEKZ_WLIST
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_WLIST_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_WLIST&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PEKZ_WLIST
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_WLIST&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;pekz_path&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;pekz_path&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;pekz_path&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;pekz_path&quot;,parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;№&quot;, 0, 0, &quot;sequence&quot;).SortType =2
  YGrid.Columns.Add(&quot;Вес&quot;, 0, 0, &quot;theWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Штрих Код&quot;, 0, 0, &quot;shCode&quot;).SortType =1
  YGrid.Columns.Add(&quot;Вес нетто&quot;, 0, 0, &quot;NettoWeight&quot;).SortType =2
  YGrid.Columns.Add(&quot;Код ТНВЭД&quot;, 0, 0, &quot;TNBED&quot;).SortType =1
  YGrid.Columns.Add(&quot;Страна происхождения&quot;, 0, 0, &quot;TheCountry&quot;).SortType =1
  YGrid.Columns.Add(&quot;Стоимость посылки&quot;, 0, 0, &quot;ItemPrice&quot;).SortType =2
  YGrid.Columns.Add(&quot;Стоимость возмщения&quot;, 0, 0, &quot;VozmCost&quot;).SortType =2
  YGrid.Columns.Add(&quot;Валюта стоимости&quot;, 0, 0, &quot;TheCurrency&quot;).SortType =1
  YGrid.Columns.Add(&quot;Подарок&quot;, 0, 0, &quot;IsPodarok&quot;).SortType =1
  YGrid.Columns.Add(&quot;Документ&quot;, 0, 0, &quot;IsDocument&quot;).SortType =1
  YGrid.Columns.Add(&quot;Коммерческий образец&quot;, 0, 0, &quot;IsObrazec&quot;).SortType =1
  YGrid.Columns.Add(&quot;Возврат товара&quot;, 0, 0, &quot;IsVozvrat&quot;).SortType =1
  YGrid.Columns.Add(&quot;Прочее отправление&quot;, 0, 0, &quot;IsProchee&quot;).SortType =1
  YGrid.Columns.Add(&quot;Описание отправления&quot;, 0, 0, &quot;ItemDescription&quot;).SortType =1
  YGrid.Columns.Add(&quot;Количество лицензий&quot;, 0, 0, &quot;QLicense&quot;).SortType =2
  YGrid.Columns.Add(&quot;Количество сертификатов&quot;, 0, 0, &quot;QSertif&quot;).SortType =2
  YGrid.Columns.Add(&quot;№ счета&quot;, 0, 0, &quot;OrderNum&quot;).SortType =1
  YGrid.Columns.Add(&quot;Количество сопроводительных документов&quot;, 0, 0, &quot;QDocs&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PEKZ_WLIST
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.sequence, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.theWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.shCode, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.NettoWeight, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.TNBED, vbCrLf, &quot; &quot;), 255)
   if obj.TheCountry is nothing then
    Values.Value(6) = &quot;Не задано&quot;
   else 
    Values.Value(6) = Left(Replace(obj.TheCountry.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(7) = Left(Replace(obj.ItemPrice, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.VozmCost, vbCrLf, &quot; &quot;), 255)
   if obj.TheCurrency is nothing then
    Values.Value(9) = &quot;Не задано&quot;
   else 
    Values.Value(9) = Left(Replace(obj.TheCurrency.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.IsPodarok =-1 then
     Values.Value(10) = &quot;Да&quot;
   end if
   if obj.IsPodarok =0 then
     Values.Value(10) = &quot;Нет&quot;
   end if
   if obj.IsDocument =-1 then
     Values.Value(11) = &quot;Да&quot;
   end if
   if obj.IsDocument =0 then
     Values.Value(11) = &quot;Нет&quot;
   end if
   if obj.IsObrazec =-1 then
     Values.Value(12) = &quot;Да&quot;
   end if
   if obj.IsObrazec =0 then
     Values.Value(12) = &quot;Нет&quot;
   end if
   if obj.IsVozvrat =-1 then
     Values.Value(13) = &quot;Да&quot;
   end if
   if obj.IsVozvrat =0 then
     Values.Value(13) = &quot;Нет&quot;
   end if
   if obj.IsProchee =-1 then
     Values.Value(14) = &quot;Да&quot;
   end if
   if obj.IsProchee =0 then
     Values.Value(14) = &quot;Нет&quot;
   end if
    Values.Value(15) = Left(Replace(obj.ItemDescription, vbCrLf, &quot; &quot;), 255)
    Values.Value(16) = Left(Replace(obj.QLicense, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.QSertif, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.OrderNum, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.QDocs, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PEKZ_WLIST&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_WLADDS_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Надбавки для посылки
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PEKZ_WLADDS&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_WLADDS.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PEKZ_WLADDS
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PEKZ_WLADDS
 dim LID as  string
 dim o as  PEKZ_WLADDS
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PEKZ_WLADDS
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PEKZ_WLADDS
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PEKZ_WLADDS
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PEKZ_WLADDS
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PEKZ_WLADDS
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PEKZ_WLADDS
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PEKZ_WLADDS
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_WLADDS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_WLADDS
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PEKZ_WLADDS
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PEKZ_WLADDS
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_WLADDS.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PEKZ_WLADDS
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PEKZ_WLADDS
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PEKZ_WLADDSID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PEKZ_WLADDS
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_WLADDS_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_WLADDS&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PEKZ_WLADDS
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_WLADDS&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_WLIST&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_WLIST&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_WLIST&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_WLIST&quot;,parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Надбавка&quot;, 0, 0, &quot;TheAdds&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PEKZ_WLADDS
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheAdds is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheAdds.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PEKZ_WLADDS&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_DOCS" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Почтовые документы
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheDoc as object
Dim m_TheDoc_ID as string
Dim m_TheDoc_ID_BRIEF as string
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PEKZ_DOCS&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_DOCS.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Документ

'Документ
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheDoc(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDoc&quot;,TheDoc,newvalue
on error resume next
m_TheDoc_ID=&quot;&quot;
m_TheDoc_ID=newValue.id
' set   m_TheDoc= newValue
end if
end property

'Документ
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheDoc
public property Get TheDoc() as object
 LoadFromDatabase
 AccessTime=Now
if  m_TheDoc_ID&lt;&gt;&quot;&quot; then 
  set TheDoc=application.Manager.GetInstanceObject(right(m_TheDoc_ID,38))
 EXIT PROPERTY
end if
  ' set TheDoc = m_TheDoc
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to object
    if m_TheDoc_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheDoc&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheDoc&quot;,m_TheDoc_ID)
    end if 
    nvi.oracle_guid 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheDoc is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheDoc_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheDoc.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheDoc_ID=nv.item( &quot;TheDoc&quot;).Value
else

  m_TheDoc_ID=nv.fields( &quot;TheDoc&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PEKZ_DOCS
   set o = new PEKZ_DOCS
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PEKZ_DOCS.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PEKZ_DOCS.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PEKZ_DOCS&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PEKZ_DOCS.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PEKZ_DOCS&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PEKZ_DOCS.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheDoc_ID=&quot;&quot;
 set m_TheDoc= nothing
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_DOCS.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheDoc=nothing
  m_TheDoc_ID=node.Attributes.getNamedItem(&quot;THEDOC&quot;).nodeValue
  m_TheDoc_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEDOC_BRIEF&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THEDOC&quot;, m_TheDoc_ID
  if not (TheDoc is nothing) then 
    node.setAttribute &quot;THEDOC_BRIEF&quot;, TheDoc.BRIEF
  else
    node.setAttribute &quot;THEDOC_BRIEF&quot;, m_TheDoc_ID_BRIEF
  end if
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_DOCS&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_DOCS&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_DOCS&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_DOCS&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_DOCS_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Почтовые документы
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PEKZ_DOCS&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_DOCS.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PEKZ_DOCS
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PEKZ_DOCS
 dim LID as  string
 dim o as  PEKZ_DOCS
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PEKZ_DOCS
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PEKZ_DOCS
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PEKZ_DOCS
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PEKZ_DOCS
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PEKZ_DOCS
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PEKZ_DOCS
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PEKZ_DOCS
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_DOCS
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_DOCS
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PEKZ_DOCS
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PEKZ_DOCS
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_DOCS.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PEKZ_DOCS
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PEKZ_DOCS
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PEKZ_DOCSID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PEKZ_DOCS
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_DOCS_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_DOCS&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PEKZ_DOCS
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_DOCS&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Документ&quot;, 0, 0, &quot;TheDoc&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PEKZ_DOCS
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheDoc is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheDoc.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PEKZ_DOCS&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_1CLINK" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Раздел для хранения информации о привязки к 1С на уровне филиала
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheDept as object
Dim m_TheDept_ID as string
Dim m_TheDept_ID_BRIEF as string
private m_Code1C as String
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PEKZ_1CLINK&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_1CLINK.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Филиал

'Филиал
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheDept(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDept&quot;,TheDept,newvalue
on error resume next
m_TheDept_ID=&quot;&quot;
m_TheDept_ID=newValue.id
'  set   m_TheDept= newValue
end if
end property

'Филиал
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheDept
public property Get TheDept() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheDept as object
if  m_TheDept_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheDept=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_TheDept_ID)
  if tmp_TheDept is nothing then
    m_TheDept_ID_BRIEF = &quot;&quot; 
  else
    m_TheDept_ID_BRIEF = tmp_TheDept.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_TheDept_ID, tmp_TheDept
  set TheDept=tmp_TheDept
  exit property
end if
  '  set TheDept = m_TheDept
end property
' let 
'Код1С

'Код1С
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code1C(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code1C&quot;,Code1C,newvalue

   m_Code1C= newValue
end if
end property

'Код1С
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code1C
public property Get Code1C() as String
 LoadFromDatabase
 AccessTime=Now

   Code1C = m_Code1C
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to PEKD_DEPT
    if m_TheDept_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheDept&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheDept&quot;,m_TheDept_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Code1C&quot;,m_Code1C)
nvi.ValueSize = 40
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  TheDept is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_TheDept_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; TheDept.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheDept_ID=nv.item( &quot;TheDept&quot;).Value
m_Code1C=nv.item( &quot;Code1C&quot;).Value
else

  m_TheDept_ID=nv.fields( &quot;TheDept&quot;).Value
m_Code1C=nv.fields( &quot;Code1C&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PEKZ_1CLINK
   set o = new PEKZ_1CLINK
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PEKZ_1CLINK.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PEKZ_1CLINK.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PEKZ_1CLINK&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PEKZ_1CLINK.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PEKZ_1CLINK&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PEKZ_1CLINK.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheDept_ID=&quot;&quot;
 set m_TheDept= nothing
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_1CLINK.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheDept=nothing
  m_TheDept_ID=node.Attributes.getNamedItem(&quot;THEDEPT&quot;).nodeValue
  m_TheDept_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEDEPT_BRIEF&quot;).nodeValue
  Code1C=Replace(node.Attributes.getNamedItem(&quot;CODE1C&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THEDEPT&quot;, m_TheDept_ID
  if not (TheDept is nothing) then 
    node.setAttribute &quot;THEDEPT_BRIEF&quot;, TheDept.BRIEF
  else
    node.setAttribute &quot;THEDEPT_BRIEF&quot;, m_TheDept_ID_BRIEF
  end if
  node.setAttribute &quot;CODE1C&quot;, Code1C
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_1CLINK&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_1CLINK&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_1CLINK&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_1CLINK&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_1CLINK_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Раздел для хранения информации о привязки к 1С на уровне филиала
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PEKZ_1CLINK&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_1CLINK.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PEKZ_1CLINK
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PEKZ_1CLINK
 dim LID as  string
 dim o as  PEKZ_1CLINK
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PEKZ_1CLINK
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PEKZ_1CLINK
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PEKZ_1CLINK
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PEKZ_1CLINK
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PEKZ_1CLINK
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PEKZ_1CLINK
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PEKZ_1CLINK
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_1CLINK
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_1CLINK
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PEKZ_1CLINK
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PEKZ_1CLINK
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_1CLINK.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PEKZ_1CLINK
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PEKZ_1CLINK
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PEKZ_1CLINKID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PEKZ_1CLINK
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_1CLINK_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_1CLINK&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PEKZ_1CLINK
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_1CLINK&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Филиал&quot;, 0, 0, &quot;TheDept&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код1С&quot;, 0, 0, &quot;Code1C&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PEKZ_1CLINK
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheDept is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheDept.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(2) = Left(Replace(obj.Code1C, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PEKZ_1CLINK&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="pekz_def" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Раздел описывает основные данные о заявке.
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_QueryDate as DATE
private m_Fillial as object
Dim m_Fillial_ID as string
Dim m_Fillial_ID_BRIEF as string
private m_PEKCode as String
private m_PlatType as enumPlatType
private m_TRType as object
Dim m_TRType_ID as string
Dim m_TRType_ID_BRIEF as string
private m_PlanedDate as DATE
private m_ClientFrom as object
Dim m_ClientFrom_ID as string
Dim m_ClientFrom_ID_BRIEF as string
private m_ClientTo as object
Dim m_ClientTo_ID as string
Dim m_ClientTo_ID_BRIEF as string
private m_ClientPayed as object
Dim m_ClientPayed_ID as string
Dim m_ClientPayed_ID_BRIEF as string
private m_AcceptDate as DATE
private m_VRCFinfo as STRING
private m_Supplier as object
Dim m_Supplier_ID as string
Dim m_Supplier_ID_BRIEF as string
private m_PayDept as object
Dim m_PayDept_ID as string
Dim m_PayDept_ID_BRIEF as string
private m_TheDogovor as object
Dim m_TheDogovor_ID as string
Dim m_TheDogovor_ID_BRIEF as string
private m_IsPayed as enumBoolean
private m_RcvInfo as STRING
private m_IsNal as enumBoolean
private m_TheComment as STRING
private m_AcceptTime as DATE
private m_LoadTime as DATE
private m_LoadDate as DATE
private m_TRF as object
Dim m_TRF_ID as string
Dim m_TRF_ID_BRIEF as string
private m_Code1C as String
private m_IncludeInOrder as enumBoolean
private m_IncludeInAct as enumBoolean
private m_SummNDS as double
private m_Summ as double
private m_SummDop as double
private m_SummDopNDS as double
private m_theActWork as object
Dim m_theActWork_ID as string
Dim m_theActWork_ID_BRIEF as string
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;pekz_def&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;pekz_def.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Дата запроса

'Дата запроса
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let QueryDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;QueryDate&quot;,QueryDate,newvalue

   m_QueryDate= newValue
end if
end property

'Дата запроса
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. QueryDate
public property Get QueryDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   QueryDate = m_QueryDate
end property
' let 
'Принята в

'Принята в
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Fillial(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Fillial&quot;,Fillial,newvalue
on error resume next
m_Fillial_ID=&quot;&quot;
m_Fillial_ID=newValue.id
'  set   m_Fillial= newValue
end if
end property

'Принята в
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Fillial
public property Get Fillial() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Fillial as object
if  m_Fillial_ID&lt;&gt;&quot;&quot; then 
  set tmp_Fillial=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_Fillial_ID)
  if tmp_Fillial is nothing then
    m_Fillial_ID_BRIEF = &quot;&quot; 
  else
    m_Fillial_ID_BRIEF = tmp_Fillial.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_Fillial_ID, tmp_Fillial
  set Fillial=tmp_Fillial
  exit property
end if
  '  set Fillial = m_Fillial
end property
' let 
'№ заявки

'№ заявки
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PEKCode(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PEKCode&quot;,PEKCode,newvalue

   m_PEKCode= newValue
end if
end property

'№ заявки
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. PEKCode
public property Get PEKCode() as String
 LoadFromDatabase
 AccessTime=Now

   PEKCode = m_PEKCode
end property
' let 
'Платит

'Платит
'Parameters:
'[IN]   newValue , тип параметра: enumPlatType  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PlatType(byval newValue as enumPlatType)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PlatType&quot;,PlatType,newvalue

   m_PlatType= newValue
end if
end property

'Платит
'Parameters:
' параметров нет
'Returns:
'  объект класса enumPlatType
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumPlatType
' Set variable = me. PlatType
public property Get PlatType() as enumPlatType
 LoadFromDatabase
 AccessTime=Now

   PlatType = m_PlatType
end property
' let 
'Тип доставки

'Тип доставки
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TRType(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TRType&quot;,TRType,newvalue
on error resume next
m_TRType_ID=&quot;&quot;
m_TRType_ID=newValue.id
'  set   m_TRType= newValue
end if
end property

'Тип доставки
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TRType
public property Get TRType() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TRType as object
if  m_TRType_ID&lt;&gt;&quot;&quot; then 
  set tmp_TRType=Application.FindRowObject(&quot;PEKD_TRTYPE&quot;,m_TRType_ID)
  if tmp_TRType is nothing then
    m_TRType_ID_BRIEF = &quot;&quot; 
  else
    m_TRType_ID_BRIEF = tmp_TRType.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_TRTYPE&quot; &amp; m_TRType_ID, tmp_TRType
  set TRType=tmp_TRType
  exit property
end if
  '  set TRType = m_TRType
end property
' let 
'Дата предполагаемой отправки

'Дата предполагаемой отправки
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let PlanedDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PlanedDate&quot;,PlanedDate,newvalue

   m_PlanedDate= newValue
end if
end property

'Дата предполагаемой отправки
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. PlanedDate
public property Get PlanedDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   PlanedDate = m_PlanedDate
end property
' let 
'Отправитель

'Отправитель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ClientFrom(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ClientFrom&quot;,ClientFrom,newvalue
on error resume next
m_ClientFrom_ID=&quot;&quot;
m_ClientFrom_ID=newValue.id
' set   m_ClientFrom= newValue
end if
end property

'Отправитель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ClientFrom
public property Get ClientFrom() as object
 LoadFromDatabase
 AccessTime=Now
if  m_ClientFrom_ID&lt;&gt;&quot;&quot; then 
  set ClientFrom=application.Manager.GetInstanceObject(right(m_ClientFrom_ID,38))
 EXIT PROPERTY
end if
  ' set ClientFrom = m_ClientFrom
end property
' let 
'Получатель

'Получатель
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ClientTo(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ClientTo&quot;,ClientTo,newvalue
on error resume next
m_ClientTo_ID=&quot;&quot;
m_ClientTo_ID=newValue.id
' set   m_ClientTo= newValue
end if
end property

'Получатель
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ClientTo
public property Get ClientTo() as object
 LoadFromDatabase
 AccessTime=Now
if  m_ClientTo_ID&lt;&gt;&quot;&quot; then 
  set ClientTo=application.Manager.GetInstanceObject(right(m_ClientTo_ID,38))
 EXIT PROPERTY
end if
  ' set ClientTo = m_ClientTo
end property
' let 
'Плательщик

'Плательщик
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ClientPayed(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ClientPayed&quot;,ClientPayed,newvalue
on error resume next
m_ClientPayed_ID=&quot;&quot;
m_ClientPayed_ID=newValue.id
' set   m_ClientPayed= newValue
end if
end property

'Плательщик
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ClientPayed
public property Get ClientPayed() as object
 LoadFromDatabase
 AccessTime=Now
if  m_ClientPayed_ID&lt;&gt;&quot;&quot; then 
  set ClientPayed=application.Manager.GetInstanceObject(right(m_ClientPayed_ID,38))
 EXIT PROPERTY
end if
  ' set ClientPayed = m_ClientPayed
end property
' let 
'Дата приема заявки

'Дата приема заявки
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let AcceptDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;AcceptDate&quot;,AcceptDate,newvalue

   m_AcceptDate= newValue
end if
end property

'Дата приема заявки
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. AcceptDate
public property Get AcceptDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   AcceptDate = m_AcceptDate
end property
' let 
'Данные отправителя

'Данные отправителя
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VRCFinfo(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VRCFinfo&quot;,VRCFinfo,newvalue

   m_VRCFinfo= newValue
end if
end property

'Данные отправителя
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. VRCFinfo
public property Get VRCFinfo() as STRING
 LoadFromDatabase
 AccessTime=Now

   VRCFinfo = m_VRCFinfo
end property
' let 
'Поставщик

'Поставщик
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Supplier(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Supplier&quot;,Supplier,newvalue
on error resume next
m_Supplier_ID=&quot;&quot;
m_Supplier_ID=newValue.id
' set   m_Supplier= newValue
end if
end property

'Поставщик
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Supplier
public property Get Supplier() as object
 LoadFromDatabase
 AccessTime=Now
if  m_Supplier_ID&lt;&gt;&quot;&quot; then 
  set Supplier=application.Manager.GetInstanceObject(right(m_Supplier_ID,38))
 EXIT PROPERTY
end if
  ' set Supplier = m_Supplier
end property
' let 
'Оплачивается в 

'Оплачивается в
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PayDept(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PayDept&quot;,PayDept,newvalue
on error resume next
m_PayDept_ID=&quot;&quot;
m_PayDept_ID=newValue.id
'  set   m_PayDept= newValue
end if
end property

'Оплачивается в
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PayDept
public property Get PayDept() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PayDept as object
if  m_PayDept_ID&lt;&gt;&quot;&quot; then 
  set tmp_PayDept=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_PayDept_ID)
  if tmp_PayDept is nothing then
    m_PayDept_ID_BRIEF = &quot;&quot; 
  else
    m_PayDept_ID_BRIEF = tmp_PayDept.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_PayDept_ID, tmp_PayDept
  set PayDept=tmp_PayDept
  exit property
end if
  '  set PayDept = m_PayDept
end property
' let 
'Договор

'Договор
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheDogovor(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDogovor&quot;,TheDogovor,newvalue
on error resume next
m_TheDogovor_ID=&quot;&quot;
m_TheDogovor_ID=newValue.id
' set   m_TheDogovor= newValue
end if
end property

'Договор
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheDogovor
public property Get TheDogovor() as object
 LoadFromDatabase
 AccessTime=Now
if  m_TheDogovor_ID&lt;&gt;&quot;&quot; then 
  set TheDogovor=application.Manager.GetInstanceObject(right(m_TheDogovor_ID,38))
 EXIT PROPERTY
end if
  ' set TheDogovor = m_TheDogovor
end property
' let 
'Оплачена

'Оплачена
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsPayed(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsPayed&quot;,IsPayed,newvalue

   m_IsPayed= newValue
end if
end property

'Оплачена
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsPayed
public property Get IsPayed() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsPayed = m_IsPayed
end property
' let 
'Данные получателя

'Данные получателя
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let RcvInfo(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;RcvInfo&quot;,RcvInfo,newvalue

   m_RcvInfo= newValue
end if
end property

'Данные получателя
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. RcvInfo
public property Get RcvInfo() as STRING
 LoadFromDatabase
 AccessTime=Now

   RcvInfo = m_RcvInfo
end property
' let 
'Наличная оплата

'Наличная оплата
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsNal(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsNal&quot;,IsNal,newvalue

   m_IsNal= newValue
end if
end property

'Наличная оплата
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsNal
public property Get IsNal() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsNal = m_IsNal
end property
' let 
'Примечания

'Примечания
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheComment(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheComment&quot;,TheComment,newvalue

   m_TheComment= newValue
end if
end property

'Примечания
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheComment
public property Get TheComment() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheComment = m_TheComment
end property
' let 
'Время приема заявки

'Время приема заявки
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let AcceptTime(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;AcceptTime&quot;,AcceptTime,newvalue

   m_AcceptTime= newValue
end if
end property

'Время приема заявки
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. AcceptTime
public property Get AcceptTime() as DATE
 LoadFromDatabase
 AccessTime=Now

   AcceptTime = m_AcceptTime
end property
' let 
'Время приема груза на склад

'Время приема груза на склад
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let LoadTime(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;LoadTime&quot;,LoadTime,newvalue

   m_LoadTime= newValue
end if
end property

'Время приема груза на склад
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. LoadTime
public property Get LoadTime() as DATE
 LoadFromDatabase
 AccessTime=Now

   LoadTime = m_LoadTime
end property
' let 
'Дата приема груза на склад

'Дата приема груза на склад
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let LoadDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;LoadDate&quot;,LoadDate,newvalue

   m_LoadDate= newValue
end if
end property

'Дата приема груза на склад
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. LoadDate
public property Get LoadDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   LoadDate = m_LoadDate
end property
' let 
'Тариф

'Тариф
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TRF(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TRF&quot;,TRF,newvalue
on error resume next
m_TRF_ID=&quot;&quot;
m_TRF_ID=newValue.id
'  set   m_TRF= newValue
end if
end property

'Тариф
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TRF
public property Get TRF() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TRF as object
if  m_TRF_ID&lt;&gt;&quot;&quot; then 
  set tmp_TRF=Application.FindRowObject(&quot;PEKD_TRFTYPE&quot;,m_TRF_ID)
  if tmp_TRF is nothing then
    m_TRF_ID_BRIEF = &quot;&quot; 
  else
    m_TRF_ID_BRIEF = tmp_TRF.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_TRFTYPE&quot; &amp; m_TRF_ID, tmp_TRF
  set TRF=tmp_TRF
  exit property
end if
  '  set TRF = m_TRF
end property
' let 
'Код1С

'Код1С
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Code1C(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Code1C&quot;,Code1C,newvalue

   m_Code1C= newValue
end if
end property

'Код1С
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Code1C
public property Get Code1C() as String
 LoadFromDatabase
 AccessTime=Now

   Code1C = m_Code1C
end property
' let 
'Включен в ордер

'Включен в ордер
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IncludeInOrder(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IncludeInOrder&quot;,IncludeInOrder,newvalue

   m_IncludeInOrder= newValue
end if
end property

'Включен в ордер
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IncludeInOrder
public property Get IncludeInOrder() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IncludeInOrder = m_IncludeInOrder
end property
' let 
'Включена в акт

'Включена в акт
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IncludeInAct(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IncludeInAct&quot;,IncludeInAct,newvalue

   m_IncludeInAct= newValue
end if
end property

'Включена в акт
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IncludeInAct
public property Get IncludeInAct() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IncludeInAct = m_IncludeInAct
end property
' let 
'Сумма с НДС

'Сумма с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummNDS&quot;,SummNDS,newvalue

   m_SummNDS= newValue
end if
end property

'Сумма с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummNDS
public property Get SummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SummNDS = m_SummNDS
end property
' let 
'Сумма без НДС

'Сумма без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Summ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Summ&quot;,Summ,newvalue

   m_Summ= newValue
end if
end property

'Сумма без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Summ
public property Get Summ() as double
 LoadFromDatabase
 AccessTime=Now

   Summ = m_Summ
end property
' let 
'Сумма доп. услуг без НДС

'Сумма доп. услуг без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummDop(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummDop&quot;,SummDop,newvalue

   m_SummDop= newValue
end if
end property

'Сумма доп. услуг без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummDop
public property Get SummDop() as double
 LoadFromDatabase
 AccessTime=Now

   SummDop = m_SummDop
end property
' let 
'Сумма доп. услуг с НДС

'Сумма доп. услуг с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummDopNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummDopNDS&quot;,SummDopNDS,newvalue

   m_SummDopNDS= newValue
end if
end property

'Сумма доп. услуг с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummDopNDS
public property Get SummDopNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SummDopNDS = m_SummDopNDS
end property
' let 
'акт выполненных работ

'акт выполненных работ
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set theActWork(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;theActWork&quot;,theActWork,newvalue
on error resume next
m_theActWork_ID=&quot;&quot;
m_theActWork_ID=newValue.id
' set   m_theActWork= newValue
end if
end property

'акт выполненных работ
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. theActWork
public property Get theActWork() as object
 LoadFromDatabase
 AccessTime=Now
if  m_theActWork_ID&lt;&gt;&quot;&quot; then 
  set theActWork=application.Manager.GetInstanceObject(right(m_theActWork_ID,38))
 EXIT PROPERTY
end if
  ' set theActWork = m_theActWork
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;QueryDate&quot;,m_QueryDate)
nvi.ValueType = adDate 
 ' Reference to PEKD_DEPT
    if m_Fillial_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Fillial&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Fillial&quot;,m_Fillial_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;PEKCode&quot;,m_PEKCode)
nvi.ValueSize = 50
  set nvi=nv.Add( &quot;PlatType&quot;,m_PlatType)
nvi.ValueType = adInteger 
 ' Reference to PEKD_TRTYPE
    if m_TRType_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TRType&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TRType&quot;,m_TRType_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;PlanedDate&quot;,m_PlanedDate)
nvi.ValueType = adDate 
 ' Reference to object
    if m_ClientFrom_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ClientFrom&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ClientFrom&quot;,m_ClientFrom_ID)
    end if 
    nvi.oracle_guid 
 ' Reference to object
    if m_ClientTo_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ClientTo&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ClientTo&quot;,m_ClientTo_ID)
    end if 
    nvi.oracle_guid 
 ' Reference to object
    if m_ClientPayed_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ClientPayed&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ClientPayed&quot;,m_ClientPayed_ID)
    end if 
    nvi.oracle_guid 
  set nvi=nv.Add( &quot;AcceptDate&quot;,m_AcceptDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;VRCFinfo&quot;,m_VRCFinfo)
 ' Reference to object
    if m_Supplier_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Supplier&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Supplier&quot;,m_Supplier_ID)
    end if 
    nvi.oracle_guid 
 ' Reference to PEKD_DEPT
    if m_PayDept_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PayDept&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PayDept&quot;,m_PayDept_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to object
    if m_TheDogovor_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheDogovor&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheDogovor&quot;,m_TheDogovor_ID)
    end if 
    nvi.oracle_guid 
  set nvi=nv.Add( &quot;IsPayed&quot;,m_IsPayed)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;RcvInfo&quot;,m_RcvInfo)
  set nvi=nv.Add( &quot;IsNal&quot;,m_IsNal)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;TheComment&quot;,m_TheComment)
  set nvi=nv.Add( &quot;AcceptTime&quot;,m_AcceptTime)
nvi.ValueType = adDBTime 
  set nvi=nv.Add( &quot;LoadTime&quot;,m_LoadTime)
nvi.ValueType = adDBTime 
  set nvi=nv.Add( &quot;LoadDate&quot;,m_LoadDate)
nvi.ValueType = adDate 
 ' Reference to PEKD_TRFTYPE
    if m_TRF_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TRF&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TRF&quot;,m_TRF_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Code1C&quot;,m_Code1C)
nvi.ValueSize = 40
  set nvi=nv.Add( &quot;IncludeInOrder&quot;,m_IncludeInOrder)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;IncludeInAct&quot;,m_IncludeInAct)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SummNDS&quot;,m_SummNDS)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Summ&quot;,m_Summ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SummDop&quot;,m_SummDop)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SummDopNDS&quot;,m_SummDopNDS)
nvi.ValueType =  adDouble 
 ' Reference to object
    if m_theActWork_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;theActWork&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;theActWork&quot;,m_theActWork_ID)
    end if 
    nvi.oracle_guid 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; PEKCode &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_QueryDate=nv.item( &quot;QueryDate&quot;).Value
  m_Fillial_ID=nv.item( &quot;Fillial&quot;).Value
m_PEKCode=nv.item( &quot;PEKCode&quot;).Value
m_PlatType=nv.item( &quot;PlatType&quot;).Value
  m_TRType_ID=nv.item( &quot;TRType&quot;).Value
m_PlanedDate=nv.item( &quot;PlanedDate&quot;).Value
  m_ClientFrom_ID=nv.item( &quot;ClientFrom&quot;).Value
  m_ClientTo_ID=nv.item( &quot;ClientTo&quot;).Value
  m_ClientPayed_ID=nv.item( &quot;ClientPayed&quot;).Value
m_AcceptDate=nv.item( &quot;AcceptDate&quot;).Value
m_VRCFinfo=nv.item( &quot;VRCFinfo&quot;).Value
  m_Supplier_ID=nv.item( &quot;Supplier&quot;).Value
  m_PayDept_ID=nv.item( &quot;PayDept&quot;).Value
  m_TheDogovor_ID=nv.item( &quot;TheDogovor&quot;).Value
m_IsPayed=nv.item( &quot;IsPayed&quot;).Value
m_RcvInfo=nv.item( &quot;RcvInfo&quot;).Value
m_IsNal=nv.item( &quot;IsNal&quot;).Value
m_TheComment=nv.item( &quot;TheComment&quot;).Value
m_AcceptTime=nv.item( &quot;AcceptTime&quot;).Value
m_LoadTime=nv.item( &quot;LoadTime&quot;).Value
m_LoadDate=nv.item( &quot;LoadDate&quot;).Value
  m_TRF_ID=nv.item( &quot;TRF&quot;).Value
m_Code1C=nv.item( &quot;Code1C&quot;).Value
m_IncludeInOrder=nv.item( &quot;IncludeInOrder&quot;).Value
m_IncludeInAct=nv.item( &quot;IncludeInAct&quot;).Value
m_SummNDS=nv.item( &quot;SummNDS&quot;).Value
m_Summ=nv.item( &quot;Summ&quot;).Value
m_SummDop=nv.item( &quot;SummDop&quot;).Value
m_SummDopNDS=nv.item( &quot;SummDopNDS&quot;).Value
  m_theActWork_ID=nv.item( &quot;theActWork&quot;).Value
else

m_QueryDate=nv.fields( &quot;QueryDate&quot;).Value
  m_Fillial_ID=nv.fields( &quot;Fillial&quot;).Value
m_PEKCode=nv.fields( &quot;PEKCode&quot;).Value
m_PlatType=nv.fields( &quot;PlatType&quot;).Value
  m_TRType_ID=nv.fields( &quot;TRType&quot;).Value
m_PlanedDate=nv.fields( &quot;PlanedDate&quot;).Value
  m_ClientFrom_ID=nv.fields( &quot;ClientFrom&quot;).Value
  m_ClientTo_ID=nv.fields( &quot;ClientTo&quot;).Value
  m_ClientPayed_ID=nv.fields( &quot;ClientPayed&quot;).Value
m_AcceptDate=nv.fields( &quot;AcceptDate&quot;).Value
m_VRCFinfo=nv.fields( &quot;VRCFinfo&quot;).Value
  m_Supplier_ID=nv.fields( &quot;Supplier&quot;).Value
  m_PayDept_ID=nv.fields( &quot;PayDept&quot;).Value
  m_TheDogovor_ID=nv.fields( &quot;TheDogovor&quot;).Value
m_IsPayed=nv.fields( &quot;IsPayed&quot;).Value
m_RcvInfo=nv.fields( &quot;RcvInfo&quot;).Value
m_IsNal=nv.fields( &quot;IsNal&quot;).Value
m_TheComment=nv.fields( &quot;TheComment&quot;).Value
m_AcceptTime=nv.fields( &quot;AcceptTime&quot;).Value
m_LoadTime=nv.fields( &quot;LoadTime&quot;).Value
m_LoadDate=nv.fields( &quot;LoadDate&quot;).Value
  m_TRF_ID=nv.fields( &quot;TRF&quot;).Value
m_Code1C=nv.fields( &quot;Code1C&quot;).Value
m_IncludeInOrder=nv.fields( &quot;IncludeInOrder&quot;).Value
m_IncludeInAct=nv.fields( &quot;IncludeInAct&quot;).Value
m_SummNDS=nv.fields( &quot;SummNDS&quot;).Value
m_Summ=nv.fields( &quot;Summ&quot;).Value
m_SummDop=nv.fields( &quot;SummDop&quot;).Value
m_SummDopNDS=nv.fields( &quot;SummDopNDS&quot;).Value
  m_theActWork_ID=nv.fields( &quot;theActWork&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as pekz_def
   set o = new pekz_def
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;pekz_def.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;pekz_def.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;pekz_def&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;pekz_def.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;pekz_def&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;pekz_def.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_Fillial_ID=&quot;&quot;
 set m_Fillial= nothing
 m_TRType_ID=&quot;&quot;
 set m_TRType= nothing
 m_ClientFrom_ID=&quot;&quot;
 set m_ClientFrom= nothing
 m_ClientTo_ID=&quot;&quot;
 set m_ClientTo= nothing
 m_ClientPayed_ID=&quot;&quot;
 set m_ClientPayed= nothing
 m_Supplier_ID=&quot;&quot;
 set m_Supplier= nothing
 m_PayDept_ID=&quot;&quot;
 set m_PayDept= nothing
 m_TheDogovor_ID=&quot;&quot;
 set m_TheDogovor= nothing
 m_TRF_ID=&quot;&quot;
 set m_TRF= nothing
 m_theActWork_ID=&quot;&quot;
 set m_theActWork= nothing
 if not Application is nothing then Application.Logger.Message &quot;pekz_def.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  QueryDate=node.Attributes.getNamedItem(&quot;QUERYDATE&quot;).nodeValue
  set Fillial=nothing
  m_Fillial_ID=node.Attributes.getNamedItem(&quot;FILLIAL&quot;).nodeValue
  m_Fillial_ID_BRIEF=node.Attributes.getNamedItem(&quot;FILLIAL_BRIEF&quot;).nodeValue
  PEKCode=Replace(node.Attributes.getNamedItem(&quot;PEKCODE&quot;).nodeValue,vbLf,vbcrlf)
  PlatType=node.Attributes.getNamedItem(&quot;PLATTYPE&quot;).nodeValue
  set TRType=nothing
  m_TRType_ID=node.Attributes.getNamedItem(&quot;TRTYPE&quot;).nodeValue
  m_TRType_ID_BRIEF=node.Attributes.getNamedItem(&quot;TRTYPE_BRIEF&quot;).nodeValue
  PlanedDate=node.Attributes.getNamedItem(&quot;PLANEDDATE&quot;).nodeValue
  set ClientFrom=nothing
  m_ClientFrom_ID=node.Attributes.getNamedItem(&quot;CLIENTFROM&quot;).nodeValue
  m_ClientFrom_ID_BRIEF=node.Attributes.getNamedItem(&quot;CLIENTFROM_BRIEF&quot;).nodeValue
  set ClientTo=nothing
  m_ClientTo_ID=node.Attributes.getNamedItem(&quot;CLIENTTO&quot;).nodeValue
  m_ClientTo_ID_BRIEF=node.Attributes.getNamedItem(&quot;CLIENTTO_BRIEF&quot;).nodeValue
  set ClientPayed=nothing
  m_ClientPayed_ID=node.Attributes.getNamedItem(&quot;CLIENTPAYED&quot;).nodeValue
  m_ClientPayed_ID_BRIEF=node.Attributes.getNamedItem(&quot;CLIENTPAYED_BRIEF&quot;).nodeValue
  AcceptDate=node.Attributes.getNamedItem(&quot;ACCEPTDATE&quot;).nodeValue
  VRCFinfo=Replace(node.Attributes.getNamedItem(&quot;VRCFINFO&quot;).nodeValue,vbLf,vbcrlf)
  set Supplier=nothing
  m_Supplier_ID=node.Attributes.getNamedItem(&quot;SUPPLIER&quot;).nodeValue
  m_Supplier_ID_BRIEF=node.Attributes.getNamedItem(&quot;SUPPLIER_BRIEF&quot;).nodeValue
  set PayDept=nothing
  m_PayDept_ID=node.Attributes.getNamedItem(&quot;PAYDEPT&quot;).nodeValue
  m_PayDept_ID_BRIEF=node.Attributes.getNamedItem(&quot;PAYDEPT_BRIEF&quot;).nodeValue
  set TheDogovor=nothing
  m_TheDogovor_ID=node.Attributes.getNamedItem(&quot;THEDOGOVOR&quot;).nodeValue
  m_TheDogovor_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEDOGOVOR_BRIEF&quot;).nodeValue
  IsPayed=node.Attributes.getNamedItem(&quot;ISPAYED&quot;).nodeValue
  RcvInfo=Replace(node.Attributes.getNamedItem(&quot;RCVINFO&quot;).nodeValue,vbLf,vbcrlf)
  IsNal=node.Attributes.getNamedItem(&quot;ISNAL&quot;).nodeValue
  TheComment=Replace(node.Attributes.getNamedItem(&quot;THECOMMENT&quot;).nodeValue,vbLf,vbcrlf)
  AcceptTime=node.Attributes.getNamedItem(&quot;ACCEPTTIME&quot;).nodeValue
  LoadTime=node.Attributes.getNamedItem(&quot;LOADTIME&quot;).nodeValue
  LoadDate=node.Attributes.getNamedItem(&quot;LOADDATE&quot;).nodeValue
  set TRF=nothing
  m_TRF_ID=node.Attributes.getNamedItem(&quot;TRF&quot;).nodeValue
  m_TRF_ID_BRIEF=node.Attributes.getNamedItem(&quot;TRF_BRIEF&quot;).nodeValue
  Code1C=Replace(node.Attributes.getNamedItem(&quot;CODE1C&quot;).nodeValue,vbLf,vbcrlf)
  IncludeInOrder=node.Attributes.getNamedItem(&quot;INCLUDEINORDER&quot;).nodeValue
  IncludeInAct=node.Attributes.getNamedItem(&quot;INCLUDEINACT&quot;).nodeValue
  SummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  Summ=val(Replace(node.Attributes.getNamedItem(&quot;SUMM&quot;).nodeValue,vbLf,vbcrlf))
  SummDop=val(Replace(node.Attributes.getNamedItem(&quot;SUMMDOP&quot;).nodeValue,vbLf,vbcrlf))
  SummDopNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUMMDOPNDS&quot;).nodeValue,vbLf,vbcrlf))
  set theActWork=nothing
  m_theActWork_ID=node.Attributes.getNamedItem(&quot;THEACTWORK&quot;).nodeValue
  m_theActWork_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEACTWORK_BRIEF&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;QUERYDATE&quot;, Cdbl(QueryDate)
  node.setAttribute &quot;FILLIAL&quot;, m_Fillial_ID
  if not (Fillial is nothing) then 
    node.setAttribute &quot;FILLIAL_BRIEF&quot;, Fillial.BRIEF
  else
    node.setAttribute &quot;FILLIAL_BRIEF&quot;, m_Fillial_ID_BRIEF
  end if
  node.setAttribute &quot;PEKCODE&quot;, PEKCode
  node.setAttribute &quot;PLATTYPE&quot;, PlatType
  node.setAttribute &quot;TRTYPE&quot;, m_TRType_ID
  if not (TRType is nothing) then 
    node.setAttribute &quot;TRTYPE_BRIEF&quot;, TRType.BRIEF
  else
    node.setAttribute &quot;TRTYPE_BRIEF&quot;, m_TRType_ID_BRIEF
  end if
  node.setAttribute &quot;PLANEDDATE&quot;, Cdbl(PlanedDate)
  node.setAttribute &quot;CLIENTFROM&quot;, m_ClientFrom_ID
  if not (ClientFrom is nothing) then 
    node.setAttribute &quot;CLIENTFROM_BRIEF&quot;, ClientFrom.BRIEF
  else
    node.setAttribute &quot;CLIENTFROM_BRIEF&quot;, m_ClientFrom_ID_BRIEF
  end if
  node.setAttribute &quot;CLIENTTO&quot;, m_ClientTo_ID
  if not (ClientTo is nothing) then 
    node.setAttribute &quot;CLIENTTO_BRIEF&quot;, ClientTo.BRIEF
  else
    node.setAttribute &quot;CLIENTTO_BRIEF&quot;, m_ClientTo_ID_BRIEF
  end if
  node.setAttribute &quot;CLIENTPAYED&quot;, m_ClientPayed_ID
  if not (ClientPayed is nothing) then 
    node.setAttribute &quot;CLIENTPAYED_BRIEF&quot;, ClientPayed.BRIEF
  else
    node.setAttribute &quot;CLIENTPAYED_BRIEF&quot;, m_ClientPayed_ID_BRIEF
  end if
  node.setAttribute &quot;ACCEPTDATE&quot;, Cdbl(AcceptDate)
  node.setAttribute &quot;VRCFINFO&quot;, VRCFinfo
  node.setAttribute &quot;SUPPLIER&quot;, m_Supplier_ID
  if not (Supplier is nothing) then 
    node.setAttribute &quot;SUPPLIER_BRIEF&quot;, Supplier.BRIEF
  else
    node.setAttribute &quot;SUPPLIER_BRIEF&quot;, m_Supplier_ID_BRIEF
  end if
  node.setAttribute &quot;PAYDEPT&quot;, m_PayDept_ID
  if not (PayDept is nothing) then 
    node.setAttribute &quot;PAYDEPT_BRIEF&quot;, PayDept.BRIEF
  else
    node.setAttribute &quot;PAYDEPT_BRIEF&quot;, m_PayDept_ID_BRIEF
  end if
  node.setAttribute &quot;THEDOGOVOR&quot;, m_TheDogovor_ID
  if not (TheDogovor is nothing) then 
    node.setAttribute &quot;THEDOGOVOR_BRIEF&quot;, TheDogovor.BRIEF
  else
    node.setAttribute &quot;THEDOGOVOR_BRIEF&quot;, m_TheDogovor_ID_BRIEF
  end if
  node.setAttribute &quot;ISPAYED&quot;, IsPayed
  node.setAttribute &quot;RCVINFO&quot;, RcvInfo
  node.setAttribute &quot;ISNAL&quot;, IsNal
  node.setAttribute &quot;THECOMMENT&quot;, TheComment
  node.setAttribute &quot;ACCEPTTIME&quot;, Cdbl(AcceptTime)
  node.setAttribute &quot;LOADTIME&quot;, Cdbl(LoadTime)
  node.setAttribute &quot;LOADDATE&quot;, Cdbl(LoadDate)
  node.setAttribute &quot;TRF&quot;, m_TRF_ID
  if not (TRF is nothing) then 
    node.setAttribute &quot;TRF_BRIEF&quot;, TRF.BRIEF
  else
    node.setAttribute &quot;TRF_BRIEF&quot;, m_TRF_ID_BRIEF
  end if
  node.setAttribute &quot;CODE1C&quot;, Code1C
  node.setAttribute &quot;INCLUDEINORDER&quot;, IncludeInOrder
  node.setAttribute &quot;INCLUDEINACT&quot;, IncludeInAct
  node.setAttribute &quot;SUMMNDS&quot;, replace(cstr(SummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMM&quot;, replace(cstr(Summ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMMDOP&quot;, replace(cstr(SummDop),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMMDOPNDS&quot;, replace(cstr(SummDopNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;THEACTWORK&quot;, m_theActWork_ID
  if not (theActWork is nothing) then 
    node.setAttribute &quot;THEACTWORK_BRIEF&quot;, theActWork.BRIEF
  else
    node.setAttribute &quot;THEACTWORK_BRIEF&quot;, m_theActWork_ID_BRIEF
  end if
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;pekz_def&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;pekz_def&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;pekz_def&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;pekz_def&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="pekz_def_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Раздел описывает основные данные о заявке.
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;pekz_def&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;pekz_def.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as  pekz_def
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  pekz_def
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  pekz_def
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  pekz_def
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as pekz_def
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as pekz_def
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as pekz_def
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as pekz_def
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as pekz_def
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as pekz_def
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_def
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_def
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as pekz_def
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  pekz_def
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;pekz_def.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As pekz_def
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As pekz_def
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!pekz_defID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as pekz_def
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_DEF_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_DEF&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as pekz_def
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_DEF&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Дата запроса&quot;, 0, 0, &quot;QueryDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Принята в&quot;, 0, 0, &quot;Fillial&quot;).SortType =1
  YGrid.Columns.Add(&quot;№ заявки&quot;, 0, 0, &quot;PEKCode&quot;).SortType =1
  YGrid.Columns.Add(&quot;Платит&quot;, 0, 0, &quot;PlatType&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тип доставки&quot;, 0, 0, &quot;TRType&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата предполагаемой отправки&quot;, 0, 0, &quot;PlanedDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Отправитель&quot;, 0, 0, &quot;ClientFrom&quot;).SortType =1
  YGrid.Columns.Add(&quot;Получатель&quot;, 0, 0, &quot;ClientTo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Плательщик&quot;, 0, 0, &quot;ClientPayed&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата приема заявки&quot;, 0, 0, &quot;AcceptDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Данные отправителя&quot;, 0, 0, &quot;VRCFinfo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Поставщик&quot;, 0, 0, &quot;Supplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Оплачивается в &quot;, 0, 0, &quot;PayDept&quot;).SortType =1
  YGrid.Columns.Add(&quot;Договор&quot;, 0, 0, &quot;TheDogovor&quot;).SortType =1
  YGrid.Columns.Add(&quot;Оплачена&quot;, 0, 0, &quot;IsPayed&quot;).SortType =1
  YGrid.Columns.Add(&quot;Данные получателя&quot;, 0, 0, &quot;RcvInfo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Наличная оплата&quot;, 0, 0, &quot;IsNal&quot;).SortType =1
  YGrid.Columns.Add(&quot;Примечания&quot;, 0, 0, &quot;TheComment&quot;).SortType =1
  YGrid.Columns.Add(&quot;Время приема заявки&quot;, 0, 0, &quot;AcceptTime&quot;).SortType =4
  YGrid.Columns.Add(&quot;Время приема груза на склад&quot;, 0, 0, &quot;LoadTime&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дата приема груза на склад&quot;, 0, 0, &quot;LoadDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Тариф&quot;, 0, 0, &quot;TRF&quot;).SortType =1
  YGrid.Columns.Add(&quot;Код1С&quot;, 0, 0, &quot;Code1C&quot;).SortType =1
  YGrid.Columns.Add(&quot;Включен в ордер&quot;, 0, 0, &quot;IncludeInOrder&quot;).SortType =1
  YGrid.Columns.Add(&quot;Включена в акт&quot;, 0, 0, &quot;IncludeInAct&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сумма с НДС&quot;, 0, 0, &quot;SummNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма без НДС&quot;, 0, 0, &quot;Summ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма доп. услуг без НДС&quot;, 0, 0, &quot;SummDop&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма доп. услуг с НДС&quot;, 0, 0, &quot;SummDopNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;акт выполненных работ&quot;, 0, 0, &quot;theActWork&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as pekz_def
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.QueryDate, vbCrLf, &quot; &quot;), 255)
   if obj.Fillial is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.Fillial.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.PEKCode, vbCrLf, &quot; &quot;), 255)
   if obj.PlatType =0 then
     Values.Value(4) = &quot;Отправитель&quot;
   end if
   if obj.PlatType =1 then
     Values.Value(4) = &quot;Получатель&quot;
   end if
   if obj.PlatType =2 then
     Values.Value(4) = &quot;Другой&quot;
   end if
   if obj.TRType is nothing then
    Values.Value(5) = &quot;Не задано&quot;
   else 
    Values.Value(5) = Left(Replace(obj.TRType.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(6) = Left(Replace(obj.PlanedDate, vbCrLf, &quot; &quot;), 255)
   if obj.ClientFrom is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.ClientFrom.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ClientTo is nothing then
    Values.Value(8) = &quot;Не задано&quot;
   else 
    Values.Value(8) = Left(Replace(obj.ClientTo.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.ClientPayed is nothing then
    Values.Value(9) = &quot;Не задано&quot;
   else 
    Values.Value(9) = Left(Replace(obj.ClientPayed.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(10) = Left(Replace(obj.AcceptDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.VRCFinfo, vbCrLf, &quot; &quot;), 255)
   if obj.Supplier is nothing then
    Values.Value(12) = &quot;Не задано&quot;
   else 
    Values.Value(12) = Left(Replace(obj.Supplier.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.PayDept is nothing then
    Values.Value(13) = &quot;Не задано&quot;
   else 
    Values.Value(13) = Left(Replace(obj.PayDept.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.TheDogovor is nothing then
    Values.Value(14) = &quot;Не задано&quot;
   else 
    Values.Value(14) = Left(Replace(obj.TheDogovor.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.IsPayed =-1 then
     Values.Value(15) = &quot;Да&quot;
   end if
   if obj.IsPayed =0 then
     Values.Value(15) = &quot;Нет&quot;
   end if
    Values.Value(16) = Left(Replace(obj.RcvInfo, vbCrLf, &quot; &quot;), 255)
   if obj.IsNal =-1 then
     Values.Value(17) = &quot;Да&quot;
   end if
   if obj.IsNal =0 then
     Values.Value(17) = &quot;Нет&quot;
   end if
    Values.Value(18) = Left(Replace(obj.TheComment, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.AcceptTime, vbCrLf, &quot; &quot;), 255)
    Values.Value(20) = Left(Replace(obj.LoadTime, vbCrLf, &quot; &quot;), 255)
    Values.Value(21) = Left(Replace(obj.LoadDate, vbCrLf, &quot; &quot;), 255)
   if obj.TRF is nothing then
    Values.Value(22) = &quot;Не задано&quot;
   else 
    Values.Value(22) = Left(Replace(obj.TRF.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(23) = Left(Replace(obj.Code1C, vbCrLf, &quot; &quot;), 255)
   if obj.IncludeInOrder =-1 then
     Values.Value(24) = &quot;Да&quot;
   end if
   if obj.IncludeInOrder =0 then
     Values.Value(24) = &quot;Нет&quot;
   end if
   if obj.IncludeInAct =-1 then
     Values.Value(25) = &quot;Да&quot;
   end if
   if obj.IncludeInAct =0 then
     Values.Value(25) = &quot;Нет&quot;
   end if
    Values.Value(26) = Left(Replace(obj.SummNDS, vbCrLf, &quot; &quot;), 255)
    Values.Value(27) = Left(Replace(obj.Summ, vbCrLf, &quot; &quot;), 255)
    Values.Value(28) = Left(Replace(obj.SummDop, vbCrLf, &quot; &quot;), 255)
    Values.Value(29) = Left(Replace(obj.SummDopNDS, vbCrLf, &quot; &quot;), 255)
   if obj.theActWork is nothing then
    Values.Value(30) = &quot;Не задано&quot;
   else 
    Values.Value(30) = Left(Replace(obj.theActWork.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;pekz_def&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_ACLCT" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Сбор груза для отправки автотранспортом
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheFilial as object
Dim m_TheFilial_ID as string
Dim m_TheFilial_ID_BRIEF as string
private m_AutoType as object
Dim m_AutoType_ID as string
Dim m_AutoType_ID_BRIEF as string
private m_CollectDate as DATE
private m_TheAddress as STRING
private m_CollectTimeFrom as DATE
private m_CollectTimeTo as DATE
private m_ThePerson as String
private m_Phone as String
private m_TheComment as STRING
private m_TheLength as double
private m_TheDuration as double
private m_Info as STRING
private m_AutoSuplier as object
Dim m_AutoSuplier_ID as string
Dim m_AutoSuplier_ID_BRIEF as string
private m_SupMoneyDate as DATE
private m_CalcWithNDS as enumBoolean
private m_SummNDS as double
private m_Summ as double
private m_SupSumm as double
private m_SupSummNDS as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PEKZ_ACLCT&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_ACLCT.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Филиал

'Филиал
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheFilial(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheFilial&quot;,TheFilial,newvalue
on error resume next
m_TheFilial_ID=&quot;&quot;
m_TheFilial_ID=newValue.id
'  set   m_TheFilial= newValue
end if
end property

'Филиал
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheFilial
public property Get TheFilial() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheFilial as object
if  m_TheFilial_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheFilial=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_TheFilial_ID)
  if tmp_TheFilial is nothing then
    m_TheFilial_ID_BRIEF = &quot;&quot; 
  else
    m_TheFilial_ID_BRIEF = tmp_TheFilial.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_TheFilial_ID, tmp_TheFilial
  set TheFilial=tmp_TheFilial
  exit property
end if
  '  set TheFilial = m_TheFilial
end property
' let 
'Тип автотранспорта

'Тип автотранспорта
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set AutoType(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;AutoType&quot;,AutoType,newvalue
on error resume next
m_AutoType_ID=&quot;&quot;
m_AutoType_ID=newValue.id
'  set   m_AutoType= newValue
end if
end property

'Тип автотранспорта
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. AutoType
public property Get AutoType() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_AutoType as object
if  m_AutoType_ID&lt;&gt;&quot;&quot; then 
  set tmp_AutoType=Application.FindRowObject(&quot;PEKD_AUTO&quot;,m_AutoType_ID)
  if tmp_AutoType is nothing then
    m_AutoType_ID_BRIEF = &quot;&quot; 
  else
    m_AutoType_ID_BRIEF = tmp_AutoType.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_AUTO&quot; &amp; m_AutoType_ID, tmp_AutoType
  set AutoType=tmp_AutoType
  exit property
end if
  '  set AutoType = m_AutoType
end property
' let 
'Дата получения груза

'Дата получения груза
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CollectDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CollectDate&quot;,CollectDate,newvalue

   m_CollectDate= newValue
end if
end property

'Дата получения груза
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. CollectDate
public property Get CollectDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   CollectDate = m_CollectDate
end property
' let 
'Адрес 

'Адрес
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheAddress(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheAddress&quot;,TheAddress,newvalue

   m_TheAddress= newValue
end if
end property

'Адрес
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheAddress
public property Get TheAddress() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheAddress = m_TheAddress
end property
' let 
'Начиная с

'Начиная с
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CollectTimeFrom(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CollectTimeFrom&quot;,CollectTimeFrom,newvalue

   m_CollectTimeFrom= newValue
end if
end property

'Начиная с
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. CollectTimeFrom
public property Get CollectTimeFrom() as DATE
 LoadFromDatabase
 AccessTime=Now

   CollectTimeFrom = m_CollectTimeFrom
end property
' let 
'По

'По
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CollectTimeTo(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CollectTimeTo&quot;,CollectTimeTo,newvalue

   m_CollectTimeTo= newValue
end if
end property

'По
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. CollectTimeTo
public property Get CollectTimeTo() as DATE
 LoadFromDatabase
 AccessTime=Now

   CollectTimeTo = m_CollectTimeTo
end property
' let 
'Контактное лицо

'Контактное лицо
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ThePerson(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ThePerson&quot;,ThePerson,newvalue

   m_ThePerson= newValue
end if
end property

'Контактное лицо
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. ThePerson
public property Get ThePerson() as String
 LoadFromDatabase
 AccessTime=Now

   ThePerson = m_ThePerson
end property
' let 
'Контактный телефон

'Контактный телефон
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Phone(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Phone&quot;,Phone,newvalue

   m_Phone= newValue
end if
end property

'Контактный телефон
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Phone
public property Get Phone() as String
 LoadFromDatabase
 AccessTime=Now

   Phone = m_Phone
end property
' let 
'Примечание

'Примечание
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheComment(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheComment&quot;,TheComment,newvalue

   m_TheComment= newValue
end if
end property

'Примечание
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheComment
public property Get TheComment() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheComment = m_TheComment
end property
' let 
'Километраж

'Километраж
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheLength(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheLength&quot;,TheLength,newvalue

   m_TheLength= newValue
end if
end property

'Километраж
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TheLength
public property Get TheLength() as double
 LoadFromDatabase
 AccessTime=Now

   TheLength = m_TheLength
end property
' let 
'Длительность (час)

'Длительность (час)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheDuration(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDuration&quot;,TheDuration,newvalue

   m_TheDuration= newValue
end if
end property

'Длительность (час)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TheDuration
public property Get TheDuration() as double
 LoadFromDatabase
 AccessTime=Now

   TheDuration = m_TheDuration
end property
' let 
'Данные о грузе

'Данные о грузе
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Info(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Info&quot;,Info,newvalue

   m_Info= newValue
end if
end property

'Данные о грузе
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. Info
public property Get Info() as STRING
 LoadFromDatabase
 AccessTime=Now

   Info = m_Info
end property
' let 
'Поставщик

'Поставщик
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set AutoSuplier(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;AutoSuplier&quot;,AutoSuplier,newvalue
on error resume next
m_AutoSuplier_ID=&quot;&quot;
m_AutoSuplier_ID=newValue.id
' set   m_AutoSuplier= newValue
end if
end property

'Поставщик
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. AutoSuplier
public property Get AutoSuplier() as object
 LoadFromDatabase
 AccessTime=Now
if  m_AutoSuplier_ID&lt;&gt;&quot;&quot; then 
  set AutoSuplier=application.Manager.GetInstanceObject(right(m_AutoSuplier_ID,38))
 EXIT PROPERTY
end if
  ' set AutoSuplier = m_AutoSuplier
end property
' let 
'Cписание денежных средств поставщиком

'Cписание денежных средств поставщиком
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupMoneyDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupMoneyDate&quot;,SupMoneyDate,newvalue

   m_SupMoneyDate= newValue
end if
end property

'Cписание денежных средств поставщиком
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. SupMoneyDate
public property Get SupMoneyDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   SupMoneyDate = m_SupMoneyDate
end property
' let 
'Расчет с НДС

'Расчет с НДС
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CalcWithNDS(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CalcWithNDS&quot;,CalcWithNDS,newvalue

   m_CalcWithNDS= newValue
end if
end property

'Расчет с НДС
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CalcWithNDS
public property Get CalcWithNDS() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CalcWithNDS = m_CalcWithNDS
end property
' let 
'Сумма с НДС

'Сумма с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummNDS&quot;,SummNDS,newvalue

   m_SummNDS= newValue
end if
end property

'Сумма с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummNDS
public property Get SummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SummNDS = m_SummNDS
end property
' let 
'Сумма без НДС

'Сумма без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Summ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Summ&quot;,Summ,newvalue

   m_Summ= newValue
end if
end property

'Сумма без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Summ
public property Get Summ() as double
 LoadFromDatabase
 AccessTime=Now

   Summ = m_Summ
end property
' let 
'Сумма поставщику без НДС

'Сумма поставщику без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSumm(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSumm&quot;,SupSumm,newvalue

   m_SupSumm= newValue
end if
end property

'Сумма поставщику без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSumm
public property Get SupSumm() as double
 LoadFromDatabase
 AccessTime=Now

   SupSumm = m_SupSumm
end property
' let 
'Сумма поставщику с НДС

'Сумма поставщику с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSummNDS&quot;,SupSummNDS,newvalue

   m_SupSummNDS= newValue
end if
end property

'Сумма поставщику с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSummNDS
public property Get SupSummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SupSummNDS = m_SupSummNDS
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to PEKD_DEPT
    if m_TheFilial_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheFilial&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheFilial&quot;,m_TheFilial_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to PEKD_AUTO
    if m_AutoType_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;AutoType&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;AutoType&quot;,m_AutoType_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;CollectDate&quot;,m_CollectDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;TheAddress&quot;,m_TheAddress)
  set nvi=nv.Add( &quot;CollectTimeFrom&quot;,m_CollectTimeFrom)
nvi.ValueType = adDBTime 
  set nvi=nv.Add( &quot;CollectTimeTo&quot;,m_CollectTimeTo)
nvi.ValueType = adDBTime 
  set nvi=nv.Add( &quot;ThePerson&quot;,m_ThePerson)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Phone&quot;,m_Phone)
nvi.ValueSize = 20
  set nvi=nv.Add( &quot;TheComment&quot;,m_TheComment)
  set nvi=nv.Add( &quot;TheLength&quot;,m_TheLength)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TheDuration&quot;,m_TheDuration)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Info&quot;,m_Info)
 ' Reference to object
    if m_AutoSuplier_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;AutoSuplier&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;AutoSuplier&quot;,m_AutoSuplier_ID)
    end if 
    nvi.oracle_guid 
  set nvi=nv.Add( &quot;SupMoneyDate&quot;,m_SupMoneyDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;CalcWithNDS&quot;,m_CalcWithNDS)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SummNDS&quot;,m_SummNDS)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Summ&quot;,m_Summ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSumm&quot;,m_SupSumm)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSummNDS&quot;,m_SupSummNDS)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; CollectDate &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheFilial_ID=nv.item( &quot;TheFilial&quot;).Value
  m_AutoType_ID=nv.item( &quot;AutoType&quot;).Value
m_CollectDate=nv.item( &quot;CollectDate&quot;).Value
m_TheAddress=nv.item( &quot;TheAddress&quot;).Value
m_CollectTimeFrom=nv.item( &quot;CollectTimeFrom&quot;).Value
m_CollectTimeTo=nv.item( &quot;CollectTimeTo&quot;).Value
m_ThePerson=nv.item( &quot;ThePerson&quot;).Value
m_Phone=nv.item( &quot;Phone&quot;).Value
m_TheComment=nv.item( &quot;TheComment&quot;).Value
m_TheLength=nv.item( &quot;TheLength&quot;).Value
m_TheDuration=nv.item( &quot;TheDuration&quot;).Value
m_Info=nv.item( &quot;Info&quot;).Value
  m_AutoSuplier_ID=nv.item( &quot;AutoSuplier&quot;).Value
m_SupMoneyDate=nv.item( &quot;SupMoneyDate&quot;).Value
m_CalcWithNDS=nv.item( &quot;CalcWithNDS&quot;).Value
m_SummNDS=nv.item( &quot;SummNDS&quot;).Value
m_Summ=nv.item( &quot;Summ&quot;).Value
m_SupSumm=nv.item( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.item( &quot;SupSummNDS&quot;).Value
else

  m_TheFilial_ID=nv.fields( &quot;TheFilial&quot;).Value
  m_AutoType_ID=nv.fields( &quot;AutoType&quot;).Value
m_CollectDate=nv.fields( &quot;CollectDate&quot;).Value
m_TheAddress=nv.fields( &quot;TheAddress&quot;).Value
m_CollectTimeFrom=nv.fields( &quot;CollectTimeFrom&quot;).Value
m_CollectTimeTo=nv.fields( &quot;CollectTimeTo&quot;).Value
m_ThePerson=nv.fields( &quot;ThePerson&quot;).Value
m_Phone=nv.fields( &quot;Phone&quot;).Value
m_TheComment=nv.fields( &quot;TheComment&quot;).Value
m_TheLength=nv.fields( &quot;TheLength&quot;).Value
m_TheDuration=nv.fields( &quot;TheDuration&quot;).Value
m_Info=nv.fields( &quot;Info&quot;).Value
  m_AutoSuplier_ID=nv.fields( &quot;AutoSuplier&quot;).Value
m_SupMoneyDate=nv.fields( &quot;SupMoneyDate&quot;).Value
m_CalcWithNDS=nv.fields( &quot;CalcWithNDS&quot;).Value
m_SummNDS=nv.fields( &quot;SummNDS&quot;).Value
m_Summ=nv.fields( &quot;Summ&quot;).Value
m_SupSumm=nv.fields( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.fields( &quot;SupSummNDS&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PEKZ_ACLCT
   set o = new PEKZ_ACLCT
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PEKZ_ACLCT.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PEKZ_ACLCT.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PEKZ_ACLCT&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PEKZ_ACLCT.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PEKZ_ACLCT&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PEKZ_ACLCT.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheFilial_ID=&quot;&quot;
 set m_TheFilial= nothing
 m_AutoType_ID=&quot;&quot;
 set m_AutoType= nothing
 m_AutoSuplier_ID=&quot;&quot;
 set m_AutoSuplier= nothing
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_ACLCT.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheFilial=nothing
  m_TheFilial_ID=node.Attributes.getNamedItem(&quot;THEFILIAL&quot;).nodeValue
  m_TheFilial_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEFILIAL_BRIEF&quot;).nodeValue
  set AutoType=nothing
  m_AutoType_ID=node.Attributes.getNamedItem(&quot;AUTOTYPE&quot;).nodeValue
  m_AutoType_ID_BRIEF=node.Attributes.getNamedItem(&quot;AUTOTYPE_BRIEF&quot;).nodeValue
  CollectDate=node.Attributes.getNamedItem(&quot;COLLECTDATE&quot;).nodeValue
  TheAddress=Replace(node.Attributes.getNamedItem(&quot;THEADDRESS&quot;).nodeValue,vbLf,vbcrlf)
  CollectTimeFrom=node.Attributes.getNamedItem(&quot;COLLECTTIMEFROM&quot;).nodeValue
  CollectTimeTo=node.Attributes.getNamedItem(&quot;COLLECTTIMETO&quot;).nodeValue
  ThePerson=Replace(node.Attributes.getNamedItem(&quot;THEPERSON&quot;).nodeValue,vbLf,vbcrlf)
  Phone=Replace(node.Attributes.getNamedItem(&quot;PHONE&quot;).nodeValue,vbLf,vbcrlf)
  TheComment=Replace(node.Attributes.getNamedItem(&quot;THECOMMENT&quot;).nodeValue,vbLf,vbcrlf)
  TheLength=val(Replace(node.Attributes.getNamedItem(&quot;THELENGTH&quot;).nodeValue,vbLf,vbcrlf))
  TheDuration=val(Replace(node.Attributes.getNamedItem(&quot;THEDURATION&quot;).nodeValue,vbLf,vbcrlf))
  Info=Replace(node.Attributes.getNamedItem(&quot;INFO&quot;).nodeValue,vbLf,vbcrlf)
  set AutoSuplier=nothing
  m_AutoSuplier_ID=node.Attributes.getNamedItem(&quot;AUTOSUPLIER&quot;).nodeValue
  m_AutoSuplier_ID_BRIEF=node.Attributes.getNamedItem(&quot;AUTOSUPLIER_BRIEF&quot;).nodeValue
  SupMoneyDate=node.Attributes.getNamedItem(&quot;SUPMONEYDATE&quot;).nodeValue
  CalcWithNDS=node.Attributes.getNamedItem(&quot;CALCWITHNDS&quot;).nodeValue
  SummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  Summ=val(Replace(node.Attributes.getNamedItem(&quot;SUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupSumm=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupSummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THEFILIAL&quot;, m_TheFilial_ID
  if not (TheFilial is nothing) then 
    node.setAttribute &quot;THEFILIAL_BRIEF&quot;, TheFilial.BRIEF
  else
    node.setAttribute &quot;THEFILIAL_BRIEF&quot;, m_TheFilial_ID_BRIEF
  end if
  node.setAttribute &quot;AUTOTYPE&quot;, m_AutoType_ID
  if not (AutoType is nothing) then 
    node.setAttribute &quot;AUTOTYPE_BRIEF&quot;, AutoType.BRIEF
  else
    node.setAttribute &quot;AUTOTYPE_BRIEF&quot;, m_AutoType_ID_BRIEF
  end if
  node.setAttribute &quot;COLLECTDATE&quot;, Cdbl(CollectDate)
  node.setAttribute &quot;THEADDRESS&quot;, TheAddress
  node.setAttribute &quot;COLLECTTIMEFROM&quot;, Cdbl(CollectTimeFrom)
  node.setAttribute &quot;COLLECTTIMETO&quot;, Cdbl(CollectTimeTo)
  node.setAttribute &quot;THEPERSON&quot;, ThePerson
  node.setAttribute &quot;PHONE&quot;, Phone
  node.setAttribute &quot;THECOMMENT&quot;, TheComment
  node.setAttribute &quot;THELENGTH&quot;, replace(cstr(TheLength),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;THEDURATION&quot;, replace(cstr(TheDuration),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;INFO&quot;, Info
  node.setAttribute &quot;AUTOSUPLIER&quot;, m_AutoSuplier_ID
  if not (AutoSuplier is nothing) then 
    node.setAttribute &quot;AUTOSUPLIER_BRIEF&quot;, AutoSuplier.BRIEF
  else
    node.setAttribute &quot;AUTOSUPLIER_BRIEF&quot;, m_AutoSuplier_ID_BRIEF
  end if
  node.setAttribute &quot;SUPMONEYDATE&quot;, Cdbl(SupMoneyDate)
  node.setAttribute &quot;CALCWITHNDS&quot;, CalcWithNDS
  node.setAttribute &quot;SUMMNDS&quot;, replace(cstr(SummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMM&quot;, replace(cstr(Summ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMM&quot;, replace(cstr(SupSumm),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMMNDS&quot;, replace(cstr(SupSummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_ACLCT&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_ACLCT&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_ACLCT&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_ACLCT&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_ACLCT_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Сбор груза для отправки автотранспортом
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PEKZ_ACLCT&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_ACLCT.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PEKZ_ACLCT
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PEKZ_ACLCT
 dim LID as  string
 dim o as  PEKZ_ACLCT
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PEKZ_ACLCT
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PEKZ_ACLCT
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PEKZ_ACLCT
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PEKZ_ACLCT
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PEKZ_ACLCT
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PEKZ_ACLCT
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PEKZ_ACLCT
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ACLCT
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ACLCT
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PEKZ_ACLCT
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PEKZ_ACLCT
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_ACLCT.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PEKZ_ACLCT
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PEKZ_ACLCT
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PEKZ_ACLCTID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PEKZ_ACLCT
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_ACLCT_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_ACLCT&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PEKZ_ACLCT
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_ACLCT&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Филиал&quot;, 0, 0, &quot;TheFilial&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тип автотранспорта&quot;, 0, 0, &quot;AutoType&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата получения груза&quot;, 0, 0, &quot;CollectDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Адрес &quot;, 0, 0, &quot;TheAddress&quot;).SortType =1
  YGrid.Columns.Add(&quot;Начиная с&quot;, 0, 0, &quot;CollectTimeFrom&quot;).SortType =4
  YGrid.Columns.Add(&quot;По&quot;, 0, 0, &quot;CollectTimeTo&quot;).SortType =4
  YGrid.Columns.Add(&quot;Контактное лицо&quot;, 0, 0, &quot;ThePerson&quot;).SortType =1
  YGrid.Columns.Add(&quot;Контактный телефон&quot;, 0, 0, &quot;Phone&quot;).SortType =1
  YGrid.Columns.Add(&quot;Примечание&quot;, 0, 0, &quot;TheComment&quot;).SortType =1
  YGrid.Columns.Add(&quot;Километраж&quot;, 0, 0, &quot;TheLength&quot;).SortType =2
  YGrid.Columns.Add(&quot;Длительность (час)&quot;, 0, 0, &quot;TheDuration&quot;).SortType =2
  YGrid.Columns.Add(&quot;Данные о грузе&quot;, 0, 0, &quot;Info&quot;).SortType =1
  YGrid.Columns.Add(&quot;Поставщик&quot;, 0, 0, &quot;AutoSuplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Cписание денежных средств поставщиком&quot;, 0, 0, &quot;SupMoneyDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Расчет с НДС&quot;, 0, 0, &quot;CalcWithNDS&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сумма с НДС&quot;, 0, 0, &quot;SummNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма без НДС&quot;, 0, 0, &quot;Summ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику без НДС&quot;, 0, 0, &quot;SupSumm&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику с НДС&quot;, 0, 0, &quot;SupSummNDS&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PEKZ_ACLCT
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheFilial is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheFilial.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.AutoType is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.AutoType.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.CollectDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.TheAddress, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.CollectTimeFrom, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.CollectTimeTo, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.ThePerson, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.Phone, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.TheComment, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.TheLength, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.TheDuration, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.Info, vbCrLf, &quot; &quot;), 255)
   if obj.AutoSuplier is nothing then
    Values.Value(13) = &quot;Не задано&quot;
   else 
    Values.Value(13) = Left(Replace(obj.AutoSuplier.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(14) = Left(Replace(obj.SupMoneyDate, vbCrLf, &quot; &quot;), 255)
   if obj.CalcWithNDS =-1 then
     Values.Value(15) = &quot;Да&quot;
   end if
   if obj.CalcWithNDS =0 then
     Values.Value(15) = &quot;Нет&quot;
   end if
    Values.Value(16) = Left(Replace(obj.SummNDS, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.Summ, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.SupSumm, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.SupSummNDS, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PEKZ_ACLCT&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_ADLVR" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Доставка груза получателю автотранспортом
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheFilial as object
Dim m_TheFilial_ID as string
Dim m_TheFilial_ID_BRIEF as string
private m_AutoType as object
Dim m_AutoType_ID as string
Dim m_AutoType_ID_BRIEF as string
private m_TheAddress as STRING
private m_CollectDate as DATE
private m_CollectTimeFrom as DATE
private m_CollectTimeTo as DATE
private m_ThePerson as String
private m_Phone as String
private m_TheComment as STRING
private m_TheLength as double
private m_TheDuration as double
private m_Info as STRING
private m_AutoSuplier as object
Dim m_AutoSuplier_ID as string
Dim m_AutoSuplier_ID_BRIEF as string
private m_SupMoneyDate as DATE
private m_CalcWithNDS as enumBoolean
private m_SummNDS as double
private m_Summ as double
private m_SupSumm as double
private m_SupSummNDS as double
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;PEKZ_ADLVR&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_ADLVR.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Филиал

'Филиал
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheFilial(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheFilial&quot;,TheFilial,newvalue
on error resume next
m_TheFilial_ID=&quot;&quot;
m_TheFilial_ID=newValue.id
'  set   m_TheFilial= newValue
end if
end property

'Филиал
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheFilial
public property Get TheFilial() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheFilial as object
if  m_TheFilial_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheFilial=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_TheFilial_ID)
  if tmp_TheFilial is nothing then
    m_TheFilial_ID_BRIEF = &quot;&quot; 
  else
    m_TheFilial_ID_BRIEF = tmp_TheFilial.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_TheFilial_ID, tmp_TheFilial
  set TheFilial=tmp_TheFilial
  exit property
end if
  '  set TheFilial = m_TheFilial
end property
' let 
'Тип автотранспорта

'Тип автотранспорта
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set AutoType(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;AutoType&quot;,AutoType,newvalue
on error resume next
m_AutoType_ID=&quot;&quot;
m_AutoType_ID=newValue.id
'  set   m_AutoType= newValue
end if
end property

'Тип автотранспорта
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. AutoType
public property Get AutoType() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_AutoType as object
if  m_AutoType_ID&lt;&gt;&quot;&quot; then 
  set tmp_AutoType=Application.FindRowObject(&quot;PEKD_AUTO&quot;,m_AutoType_ID)
  if tmp_AutoType is nothing then
    m_AutoType_ID_BRIEF = &quot;&quot; 
  else
    m_AutoType_ID_BRIEF = tmp_AutoType.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_AUTO&quot; &amp; m_AutoType_ID, tmp_AutoType
  set AutoType=tmp_AutoType
  exit property
end if
  '  set AutoType = m_AutoType
end property
' let 
'Адрес 

'Адрес
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheAddress(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheAddress&quot;,TheAddress,newvalue

   m_TheAddress= newValue
end if
end property

'Адрес
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheAddress
public property Get TheAddress() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheAddress = m_TheAddress
end property
' let 
'Дата получения груза

'Дата получения груза
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CollectDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CollectDate&quot;,CollectDate,newvalue

   m_CollectDate= newValue
end if
end property

'Дата получения груза
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. CollectDate
public property Get CollectDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   CollectDate = m_CollectDate
end property
' let 
'Начиная с

'Начиная с
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CollectTimeFrom(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CollectTimeFrom&quot;,CollectTimeFrom,newvalue

   m_CollectTimeFrom= newValue
end if
end property

'Начиная с
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. CollectTimeFrom
public property Get CollectTimeFrom() as DATE
 LoadFromDatabase
 AccessTime=Now

   CollectTimeFrom = m_CollectTimeFrom
end property
' let 
'По

'По
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CollectTimeTo(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CollectTimeTo&quot;,CollectTimeTo,newvalue

   m_CollectTimeTo= newValue
end if
end property

'По
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. CollectTimeTo
public property Get CollectTimeTo() as DATE
 LoadFromDatabase
 AccessTime=Now

   CollectTimeTo = m_CollectTimeTo
end property
' let 
'Контактное лицо

'Контактное лицо
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ThePerson(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ThePerson&quot;,ThePerson,newvalue

   m_ThePerson= newValue
end if
end property

'Контактное лицо
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. ThePerson
public property Get ThePerson() as String
 LoadFromDatabase
 AccessTime=Now

   ThePerson = m_ThePerson
end property
' let 
'Контактный телефон

'Контактный телефон
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Phone(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Phone&quot;,Phone,newvalue

   m_Phone= newValue
end if
end property

'Контактный телефон
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Phone
public property Get Phone() as String
 LoadFromDatabase
 AccessTime=Now

   Phone = m_Phone
end property
' let 
'Примечание

'Примечание
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheComment(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheComment&quot;,TheComment,newvalue

   m_TheComment= newValue
end if
end property

'Примечание
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheComment
public property Get TheComment() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheComment = m_TheComment
end property
' let 
'Километраж

'Километраж
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheLength(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheLength&quot;,TheLength,newvalue

   m_TheLength= newValue
end if
end property

'Километраж
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TheLength
public property Get TheLength() as double
 LoadFromDatabase
 AccessTime=Now

   TheLength = m_TheLength
end property
' let 
'Длительность (час)

'Длительность (час)
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheDuration(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDuration&quot;,TheDuration,newvalue

   m_TheDuration= newValue
end if
end property

'Длительность (час)
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TheDuration
public property Get TheDuration() as double
 LoadFromDatabase
 AccessTime=Now

   TheDuration = m_TheDuration
end property
' let 
'Данные о грузе

'Данные о грузе
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Info(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Info&quot;,Info,newvalue

   m_Info= newValue
end if
end property

'Данные о грузе
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. Info
public property Get Info() as STRING
 LoadFromDatabase
 AccessTime=Now

   Info = m_Info
end property
' let 
'Поставщик

'Поставщик
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set AutoSuplier(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;AutoSuplier&quot;,AutoSuplier,newvalue
on error resume next
m_AutoSuplier_ID=&quot;&quot;
m_AutoSuplier_ID=newValue.id
' set   m_AutoSuplier= newValue
end if
end property

'Поставщик
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. AutoSuplier
public property Get AutoSuplier() as object
 LoadFromDatabase
 AccessTime=Now
if  m_AutoSuplier_ID&lt;&gt;&quot;&quot; then 
  set AutoSuplier=application.Manager.GetInstanceObject(right(m_AutoSuplier_ID,38))
 EXIT PROPERTY
end if
  ' set AutoSuplier = m_AutoSuplier
end property
' let 
'Cписание денежных средств поставщиком

'Cписание денежных средств поставщиком
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupMoneyDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupMoneyDate&quot;,SupMoneyDate,newvalue

   m_SupMoneyDate= newValue
end if
end property

'Cписание денежных средств поставщиком
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. SupMoneyDate
public property Get SupMoneyDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   SupMoneyDate = m_SupMoneyDate
end property
' let 
'Расчет с НДС

'Расчет с НДС
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CalcWithNDS(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CalcWithNDS&quot;,CalcWithNDS,newvalue

   m_CalcWithNDS= newValue
end if
end property

'Расчет с НДС
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CalcWithNDS
public property Get CalcWithNDS() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CalcWithNDS = m_CalcWithNDS
end property
' let 
'Сумма с НДС

'Сумма с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummNDS&quot;,SummNDS,newvalue

   m_SummNDS= newValue
end if
end property

'Сумма с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummNDS
public property Get SummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SummNDS = m_SummNDS
end property
' let 
'Сумма без НДС

'Сумма без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Summ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Summ&quot;,Summ,newvalue

   m_Summ= newValue
end if
end property

'Сумма без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Summ
public property Get Summ() as double
 LoadFromDatabase
 AccessTime=Now

   Summ = m_Summ
end property
' let 
'Сумма поставщику без НДС

'Сумма поставщику без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSumm(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSumm&quot;,SupSumm,newvalue

   m_SupSumm= newValue
end if
end property

'Сумма поставщику без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSumm
public property Get SupSumm() as double
 LoadFromDatabase
 AccessTime=Now

   SupSumm = m_SupSumm
end property
' let 
'Сумма поставщику с НДС

'Сумма поставщику с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSummNDS&quot;,SupSummNDS,newvalue

   m_SupSummNDS= newValue
end if
end property

'Сумма поставщику с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSummNDS
public property Get SupSummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SupSummNDS = m_SupSummNDS
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

 ' Reference to PEKD_DEPT
    if m_TheFilial_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheFilial&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheFilial&quot;,m_TheFilial_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to PEKD_AUTO
    if m_AutoType_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;AutoType&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;AutoType&quot;,m_AutoType_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;TheAddress&quot;,m_TheAddress)
  set nvi=nv.Add( &quot;CollectDate&quot;,m_CollectDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;CollectTimeFrom&quot;,m_CollectTimeFrom)
nvi.ValueType = adDBTime 
  set nvi=nv.Add( &quot;CollectTimeTo&quot;,m_CollectTimeTo)
nvi.ValueType = adDBTime 
  set nvi=nv.Add( &quot;ThePerson&quot;,m_ThePerson)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Phone&quot;,m_Phone)
nvi.ValueSize = 20
  set nvi=nv.Add( &quot;TheComment&quot;,m_TheComment)
  set nvi=nv.Add( &quot;TheLength&quot;,m_TheLength)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;TheDuration&quot;,m_TheDuration)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Info&quot;,m_Info)
 ' Reference to object
    if m_AutoSuplier_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;AutoSuplier&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;AutoSuplier&quot;,m_AutoSuplier_ID)
    end if 
    nvi.oracle_guid 
  set nvi=nv.Add( &quot;SupMoneyDate&quot;,m_SupMoneyDate)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;CalcWithNDS&quot;,m_CalcWithNDS)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;SummNDS&quot;,m_SummNDS)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Summ&quot;,m_Summ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSumm&quot;,m_SupSumm)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSummNDS&quot;,m_SupSummNDS)
nvi.ValueType =  adDouble 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; CollectDate &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

  m_TheFilial_ID=nv.item( &quot;TheFilial&quot;).Value
  m_AutoType_ID=nv.item( &quot;AutoType&quot;).Value
m_TheAddress=nv.item( &quot;TheAddress&quot;).Value
m_CollectDate=nv.item( &quot;CollectDate&quot;).Value
m_CollectTimeFrom=nv.item( &quot;CollectTimeFrom&quot;).Value
m_CollectTimeTo=nv.item( &quot;CollectTimeTo&quot;).Value
m_ThePerson=nv.item( &quot;ThePerson&quot;).Value
m_Phone=nv.item( &quot;Phone&quot;).Value
m_TheComment=nv.item( &quot;TheComment&quot;).Value
m_TheLength=nv.item( &quot;TheLength&quot;).Value
m_TheDuration=nv.item( &quot;TheDuration&quot;).Value
m_Info=nv.item( &quot;Info&quot;).Value
  m_AutoSuplier_ID=nv.item( &quot;AutoSuplier&quot;).Value
m_SupMoneyDate=nv.item( &quot;SupMoneyDate&quot;).Value
m_CalcWithNDS=nv.item( &quot;CalcWithNDS&quot;).Value
m_SummNDS=nv.item( &quot;SummNDS&quot;).Value
m_Summ=nv.item( &quot;Summ&quot;).Value
m_SupSumm=nv.item( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.item( &quot;SupSummNDS&quot;).Value
else

  m_TheFilial_ID=nv.fields( &quot;TheFilial&quot;).Value
  m_AutoType_ID=nv.fields( &quot;AutoType&quot;).Value
m_TheAddress=nv.fields( &quot;TheAddress&quot;).Value
m_CollectDate=nv.fields( &quot;CollectDate&quot;).Value
m_CollectTimeFrom=nv.fields( &quot;CollectTimeFrom&quot;).Value
m_CollectTimeTo=nv.fields( &quot;CollectTimeTo&quot;).Value
m_ThePerson=nv.fields( &quot;ThePerson&quot;).Value
m_Phone=nv.fields( &quot;Phone&quot;).Value
m_TheComment=nv.fields( &quot;TheComment&quot;).Value
m_TheLength=nv.fields( &quot;TheLength&quot;).Value
m_TheDuration=nv.fields( &quot;TheDuration&quot;).Value
m_Info=nv.fields( &quot;Info&quot;).Value
  m_AutoSuplier_ID=nv.fields( &quot;AutoSuplier&quot;).Value
m_SupMoneyDate=nv.fields( &quot;SupMoneyDate&quot;).Value
m_CalcWithNDS=nv.fields( &quot;CalcWithNDS&quot;).Value
m_SummNDS=nv.fields( &quot;SummNDS&quot;).Value
m_Summ=nv.fields( &quot;Summ&quot;).Value
m_SupSumm=nv.fields( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.fields( &quot;SupSummNDS&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as PEKZ_ADLVR
   set o = new PEKZ_ADLVR
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;PEKZ_ADLVR.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;PEKZ_ADLVR.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;PEKZ_ADLVR&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;PEKZ_ADLVR.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;PEKZ_ADLVR&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;PEKZ_ADLVR.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheFilial_ID=&quot;&quot;
 set m_TheFilial= nothing
 m_AutoType_ID=&quot;&quot;
 set m_AutoType= nothing
 m_AutoSuplier_ID=&quot;&quot;
 set m_AutoSuplier= nothing
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_ADLVR.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  set TheFilial=nothing
  m_TheFilial_ID=node.Attributes.getNamedItem(&quot;THEFILIAL&quot;).nodeValue
  m_TheFilial_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEFILIAL_BRIEF&quot;).nodeValue
  set AutoType=nothing
  m_AutoType_ID=node.Attributes.getNamedItem(&quot;AUTOTYPE&quot;).nodeValue
  m_AutoType_ID_BRIEF=node.Attributes.getNamedItem(&quot;AUTOTYPE_BRIEF&quot;).nodeValue
  TheAddress=Replace(node.Attributes.getNamedItem(&quot;THEADDRESS&quot;).nodeValue,vbLf,vbcrlf)
  CollectDate=node.Attributes.getNamedItem(&quot;COLLECTDATE&quot;).nodeValue
  CollectTimeFrom=node.Attributes.getNamedItem(&quot;COLLECTTIMEFROM&quot;).nodeValue
  CollectTimeTo=node.Attributes.getNamedItem(&quot;COLLECTTIMETO&quot;).nodeValue
  ThePerson=Replace(node.Attributes.getNamedItem(&quot;THEPERSON&quot;).nodeValue,vbLf,vbcrlf)
  Phone=Replace(node.Attributes.getNamedItem(&quot;PHONE&quot;).nodeValue,vbLf,vbcrlf)
  TheComment=Replace(node.Attributes.getNamedItem(&quot;THECOMMENT&quot;).nodeValue,vbLf,vbcrlf)
  TheLength=val(Replace(node.Attributes.getNamedItem(&quot;THELENGTH&quot;).nodeValue,vbLf,vbcrlf))
  TheDuration=val(Replace(node.Attributes.getNamedItem(&quot;THEDURATION&quot;).nodeValue,vbLf,vbcrlf))
  Info=Replace(node.Attributes.getNamedItem(&quot;INFO&quot;).nodeValue,vbLf,vbcrlf)
  set AutoSuplier=nothing
  m_AutoSuplier_ID=node.Attributes.getNamedItem(&quot;AUTOSUPLIER&quot;).nodeValue
  m_AutoSuplier_ID_BRIEF=node.Attributes.getNamedItem(&quot;AUTOSUPLIER_BRIEF&quot;).nodeValue
  SupMoneyDate=node.Attributes.getNamedItem(&quot;SUPMONEYDATE&quot;).nodeValue
  CalcWithNDS=node.Attributes.getNamedItem(&quot;CALCWITHNDS&quot;).nodeValue
  SummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  Summ=val(Replace(node.Attributes.getNamedItem(&quot;SUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupSumm=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupSummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THEFILIAL&quot;, m_TheFilial_ID
  if not (TheFilial is nothing) then 
    node.setAttribute &quot;THEFILIAL_BRIEF&quot;, TheFilial.BRIEF
  else
    node.setAttribute &quot;THEFILIAL_BRIEF&quot;, m_TheFilial_ID_BRIEF
  end if
  node.setAttribute &quot;AUTOTYPE&quot;, m_AutoType_ID
  if not (AutoType is nothing) then 
    node.setAttribute &quot;AUTOTYPE_BRIEF&quot;, AutoType.BRIEF
  else
    node.setAttribute &quot;AUTOTYPE_BRIEF&quot;, m_AutoType_ID_BRIEF
  end if
  node.setAttribute &quot;THEADDRESS&quot;, TheAddress
  node.setAttribute &quot;COLLECTDATE&quot;, Cdbl(CollectDate)
  node.setAttribute &quot;COLLECTTIMEFROM&quot;, Cdbl(CollectTimeFrom)
  node.setAttribute &quot;COLLECTTIMETO&quot;, Cdbl(CollectTimeTo)
  node.setAttribute &quot;THEPERSON&quot;, ThePerson
  node.setAttribute &quot;PHONE&quot;, Phone
  node.setAttribute &quot;THECOMMENT&quot;, TheComment
  node.setAttribute &quot;THELENGTH&quot;, replace(cstr(TheLength),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;THEDURATION&quot;, replace(cstr(TheDuration),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;INFO&quot;, Info
  node.setAttribute &quot;AUTOSUPLIER&quot;, m_AutoSuplier_ID
  if not (AutoSuplier is nothing) then 
    node.setAttribute &quot;AUTOSUPLIER_BRIEF&quot;, AutoSuplier.BRIEF
  else
    node.setAttribute &quot;AUTOSUPLIER_BRIEF&quot;, m_AutoSuplier_ID_BRIEF
  end if
  node.setAttribute &quot;SUPMONEYDATE&quot;, Cdbl(SupMoneyDate)
  node.setAttribute &quot;CALCWITHNDS&quot;, CalcWithNDS
  node.setAttribute &quot;SUMMNDS&quot;, replace(cstr(SummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMM&quot;, replace(cstr(Summ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMM&quot;, replace(cstr(SupSumm),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMMNDS&quot;, replace(cstr(SupSummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;PEKZ_ADLVR&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;PEKZ_ADLVR&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;PEKZ_ADLVR&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;PEKZ_ADLVR&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKZ_ADLVR_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Доставка груза получателю автотранспортом
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;PEKZ_ADLVR&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;PEKZ_ADLVR.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as  PEKZ_ADLVR
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  PEKZ_ADLVR
 dim LID as  string
 dim o as  PEKZ_ADLVR
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  PEKZ_ADLVR
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as PEKZ_ADLVR
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as PEKZ_ADLVR
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as PEKZ_ADLVR
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as PEKZ_ADLVR
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as PEKZ_ADLVR
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as PEKZ_ADLVR
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса PEKZ_ADLVR
'  ,или Nothing
'See Also:
'Example:
' dim variable as PEKZ_ADLVR
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as PEKZ_ADLVR
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  PEKZ_ADLVR
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;PEKZ_ADLVR.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As PEKZ_ADLVR
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As PEKZ_ADLVR
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!PEKZ_ADLVRID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as PEKZ_ADLVR
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_ADLVR_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_ADLVR&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as PEKZ_ADLVR
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_ADLVR&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Филиал&quot;, 0, 0, &quot;TheFilial&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тип автотранспорта&quot;, 0, 0, &quot;AutoType&quot;).SortType =1
  YGrid.Columns.Add(&quot;Адрес &quot;, 0, 0, &quot;TheAddress&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата получения груза&quot;, 0, 0, &quot;CollectDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Начиная с&quot;, 0, 0, &quot;CollectTimeFrom&quot;).SortType =4
  YGrid.Columns.Add(&quot;По&quot;, 0, 0, &quot;CollectTimeTo&quot;).SortType =4
  YGrid.Columns.Add(&quot;Контактное лицо&quot;, 0, 0, &quot;ThePerson&quot;).SortType =1
  YGrid.Columns.Add(&quot;Контактный телефон&quot;, 0, 0, &quot;Phone&quot;).SortType =1
  YGrid.Columns.Add(&quot;Примечание&quot;, 0, 0, &quot;TheComment&quot;).SortType =1
  YGrid.Columns.Add(&quot;Километраж&quot;, 0, 0, &quot;TheLength&quot;).SortType =2
  YGrid.Columns.Add(&quot;Длительность (час)&quot;, 0, 0, &quot;TheDuration&quot;).SortType =2
  YGrid.Columns.Add(&quot;Данные о грузе&quot;, 0, 0, &quot;Info&quot;).SortType =1
  YGrid.Columns.Add(&quot;Поставщик&quot;, 0, 0, &quot;AutoSuplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Cписание денежных средств поставщиком&quot;, 0, 0, &quot;SupMoneyDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Расчет с НДС&quot;, 0, 0, &quot;CalcWithNDS&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сумма с НДС&quot;, 0, 0, &quot;SummNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма без НДС&quot;, 0, 0, &quot;Summ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику без НДС&quot;, 0, 0, &quot;SupSumm&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику с НДС&quot;, 0, 0, &quot;SupSummNDS&quot;).SortType =2
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as PEKZ_ADLVR
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
   if obj.TheFilial is nothing then
    Values.Value(1) = &quot;Не задано&quot;
   else 
    Values.Value(1) = Left(Replace(obj.TheFilial.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.AutoType is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.AutoType.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.TheAddress, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.CollectDate, vbCrLf, &quot; &quot;), 255)
    Values.Value(5) = Left(Replace(obj.CollectTimeFrom, vbCrLf, &quot; &quot;), 255)
    Values.Value(6) = Left(Replace(obj.CollectTimeTo, vbCrLf, &quot; &quot;), 255)
    Values.Value(7) = Left(Replace(obj.ThePerson, vbCrLf, &quot; &quot;), 255)
    Values.Value(8) = Left(Replace(obj.Phone, vbCrLf, &quot; &quot;), 255)
    Values.Value(9) = Left(Replace(obj.TheComment, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.TheLength, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.TheDuration, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.Info, vbCrLf, &quot; &quot;), 255)
   if obj.AutoSuplier is nothing then
    Values.Value(13) = &quot;Не задано&quot;
   else 
    Values.Value(13) = Left(Replace(obj.AutoSuplier.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(14) = Left(Replace(obj.SupMoneyDate, vbCrLf, &quot; &quot;), 255)
   if obj.CalcWithNDS =-1 then
     Values.Value(15) = &quot;Да&quot;
   end if
   if obj.CalcWithNDS =0 then
     Values.Value(15) = &quot;Нет&quot;
   end if
    Values.Value(16) = Left(Replace(obj.SummNDS, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.Summ, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.SupSumm, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.SupSummNDS, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;PEKZ_ADLVR&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="pekz_dop" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Дополнительные услуги
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_sequence as long
private m_SRV as object
Dim m_SRV_ID as string
Dim m_SRV_ID_BRIEF as string
private m_Quantity as double
private m_EDIZM as object
Dim m_EDIZM_ID as string
Dim m_EDIZM_ID_BRIEF as string
private m_PathFilial as object
Dim m_PathFilial_ID as string
Dim m_PathFilial_ID_BRIEF as string
private m_TheComment as STRING
private m_DopSupplier as object
Dim m_DopSupplier_ID as string
Dim m_DopSupplier_ID_BRIEF as string
private m_SupMoneyDate as DATE
private m_TheCurrency as object
Dim m_TheCurrency_ID as string
Dim m_TheCurrency_ID_BRIEF as string
private m_TRF as double
private m_Summ as double
private m_SummNDS as double
private m_SupTRF as double
private m_SupSumm as double
private m_SupSummNDS as double
private m_CalcWithNDS as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;pekz_dop&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;pekz_dop.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'№

'№
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let sequence(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;sequence&quot;,sequence,newvalue

   m_sequence= newValue
end if
end property

'№
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. sequence
public property Get sequence() as long
 LoadFromDatabase
 AccessTime=Now

   sequence = m_sequence
end property
' let 
'Услуга

'Услуга
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set SRV(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SRV&quot;,SRV,newvalue
on error resume next
m_SRV_ID=&quot;&quot;
m_SRV_ID=newValue.id
'  set   m_SRV= newValue
end if
end property

'Услуга
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. SRV
public property Get SRV() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_SRV as object
if  m_SRV_ID&lt;&gt;&quot;&quot; then 
  set tmp_SRV=Application.FindRowObject(&quot;PEKD_SRV&quot;,m_SRV_ID)
  if tmp_SRV is nothing then
    m_SRV_ID_BRIEF = &quot;&quot; 
  else
    m_SRV_ID_BRIEF = tmp_SRV.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_SRV&quot; &amp; m_SRV_ID, tmp_SRV
  set SRV=tmp_SRV
  exit property
end if
  '  set SRV = m_SRV
end property
' let 
'Количество

'Количество
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Quantity(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Quantity&quot;,Quantity,newvalue

   m_Quantity= newValue
end if
end property

'Количество
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Quantity
public property Get Quantity() as double
 LoadFromDatabase
 AccessTime=Now

   Quantity = m_Quantity
end property
' let 
'Ед. измерения

'Ед. измерения
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set EDIZM(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;EDIZM&quot;,EDIZM,newvalue
on error resume next
m_EDIZM_ID=&quot;&quot;
m_EDIZM_ID=newValue.id
'  set   m_EDIZM= newValue
end if
end property

'Ед. измерения
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. EDIZM
public property Get EDIZM() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_EDIZM as object
if  m_EDIZM_ID&lt;&gt;&quot;&quot; then 
  set tmp_EDIZM=Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,m_EDIZM_ID)
  if tmp_EDIZM is nothing then
    m_EDIZM_ID_BRIEF = &quot;&quot; 
  else
    m_EDIZM_ID_BRIEF = tmp_EDIZM.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_EDIZM&quot; &amp; m_EDIZM_ID, tmp_EDIZM
  set EDIZM=tmp_EDIZM
  exit property
end if
  '  set EDIZM = m_EDIZM
end property
' let 
'Филиал

'Филиал
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set PathFilial(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;PathFilial&quot;,PathFilial,newvalue
on error resume next
m_PathFilial_ID=&quot;&quot;
m_PathFilial_ID=newValue.id
'  set   m_PathFilial= newValue
end if
end property

'Филиал
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. PathFilial
public property Get PathFilial() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_PathFilial as object
if  m_PathFilial_ID&lt;&gt;&quot;&quot; then 
  set tmp_PathFilial=Application.FindRowObject(&quot;PEKD_DEPT&quot;,m_PathFilial_ID)
  if tmp_PathFilial is nothing then
    m_PathFilial_ID_BRIEF = &quot;&quot; 
  else
    m_PathFilial_ID_BRIEF = tmp_PathFilial.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;PEKD_DEPT&quot; &amp; m_PathFilial_ID, tmp_PathFilial
  set PathFilial=tmp_PathFilial
  exit property
end if
  '  set PathFilial = m_PathFilial
end property
' let 
'Примечание

'Примечание
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheComment(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheComment&quot;,TheComment,newvalue

   m_TheComment= newValue
end if
end property

'Примечание
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheComment
public property Get TheComment() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheComment = m_TheComment
end property
' let 
'Поставщик

'Поставщик
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set DopSupplier(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DopSupplier&quot;,DopSupplier,newvalue
on error resume next
m_DopSupplier_ID=&quot;&quot;
m_DopSupplier_ID=newValue.id
' set   m_DopSupplier= newValue
end if
end property

'Поставщик
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. DopSupplier
public property Get DopSupplier() as object
 LoadFromDatabase
 AccessTime=Now
if  m_DopSupplier_ID&lt;&gt;&quot;&quot; then 
  set DopSupplier=application.Manager.GetInstanceObject(right(m_DopSupplier_ID,38))
 EXIT PROPERTY
end if
  ' set DopSupplier = m_DopSupplier
end property
' let 
'Cписание денежных средств поставщиком

'Cписание денежных средств поставщиком
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupMoneyDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupMoneyDate&quot;,SupMoneyDate,newvalue

   m_SupMoneyDate= newValue
end if
end property

'Cписание денежных средств поставщиком
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. SupMoneyDate
public property Get SupMoneyDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   SupMoneyDate = m_SupMoneyDate
end property
' let 
'Валюта

'Валюта
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheCurrency(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheCurrency&quot;,TheCurrency,newvalue
on error resume next
m_TheCurrency_ID=&quot;&quot;
m_TheCurrency_ID=newValue.id
'  set   m_TheCurrency= newValue
end if
end property

'Валюта
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheCurrency
public property Get TheCurrency() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheCurrency as object
if  m_TheCurrency_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheCurrency=Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,m_TheCurrency_ID)
  if tmp_TheCurrency is nothing then
    m_TheCurrency_ID_BRIEF = &quot;&quot; 
  else
    m_TheCurrency_ID_BRIEF = tmp_TheCurrency.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;ENTDIC_CURRENCY&quot; &amp; m_TheCurrency_ID, tmp_TheCurrency
  set TheCurrency=tmp_TheCurrency
  exit property
end if
  '  set TheCurrency = m_TheCurrency
end property
' let 
'Тариф

'Тариф
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TRF(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TRF&quot;,TRF,newvalue

   m_TRF= newValue
end if
end property

'Тариф
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. TRF
public property Get TRF() as double
 LoadFromDatabase
 AccessTime=Now

   TRF = m_TRF
end property
' let 
'Сумма без НДС

'Сумма без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Summ(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Summ&quot;,Summ,newvalue

   m_Summ= newValue
end if
end property

'Сумма без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. Summ
public property Get Summ() as double
 LoadFromDatabase
 AccessTime=Now

   Summ = m_Summ
end property
' let 
'Сумма с НДС

'Сумма с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SummNDS&quot;,SummNDS,newvalue

   m_SummNDS= newValue
end if
end property

'Сумма с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SummNDS
public property Get SummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SummNDS = m_SummNDS
end property
' let 
'Тариф поставщика

'Тариф поставщика
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupTRF(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupTRF&quot;,SupTRF,newvalue

   m_SupTRF= newValue
end if
end property

'Тариф поставщика
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupTRF
public property Get SupTRF() as double
 LoadFromDatabase
 AccessTime=Now

   SupTRF = m_SupTRF
end property
' let 
'Сумма поставщику без НДС

'Сумма поставщику без НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSumm(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSumm&quot;,SupSumm,newvalue

   m_SupSumm= newValue
end if
end property

'Сумма поставщику без НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSumm
public property Get SupSumm() as double
 LoadFromDatabase
 AccessTime=Now

   SupSumm = m_SupSumm
end property
' let 
'Сумма поставщику с НДС

'Сумма поставщику с НДС
'Parameters:
'[IN]   newValue , тип параметра: double  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SupSummNDS(byval newValue as double)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SupSummNDS&quot;,SupSummNDS,newvalue

   m_SupSummNDS= newValue
end if
end property

'Сумма поставщику с НДС
'Parameters:
' параметров нет
'Returns:
'  значение типа double
'See Also:
'Example:
' dim variable as double
' variable = me. SupSummNDS
public property Get SupSummNDS() as double
 LoadFromDatabase
 AccessTime=Now

   SupSummNDS = m_SupSummNDS
end property
' let 
'Расчет с НДС

'Расчет с НДС
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let CalcWithNDS(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;CalcWithNDS&quot;,CalcWithNDS,newvalue

   m_CalcWithNDS= newValue
end if
end property

'Расчет с НДС
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. CalcWithNDS
public property Get CalcWithNDS() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   CalcWithNDS = m_CalcWithNDS
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;sequence&quot;,m_sequence)
nvi.ValueType = adInteger 
 ' Reference to PEKD_SRV
    if m_SRV_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;SRV&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;SRV&quot;,m_SRV_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Quantity&quot;,m_Quantity)
nvi.ValueType =  adDouble 
 ' Reference to ENTDIC_EDIZM
    if m_EDIZM_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;EDIZM&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;EDIZM&quot;,m_EDIZM_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to PEKD_DEPT
    if m_PathFilial_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;PathFilial&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;PathFilial&quot;,m_PathFilial_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;TheComment&quot;,m_TheComment)
 ' Reference to object
    if m_DopSupplier_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;DopSupplier&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;DopSupplier&quot;,m_DopSupplier_ID)
    end if 
    nvi.oracle_guid 
  set nvi=nv.Add( &quot;SupMoneyDate&quot;,m_SupMoneyDate)
nvi.ValueType = adDate 
 ' Reference to ENTDIC_CURRENCY
    if m_TheCurrency_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheCurrency&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheCurrency&quot;,m_TheCurrency_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;TRF&quot;,m_TRF)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;Summ&quot;,m_Summ)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SummNDS&quot;,m_SummNDS)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupTRF&quot;,m_SupTRF)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSumm&quot;,m_SupSumm)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;SupSummNDS&quot;,m_SupSummNDS)
nvi.ValueType =  adDouble 
  set nvi=nv.Add( &quot;CalcWithNDS&quot;,m_CalcWithNDS)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
   if  SRV is nothing then 
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; m_SRV_ID_BRIEF &amp; &quot;}; &quot;
   else
     m_BRIEF=m_BRIEF &amp; &quot;{&quot; &amp; SRV.Brief  &amp; &quot;}; &quot;
   end if
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_sequence=nv.item( &quot;sequence&quot;).Value
  m_SRV_ID=nv.item( &quot;SRV&quot;).Value
m_Quantity=nv.item( &quot;Quantity&quot;).Value
  m_EDIZM_ID=nv.item( &quot;EDIZM&quot;).Value
  m_PathFilial_ID=nv.item( &quot;PathFilial&quot;).Value
m_TheComment=nv.item( &quot;TheComment&quot;).Value
  m_DopSupplier_ID=nv.item( &quot;DopSupplier&quot;).Value
m_SupMoneyDate=nv.item( &quot;SupMoneyDate&quot;).Value
  m_TheCurrency_ID=nv.item( &quot;TheCurrency&quot;).Value
m_TRF=nv.item( &quot;TRF&quot;).Value
m_Summ=nv.item( &quot;Summ&quot;).Value
m_SummNDS=nv.item( &quot;SummNDS&quot;).Value
m_SupTRF=nv.item( &quot;SupTRF&quot;).Value
m_SupSumm=nv.item( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.item( &quot;SupSummNDS&quot;).Value
m_CalcWithNDS=nv.item( &quot;CalcWithNDS&quot;).Value
else

m_sequence=nv.fields( &quot;sequence&quot;).Value
  m_SRV_ID=nv.fields( &quot;SRV&quot;).Value
m_Quantity=nv.fields( &quot;Quantity&quot;).Value
  m_EDIZM_ID=nv.fields( &quot;EDIZM&quot;).Value
  m_PathFilial_ID=nv.fields( &quot;PathFilial&quot;).Value
m_TheComment=nv.fields( &quot;TheComment&quot;).Value
  m_DopSupplier_ID=nv.fields( &quot;DopSupplier&quot;).Value
m_SupMoneyDate=nv.fields( &quot;SupMoneyDate&quot;).Value
  m_TheCurrency_ID=nv.fields( &quot;TheCurrency&quot;).Value
m_TRF=nv.fields( &quot;TRF&quot;).Value
m_Summ=nv.fields( &quot;Summ&quot;).Value
m_SummNDS=nv.fields( &quot;SummNDS&quot;).Value
m_SupTRF=nv.fields( &quot;SupTRF&quot;).Value
m_SupSumm=nv.fields( &quot;SupSumm&quot;).Value
m_SupSummNDS=nv.fields( &quot;SupSummNDS&quot;).Value
m_CalcWithNDS=nv.fields( &quot;CalcWithNDS&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as pekz_dop
   set o = new pekz_dop
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;pekz_dop.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;pekz_dop.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;pekz_dop&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;pekz_dop.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;pekz_dop&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;pekz_dop.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_SRV_ID=&quot;&quot;
 set m_SRV= nothing
 m_EDIZM_ID=&quot;&quot;
 set m_EDIZM= nothing
 m_PathFilial_ID=&quot;&quot;
 set m_PathFilial= nothing
 m_DopSupplier_ID=&quot;&quot;
 set m_DopSupplier= nothing
 m_TheCurrency_ID=&quot;&quot;
 set m_TheCurrency= nothing
 if not Application is nothing then Application.Logger.Message &quot;pekz_dop.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  sequence=node.Attributes.getNamedItem(&quot;SEQUENCE&quot;).nodeValue
  set SRV=nothing
  m_SRV_ID=node.Attributes.getNamedItem(&quot;SRV&quot;).nodeValue
  m_SRV_ID_BRIEF=node.Attributes.getNamedItem(&quot;SRV_BRIEF&quot;).nodeValue
  Quantity=val(Replace(node.Attributes.getNamedItem(&quot;QUANTITY&quot;).nodeValue,vbLf,vbcrlf))
  set EDIZM=nothing
  m_EDIZM_ID=node.Attributes.getNamedItem(&quot;EDIZM&quot;).nodeValue
  m_EDIZM_ID_BRIEF=node.Attributes.getNamedItem(&quot;EDIZM_BRIEF&quot;).nodeValue
  set PathFilial=nothing
  m_PathFilial_ID=node.Attributes.getNamedItem(&quot;PATHFILIAL&quot;).nodeValue
  m_PathFilial_ID_BRIEF=node.Attributes.getNamedItem(&quot;PATHFILIAL_BRIEF&quot;).nodeValue
  TheComment=Replace(node.Attributes.getNamedItem(&quot;THECOMMENT&quot;).nodeValue,vbLf,vbcrlf)
  set DopSupplier=nothing
  m_DopSupplier_ID=node.Attributes.getNamedItem(&quot;DOPSUPPLIER&quot;).nodeValue
  m_DopSupplier_ID_BRIEF=node.Attributes.getNamedItem(&quot;DOPSUPPLIER_BRIEF&quot;).nodeValue
  SupMoneyDate=node.Attributes.getNamedItem(&quot;SUPMONEYDATE&quot;).nodeValue
  set TheCurrency=nothing
  m_TheCurrency_ID=node.Attributes.getNamedItem(&quot;THECURRENCY&quot;).nodeValue
  m_TheCurrency_ID_BRIEF=node.Attributes.getNamedItem(&quot;THECURRENCY_BRIEF&quot;).nodeValue
  TRF=val(Replace(node.Attributes.getNamedItem(&quot;TRF&quot;).nodeValue,vbLf,vbcrlf))
  Summ=val(Replace(node.Attributes.getNamedItem(&quot;SUMM&quot;).nodeValue,vbLf,vbcrlf))
  SummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  SupTRF=val(Replace(node.Attributes.getNamedItem(&quot;SUPTRF&quot;).nodeValue,vbLf,vbcrlf))
  SupSumm=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMM&quot;).nodeValue,vbLf,vbcrlf))
  SupSummNDS=val(Replace(node.Attributes.getNamedItem(&quot;SUPSUMMNDS&quot;).nodeValue,vbLf,vbcrlf))
  CalcWithNDS=node.Attributes.getNamedItem(&quot;CALCWITHNDS&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;SEQUENCE&quot;, sequence
  node.setAttribute &quot;SRV&quot;, m_SRV_ID
  if not (SRV is nothing) then 
    node.setAttribute &quot;SRV_BRIEF&quot;, SRV.BRIEF
  else
    node.setAttribute &quot;SRV_BRIEF&quot;, m_SRV_ID_BRIEF
  end if
  node.setAttribute &quot;QUANTITY&quot;, replace(cstr(Quantity),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;EDIZM&quot;, m_EDIZM_ID
  if not (EDIZM is nothing) then 
    node.setAttribute &quot;EDIZM_BRIEF&quot;, EDIZM.BRIEF
  else
    node.setAttribute &quot;EDIZM_BRIEF&quot;, m_EDIZM_ID_BRIEF
  end if
  node.setAttribute &quot;PATHFILIAL&quot;, m_PathFilial_ID
  if not (PathFilial is nothing) then 
    node.setAttribute &quot;PATHFILIAL_BRIEF&quot;, PathFilial.BRIEF
  else
    node.setAttribute &quot;PATHFILIAL_BRIEF&quot;, m_PathFilial_ID_BRIEF
  end if
  node.setAttribute &quot;THECOMMENT&quot;, TheComment
  node.setAttribute &quot;DOPSUPPLIER&quot;, m_DopSupplier_ID
  if not (DopSupplier is nothing) then 
    node.setAttribute &quot;DOPSUPPLIER_BRIEF&quot;, DopSupplier.BRIEF
  else
    node.setAttribute &quot;DOPSUPPLIER_BRIEF&quot;, m_DopSupplier_ID_BRIEF
  end if
  node.setAttribute &quot;SUPMONEYDATE&quot;, Cdbl(SupMoneyDate)
  node.setAttribute &quot;THECURRENCY&quot;, m_TheCurrency_ID
  if not (TheCurrency is nothing) then 
    node.setAttribute &quot;THECURRENCY_BRIEF&quot;, TheCurrency.BRIEF
  else
    node.setAttribute &quot;THECURRENCY_BRIEF&quot;, m_TheCurrency_ID_BRIEF
  end if
  node.setAttribute &quot;TRF&quot;, replace(cstr(TRF),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMM&quot;, replace(cstr(Summ),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUMMNDS&quot;, replace(cstr(SummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPTRF&quot;, replace(cstr(SupTRF),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMM&quot;, replace(cstr(SupSumm),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;SUPSUMMNDS&quot;, replace(cstr(SupSummNDS),&quot;,&quot;,&quot;.&quot;)
  node.setAttribute &quot;CALCWITHNDS&quot;, CalcWithNDS
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;pekz_dop&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;pekz_dop&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;pekz_dop&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;pekz_dop&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;prnt&quot; then
 select case child
end select
end if ' mode=&quot;prnt&quot;
if mode=&quot;path&quot; then
 select case child
end select
end if ' mode=&quot;path&quot;
if mode=&quot;read&quot; then
 select case child
end select
end if ' mode=&quot;read&quot;
if mode=&quot;main&quot; then
 select case child
end select
end if ' mode=&quot;main&quot;
if mode=&quot;sent&quot; then
 select case child
end select
end if ' mode=&quot;sent&quot;
if mode=&quot;done&quot; then
 select case child
end select
end if ' mode=&quot;done&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="pekz_dop_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Дополнительные услуги
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;pekz_dop&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;pekz_dop.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as  pekz_dop
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  pekz_dop
 dim LID as  string
 dim o as  pekz_dop
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  pekz_dop
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as pekz_dop
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as pekz_dop
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as pekz_dop
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as pekz_dop
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as pekz_dop
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as pekz_dop
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса pekz_dop
'  ,или Nothing
'See Also:
'Example:
' dim variable as pekz_dop
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as pekz_dop
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  pekz_dop
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;pekz_dop.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As pekz_dop
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As pekz_dop
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!pekz_dopID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as pekz_dop
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;PEKZ_DOP_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;PEKZ_DOP&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as pekz_dop
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;PEKZ_DOP&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;№&quot;, 0, 0, &quot;sequence&quot;).SortType =2
  YGrid.Columns.Add(&quot;Услуга&quot;, 0, 0, &quot;SRV&quot;).SortType =1
  YGrid.Columns.Add(&quot;Количество&quot;, 0, 0, &quot;Quantity&quot;).SortType =2
  YGrid.Columns.Add(&quot;Ед. измерения&quot;, 0, 0, &quot;EDIZM&quot;).SortType =1
  YGrid.Columns.Add(&quot;Филиал&quot;, 0, 0, &quot;PathFilial&quot;).SortType =1
  YGrid.Columns.Add(&quot;Примечание&quot;, 0, 0, &quot;TheComment&quot;).SortType =1
  YGrid.Columns.Add(&quot;Поставщик&quot;, 0, 0, &quot;DopSupplier&quot;).SortType =1
  YGrid.Columns.Add(&quot;Cписание денежных средств поставщиком&quot;, 0, 0, &quot;SupMoneyDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Валюта&quot;, 0, 0, &quot;TheCurrency&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тариф&quot;, 0, 0, &quot;TRF&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма без НДС&quot;, 0, 0, &quot;Summ&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма с НДС&quot;, 0, 0, &quot;SummNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Тариф поставщика&quot;, 0, 0, &quot;SupTRF&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику без НДС&quot;, 0, 0, &quot;SupSumm&quot;).SortType =2
  YGrid.Columns.Add(&quot;Сумма поставщику с НДС&quot;, 0, 0, &quot;SupSummNDS&quot;).SortType =2
  YGrid.Columns.Add(&quot;Расчет с НДС&quot;, 0, 0, &quot;CalcWithNDS&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as pekz_dop
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.sequence, vbCrLf, &quot; &quot;), 255)
   if obj.SRV is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.SRV.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.Quantity, vbCrLf, &quot; &quot;), 255)
   if obj.EDIZM is nothing then
    Values.Value(4) = &quot;Не задано&quot;
   else 
    Values.Value(4) = Left(Replace(obj.EDIZM.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.PathFilial is nothing then
    Values.Value(5) = &quot;Не задано&quot;
   else 
    Values.Value(5) = Left(Replace(obj.PathFilial.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(6) = Left(Replace(obj.TheComment, vbCrLf, &quot; &quot;), 255)
   if obj.DopSupplier is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.DopSupplier.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(8) = Left(Replace(obj.SupMoneyDate, vbCrLf, &quot; &quot;), 255)
   if obj.TheCurrency is nothing then
    Values.Value(9) = &quot;Не задано&quot;
   else 
    Values.Value(9) = Left(Replace(obj.TheCurrency.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(10) = Left(Replace(obj.TRF, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.Summ, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.SummNDS, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.SupTRF, vbCrLf, &quot; &quot;), 255)
    Values.Value(14) = Left(Replace(obj.SupSumm, vbCrLf, &quot; &quot;), 255)
    Values.Value(15) = Left(Replace(obj.SupSummNDS, vbCrLf, &quot; &quot;), 255)
   if obj.CalcWithNDS =-1 then
     Values.Value(16) = &quot;Да&quot;
   end if
   if obj.CalcWithNDS =0 then
     Values.Value(16) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;pekz_dop&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
