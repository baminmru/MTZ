<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Тарифы"/><AttributeHolder Name="Name" Value="PEK2TRFGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Тарифы&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Тарифы)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2TRF:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2TRF:read&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2TRF:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Тарифы&quot; 
  end if
end if
if OpenModal then
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2TRF:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;read&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2TRF:read&quot;)) then
     set f = new frmread_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2TRF:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Тарифы&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;PEKTRF_REGALL&quot; Then
    Set f = New frmPEKTRF_REGALL_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_DECR&quot; Then
    Set f = New frmPEKTRF_DECR_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_ADDS&quot; Then
    Set f = New frmPEKTRF_ADDS_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_DEF&quot; Then
    Set f = New frmPEKTRF_DEF_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_AUTO&quot; Then
    Set f = New frmPEKTRF_AUTO_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_SRV&quot; Then
    Set f = New frmPEKTRF_SRV_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_TR&quot; Then
    Set f = New frmPEKTRF_TR_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;PEKTRF_REGRTR&quot; Then
    Set f = New frmPEKTRF_REGRTR_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
 End If

 If Mode = &quot;read&quot; Then
  If UCase(PartName) = &quot;PEKTRF_REGALL&quot; Then
    Set f = New frmPEKTRF_REGALL_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_DECR&quot; Then
    Set f = New frmPEKTRF_DECR_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_ADDS&quot; Then
    Set f = New frmPEKTRF_ADDS_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_DEF&quot; Then
    Set f = New frmPEKTRF_DEF_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_AUTO&quot; Then
    Set f = New frmPEKTRF_AUTO_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_SRV&quot; Then
    Set f = New frmPEKTRF_SRV_read
  End If

 If Mode = &quot;read&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_TR&quot; Then
    Set f = New frmPEKTRF_TR_read
  End If

 If Mode = &quot;read&quot; Then
  If UCase(PartName) = &quot;PEKTRF_REGRTR&quot; Then
    Set f = New frmPEKTRF_REGRTR_read
  End If

 If Mode = &quot;read&quot; Then
 End If
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;PEKTRF_REGALL&quot; Then
    Set f = New frmPEKTRF_REGALL_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_DECR&quot; Then
    Set f = New frmPEKTRF_DECR_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_ADDS&quot; Then
    Set f = New frmPEKTRF_ADDS_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_DEF&quot; Then
    Set f = New frmPEKTRF_DEF_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_AUTO&quot; Then
    Set f = New frmPEKTRF_AUTO_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_SRV&quot; Then
    Set f = New frmPEKTRF_SRV_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKTRF_TR&quot; Then
    Set f = New frmPEKTRF_TR_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;PEKTRF_REGRTR&quot; Then
    Set f = New frmPEKTRF_REGRTR_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_REGALL" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightFrom"/><Properties Name="Caption" PropValue="Суммарный вес от:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightFrom"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес от"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightTo"/><Properties Name="Caption" PropValue="Суммарный вес по:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightTo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес по"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightEDIZM"/><Properties Name="Caption" PropValue="Ед. изм. веса:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWeightEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWeightEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPricePercent"/><Properties Name="Caption" PropValue="Процент от тарифа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPricePercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент от тарифа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFixedPrice"/><Properties Name="Caption" PropValue="Фиксированная цена:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFixedPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Фиксированная цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPriceCurrency"/><Properties Name="Caption" PropValue="Валюта фиксированной цены:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPriceCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPriceCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWeightFrom_Validate(cancel as boolean)
if txtWeightFrom.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightFrom.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  elseif Val(txtWeightFrom.text) &lt; -922337203685477.5808 or Val(txtWeightFrom.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  end if
end if
end sub
Private Sub txtWeightFrom_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightFrom_Change()
  Changing

end sub
private sub txtWeightTo_Validate(cancel as boolean)
if txtWeightTo.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightTo.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  elseif Val(txtWeightTo.text) &lt; -922337203685477.5808 or Val(txtWeightTo.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  end if
end if
end sub
Private Sub txtWeightTo_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightTo_Change()
  Changing

end sub
private sub txtWeightEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWeightEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtWeightEDIZM.Tag = Left(id, 38)
          txtWeightEDIZM = brief
        End If
end sub
private sub cmdWeightEDIZM_MenuClick(ByVal sCaption As String)
          txtWeightEDIZM.Tag = &quot;&quot;
          txtWeightEDIZM = &quot;&quot;
End sub
private sub txtPricePercent_Validate(cancel as boolean)
if txtPricePercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPricePercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  elseif Val(txtPricePercent.text) &lt; -922337203685477.5808 or Val(txtPricePercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  end if
end if
end sub
Private Sub txtPricePercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPricePercent_Change()
  Changing

end sub
private sub txtFixedPrice_Validate(cancel as boolean)
if txtFixedPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFixedPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  elseif Val(txtFixedPrice.text) &lt; -922337203685477.5808 or Val(txtFixedPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  end if
end if
end sub
Private Sub txtFixedPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFixedPrice_Change()
  Changing

end sub
private sub txtPriceCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPriceCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtPriceCurrency.Tag = Left(id, 38)
          txtPriceCurrency = brief
        End If
end sub
private sub cmdPriceCurrency_MenuClick(ByVal sCaption As String)
          txtPriceCurrency.Tag = &quot;&quot;
          txtPriceCurrency = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtWeightFrom.text)
if mIsOK then mIsOK = IsSet(txtWeightTo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtWeightFrom = item.WeightFrom
txtWeightTo = item.WeightTo
If Not item.WeightEDIZM Is Nothing Then
  txtWeightEDIZM.Tag = item.WeightEDIZM.id
  txtWeightEDIZM = item.WeightEDIZM.brief
else
  txtWeightEDIZM.Tag = &quot;&quot; 
  txtWeightEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdWeightEDIZM,cmdWeightEDIZM.tag
  cmdWeightEDIZM.RemoveAllMenu
  cmdWeightEDIZM.AddMenu &quot;Очистить&quot; 
txtPricePercent = item.PricePercent
txtFixedPrice = item.FixedPrice
If Not item.PriceCurrency Is Nothing Then
  txtPriceCurrency.Tag = item.PriceCurrency.id
  txtPriceCurrency = item.PriceCurrency.brief
else
  txtPriceCurrency.Tag = &quot;&quot; 
  txtPriceCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdPriceCurrency,cmdPriceCurrency.tag
  cmdPriceCurrency.RemoveAllMenu
  cmdPriceCurrency.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.WeightFrom = cdbl(txtWeightFrom)
item.WeightTo = cdbl(txtWeightTo)
If txtWeightEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.WeightEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtWeightEDIZM.Tag)
Else
  Set item.WeightEDIZM = Nothing
End If
item.PricePercent = cdbl(txtPricePercent)
item.FixedPrice = cdbl(txtFixedPrice)
If txtPriceCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.PriceCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtPriceCurrency.Tag)
Else
  Set item.PriceCurrency = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_DECR" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название скидки:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название скидки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDecrPercent"/><Properties Name="Caption" PropValue="Процент к тарифу:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDecrPercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент к тарифу"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtDecrPercent_Validate(cancel as boolean)
if txtDecrPercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDecrPercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDecrPercent.SetFocus 
  elseif Val(txtDecrPercent.text) &lt; -922337203685477.5808 or Val(txtDecrPercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDecrPercent.SetFocus 
  end if
end if
end sub
Private Sub txtDecrPercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDecrPercent_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = IsSet(txtDecrPercent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtDecrPercent = item.DecrPercent
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.DecrPercent = cdbl(txtDecrPercent)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_ADDS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название надбавки:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Название надбавки"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdName"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Название надбавки"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddPercent"/><Properties Name="Caption" PropValue="Процент к тарифной ставке:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtAddPercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент к тарифной ставке"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinValue"/><Properties Name="Caption" PropValue="Минимальное значение:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMinValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальное значение"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMaxValue"/><Properties Name="Caption" PropValue="Максимальное значение:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMaxValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Максимальное значение"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdName_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_ADDS&quot;, id, brief) Then
          txtName.Tag = Left(id, 38)
          txtName = brief
        End If
end sub
private sub cmdName_MenuClick(ByVal sCaption As String)
          txtName.Tag = &quot;&quot;
          txtName = &quot;&quot;
End sub
private sub txtAddPercent_Validate(cancel as boolean)
if txtAddPercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtAddPercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtAddPercent.SetFocus 
  elseif Val(txtAddPercent.text) &lt; -922337203685477.5808 or Val(txtAddPercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtAddPercent.SetFocus 
  end if
end if
end sub
Private Sub txtAddPercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtAddPercent_Change()
  Changing

end sub
private sub txtMinValue_Validate(cancel as boolean)
if txtMinValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMinValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinValue.SetFocus 
  elseif Val(txtMinValue.text) &lt; -922337203685477.5808 or Val(txtMinValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinValue.SetFocus 
  end if
end if
end sub
Private Sub txtMinValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMinValue_Change()
  Changing

end sub
private sub txtMaxValue_Validate(cancel as boolean)
if txtMaxValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMaxValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMaxValue.SetFocus 
  elseif Val(txtMaxValue.text) &lt; -922337203685477.5808 or Val(txtMaxValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMaxValue.SetFocus 
  end if
end if
end sub
Private Sub txtMaxValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMaxValue_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtName.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtAddPercent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Name Is Nothing Then
  txtName.Tag = item.Name.id
  txtName = item.Name.brief
else
  txtName.Tag = &quot;&quot; 
  txtName = &quot;&quot; 
End If
 LoadBtnPictures cmdName,cmdName.tag
  cmdName.RemoveAllMenu
  cmdName.AddMenu &quot;Очистить&quot; 
txtAddPercent = item.AddPercent
txtMinValue = item.MinValue
txtMaxValue = item.MaxValue
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtName.Tag &lt;&gt; &quot;&quot; Then
  Set item.Name = Item.Application.FindRowObject(&quot;PEKD_ADDS&quot;,txtName.Tag)
Else
  Set item.Name = Nothing
End If
item.AddPercent = cdbl(txtAddPercent)
item.MinValue = cdbl(txtMinValue)
item.MaxValue = cdbl(txtMaxValue)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_DEF" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolumeTarif"/><Properties Name="Caption" PropValue="Тариф по объему:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbVolumeTarif"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тариф по объему"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartDate"/><Properties Name="Caption" PropValue="Начало действия:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpStartDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Начало действия"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTType"/><Properties Name="Caption" PropValue="Тип тарифа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип тарифа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип тарифа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIncludeNDS"/><Properties Name="Caption" PropValue="Цены с НДС:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIncludeNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Цены с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinPPOWeight"/><Properties Name="Caption" PropValue="Минимальный расчетный вес:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMinPPOWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальный расчетный вес"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplierTarif"/><Properties Name="Caption" PropValue="Тариф поставщика:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbSupplierTarif"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тариф поставщика"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEndDate"/><Properties Name="Caption" PropValue="Конец действия тарифа:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpEndDate"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Конец действия тарифа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFilial"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheFilial"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheFilial"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6045"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNalAdds"/><Properties Name="Caption" PropValue="Надбавка за наличную оплату:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtNalAdds"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Надбавка за наличную оплату"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub cmbVolumeTarif_Click()
  on error resume next
  Changing

end sub
private sub dtpStartDate_Change()
  Changing

end sub
private sub txtTType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_TRFTYPE&quot;, id, brief) Then
          txtTType.Tag = Left(id, 38)
          txtTType = brief
        End If
end sub
private sub cmdTType_MenuClick(ByVal sCaption As String)
          txtTType.Tag = &quot;&quot;
          txtTType = &quot;&quot;
End sub
private sub cmbIncludeNDS_Click()
  on error resume next
  Changing

end sub
private sub txtMinPPOWeight_Validate(cancel as boolean)
if txtMinPPOWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMinPPOWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinPPOWeight.SetFocus 
  elseif Val(txtMinPPOWeight.text) &lt; -922337203685477.5808 or Val(txtMinPPOWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinPPOWeight.SetFocus 
  end if
end if
end sub
Private Sub txtMinPPOWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMinPPOWeight_Change()
  Changing

end sub
private sub cmbSupplierTarif_Click()
  on error resume next
  Changing

end sub
private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;,&quot;VRCCommonInfo_Transporter_Val=-1&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub dtpEndDate_Change()
  Changing

end sub
private sub txtTheFilial_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheFilial_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheFilial.Tag = Left(id, 38)
          txtTheFilial = brief
        End If
end sub
private sub cmdTheFilial_MenuClick(ByVal sCaption As String)
          txtTheFilial.Tag = &quot;&quot;
          txtTheFilial = &quot;&quot;
End sub
private sub txtNalAdds_Validate(cancel as boolean)
if txtNalAdds.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtNalAdds.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNalAdds.SetFocus 
  elseif Val(txtNalAdds.text) &lt; -922337203685477.5808 or Val(txtNalAdds.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNalAdds.SetFocus 
  end if
end if
end sub
Private Sub txtNalAdds_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtNalAdds_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbVolumeTarif.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(dtpStartDate.value)
if mIsOK then mIsOK = txtTType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbIncludeNDS.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbSupplierTarif.ListIndex &gt;=0)
if mIsOK then mIsOK = txtTheFilial.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtNalAdds.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

cmbVolumeTarif.Clear
cmbVolumeTarif.additem &quot;Да&quot;
cmbVolumeTarif.itemdata(cmbVolumeTarif.newindex)= -1
cmbVolumeTarif.additem &quot;Нет&quot;
cmbVolumeTarif.itemdata(cmbVolumeTarif.newindex)= 0
 For iii = 0 To cmbVolumeTarif.ListCount-1
  If Item.VolumeTarif = cmbVolumeTarif.ItemData(iii) Then
   cmbVolumeTarif.ListIndex = iii
   Exit For
  End If
 Next
dtpStartDate = date
if item.StartDate &lt;&gt; 0 then
 dtpStartDate = item.StartDate
end if
If Not item.TType Is Nothing Then
  txtTType.Tag = item.TType.id
  txtTType = item.TType.brief
else
  txtTType.Tag = &quot;&quot; 
  txtTType = &quot;&quot; 
End If
 LoadBtnPictures cmdTType,cmdTType.tag
  cmdTType.RemoveAllMenu
  cmdTType.AddMenu &quot;Очистить&quot; 
cmbIncludeNDS.Clear
cmbIncludeNDS.additem &quot;Да&quot;
cmbIncludeNDS.itemdata(cmbIncludeNDS.newindex)= -1
cmbIncludeNDS.additem &quot;Нет&quot;
cmbIncludeNDS.itemdata(cmbIncludeNDS.newindex)= 0
 For iii = 0 To cmbIncludeNDS.ListCount-1
  If Item.IncludeNDS = cmbIncludeNDS.ItemData(iii) Then
   cmbIncludeNDS.ListIndex = iii
   Exit For
  End If
 Next
txtMinPPOWeight = item.MinPPOWeight
cmbSupplierTarif.Clear
cmbSupplierTarif.additem &quot;Да&quot;
cmbSupplierTarif.itemdata(cmbSupplierTarif.newindex)= -1
cmbSupplierTarif.additem &quot;Нет&quot;
cmbSupplierTarif.itemdata(cmbSupplierTarif.newindex)= 0
 For iii = 0 To cmbSupplierTarif.ListCount-1
  If Item.SupplierTarif = cmbSupplierTarif.ItemData(iii) Then
   cmbSupplierTarif.ListIndex = iii
   Exit For
  End If
 Next
If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
dtpEndDate = date
if item.EndDate &lt;&gt; 0 then
 dtpEndDate = item.EndDate
else
 dtpEndDate.value = null
end if
If Not item.TheFilial Is Nothing Then
  txtTheFilial.Tag = item.TheFilial.id
  txtTheFilial = item.TheFilial.brief
else
  txtTheFilial.Tag = &quot;&quot; 
  txtTheFilial = &quot;&quot; 
End If
 LoadBtnPictures cmdTheFilial,cmdTheFilial.tag
  cmdTheFilial.RemoveAllMenu
  cmdTheFilial.AddMenu &quot;Очистить&quot; 
txtNalAdds = item.NalAdds
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 if cmbVolumeTarif.listindex&gt;=0 then
   item.VolumeTarif = cmbVolumeTarif.itemdata(cmbVolumeTarif.listindex)
 end if
  if  isnull(dtpStartDate) then
    item.StartDate = 0
  else
    item.StartDate = dtpStartDate.value
  end if
If txtTType.Tag &lt;&gt; &quot;&quot; Then
  Set item.TType = Item.Application.FindRowObject(&quot;PEKD_TRFTYPE&quot;,txtTType.Tag)
Else
  Set item.TType = Nothing
End If
 if cmbIncludeNDS.listindex&gt;=0 then
   item.IncludeNDS = cmbIncludeNDS.itemdata(cmbIncludeNDS.listindex)
 end if
item.MinPPOWeight = cdbl(txtMinPPOWeight)
 if cmbSupplierTarif.listindex&gt;=0 then
   item.SupplierTarif = cmbSupplierTarif.itemdata(cmbSupplierTarif.listindex)
 end if
If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
  if  isnull(dtpEndDate) then
    item.EndDate = 0
  else
    item.EndDate = dtpEndDate.value
  end if
If txtTheFilial.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheFilial = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheFilial.Tag)
Else
  Set item.TheFilial = Nothing
End If
item.NalAdds = cdbl(txtNalAdds)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_AUTO" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoType"/><Properties Name="Caption" PropValue="Тип автотранспорта:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAutoType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип автотранспорта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAutoType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип автотранспорта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForTime"/><Properties Name="Caption" PropValue="За время:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForTime"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="За время"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblByLength"/><Properties Name="Caption" PropValue="От расстояния:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbByLength"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="От расстояния"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLengthPrice"/><Properties Name="Caption" PropValue="Стоимость за км:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtLengthPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость за км"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblHourPrice"/><Properties Name="Caption" PropValue="Стоимость часа:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtHourPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость часа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAutoType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAutoType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_AUTO&quot;, id, brief) Then
          txtAutoType.Tag = Left(id, 38)
          txtAutoType = brief
        End If
end sub
private sub cmdAutoType_MenuClick(ByVal sCaption As String)
          txtAutoType.Tag = &quot;&quot;
          txtAutoType = &quot;&quot;
End sub
private sub cmbForTime_Click()
  on error resume next
  Changing

end sub
private sub cmbByLength_Click()
  on error resume next
  Changing

end sub
private sub txtLengthPrice_Validate(cancel as boolean)
if txtLengthPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtLengthPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLengthPrice.SetFocus 
  elseif Val(txtLengthPrice.text) &lt; -922337203685477.5808 or Val(txtLengthPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLengthPrice.SetFocus 
  end if
end if
end sub
Private Sub txtLengthPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtLengthPrice_Change()
  Changing

end sub
private sub txtHourPrice_Validate(cancel as boolean)
if txtHourPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtHourPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtHourPrice.SetFocus 
  elseif Val(txtHourPrice.text) &lt; -922337203685477.5808 or Val(txtHourPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtHourPrice.SetFocus 
  end if
end if
end sub
Private Sub txtHourPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtHourPrice_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAutoType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbForTime.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbByLength.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(txtLengthPrice.text)
if mIsOK then mIsOK = IsSet(txtHourPrice.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.AutoType Is Nothing Then
  txtAutoType.Tag = item.AutoType.id
  txtAutoType = item.AutoType.brief
else
  txtAutoType.Tag = &quot;&quot; 
  txtAutoType = &quot;&quot; 
End If
 LoadBtnPictures cmdAutoType,cmdAutoType.tag
  cmdAutoType.RemoveAllMenu
  cmdAutoType.AddMenu &quot;Очистить&quot; 
cmbForTime.Clear
cmbForTime.additem &quot;Да&quot;
cmbForTime.itemdata(cmbForTime.newindex)= -1
cmbForTime.additem &quot;Нет&quot;
cmbForTime.itemdata(cmbForTime.newindex)= 0
 For iii = 0 To cmbForTime.ListCount-1
  If Item.ForTime = cmbForTime.ItemData(iii) Then
   cmbForTime.ListIndex = iii
   Exit For
  End If
 Next
cmbByLength.Clear
cmbByLength.additem &quot;Да&quot;
cmbByLength.itemdata(cmbByLength.newindex)= -1
cmbByLength.additem &quot;Нет&quot;
cmbByLength.itemdata(cmbByLength.newindex)= 0
 For iii = 0 To cmbByLength.ListCount-1
  If Item.ByLength = cmbByLength.ItemData(iii) Then
   cmbByLength.ListIndex = iii
   Exit For
  End If
 Next
txtLengthPrice = item.LengthPrice
txtHourPrice = item.HourPrice
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAutoType.Tag &lt;&gt; &quot;&quot; Then
  Set item.AutoType = Item.Application.FindRowObject(&quot;PEKD_AUTO&quot;,txtAutoType.Tag)
Else
  Set item.AutoType = Nothing
End If
 if cmbForTime.listindex&gt;=0 then
   item.ForTime = cmbForTime.itemdata(cmbForTime.listindex)
 end if
 if cmbByLength.listindex&gt;=0 then
   item.ByLength = cmbByLength.itemdata(cmbByLength.listindex)
 end if
item.LengthPrice = cdbl(txtLengthPrice)
item.HourPrice = cdbl(txtHourPrice)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_SRV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSrvTYPE"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSrvTYPE"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSrvTYPE"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrice"/><Properties Name="Caption" PropValue="Цена:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCurrency"/><Properties Name="Caption" PropValue="Валюта:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Ед. изм.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuant"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuant"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSrvTYPE_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSrvTYPE_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_SRV&quot;, id, brief) Then
          txtSrvTYPE.Tag = Left(id, 38)
          txtSrvTYPE = brief
        End If
end sub
private sub cmdSrvTYPE_MenuClick(ByVal sCaption As String)
          txtSrvTYPE.Tag = &quot;&quot;
          txtSrvTYPE = &quot;&quot;
End sub
private sub txtPrice_Validate(cancel as boolean)
if txtPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  elseif Val(txtPrice.text) &lt; -922337203685477.5808 or Val(txtPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  end if
end if
end sub
Private Sub txtPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPrice_Change()
  Changing

end sub
private sub txtTheCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtTheCurrency.Tag = Left(id, 38)
          txtTheCurrency = brief
        End If
end sub
private sub cmdTheCurrency_MenuClick(ByVal sCaption As String)
          txtTheCurrency.Tag = &quot;&quot;
          txtTheCurrency = &quot;&quot;
End sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
private sub txtQuant_Validate(cancel as boolean)
if txtQuant.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuant.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuant.SetFocus 
  elseif Val(txtQuant.text) &lt; -922337203685477.5808 or Val(txtQuant.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuant.SetFocus 
  end if
end if
end sub
Private Sub txtQuant_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuant_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSrvTYPE.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPrice.text)
if mIsOK then mIsOK = txtTheCurrency.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtEDIZM.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtQuant.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SrvTYPE Is Nothing Then
  txtSrvTYPE.Tag = item.SrvTYPE.id
  txtSrvTYPE = item.SrvTYPE.brief
else
  txtSrvTYPE.Tag = &quot;&quot; 
  txtSrvTYPE = &quot;&quot; 
End If
 LoadBtnPictures cmdSrvTYPE,cmdSrvTYPE.tag
  cmdSrvTYPE.RemoveAllMenu
  cmdSrvTYPE.AddMenu &quot;Очистить&quot; 
txtPrice = item.Price
If Not item.TheCurrency Is Nothing Then
  txtTheCurrency.Tag = item.TheCurrency.id
  txtTheCurrency = item.TheCurrency.brief
else
  txtTheCurrency.Tag = &quot;&quot; 
  txtTheCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdTheCurrency,cmdTheCurrency.tag
  cmdTheCurrency.RemoveAllMenu
  cmdTheCurrency.AddMenu &quot;Очистить&quot; 
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
txtQuant = item.Quant
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSrvTYPE.Tag &lt;&gt; &quot;&quot; Then
  Set item.SrvTYPE = Item.Application.FindRowObject(&quot;PEKD_SRV&quot;,txtSrvTYPE.Tag)
Else
  Set item.SrvTYPE = Nothing
End If
item.Price = cdbl(txtPrice)
If txtTheCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtTheCurrency.Tag)
Else
  Set item.TheCurrency = Nothing
End If
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
item.Quant = cdbl(txtQuant)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_TR" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrain"/><Properties Name="Caption" PropValue="Направление:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrain"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Направление"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTrain"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Направление"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblToST"/><Properties Name="Caption" PropValue="До станции:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtToST"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="До станции"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdToST"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="До станции"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrice"/><Properties Name="Caption" PropValue="Цена:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCurrency"/><Properties Name="Caption" PropValue="Валюта:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheQuantity"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtTheQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Единица измерения:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTrain_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTrain_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRECTION&quot;, id, brief) Then
          txtTrain.Tag = Left(id, 38)
          txtTrain = brief
        End If
end sub
private sub cmdTrain_MenuClick(ByVal sCaption As String)
          txtTrain.Tag = &quot;&quot;
          txtTrain = &quot;&quot;
End sub
private sub txtToST_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdToST_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,iif(  txtTrain.tag=&quot;&quot;,&quot;PEKD_DIRECTIONid is null&quot;,    &quot;PEKD_DIRECTIONid='&quot; &amp; txtTrain.tag &amp; &quot;'&quot;)) Then
          txtToST.Tag = Left(id, 38)
          txtToST = brief
        End If
end sub
private sub cmdToST_MenuClick(ByVal sCaption As String)
          txtToST.Tag = &quot;&quot;
          txtToST = &quot;&quot;
End sub
private sub txtPrice_Validate(cancel as boolean)
if txtPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  elseif Val(txtPrice.text) &lt; -922337203685477.5808 or Val(txtPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  end if
end if
end sub
Private Sub txtPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPrice_Change()
  Changing

end sub
private sub txtTheCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtTheCurrency.Tag = Left(id, 38)
          txtTheCurrency = brief
        End If
end sub
private sub cmdTheCurrency_MenuClick(ByVal sCaption As String)
          txtTheCurrency.Tag = &quot;&quot;
          txtTheCurrency = &quot;&quot;
End sub
private sub txtTheQuantity_Validate(cancel as boolean)
if txtTheQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheQuantity.SetFocus 
  elseif Val(txtTheQuantity.text) &lt; -922337203685477.5808 or Val(txtTheQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtTheQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheQuantity_Change()
  Changing

end sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTrain.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtToST.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPrice.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Train Is Nothing Then
  txtTrain.Tag = item.Train.id
  txtTrain = item.Train.brief
else
  txtTrain.Tag = &quot;&quot; 
  txtTrain = &quot;&quot; 
End If
 LoadBtnPictures cmdTrain,cmdTrain.tag
  cmdTrain.RemoveAllMenu
  cmdTrain.AddMenu &quot;Очистить&quot; 
If Not item.ToST Is Nothing Then
  txtToST.Tag = item.ToST.id
  txtToST = item.ToST.brief
else
  txtToST.Tag = &quot;&quot; 
  txtToST = &quot;&quot; 
End If
 LoadBtnPictures cmdToST,cmdToST.tag
  cmdToST.RemoveAllMenu
  cmdToST.AddMenu &quot;Очистить&quot; 
txtPrice = item.Price
If Not item.TheCurrency Is Nothing Then
  txtTheCurrency.Tag = item.TheCurrency.id
  txtTheCurrency = item.TheCurrency.brief
else
  txtTheCurrency.Tag = &quot;&quot; 
  txtTheCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdTheCurrency,cmdTheCurrency.tag
  cmdTheCurrency.RemoveAllMenu
  cmdTheCurrency.AddMenu &quot;Очистить&quot; 
txtTheQuantity = item.TheQuantity
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTrain.Tag &lt;&gt; &quot;&quot; Then
  Set item.Train = Item.Application.FindRowObject(&quot;PEKD_DIRECTION&quot;,txtTrain.Tag)
Else
  Set item.Train = Nothing
End If
If txtToST.Tag &lt;&gt; &quot;&quot; Then
  Set item.ToST = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtToST.Tag)
Else
  Set item.ToST = Nothing
End If
item.Price = cdbl(txtPrice)
If txtTheCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtTheCurrency.Tag)
Else
  Set item.TheCurrency = Nothing
End If
item.TheQuantity = cdbl(txtTheQuantity)
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_REGRTR" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightFrom"/><Properties Name="Caption" PropValue="Суммарный вес от:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightFrom"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес от"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightTo"/><Properties Name="Caption" PropValue="Суммарный вес по:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightTo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес по"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightEDIZM"/><Properties Name="Caption" PropValue="Ед. изм. веса:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWeightEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWeightEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPricePercent"/><Properties Name="Caption" PropValue="Процент от тарифа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPricePercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент от тарифа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFixedPrice"/><Properties Name="Caption" PropValue="Фиксированная цена:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFixedPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Фиксированная цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPriceCurrency"/><Properties Name="Caption" PropValue="Валюта фиксированной цены:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPriceCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPriceCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWeightFrom_Validate(cancel as boolean)
if txtWeightFrom.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightFrom.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  elseif Val(txtWeightFrom.text) &lt; -922337203685477.5808 or Val(txtWeightFrom.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  end if
end if
end sub
Private Sub txtWeightFrom_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightFrom_Change()
  Changing

end sub
private sub txtWeightTo_Validate(cancel as boolean)
if txtWeightTo.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightTo.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  elseif Val(txtWeightTo.text) &lt; -922337203685477.5808 or Val(txtWeightTo.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  end if
end if
end sub
Private Sub txtWeightTo_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightTo_Change()
  Changing

end sub
private sub txtWeightEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWeightEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtWeightEDIZM.Tag = Left(id, 38)
          txtWeightEDIZM = brief
        End If
end sub
private sub cmdWeightEDIZM_MenuClick(ByVal sCaption As String)
          txtWeightEDIZM.Tag = &quot;&quot;
          txtWeightEDIZM = &quot;&quot;
End sub
private sub txtPricePercent_Validate(cancel as boolean)
if txtPricePercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPricePercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  elseif Val(txtPricePercent.text) &lt; -922337203685477.5808 or Val(txtPricePercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  end if
end if
end sub
Private Sub txtPricePercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPricePercent_Change()
  Changing

end sub
private sub txtFixedPrice_Validate(cancel as boolean)
if txtFixedPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFixedPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  elseif Val(txtFixedPrice.text) &lt; -922337203685477.5808 or Val(txtFixedPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  end if
end if
end sub
Private Sub txtFixedPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFixedPrice_Change()
  Changing

end sub
private sub txtPriceCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPriceCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtPriceCurrency.Tag = Left(id, 38)
          txtPriceCurrency = brief
        End If
end sub
private sub cmdPriceCurrency_MenuClick(ByVal sCaption As String)
          txtPriceCurrency.Tag = &quot;&quot;
          txtPriceCurrency = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtWeightFrom.text)
if mIsOK then mIsOK = IsSet(txtWeightTo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtWeightFrom = item.WeightFrom
txtWeightTo = item.WeightTo
If Not item.WeightEDIZM Is Nothing Then
  txtWeightEDIZM.Tag = item.WeightEDIZM.id
  txtWeightEDIZM = item.WeightEDIZM.brief
else
  txtWeightEDIZM.Tag = &quot;&quot; 
  txtWeightEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdWeightEDIZM,cmdWeightEDIZM.tag
  cmdWeightEDIZM.RemoveAllMenu
  cmdWeightEDIZM.AddMenu &quot;Очистить&quot; 
txtPricePercent = item.PricePercent
txtFixedPrice = item.FixedPrice
If Not item.PriceCurrency Is Nothing Then
  txtPriceCurrency.Tag = item.PriceCurrency.id
  txtPriceCurrency = item.PriceCurrency.brief
else
  txtPriceCurrency.Tag = &quot;&quot; 
  txtPriceCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdPriceCurrency,cmdPriceCurrency.tag
  cmdPriceCurrency.RemoveAllMenu
  cmdPriceCurrency.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.WeightFrom = cdbl(txtWeightFrom)
item.WeightTo = cdbl(txtWeightTo)
If txtWeightEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.WeightEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtWeightEDIZM.Tag)
Else
  Set item.WeightEDIZM = Nothing
End If
item.PricePercent = cdbl(txtPricePercent)
item.FixedPrice = cdbl(txtFixedPrice)
If txtPriceCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.PriceCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtPriceCurrency.Tag)
Else
  Set item.PriceCurrency = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_REGALLmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightFrom"/><Properties Name="Caption" PropValue="Суммарный вес от:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightFrom"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес от"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightTo"/><Properties Name="Caption" PropValue="Суммарный вес по:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightTo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес по"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightEDIZM"/><Properties Name="Caption" PropValue="Ед. изм. веса:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWeightEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWeightEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPricePercent"/><Properties Name="Caption" PropValue="Процент от тарифа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPricePercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент от тарифа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFixedPrice"/><Properties Name="Caption" PropValue="Фиксированная цена:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFixedPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Фиксированная цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPriceCurrency"/><Properties Name="Caption" PropValue="Валюта фиксированной цены:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPriceCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPriceCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWeightFrom_Validate(cancel as boolean)
if txtWeightFrom.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightFrom.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  elseif Val(txtWeightFrom.text) &lt; -922337203685477.5808 or Val(txtWeightFrom.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  end if
end if
end sub
Private Sub txtWeightFrom_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightFrom_Change()
  Changing

end sub
private sub txtWeightTo_Validate(cancel as boolean)
if txtWeightTo.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightTo.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  elseif Val(txtWeightTo.text) &lt; -922337203685477.5808 or Val(txtWeightTo.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  end if
end if
end sub
Private Sub txtWeightTo_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightTo_Change()
  Changing

end sub
private sub txtWeightEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWeightEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtWeightEDIZM.Tag = Left(id, 38)
          txtWeightEDIZM = brief
        End If
end sub
private sub cmdWeightEDIZM_MenuClick(ByVal sCaption As String)
          txtWeightEDIZM.Tag = &quot;&quot;
          txtWeightEDIZM = &quot;&quot;
End sub
private sub txtPricePercent_Validate(cancel as boolean)
if txtPricePercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPricePercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  elseif Val(txtPricePercent.text) &lt; -922337203685477.5808 or Val(txtPricePercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  end if
end if
end sub
Private Sub txtPricePercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPricePercent_Change()
  Changing

end sub
private sub txtFixedPrice_Validate(cancel as boolean)
if txtFixedPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFixedPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  elseif Val(txtFixedPrice.text) &lt; -922337203685477.5808 or Val(txtFixedPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  end if
end if
end sub
Private Sub txtFixedPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFixedPrice_Change()
  Changing

end sub
private sub txtPriceCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPriceCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtPriceCurrency.Tag = Left(id, 38)
          txtPriceCurrency = brief
        End If
end sub
private sub cmdPriceCurrency_MenuClick(ByVal sCaption As String)
          txtPriceCurrency.Tag = &quot;&quot;
          txtPriceCurrency = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtWeightFrom.text)
if mIsOK then mIsOK = IsSet(txtWeightTo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtWeightFrom = item.WeightFrom
txtWeightTo = item.WeightTo
If Not item.WeightEDIZM Is Nothing Then
  txtWeightEDIZM.Tag = item.WeightEDIZM.id
  txtWeightEDIZM = item.WeightEDIZM.brief
else
  txtWeightEDIZM.Tag = &quot;&quot; 
  txtWeightEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdWeightEDIZM,cmdWeightEDIZM.tag
  cmdWeightEDIZM.RemoveAllMenu
  cmdWeightEDIZM.AddMenu &quot;Очистить&quot; 
txtPricePercent = item.PricePercent
txtFixedPrice = item.FixedPrice
If Not item.PriceCurrency Is Nothing Then
  txtPriceCurrency.Tag = item.PriceCurrency.id
  txtPriceCurrency = item.PriceCurrency.brief
else
  txtPriceCurrency.Tag = &quot;&quot; 
  txtPriceCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdPriceCurrency,cmdPriceCurrency.tag
  cmdPriceCurrency.RemoveAllMenu
  cmdPriceCurrency.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.WeightFrom = cdbl(txtWeightFrom)
item.WeightTo = cdbl(txtWeightTo)
If txtWeightEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.WeightEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtWeightEDIZM.Tag)
Else
  Set item.WeightEDIZM = Nothing
End If
item.PricePercent = cdbl(txtPricePercent)
item.FixedPrice = cdbl(txtFixedPrice)
If txtPriceCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.PriceCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtPriceCurrency.Tag)
Else
  Set item.PriceCurrency = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_DECRmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название скидки:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название скидки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDecrPercent"/><Properties Name="Caption" PropValue="Процент к тарифу:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDecrPercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент к тарифу"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtDecrPercent_Validate(cancel as boolean)
if txtDecrPercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDecrPercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDecrPercent.SetFocus 
  elseif Val(txtDecrPercent.text) &lt; -922337203685477.5808 or Val(txtDecrPercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDecrPercent.SetFocus 
  end if
end if
end sub
Private Sub txtDecrPercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDecrPercent_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = IsSet(txtDecrPercent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtDecrPercent = item.DecrPercent
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.DecrPercent = cdbl(txtDecrPercent)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_ADDSmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название надбавки:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Название надбавки"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdName"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Название надбавки"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddPercent"/><Properties Name="Caption" PropValue="Процент к тарифной ставке:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtAddPercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент к тарифной ставке"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinValue"/><Properties Name="Caption" PropValue="Минимальное значение:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMinValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальное значение"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMaxValue"/><Properties Name="Caption" PropValue="Максимальное значение:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMaxValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Максимальное значение"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdName_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_ADDS&quot;, id, brief) Then
          txtName.Tag = Left(id, 38)
          txtName = brief
        End If
end sub
private sub cmdName_MenuClick(ByVal sCaption As String)
          txtName.Tag = &quot;&quot;
          txtName = &quot;&quot;
End sub
private sub txtAddPercent_Validate(cancel as boolean)
if txtAddPercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtAddPercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtAddPercent.SetFocus 
  elseif Val(txtAddPercent.text) &lt; -922337203685477.5808 or Val(txtAddPercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtAddPercent.SetFocus 
  end if
end if
end sub
Private Sub txtAddPercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtAddPercent_Change()
  Changing

end sub
private sub txtMinValue_Validate(cancel as boolean)
if txtMinValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMinValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinValue.SetFocus 
  elseif Val(txtMinValue.text) &lt; -922337203685477.5808 or Val(txtMinValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinValue.SetFocus 
  end if
end if
end sub
Private Sub txtMinValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMinValue_Change()
  Changing

end sub
private sub txtMaxValue_Validate(cancel as boolean)
if txtMaxValue.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMaxValue.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMaxValue.SetFocus 
  elseif Val(txtMaxValue.text) &lt; -922337203685477.5808 or Val(txtMaxValue.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMaxValue.SetFocus 
  end if
end if
end sub
Private Sub txtMaxValue_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMaxValue_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtName.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtAddPercent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Name Is Nothing Then
  txtName.Tag = item.Name.id
  txtName = item.Name.brief
else
  txtName.Tag = &quot;&quot; 
  txtName = &quot;&quot; 
End If
 LoadBtnPictures cmdName,cmdName.tag
  cmdName.RemoveAllMenu
  cmdName.AddMenu &quot;Очистить&quot; 
txtAddPercent = item.AddPercent
txtMinValue = item.MinValue
txtMaxValue = item.MaxValue
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtName.Tag &lt;&gt; &quot;&quot; Then
  Set item.Name = Item.Application.FindRowObject(&quot;PEKD_ADDS&quot;,txtName.Tag)
Else
  Set item.Name = Nothing
End If
item.AddPercent = cdbl(txtAddPercent)
item.MinValue = cdbl(txtMinValue)
item.MaxValue = cdbl(txtMaxValue)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_DEFmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolumeTarif"/><Properties Name="Caption" PropValue="Тариф по объему:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbVolumeTarif"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тариф по объему"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartDate"/><Properties Name="Caption" PropValue="Начало действия:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpStartDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Начало действия"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTType"/><Properties Name="Caption" PropValue="Тип тарифа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип тарифа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип тарифа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIncludeNDS"/><Properties Name="Caption" PropValue="Цены с НДС:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIncludeNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Цены с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinPPOWeight"/><Properties Name="Caption" PropValue="Минимальный расчетный вес:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMinPPOWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальный расчетный вес"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplierTarif"/><Properties Name="Caption" PropValue="Тариф поставщика:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbSupplierTarif"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тариф поставщика"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEndDate"/><Properties Name="Caption" PropValue="Конец действия тарифа:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpEndDate"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Конец действия тарифа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFilial"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheFilial"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheFilial"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6045"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNalAdds"/><Properties Name="Caption" PropValue="Надбавка за наличную оплату:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtNalAdds"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Надбавка за наличную оплату"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub cmbVolumeTarif_Click()
  on error resume next
  Changing

end sub
private sub dtpStartDate_Change()
  Changing

end sub
private sub txtTType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_TRFTYPE&quot;, id, brief) Then
          txtTType.Tag = Left(id, 38)
          txtTType = brief
        End If
end sub
private sub cmdTType_MenuClick(ByVal sCaption As String)
          txtTType.Tag = &quot;&quot;
          txtTType = &quot;&quot;
End sub
private sub cmbIncludeNDS_Click()
  on error resume next
  Changing

end sub
private sub txtMinPPOWeight_Validate(cancel as boolean)
if txtMinPPOWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtMinPPOWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinPPOWeight.SetFocus 
  elseif Val(txtMinPPOWeight.text) &lt; -922337203685477.5808 or Val(txtMinPPOWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtMinPPOWeight.SetFocus 
  end if
end if
end sub
Private Sub txtMinPPOWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtMinPPOWeight_Change()
  Changing

end sub
private sub cmbSupplierTarif_Click()
  on error resume next
  Changing

end sub
private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;,&quot;VRCCommonInfo_Transporter_Val=-1&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub dtpEndDate_Change()
  Changing

end sub
private sub txtTheFilial_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheFilial_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheFilial.Tag = Left(id, 38)
          txtTheFilial = brief
        End If
end sub
private sub cmdTheFilial_MenuClick(ByVal sCaption As String)
          txtTheFilial.Tag = &quot;&quot;
          txtTheFilial = &quot;&quot;
End sub
private sub txtNalAdds_Validate(cancel as boolean)
if txtNalAdds.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtNalAdds.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNalAdds.SetFocus 
  elseif Val(txtNalAdds.text) &lt; -922337203685477.5808 or Val(txtNalAdds.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtNalAdds.SetFocus 
  end if
end if
end sub
Private Sub txtNalAdds_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtNalAdds_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbVolumeTarif.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(dtpStartDate.value)
if mIsOK then mIsOK = txtTType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbIncludeNDS.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbSupplierTarif.ListIndex &gt;=0)
if mIsOK then mIsOK = txtTheFilial.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtNalAdds.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

cmbVolumeTarif.Clear
cmbVolumeTarif.additem &quot;Да&quot;
cmbVolumeTarif.itemdata(cmbVolumeTarif.newindex)= -1
cmbVolumeTarif.additem &quot;Нет&quot;
cmbVolumeTarif.itemdata(cmbVolumeTarif.newindex)= 0
 For iii = 0 To cmbVolumeTarif.ListCount-1
  If Item.VolumeTarif = cmbVolumeTarif.ItemData(iii) Then
   cmbVolumeTarif.ListIndex = iii
   Exit For
  End If
 Next
dtpStartDate = date
if item.StartDate &lt;&gt; 0 then
 dtpStartDate = item.StartDate
end if
If Not item.TType Is Nothing Then
  txtTType.Tag = item.TType.id
  txtTType = item.TType.brief
else
  txtTType.Tag = &quot;&quot; 
  txtTType = &quot;&quot; 
End If
 LoadBtnPictures cmdTType,cmdTType.tag
  cmdTType.RemoveAllMenu
  cmdTType.AddMenu &quot;Очистить&quot; 
cmbIncludeNDS.Clear
cmbIncludeNDS.additem &quot;Да&quot;
cmbIncludeNDS.itemdata(cmbIncludeNDS.newindex)= -1
cmbIncludeNDS.additem &quot;Нет&quot;
cmbIncludeNDS.itemdata(cmbIncludeNDS.newindex)= 0
 For iii = 0 To cmbIncludeNDS.ListCount-1
  If Item.IncludeNDS = cmbIncludeNDS.ItemData(iii) Then
   cmbIncludeNDS.ListIndex = iii
   Exit For
  End If
 Next
txtMinPPOWeight = item.MinPPOWeight
cmbSupplierTarif.Clear
cmbSupplierTarif.additem &quot;Да&quot;
cmbSupplierTarif.itemdata(cmbSupplierTarif.newindex)= -1
cmbSupplierTarif.additem &quot;Нет&quot;
cmbSupplierTarif.itemdata(cmbSupplierTarif.newindex)= 0
 For iii = 0 To cmbSupplierTarif.ListCount-1
  If Item.SupplierTarif = cmbSupplierTarif.ItemData(iii) Then
   cmbSupplierTarif.ListIndex = iii
   Exit For
  End If
 Next
If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
dtpEndDate = date
if item.EndDate &lt;&gt; 0 then
 dtpEndDate = item.EndDate
else
 dtpEndDate.value = null
end if
If Not item.TheFilial Is Nothing Then
  txtTheFilial.Tag = item.TheFilial.id
  txtTheFilial = item.TheFilial.brief
else
  txtTheFilial.Tag = &quot;&quot; 
  txtTheFilial = &quot;&quot; 
End If
 LoadBtnPictures cmdTheFilial,cmdTheFilial.tag
  cmdTheFilial.RemoveAllMenu
  cmdTheFilial.AddMenu &quot;Очистить&quot; 
txtNalAdds = item.NalAdds
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 if cmbVolumeTarif.listindex&gt;=0 then
   item.VolumeTarif = cmbVolumeTarif.itemdata(cmbVolumeTarif.listindex)
 end if
  if  isnull(dtpStartDate) then
    item.StartDate = 0
  else
    item.StartDate = dtpStartDate.value
  end if
If txtTType.Tag &lt;&gt; &quot;&quot; Then
  Set item.TType = Item.Application.FindRowObject(&quot;PEKD_TRFTYPE&quot;,txtTType.Tag)
Else
  Set item.TType = Nothing
End If
 if cmbIncludeNDS.listindex&gt;=0 then
   item.IncludeNDS = cmbIncludeNDS.itemdata(cmbIncludeNDS.listindex)
 end if
item.MinPPOWeight = cdbl(txtMinPPOWeight)
 if cmbSupplierTarif.listindex&gt;=0 then
   item.SupplierTarif = cmbSupplierTarif.itemdata(cmbSupplierTarif.listindex)
 end if
If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
  if  isnull(dtpEndDate) then
    item.EndDate = 0
  else
    item.EndDate = dtpEndDate.value
  end if
If txtTheFilial.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheFilial = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheFilial.Tag)
Else
  Set item.TheFilial = Nothing
End If
item.NalAdds = cdbl(txtNalAdds)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_AUTOmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoType"/><Properties Name="Caption" PropValue="Тип автотранспорта:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAutoType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип автотранспорта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAutoType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип автотранспорта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForTime"/><Properties Name="Caption" PropValue="За время:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForTime"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="За время"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblByLength"/><Properties Name="Caption" PropValue="От расстояния:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbByLength"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="От расстояния"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLengthPrice"/><Properties Name="Caption" PropValue="Стоимость за км:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtLengthPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость за км"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblHourPrice"/><Properties Name="Caption" PropValue="Стоимость часа:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtHourPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость часа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAutoType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAutoType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_AUTO&quot;, id, brief) Then
          txtAutoType.Tag = Left(id, 38)
          txtAutoType = brief
        End If
end sub
private sub cmdAutoType_MenuClick(ByVal sCaption As String)
          txtAutoType.Tag = &quot;&quot;
          txtAutoType = &quot;&quot;
End sub
private sub cmbForTime_Click()
  on error resume next
  Changing

end sub
private sub cmbByLength_Click()
  on error resume next
  Changing

end sub
private sub txtLengthPrice_Validate(cancel as boolean)
if txtLengthPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtLengthPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLengthPrice.SetFocus 
  elseif Val(txtLengthPrice.text) &lt; -922337203685477.5808 or Val(txtLengthPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLengthPrice.SetFocus 
  end if
end if
end sub
Private Sub txtLengthPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtLengthPrice_Change()
  Changing

end sub
private sub txtHourPrice_Validate(cancel as boolean)
if txtHourPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtHourPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtHourPrice.SetFocus 
  elseif Val(txtHourPrice.text) &lt; -922337203685477.5808 or Val(txtHourPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtHourPrice.SetFocus 
  end if
end if
end sub
Private Sub txtHourPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtHourPrice_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAutoType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbForTime.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbByLength.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(txtLengthPrice.text)
if mIsOK then mIsOK = IsSet(txtHourPrice.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.AutoType Is Nothing Then
  txtAutoType.Tag = item.AutoType.id
  txtAutoType = item.AutoType.brief
else
  txtAutoType.Tag = &quot;&quot; 
  txtAutoType = &quot;&quot; 
End If
 LoadBtnPictures cmdAutoType,cmdAutoType.tag
  cmdAutoType.RemoveAllMenu
  cmdAutoType.AddMenu &quot;Очистить&quot; 
cmbForTime.Clear
cmbForTime.additem &quot;Да&quot;
cmbForTime.itemdata(cmbForTime.newindex)= -1
cmbForTime.additem &quot;Нет&quot;
cmbForTime.itemdata(cmbForTime.newindex)= 0
 For iii = 0 To cmbForTime.ListCount-1
  If Item.ForTime = cmbForTime.ItemData(iii) Then
   cmbForTime.ListIndex = iii
   Exit For
  End If
 Next
cmbByLength.Clear
cmbByLength.additem &quot;Да&quot;
cmbByLength.itemdata(cmbByLength.newindex)= -1
cmbByLength.additem &quot;Нет&quot;
cmbByLength.itemdata(cmbByLength.newindex)= 0
 For iii = 0 To cmbByLength.ListCount-1
  If Item.ByLength = cmbByLength.ItemData(iii) Then
   cmbByLength.ListIndex = iii
   Exit For
  End If
 Next
txtLengthPrice = item.LengthPrice
txtHourPrice = item.HourPrice
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtAutoType.Tag &lt;&gt; &quot;&quot; Then
  Set item.AutoType = Item.Application.FindRowObject(&quot;PEKD_AUTO&quot;,txtAutoType.Tag)
Else
  Set item.AutoType = Nothing
End If
 if cmbForTime.listindex&gt;=0 then
   item.ForTime = cmbForTime.itemdata(cmbForTime.listindex)
 end if
 if cmbByLength.listindex&gt;=0 then
   item.ByLength = cmbByLength.itemdata(cmbByLength.listindex)
 end if
item.LengthPrice = cdbl(txtLengthPrice)
item.HourPrice = cdbl(txtHourPrice)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_SRVmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSrvTYPE"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSrvTYPE"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSrvTYPE"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrice"/><Properties Name="Caption" PropValue="Цена:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCurrency"/><Properties Name="Caption" PropValue="Валюта:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Ед. изм.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuant"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuant"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSrvTYPE_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSrvTYPE_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_SRV&quot;, id, brief) Then
          txtSrvTYPE.Tag = Left(id, 38)
          txtSrvTYPE = brief
        End If
end sub
private sub cmdSrvTYPE_MenuClick(ByVal sCaption As String)
          txtSrvTYPE.Tag = &quot;&quot;
          txtSrvTYPE = &quot;&quot;
End sub
private sub txtPrice_Validate(cancel as boolean)
if txtPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  elseif Val(txtPrice.text) &lt; -922337203685477.5808 or Val(txtPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  end if
end if
end sub
Private Sub txtPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPrice_Change()
  Changing

end sub
private sub txtTheCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtTheCurrency.Tag = Left(id, 38)
          txtTheCurrency = brief
        End If
end sub
private sub cmdTheCurrency_MenuClick(ByVal sCaption As String)
          txtTheCurrency.Tag = &quot;&quot;
          txtTheCurrency = &quot;&quot;
End sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
private sub txtQuant_Validate(cancel as boolean)
if txtQuant.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtQuant.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuant.SetFocus 
  elseif Val(txtQuant.text) &lt; -922337203685477.5808 or Val(txtQuant.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtQuant.SetFocus 
  end if
end if
end sub
Private Sub txtQuant_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtQuant_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSrvTYPE.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPrice.text)
if mIsOK then mIsOK = txtTheCurrency.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtEDIZM.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtQuant.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SrvTYPE Is Nothing Then
  txtSrvTYPE.Tag = item.SrvTYPE.id
  txtSrvTYPE = item.SrvTYPE.brief
else
  txtSrvTYPE.Tag = &quot;&quot; 
  txtSrvTYPE = &quot;&quot; 
End If
 LoadBtnPictures cmdSrvTYPE,cmdSrvTYPE.tag
  cmdSrvTYPE.RemoveAllMenu
  cmdSrvTYPE.AddMenu &quot;Очистить&quot; 
txtPrice = item.Price
If Not item.TheCurrency Is Nothing Then
  txtTheCurrency.Tag = item.TheCurrency.id
  txtTheCurrency = item.TheCurrency.brief
else
  txtTheCurrency.Tag = &quot;&quot; 
  txtTheCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdTheCurrency,cmdTheCurrency.tag
  cmdTheCurrency.RemoveAllMenu
  cmdTheCurrency.AddMenu &quot;Очистить&quot; 
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
txtQuant = item.Quant
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSrvTYPE.Tag &lt;&gt; &quot;&quot; Then
  Set item.SrvTYPE = Item.Application.FindRowObject(&quot;PEKD_SRV&quot;,txtSrvTYPE.Tag)
Else
  Set item.SrvTYPE = Nothing
End If
item.Price = cdbl(txtPrice)
If txtTheCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtTheCurrency.Tag)
Else
  Set item.TheCurrency = Nothing
End If
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
item.Quant = cdbl(txtQuant)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_TRmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrain"/><Properties Name="Caption" PropValue="Направление:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrain"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Направление"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTrain"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Направление"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblToST"/><Properties Name="Caption" PropValue="До станции:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtToST"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="До станции"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdToST"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="До станции"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrice"/><Properties Name="Caption" PropValue="Цена:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCurrency"/><Properties Name="Caption" PropValue="Валюта:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheQuantity"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtTheQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Единица измерения:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTrain_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTrain_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRECTION&quot;, id, brief) Then
          txtTrain.Tag = Left(id, 38)
          txtTrain = brief
        End If
end sub
private sub cmdTrain_MenuClick(ByVal sCaption As String)
          txtTrain.Tag = &quot;&quot;
          txtTrain = &quot;&quot;
End sub
private sub txtToST_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdToST_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,iif(  txtTrain.tag=&quot;&quot;,&quot;PEKD_DIRECTIONid is null&quot;,    &quot;PEKD_DIRECTIONid='&quot; &amp; txtTrain.tag &amp; &quot;'&quot;)) Then
          txtToST.Tag = Left(id, 38)
          txtToST = brief
        End If
end sub
private sub cmdToST_MenuClick(ByVal sCaption As String)
          txtToST.Tag = &quot;&quot;
          txtToST = &quot;&quot;
End sub
private sub txtPrice_Validate(cancel as boolean)
if txtPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  elseif Val(txtPrice.text) &lt; -922337203685477.5808 or Val(txtPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPrice.SetFocus 
  end if
end if
end sub
Private Sub txtPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPrice_Change()
  Changing

end sub
private sub txtTheCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtTheCurrency.Tag = Left(id, 38)
          txtTheCurrency = brief
        End If
end sub
private sub cmdTheCurrency_MenuClick(ByVal sCaption As String)
          txtTheCurrency.Tag = &quot;&quot;
          txtTheCurrency = &quot;&quot;
End sub
private sub txtTheQuantity_Validate(cancel as boolean)
if txtTheQuantity.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheQuantity.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheQuantity.SetFocus 
  elseif Val(txtTheQuantity.text) &lt; -922337203685477.5808 or Val(txtTheQuantity.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheQuantity.SetFocus 
  end if
end if
end sub
Private Sub txtTheQuantity_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheQuantity_Change()
  Changing

end sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTrain.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtToST.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPrice.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Train Is Nothing Then
  txtTrain.Tag = item.Train.id
  txtTrain = item.Train.brief
else
  txtTrain.Tag = &quot;&quot; 
  txtTrain = &quot;&quot; 
End If
 LoadBtnPictures cmdTrain,cmdTrain.tag
  cmdTrain.RemoveAllMenu
  cmdTrain.AddMenu &quot;Очистить&quot; 
If Not item.ToST Is Nothing Then
  txtToST.Tag = item.ToST.id
  txtToST = item.ToST.brief
else
  txtToST.Tag = &quot;&quot; 
  txtToST = &quot;&quot; 
End If
 LoadBtnPictures cmdToST,cmdToST.tag
  cmdToST.RemoveAllMenu
  cmdToST.AddMenu &quot;Очистить&quot; 
txtPrice = item.Price
If Not item.TheCurrency Is Nothing Then
  txtTheCurrency.Tag = item.TheCurrency.id
  txtTheCurrency = item.TheCurrency.brief
else
  txtTheCurrency.Tag = &quot;&quot; 
  txtTheCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdTheCurrency,cmdTheCurrency.tag
  cmdTheCurrency.RemoveAllMenu
  cmdTheCurrency.AddMenu &quot;Очистить&quot; 
txtTheQuantity = item.TheQuantity
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTrain.Tag &lt;&gt; &quot;&quot; Then
  Set item.Train = Item.Application.FindRowObject(&quot;PEKD_DIRECTION&quot;,txtTrain.Tag)
Else
  Set item.Train = Nothing
End If
If txtToST.Tag &lt;&gt; &quot;&quot; Then
  Set item.ToST = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtToST.Tag)
Else
  Set item.ToST = Nothing
End If
item.Price = cdbl(txtPrice)
If txtTheCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtTheCurrency.Tag)
Else
  Set item.TheCurrency = Nothing
End If
item.TheQuantity = cdbl(txtTheQuantity)
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_REGRTRmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightFrom"/><Properties Name="Caption" PropValue="Суммарный вес от:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightFrom"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес от"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightTo"/><Properties Name="Caption" PropValue="Суммарный вес по:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightTo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес по"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightEDIZM"/><Properties Name="Caption" PropValue="Ед. изм. веса:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWeightEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWeightEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPricePercent"/><Properties Name="Caption" PropValue="Процент от тарифа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPricePercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент от тарифа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFixedPrice"/><Properties Name="Caption" PropValue="Фиксированная цена:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFixedPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Фиксированная цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPriceCurrency"/><Properties Name="Caption" PropValue="Валюта фиксированной цены:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPriceCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPriceCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWeightFrom_Validate(cancel as boolean)
if txtWeightFrom.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightFrom.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  elseif Val(txtWeightFrom.text) &lt; -922337203685477.5808 or Val(txtWeightFrom.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightFrom.SetFocus 
  end if
end if
end sub
Private Sub txtWeightFrom_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightFrom_Change()
  Changing

end sub
private sub txtWeightTo_Validate(cancel as boolean)
if txtWeightTo.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtWeightTo.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  elseif Val(txtWeightTo.text) &lt; -922337203685477.5808 or Val(txtWeightTo.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtWeightTo.SetFocus 
  end if
end if
end sub
Private Sub txtWeightTo_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtWeightTo_Change()
  Changing

end sub
private sub txtWeightEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWeightEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtWeightEDIZM.Tag = Left(id, 38)
          txtWeightEDIZM = brief
        End If
end sub
private sub cmdWeightEDIZM_MenuClick(ByVal sCaption As String)
          txtWeightEDIZM.Tag = &quot;&quot;
          txtWeightEDIZM = &quot;&quot;
End sub
private sub txtPricePercent_Validate(cancel as boolean)
if txtPricePercent.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPricePercent.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  elseif Val(txtPricePercent.text) &lt; -922337203685477.5808 or Val(txtPricePercent.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPricePercent.SetFocus 
  end if
end if
end sub
Private Sub txtPricePercent_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPricePercent_Change()
  Changing

end sub
private sub txtFixedPrice_Validate(cancel as boolean)
if txtFixedPrice.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtFixedPrice.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  elseif Val(txtFixedPrice.text) &lt; -922337203685477.5808 or Val(txtFixedPrice.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtFixedPrice.SetFocus 
  end if
end if
end sub
Private Sub txtFixedPrice_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtFixedPrice_Change()
  Changing

end sub
private sub txtPriceCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPriceCurrency_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_CURRENCY&quot;, id, brief) Then
          txtPriceCurrency.Tag = Left(id, 38)
          txtPriceCurrency = brief
        End If
end sub
private sub cmdPriceCurrency_MenuClick(ByVal sCaption As String)
          txtPriceCurrency.Tag = &quot;&quot;
          txtPriceCurrency = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtWeightFrom.text)
if mIsOK then mIsOK = IsSet(txtWeightTo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtWeightFrom = item.WeightFrom
txtWeightTo = item.WeightTo
If Not item.WeightEDIZM Is Nothing Then
  txtWeightEDIZM.Tag = item.WeightEDIZM.id
  txtWeightEDIZM = item.WeightEDIZM.brief
else
  txtWeightEDIZM.Tag = &quot;&quot; 
  txtWeightEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdWeightEDIZM,cmdWeightEDIZM.tag
  cmdWeightEDIZM.RemoveAllMenu
  cmdWeightEDIZM.AddMenu &quot;Очистить&quot; 
txtPricePercent = item.PricePercent
txtFixedPrice = item.FixedPrice
If Not item.PriceCurrency Is Nothing Then
  txtPriceCurrency.Tag = item.PriceCurrency.id
  txtPriceCurrency = item.PriceCurrency.brief
else
  txtPriceCurrency.Tag = &quot;&quot; 
  txtPriceCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdPriceCurrency,cmdPriceCurrency.tag
  cmdPriceCurrency.RemoveAllMenu
  cmdPriceCurrency.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.WeightFrom = cdbl(txtWeightFrom)
item.WeightTo = cdbl(txtWeightTo)
If txtWeightEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.WeightEDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtWeightEDIZM.Tag)
Else
  Set item.WeightEDIZM = Nothing
End If
item.PricePercent = cdbl(txtPricePercent)
item.FixedPrice = cdbl(txtFixedPrice)
If txtPriceCurrency.Tag &lt;&gt; &quot;&quot; Then
  Set item.PriceCurrency = Item.Application.FindRowObject(&quot;ENTDIC_CURRENCY&quot;,txtPriceCurrency.Tag)
Else
  Set item.PriceCurrency = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_REGALLread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightFrom"/><Properties Name="Caption" PropValue="Суммарный вес от:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightFrom"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес от"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightTo"/><Properties Name="Caption" PropValue="Суммарный вес по:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightTo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес по"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightEDIZM"/><Properties Name="Caption" PropValue="Ед. изм. веса:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWeightEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWeightEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPricePercent"/><Properties Name="Caption" PropValue="Процент от тарифа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPricePercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент от тарифа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFixedPrice"/><Properties Name="Caption" PropValue="Фиксированная цена:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFixedPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Фиксированная цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPriceCurrency"/><Properties Name="Caption" PropValue="Валюта фиксированной цены:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPriceCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPriceCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWeightFrom_Change()
  Changing

end sub
private sub txtWeightTo_Change()
  Changing

end sub
private sub txtWeightEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWeightEDIZM_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdWeightEDIZM_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPricePercent_Change()
  Changing

end sub
private sub txtFixedPrice_Change()
  Changing

end sub
private sub txtPriceCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPriceCurrency_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdPriceCurrency_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtWeightFrom.text)
if mIsOK then mIsOK = IsSet(txtWeightTo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtWeightFrom = item.WeightFrom
txtWeightTo = item.WeightTo
If Not item.WeightEDIZM Is Nothing Then
  txtWeightEDIZM.Tag = item.WeightEDIZM.id
  txtWeightEDIZM = item.WeightEDIZM.brief
else
  txtWeightEDIZM.Tag = &quot;&quot; 
  txtWeightEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdWeightEDIZM,cmdWeightEDIZM.tag
  cmdWeightEDIZM.RemoveAllMenu
  cmdWeightEDIZM.AddMenu &quot;Очистить&quot; 
txtPricePercent = item.PricePercent
txtFixedPrice = item.FixedPrice
If Not item.PriceCurrency Is Nothing Then
  txtPriceCurrency.Tag = item.PriceCurrency.id
  txtPriceCurrency = item.PriceCurrency.brief
else
  txtPriceCurrency.Tag = &quot;&quot; 
  txtPriceCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdPriceCurrency,cmdPriceCurrency.tag
  cmdPriceCurrency.RemoveAllMenu
  cmdPriceCurrency.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_DECRread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название скидки:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название скидки"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDecrPercent"/><Properties Name="Caption" PropValue="Процент к тарифу:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtDecrPercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент к тарифу"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtDecrPercent_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = IsSet(txtDecrPercent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtDecrPercent = item.DecrPercent
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_ADDSread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название надбавки:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Название надбавки"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdName"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Название надбавки"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddPercent"/><Properties Name="Caption" PropValue="Процент к тарифной ставке:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtAddPercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент к тарифной ставке"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinValue"/><Properties Name="Caption" PropValue="Минимальное значение:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMinValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальное значение"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMaxValue"/><Properties Name="Caption" PropValue="Максимальное значение:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMaxValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Максимальное значение"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdName_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdName_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtAddPercent_Change()
  Changing

end sub
private sub txtMinValue_Change()
  Changing

end sub
private sub txtMaxValue_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtName.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtAddPercent.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Name Is Nothing Then
  txtName.Tag = item.Name.id
  txtName = item.Name.brief
else
  txtName.Tag = &quot;&quot; 
  txtName = &quot;&quot; 
End If
 LoadBtnPictures cmdName,cmdName.tag
  cmdName.RemoveAllMenu
  cmdName.AddMenu &quot;Очистить&quot; 
txtAddPercent = item.AddPercent
txtMinValue = item.MinValue
txtMaxValue = item.MaxValue
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_DEFread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolumeTarif"/><Properties Name="Caption" PropValue="Тариф по объему:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbVolumeTarif"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тариф по объему"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStartDate"/><Properties Name="Caption" PropValue="Начало действия:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpStartDate"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ToolTipText" PropValue="Начало действия"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTType"/><Properties Name="Caption" PropValue="Тип тарифа:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип тарифа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип тарифа"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIncludeNDS"/><Properties Name="Caption" PropValue="Цены с НДС:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIncludeNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Цены с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMinPPOWeight"/><Properties Name="Caption" PropValue="Минимальный расчетный вес:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtMinPPOWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальный расчетный вес"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplierTarif"/><Properties Name="Caption" PropValue="Тариф поставщика:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbSupplierTarif"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тариф поставщика"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEndDate"/><Properties Name="Caption" PropValue="Конец действия тарифа:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpEndDate"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Конец действия тарифа"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy"/><Properties Name="Width" PropValue="1800"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheFilial"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheFilial"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheFilial"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="6045"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblNalAdds"/><Properties Name="Caption" PropValue="Надбавка за наличную оплату:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtNalAdds"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Надбавка за наличную оплату"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub cmbVolumeTarif_Click()
  on error resume next
  Changing

end sub
private sub dtpStartDate_Change()
  Changing

end sub
private sub txtTType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTType_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTType_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub cmbIncludeNDS_Click()
  on error resume next
  Changing

end sub
private sub txtMinPPOWeight_Change()
  Changing

end sub
private sub cmbSupplierTarif_Click()
  on error resume next
  Changing

end sub
private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
End sub
private sub dtpEndDate_Change()
  Changing

end sub
private sub txtTheFilial_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheFilial_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheFilial_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtNalAdds_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbVolumeTarif.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(dtpStartDate.value)
if mIsOK then mIsOK = txtTType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbIncludeNDS.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbSupplierTarif.ListIndex &gt;=0)
if mIsOK then mIsOK = txtTheFilial.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtNalAdds.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

cmbVolumeTarif.Clear
cmbVolumeTarif.additem &quot;Да&quot;
cmbVolumeTarif.itemdata(cmbVolumeTarif.newindex)= -1
cmbVolumeTarif.additem &quot;Нет&quot;
cmbVolumeTarif.itemdata(cmbVolumeTarif.newindex)= 0
 For iii = 0 To cmbVolumeTarif.ListCount-1
  If Item.VolumeTarif = cmbVolumeTarif.ItemData(iii) Then
   cmbVolumeTarif.ListIndex = iii
   Exit For
  End If
 Next
dtpStartDate = date
if item.StartDate &lt;&gt; 0 then
 dtpStartDate = item.StartDate
end if
If Not item.TType Is Nothing Then
  txtTType.Tag = item.TType.id
  txtTType = item.TType.brief
else
  txtTType.Tag = &quot;&quot; 
  txtTType = &quot;&quot; 
End If
 LoadBtnPictures cmdTType,cmdTType.tag
  cmdTType.RemoveAllMenu
  cmdTType.AddMenu &quot;Очистить&quot; 
cmbIncludeNDS.Clear
cmbIncludeNDS.additem &quot;Да&quot;
cmbIncludeNDS.itemdata(cmbIncludeNDS.newindex)= -1
cmbIncludeNDS.additem &quot;Нет&quot;
cmbIncludeNDS.itemdata(cmbIncludeNDS.newindex)= 0
 For iii = 0 To cmbIncludeNDS.ListCount-1
  If Item.IncludeNDS = cmbIncludeNDS.ItemData(iii) Then
   cmbIncludeNDS.ListIndex = iii
   Exit For
  End If
 Next
txtMinPPOWeight = item.MinPPOWeight
cmbSupplierTarif.Clear
cmbSupplierTarif.additem &quot;Да&quot;
cmbSupplierTarif.itemdata(cmbSupplierTarif.newindex)= -1
cmbSupplierTarif.additem &quot;Нет&quot;
cmbSupplierTarif.itemdata(cmbSupplierTarif.newindex)= 0
 For iii = 0 To cmbSupplierTarif.ListCount-1
  If Item.SupplierTarif = cmbSupplierTarif.ItemData(iii) Then
   cmbSupplierTarif.ListIndex = iii
   Exit For
  End If
 Next
If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
dtpEndDate = date
if item.EndDate &lt;&gt; 0 then
 dtpEndDate = item.EndDate
else
 dtpEndDate.value = null
end if
If Not item.TheFilial Is Nothing Then
  txtTheFilial.Tag = item.TheFilial.id
  txtTheFilial = item.TheFilial.brief
else
  txtTheFilial.Tag = &quot;&quot; 
  txtTheFilial = &quot;&quot; 
End If
 LoadBtnPictures cmdTheFilial,cmdTheFilial.tag
  cmdTheFilial.RemoveAllMenu
  cmdTheFilial.AddMenu &quot;Очистить&quot; 
txtNalAdds = item.NalAdds
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

  if  isnull(dtpEndDate) then
    item.EndDate = 0
  else
    item.EndDate = dtpEndDate.value
  end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_AUTOread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAutoType"/><Properties Name="Caption" PropValue="Тип автотранспорта:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAutoType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип автотранспорта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdAutoType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип автотранспорта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblForTime"/><Properties Name="Caption" PropValue="За время:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbForTime"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="За время"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblByLength"/><Properties Name="Caption" PropValue="От расстояния:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbByLength"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="От расстояния"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLengthPrice"/><Properties Name="Caption" PropValue="Стоимость за км:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtLengthPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость за км"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblHourPrice"/><Properties Name="Caption" PropValue="Стоимость часа:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtHourPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Стоимость часа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAutoType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdAutoType_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdAutoType_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub cmbForTime_Click()
  on error resume next
  Changing

end sub
private sub cmbByLength_Click()
  on error resume next
  Changing

end sub
private sub txtLengthPrice_Change()
  Changing

end sub
private sub txtHourPrice_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtAutoType.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbForTime.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbByLength.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(txtLengthPrice.text)
if mIsOK then mIsOK = IsSet(txtHourPrice.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.AutoType Is Nothing Then
  txtAutoType.Tag = item.AutoType.id
  txtAutoType = item.AutoType.brief
else
  txtAutoType.Tag = &quot;&quot; 
  txtAutoType = &quot;&quot; 
End If
 LoadBtnPictures cmdAutoType,cmdAutoType.tag
  cmdAutoType.RemoveAllMenu
  cmdAutoType.AddMenu &quot;Очистить&quot; 
cmbForTime.Clear
cmbForTime.additem &quot;Да&quot;
cmbForTime.itemdata(cmbForTime.newindex)= -1
cmbForTime.additem &quot;Нет&quot;
cmbForTime.itemdata(cmbForTime.newindex)= 0
 For iii = 0 To cmbForTime.ListCount-1
  If Item.ForTime = cmbForTime.ItemData(iii) Then
   cmbForTime.ListIndex = iii
   Exit For
  End If
 Next
cmbByLength.Clear
cmbByLength.additem &quot;Да&quot;
cmbByLength.itemdata(cmbByLength.newindex)= -1
cmbByLength.additem &quot;Нет&quot;
cmbByLength.itemdata(cmbByLength.newindex)= 0
 For iii = 0 To cmbByLength.ListCount-1
  If Item.ByLength = cmbByLength.ItemData(iii) Then
   cmbByLength.ListIndex = iii
   Exit For
  End If
 Next
txtLengthPrice = item.LengthPrice
txtHourPrice = item.HourPrice
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_SRVread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSrvTYPE"/><Properties Name="Caption" PropValue="Услуга:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSrvTYPE"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSrvTYPE"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Услуга"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrice"/><Properties Name="Caption" PropValue="Цена:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCurrency"/><Properties Name="Caption" PropValue="Валюта:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Ед. изм.:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм."/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblQuant"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtQuant"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSrvTYPE_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSrvTYPE_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdSrvTYPE_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPrice_Change()
  Changing

end sub
private sub txtTheCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheCurrency_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheCurrency_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtQuant_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSrvTYPE.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPrice.text)
if mIsOK then mIsOK = txtTheCurrency.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtEDIZM.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtQuant.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SrvTYPE Is Nothing Then
  txtSrvTYPE.Tag = item.SrvTYPE.id
  txtSrvTYPE = item.SrvTYPE.brief
else
  txtSrvTYPE.Tag = &quot;&quot; 
  txtSrvTYPE = &quot;&quot; 
End If
 LoadBtnPictures cmdSrvTYPE,cmdSrvTYPE.tag
  cmdSrvTYPE.RemoveAllMenu
  cmdSrvTYPE.AddMenu &quot;Очистить&quot; 
txtPrice = item.Price
If Not item.TheCurrency Is Nothing Then
  txtTheCurrency.Tag = item.TheCurrency.id
  txtTheCurrency = item.TheCurrency.brief
else
  txtTheCurrency.Tag = &quot;&quot; 
  txtTheCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdTheCurrency,cmdTheCurrency.tag
  cmdTheCurrency.RemoveAllMenu
  cmdTheCurrency.AddMenu &quot;Очистить&quot; 
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
txtQuant = item.Quant
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_TRread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrain"/><Properties Name="Caption" PropValue="Направление:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrain"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Направление"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTrain"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Направление"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblToST"/><Properties Name="Caption" PropValue="До станции:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtToST"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="До станции"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdToST"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="До станции"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPrice"/><Properties Name="Caption" PropValue="Цена:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheCurrency"/><Properties Name="Caption" PropValue="Валюта:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheQuantity"/><Properties Name="Caption" PropValue="Количество:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtTheQuantity"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Единица измерения:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTrain_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTrain_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTrain_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtToST_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdToST_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdToST_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPrice_Change()
  Changing

end sub
private sub txtTheCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheCurrency_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdTheCurrency_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtTheQuantity_Change()
  Changing

end sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTrain.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtToST.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtPrice.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Train Is Nothing Then
  txtTrain.Tag = item.Train.id
  txtTrain = item.Train.brief
else
  txtTrain.Tag = &quot;&quot; 
  txtTrain = &quot;&quot; 
End If
 LoadBtnPictures cmdTrain,cmdTrain.tag
  cmdTrain.RemoveAllMenu
  cmdTrain.AddMenu &quot;Очистить&quot; 
If Not item.ToST Is Nothing Then
  txtToST.Tag = item.ToST.id
  txtToST = item.ToST.brief
else
  txtToST.Tag = &quot;&quot; 
  txtToST = &quot;&quot; 
End If
 LoadBtnPictures cmdToST,cmdToST.tag
  cmdToST.RemoveAllMenu
  cmdToST.AddMenu &quot;Очистить&quot; 
txtPrice = item.Price
If Not item.TheCurrency Is Nothing Then
  txtTheCurrency.Tag = item.TheCurrency.id
  txtTheCurrency = item.TheCurrency.brief
else
  txtTheCurrency.Tag = &quot;&quot; 
  txtTheCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdTheCurrency,cmdTheCurrency.tag
  cmdTheCurrency.RemoveAllMenu
  cmdTheCurrency.AddMenu &quot;Очистить&quot; 
txtTheQuantity = item.TheQuantity
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKTRF_REGRTRread" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightFrom"/><Properties Name="Caption" PropValue="Суммарный вес от:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightFrom"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес от"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightTo"/><Properties Name="Caption" PropValue="Суммарный вес по:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtWeightTo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Суммарный вес по"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWeightEDIZM"/><Properties Name="Caption" PropValue="Ед. изм. веса:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtWeightEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdWeightEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Ед. изм. веса"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPricePercent"/><Properties Name="Caption" PropValue="Процент от тарифа:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtPricePercent"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Процент от тарифа"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFixedPrice"/><Properties Name="Caption" PropValue="Фиксированная цена:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtFixedPrice"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Фиксированная цена"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPriceCurrency"/><Properties Name="Caption" PropValue="Валюта фиксированной цены:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPriceCurrency"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdPriceCurrency"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Валюта фиксированной цены"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtWeightFrom_Change()
  Changing

end sub
private sub txtWeightTo_Change()
  Changing

end sub
private sub txtWeightEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdWeightEDIZM_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdWeightEDIZM_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
private sub txtPricePercent_Change()
  Changing

end sub
private sub txtFixedPrice_Change()
  Changing

end sub
private sub txtPriceCurrency_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdPriceCurrency_CLick()
  on error resume next
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
end sub
private sub cmdPriceCurrency_MenuClick(ByVal sCaption As String)
        MsgBox &quot;Режим не предусматривает редактирования&quot;,vbInformation
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(txtWeightFrom.text)
if mIsOK then mIsOK = IsSet(txtWeightTo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

txtWeightFrom = item.WeightFrom
txtWeightTo = item.WeightTo
If Not item.WeightEDIZM Is Nothing Then
  txtWeightEDIZM.Tag = item.WeightEDIZM.id
  txtWeightEDIZM = item.WeightEDIZM.brief
else
  txtWeightEDIZM.Tag = &quot;&quot; 
  txtWeightEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdWeightEDIZM,cmdWeightEDIZM.tag
  cmdWeightEDIZM.RemoveAllMenu
  cmdWeightEDIZM.AddMenu &quot;Очистить&quot; 
txtPricePercent = item.PricePercent
txtFixedPrice = item.FixedPrice
If Not item.PriceCurrency Is Nothing Then
  txtPriceCurrency.Tag = item.PriceCurrency.id
  txtPriceCurrency = item.PriceCurrency.brief
else
  txtPriceCurrency.Tag = &quot;&quot; 
  txtPriceCurrency = &quot;&quot; 
End If
 LoadBtnPictures cmdPriceCurrency,cmdPriceCurrency.tag
  cmdPriceCurrency.RemoveAllMenu
  cmdPriceCurrency.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_REGALL_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_REGALL"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Регресс по общему весу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Регресс по общему весу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot;
  Open s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_DECR_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DECR"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Скидки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Скидки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot;
  Open s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_ADDS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_ADDS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Надбавки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Надбавки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot;
  Open s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_DEF_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DEF"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общее описание"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общее описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot;
  Open s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_AUTO_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_AUTO"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Стоимость автодоставки груза"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Автодоставка"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot;
  Open s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_SRV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_SRV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тарифы на услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тарифы на услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot;
  Open s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_TR_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_TR"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Транспортировка"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Транспортировка"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot;
  Open s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_REGRTR_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_REGRTR"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Регресс по весу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Регресс по весу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot;
  Open s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_REGALL_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_REGALLmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Регресс по общему весу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Регресс по общему весу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot;
  Open s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_DECR_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DECRmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Скидки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Скидки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot;
  Open s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_ADDS_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_ADDSmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Надбавки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Надбавки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot;
  Open s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_DEF_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DEFmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общее описание"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общее описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot;
  Open s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_AUTO_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_AUTOmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Стоимость автодоставки груза"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Автодоставка"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot;
  Open s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_SRV_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_SRVmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тарифы на услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тарифы на услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot;
  Open s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_TR_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_TRmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Транспортировка"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Транспортировка"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot;
  Open s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_REGRTR_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_REGRTRmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Регресс по весу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Регресс по весу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot;
  Open s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_DEF_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editPEKTRF_DEF" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DEFmain"><Properties Name="Name" PropValue="editPEKTRF_DEF"/></ControlData><ControlData Name="cmdPEKTRF_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opPEKTRF_DEF_UpdateItemName_main(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=.TType.Brief &amp; &quot; от &quot; &amp; .StartDate,  RowItem:=RowItem
end with
end sub
Private Sub cmdPEKTRF_DEFRef_Click()
  on error resume next
  Item.PEKTRF_DEF.Refresh
  cmdPEKTRF_DEFAdd_Click
End Sub
Private Sub cmdPEKTRF_DEFCfg_Click()
    on error resume next 
    editPEKTRF_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;PEK2TRF_editPEKTRF_DEF_main&quot; For Output As #ff
    print #ff, editPEKTRF_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdPEKTRF_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.PEKTRF_DEF.Count = 0 Then
   set u=Item.PEKTRF_DEF.Add

 End If
 Set editPEKTRF_DEF.Item = Item.PEKTRF_DEF.Item(1)
 editPEKTRF_DEF.InitPanel
 cmdPEKTRF_DEFSave.Enabled = True
End Sub
Private Sub cmdPEKTRF_DEFDel_Click()
  on error resume next
  if  editPEKTRF_DEF.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editPEKTRF_DEF.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editPEKTRF_DEF.item.parent.Delete editPEKTRF_DEF.item.id
    cmdPEKTRF_DEFSave.Enabled = false
    editPEKTRF_DEF.Enabled = false
    set editPEKTRF_DEF.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editPEKTRF_DEF_Changed()
 cmdPEKTRF_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editPEKTRF_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdPEKTRF_DEFSave_Click()
  on error resume next
    if editPEKTRF_DEF.IsOK then
    MousePointer = vbHourglass
    editPEKTRF_DEF.Save
  on error goto bye
    editPEKTRF_DEF.item.Save
    MousePointer = vbNormal
        opPEKTRF_DEF_UpdateItemName_main editPEKTRF_DEF.item
    cmdPEKTRF_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editPEKTRF_DEF.item.REFRESH
  'editPEKTRF_DEF.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_DEFSave,cmdPEKTRF_DEFSave.tag
  LoadBtnPictures cmdPEKTRF_DEFRef,cmdPEKTRF_DEFRef.tag
  LoadBtnPictures cmdPEKTRF_DEFCfg,cmdPEKTRF_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;PEK2TRF_editPEKTRF_DEF_main&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editPEKTRF_DEF.PanelCustomisationString = buf
  cmdPEKTRF_DEFAdd_click
end sub
private sub OnTabClick()

      editPEKTRF_DEF.Top = 40 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Left = 5 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editPEKTRF_DEF.Save
if editPEKTRF_DEF.item.Changed then
  editPEKTRF_DEF.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editPEKTRF_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_SRV_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тарифы на услуги"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVOpen"/></ControlData><ControlData Name="mnuPEKTRF_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVRef"/></ControlData><ControlData Name="mnuPEKTRF_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVS1"/></ControlData><ControlData Name="mnuPEKTRF_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCOPY"/></ControlData><ControlData Name="mnuPEKTRF_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCUT"/></ControlData><ControlData Name="mnuPEKTRF_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVPASTE"/></ControlData><ControlData Name="mnuPEKTRF_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVPrn"/></ControlData><ControlData Name="mnuPEKTRF_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCfg"/></ControlData><ControlData Name="mnuPEKTRF_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVFind"/></ControlData><ControlData Name="mnuPEKTRF_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_SRV as object
private menuActionPEKTRF_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_SRV,&quot;gridPEKTRF_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_SRV,&quot;Тарифы на услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_SRVRef_Click()
  on error resume next
  item.PEKTRF_SRV.Refresh
  gridPEKTRF_SRV.itemCount = item.PEKTRF_SRV.count
  gridPEKTRF_SRV.Refetch
  gridPEKTRF_SRV.Refresh
End Sub
Private Sub cmdPEKTRF_SRVAcc_Click()
On Error Resume Next
If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
If gridPEKTRF_SRV.Row &gt; 0 Then
 If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_SRVEdit_Click()
  on error resume next
If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
If gridPEKTRF_SRV.Row &gt; 0 then
 If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_SRV_main.Item = u
    again: frmPEKTRF_SRV_main.NotFirstTime = False
    frmPEKTRF_SRV_main.OnInit
    frmPEKTRF_SRV_main.Show vbModal
    If frmPEKTRF_SRV_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_SRVDel_Click()
  on error resume next
  gridPEKTRF_SRV.Delete
End Sub
Private Sub cmdPEKTRF_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_SRV.Add()

      Set frmPEKTRF_SRV_main.Item = u
      again: frmPEKTRF_SRV_main.NotFirstTime = False
      frmPEKTRF_SRV_main.OnInit
      frmPEKTRF_SRV_main.Show vbModal
      If frmPEKTRF_SRV_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_SRV.ItemCount = Item.PEKTRF_SRV.Count
        gridPEKTRF_SRV.Refresh
        gridPEKTRF_SRV.RefreshGroups
        gridPEKTRF_SRV.Refreshsort
        gridPEKTRF_SRV.MoveToBookmark u.ID &amp; &quot;PEKTRF_SRV&quot;
      Else
        Item.PEKTRF_SRV.Delete u.ID
        Item.PEKTRF_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_SRVFnd_Click()
  on error resume next
  fndPEKTRF_SRV.ShowForm
End Sub
Private Sub cmdPEKTRF_SRVRun_Click()
  on error resume next
  gridPEKTRF_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_SRV.LoadRow gridPEKTRF_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_SRV_DblClick()
  cmdPEKTRF_SRVEdit_Click
End Sub
Private Sub gridPEKTRF_SRV_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_SRV.Row And LastRow &gt; 0 Then
  gridPEKTRF_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_SRV.GetRowData(gridPEKTRF_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_SRV.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_SRVCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_SRV
End If
end sub
private sub mnuPEKTRF_SRVAdd_click()
   menuActionPEKTRF_SRV =&quot;ADD&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVEdit_click()
   menuActionPEKTRF_SRV =&quot;EDIT&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVDelete_click()
   menuActionPEKTRF_SRV =&quot;DEL&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVOpen_click()
   menuActionPEKTRF_SRV =&quot;RUN&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVRef_click()
   menuActionPEKTRF_SRV =&quot;REF&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
  Private Sub mnuPEKTRF_SRVCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_SRV.Row &gt; 0 Then
     If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_SRVCUT_Click()
    On Error Resume Next
    If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_SRV.Row &gt; 0 Then
     If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_SRVCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_SRV.Row &gt; 0 Then
   If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_SRV.ItemCount = u.parent.Count
      gridPEKTRF_SRV.RefreshRowIndex gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_SRVPrn_click()
   menuActionPEKTRF_SRV =&quot;PRN&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVCfg_click()
   menuActionPEKTRF_SRV =&quot;CFG&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVFind_click()
   menuActionPEKTRF_SRV =&quot;FND&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVAcc_click()
   menuActionPEKTRF_SRV =&quot;ACC&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub menuTimerPEKTRF_SRV_timer()
   menuTimerPEKTRF_SRV.enabled = false
   if menuActionPEKTRF_SRV =&quot;ADD&quot; then cmdPEKTRF_SRVADD_CLick
   if menuActionPEKTRF_SRV =&quot;EDIT&quot; then cmdPEKTRF_SRVEDIT_CLick
   if menuActionPEKTRF_SRV =&quot;DEL&quot; then cmdPEKTRF_SRVDEL_CLick
   if menuActionPEKTRF_SRV =&quot;RUN&quot; then cmdPEKTRF_SRVRUN_CLick
   if menuActionPEKTRF_SRV =&quot;REF&quot; then cmdPEKTRF_SRVREF_CLick
   if menuActionPEKTRF_SRV =&quot;PRN&quot; then cmdPEKTRF_SRVPRN_CLick
   if menuActionPEKTRF_SRV =&quot;CFG&quot; then cmdPEKTRF_SRVCFG_CLick
   if menuActionPEKTRF_SRV =&quot;FND&quot; then cmdPEKTRF_SRVFND_CLick
   if menuActionPEKTRF_SRV =&quot;ACC&quot; then cmdPEKTRF_SRVACC_CLick
   menuActionPEKTRF_SRV =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_SRVAdd,cmdPEKTRF_SRVAdd.tag
  LoadBtnPictures cmdPEKTRF_SRVEdit,cmdPEKTRF_SRVEdit.tag
  LoadBtnPictures cmdPEKTRF_SRVDel,cmdPEKTRF_SRVDel.tag
  LoadBtnPictures cmdPEKTRF_SRVRef,cmdPEKTRF_SRVRef.tag
  LoadBtnPictures cmdPEKTRF_SRVPrn,cmdPEKTRF_SRVPrn.tag
  LoadBtnPictures cmdPEKTRF_SRVFnd,cmdPEKTRF_SRVFnd.tag
  LoadBtnPictures cmdPEKTRF_SRVRun,cmdPEKTRF_SRVRun.tag
  LoadBtnPictures cmdPEKTRF_SRVAcc,cmdPEKTRF_SRVAcc.tag
  LoadBtnPictures cmdPEKTRF_SRVCfg,cmdPEKTRF_SRVCfg.tag
  item.PEKTRF_SRV.PrepareGrid gridPEKTRF_SRV
  LoadGridLayout gridPEKTRF_SRV
  Set fndPEKTRF_SRV = Nothing
  On Error Resume Next
  Set fndPEKTRF_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_SRV.Init gridPEKTRF_SRV
end sub
private sub OnTabClick()

      gridPEKTRF_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_TR_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_TR" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlPEKTRF_TR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridPEKTRF_TR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_TR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_TRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_TRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_TRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_TRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_TRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_TRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridPEKTRF_REGRTR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_REGRTR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_TR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Транспортировка"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_TR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_TRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_TREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_TROpen"/></ControlData><ControlData Name="mnuPEKTRF_TRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRRef"/></ControlData><ControlData Name="mnuPEKTRF_TRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_TRS1"/></ControlData><ControlData Name="mnuPEKTRF_TRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_TRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_TRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_TRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCUT"/></ControlData><ControlData Name="mnuPEKTRF_TRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_TRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_TRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_TRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRPrn"/></ControlData><ControlData Name="mnuPEKTRF_TRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCfg"/></ControlData><ControlData Name="mnuPEKTRF_TRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_TRFind"/></ControlData><ControlData Name="mnuPEKTRF_TRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_TRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_TR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_TR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupPEKTRF_REGRTR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Регресс по весу"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_REGRTR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_REGRTRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTROpen"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRRef"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRS1"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_REGRTRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCUT"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_REGRTRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRPrn"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCfg"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRFind"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_REGRTR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_REGRTR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_TR as object
private menuActionPEKTRF_TR as string
private fndPEKTRF_REGRTR as object
private menuActionPEKTRF_REGRTR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKTRF_TR_PositionChanged()
  pnlPEKTRF_TR.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_TR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_TRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_TR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_TR
End If
end sub
private sub mnuPEKTRF_TRAdd_click()
   menuActionPEKTRF_TR =&quot;ADD&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TREdit_click()
   menuActionPEKTRF_TR =&quot;EDIT&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRDelete_click()
   menuActionPEKTRF_TR =&quot;DEL&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TROpen_click()
   menuActionPEKTRF_TR =&quot;RUN&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRRef_click()
   menuActionPEKTRF_TR =&quot;REF&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
  Private Sub mnuPEKTRF_TRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_TR.Row &gt; 0 Then
     If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_TRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_TR.Row &gt; 0 Then
     If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_TR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_TRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_TR.Row &gt; 0 Then
   If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_TR.ItemCount = u.parent.Count
      gridPEKTRF_TR.RefreshRowIndex gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_TRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_TRPrn_click()
   menuActionPEKTRF_TR =&quot;PRN&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRCfg_click()
   menuActionPEKTRF_TR =&quot;CFG&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRFind_click()
   menuActionPEKTRF_TR =&quot;FND&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRAcc_click()
   menuActionPEKTRF_TR =&quot;ACC&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub menuTimerPEKTRF_TR_timer()
   menuTimerPEKTRF_TR.enabled = false
   if menuActionPEKTRF_TR =&quot;ADD&quot; then cmdPEKTRF_TRADD_CLick
   if menuActionPEKTRF_TR =&quot;EDIT&quot; then cmdPEKTRF_TREDIT_CLick
   if menuActionPEKTRF_TR =&quot;DEL&quot; then cmdPEKTRF_TRDEL_CLick
   if menuActionPEKTRF_TR =&quot;RUN&quot; then cmdPEKTRF_TRRUN_CLick
   if menuActionPEKTRF_TR =&quot;REF&quot; then cmdPEKTRF_TRREF_CLick
   if menuActionPEKTRF_TR =&quot;PRN&quot; then cmdPEKTRF_TRPRN_CLick
   if menuActionPEKTRF_TR =&quot;CFG&quot; then cmdPEKTRF_TRCFG_CLick
   if menuActionPEKTRF_TR =&quot;FND&quot; then cmdPEKTRF_TRFND_CLick
   if menuActionPEKTRF_TR =&quot;ACC&quot; then cmdPEKTRF_TRACC_CLick
   menuActionPEKTRF_TR =&quot;&quot;
end sub
Private Sub cmdPEKTRF_TRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_TR,&quot;gridPEKTRF_TR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_TRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_TR,&quot;Транспортировка&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_TRRef_Click()
  on error resume next
  item.PEKTRF_TR.Refresh
  gridPEKTRF_TR.itemCount = item.PEKTRF_TR.count
  gridPEKTRF_TR.Refetch
  gridPEKTRF_TR.Refresh
End Sub
Private Sub cmdPEKTRF_TRAcc_Click()
On Error Resume Next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 Then
 If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_TREdit_Click()
  on error resume next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 then
 If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_TR_main.Item = u
    again: frmPEKTRF_TR_main.NotFirstTime = False
    frmPEKTRF_TR_main.OnInit
    frmPEKTRF_TR_main.Show vbModal
    If frmPEKTRF_TR_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_TR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_TRDel_Click()
  on error resume next
  gridPEKTRF_TR.Delete
End Sub
Private Sub cmdPEKTRF_TRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_TR.Add()

      Set frmPEKTRF_TR_main.Item = u
      again: frmPEKTRF_TR_main.NotFirstTime = False
      frmPEKTRF_TR_main.OnInit
      frmPEKTRF_TR_main.Show vbModal
      If frmPEKTRF_TR_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_TR.ItemCount = Item.PEKTRF_TR.Count
        gridPEKTRF_TR.Refresh
        gridPEKTRF_TR.RefreshGroups
        gridPEKTRF_TR.Refreshsort
        gridPEKTRF_TR.MoveToBookmark u.ID &amp; &quot;PEKTRF_TR&quot;
      Else
        Item.PEKTRF_TR.Delete u.ID
        Item.PEKTRF_TR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_TRFnd_Click()
  on error resume next
  fndPEKTRF_TR.ShowForm
End Sub
Private Sub cmdPEKTRF_TRRun_Click()
  on error resume next
  gridPEKTRF_TR_DblClick
End Sub
Private Sub gridPEKTRF_TR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_TR.LoadRow gridPEKTRF_TR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_TR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_TR_DblClick()
  cmdPEKTRF_TREdit_Click
End Sub
Private Sub gridPEKTRF_TR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_TR.FindOnPress KeyAscii
End Sub

Private Sub pnlPEKTRF_TR_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridPEKTRF_TR.Left = Left
  gridPEKTRF_TR.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKTRF_TR.Width = Width
  gridPEKTRF_TR.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKTRF_TRAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TREdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdPEKTRF_TREdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKTRF_TRDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKTRF_TRRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKTRF_TRPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKTRF_TRCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKTRF_TRFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKTRF_TRRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKTRF_TRAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuPEKTRF_TRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_TR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_TR.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdPEKTRF_REGRTRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_REGRTR,&quot;gridPEKTRF_REGRTR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGRTRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_REGRTR,&quot;Регресс по весу&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGRTRAcc_Click()
On Error Resume Next
If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGRTR.Row &gt; 0 Then
 If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGRTRFnd_Click()
  on error resume next
  fndPEKTRF_REGRTR.ShowForm
End Sub
Private Sub cmdPEKTRF_REGRTRRun_Click()
  on error resume next
  gridPEKTRF_REGRTR_DblClick
End Sub
Private Sub pnlPEKTRF_TR_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKTRF_REGRTR.Left = Left
  gridPEKTRF_REGRTR.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKTRF_REGRTR.Width = Width
  gridPEKTRF_REGRTR.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTREdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdPEKTRF_REGRTREdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdPEKTRF_REGRTRRef_Click()
  on error resume next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 Then
 If gridPEKTRF_TR.RowIndex ( gridPEKTRF_TR.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.PEKTRF_REGRTR.refresh
   gridPEKTRF_REGRTR.itemcount=gu.PEKTRF_REGRTR.count
   gridPEKTRF_REGRTR.refetch
   gridPEKTRF_REGRTR.refresh
 else
  gridPEKTRF_REGRTR.columns.clear
  gridPEKTRF_REGRTR.itemcount=0
 End If
else
 gridPEKTRF_REGRTR.columns.clear
 gridPEKTRF_REGRTR.itemcount=0
End If
End Sub
Private Sub cmdPEKTRF_REGRTREdit_Click()
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmPEKTRF_REGRTR_main.Item = u
    again: frmPEKTRF_REGRTR_main.NotFirstTime = False
    frmPEKTRF_REGRTR_main.OnInit
    frmPEKTRF_REGRTR_main.Show vbModal
    If frmPEKTRF_REGRTR_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_REGRTR.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdPEKTRF_REGRTRDel_Click()
  on error resume next
  gridPEKTRF_REGRTR.Delete
End Sub
Private Sub cmdPEKTRF_REGRTRAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.PEKTRF_REGRTR.Add()

      Set frmPEKTRF_REGRTR_main.Item = u
      again: frmPEKTRF_REGRTR_main.NotFirstTime = False
      frmPEKTRF_REGRTR_main.OnInit
      frmPEKTRF_REGRTR_main.Show vbModal
      If frmPEKTRF_REGRTR_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_REGRTR.ItemCount = gu.PEKTRF_REGRTR.Count
        gridPEKTRF_REGRTR.Refresh
        gridPEKTRF_REGRTR.RefreshGroups
        gridPEKTRF_REGRTR.Refreshsort
        gridPEKTRF_REGRTR.MoveToBookmark u.ID &amp; &quot;PEKTRF_REGRTR&quot;
      Else
        gu.PEKTRF_REGRTR.Delete u.ID
        gu.PEKTRF_REGRTR.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridPEKTRF_TR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridPEKTRF_TR.ItemCount = 0 Then 
  gridPEKTRF_REGRTR.ItemCount=0
  Exit Sub
End If
If gridPEKTRF_TR.Row &gt; 0 Then
  If LastRow &lt;&gt; gridPEKTRF_TR.Row And LastRow &gt; 0 Then
    gridPEKTRF_TR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridPEKTRF_TR.GetRowData(gridPEKTRF_TR.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridPEKTRF_TR.RowIndex ( gridPEKTRF_TR.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridPEKTRF_TR.Row or gridPEKTRF_REGRTR.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.PEKTRF_REGRTR.Preparegrid gridPEKTRF_REGRTR
  gridPEKTRF_REGRTR.ItemCount=0
    LoadGridLayout gridPEKTRF_REGRTR
    Set fndPEKTRF_REGRTR = Nothing
    Set fndPEKTRF_REGRTR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKTRF_REGRTR.Init gridPEKTRF_REGRTR
  gridPEKTRF_REGRTR.ItemCount=gu.PEKTRF_REGRTR.Count
  End If
 End If
End If
End Sub
Private Sub gridPEKTRF_REGRTR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.PEKTRF_REGRTR.LoadRow gridPEKTRF_REGRTR, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridPEKTRF_REGRTR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_REGRTR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_REGRTR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridPEKTRF_REGRTR_DblClick()
    cmdPEKTRF_REGRTREdit_click
End Sub
Private Sub gridPEKTRF_REGRTR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
 If gridPEKTRF_REGRTR.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKTRF_REGRTR.Row And LastRow &gt; 0 Then
     gridPEKTRF_REGRTR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKTRF_REGRTR.GetRowData(gridPEKTRF_REGRTR.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuPEKTRF_REGRTRPASTE_Click()
On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.PEKTRF_REGRTR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_REGRTR.ItemCount = u.parent.Count
    ELSE
      GU.PEKTRF_REGRTR.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_REGRTR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_REGRTRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_REGRTR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_REGRTR
End If
end sub
private sub mnuPEKTRF_REGRTRAdd_click()
   menuActionPEKTRF_REGRTR =&quot;ADD&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTREdit_click()
   menuActionPEKTRF_REGRTR =&quot;EDIT&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRDelete_click()
   menuActionPEKTRF_REGRTR =&quot;DEL&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTROpen_click()
   menuActionPEKTRF_REGRTR =&quot;RUN&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRRef_click()
   menuActionPEKTRF_REGRTR =&quot;REF&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
  Private Sub mnuPEKTRF_REGRTRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.Row &gt; 0 Then
     If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_REGRTRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.Row &gt; 0 Then
     If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_REGRTR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_REGRTRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_REGRTR.Row &gt; 0 Then
   If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_REGRTR.ItemCount = u.parent.Count
      gridPEKTRF_REGRTR.RefreshRowIndex gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_REGRTRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_REGRTRPrn_click()
   menuActionPEKTRF_REGRTR =&quot;PRN&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRCfg_click()
   menuActionPEKTRF_REGRTR =&quot;CFG&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRFind_click()
   menuActionPEKTRF_REGRTR =&quot;FND&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRAcc_click()
   menuActionPEKTRF_REGRTR =&quot;ACC&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub menuTimerPEKTRF_REGRTR_timer()
   menuTimerPEKTRF_REGRTR.enabled = false
   if menuActionPEKTRF_REGRTR =&quot;ADD&quot; then cmdPEKTRF_REGRTRADD_CLick
   if menuActionPEKTRF_REGRTR =&quot;EDIT&quot; then cmdPEKTRF_REGRTREDIT_CLick
   if menuActionPEKTRF_REGRTR =&quot;DEL&quot; then cmdPEKTRF_REGRTRDEL_CLick
   if menuActionPEKTRF_REGRTR =&quot;RUN&quot; then cmdPEKTRF_REGRTRRUN_CLick
   if menuActionPEKTRF_REGRTR =&quot;REF&quot; then cmdPEKTRF_REGRTRREF_CLick
   if menuActionPEKTRF_REGRTR =&quot;PRN&quot; then cmdPEKTRF_REGRTRPRN_CLick
   if menuActionPEKTRF_REGRTR =&quot;CFG&quot; then cmdPEKTRF_REGRTRCFG_CLick
   if menuActionPEKTRF_REGRTR =&quot;FND&quot; then cmdPEKTRF_REGRTRFND_CLick
   if menuActionPEKTRF_REGRTR =&quot;ACC&quot; then cmdPEKTRF_REGRTRACC_CLick
   menuActionPEKTRF_REGRTR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_TRAdd,cmdPEKTRF_TRAdd.tag
  LoadBtnPictures cmdPEKTRF_TREdit,cmdPEKTRF_TREdit.tag
  LoadBtnPictures cmdPEKTRF_TRDel,cmdPEKTRF_TRDel.tag
  LoadBtnPictures cmdPEKTRF_TRRef,cmdPEKTRF_TRRef.tag
  LoadBtnPictures cmdPEKTRF_TRPrn,cmdPEKTRF_TRPrn.tag
  LoadBtnPictures cmdPEKTRF_TRFnd,cmdPEKTRF_TRFnd.tag
  LoadBtnPictures cmdPEKTRF_TRRun,cmdPEKTRF_TRRun.tag
  LoadBtnPictures cmdPEKTRF_TRAcc,cmdPEKTRF_TRAcc.tag
  LoadBtnPictures cmdPEKTRF_TRCfg,cmdPEKTRF_TRCfg.tag
  item.PEKTRF_TR.PrepareGrid gridPEKTRF_TR
  LoadGridLayout gridPEKTRF_TR
  Set fndPEKTRF_TR = Nothing
  On Error Resume Next
  Set fndPEKTRF_TR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_TR.Init gridPEKTRF_TR
  LoadBtnPictures cmdPEKTRF_REGRTRAdd,cmdPEKTRF_REGRTRAdd.tag
  LoadBtnPictures cmdPEKTRF_REGRTREdit,cmdPEKTRF_REGRTREdit.tag
  LoadBtnPictures cmdPEKTRF_REGRTRDel,cmdPEKTRF_REGRTRDel.tag
  LoadBtnPictures cmdPEKTRF_REGRTRRef,cmdPEKTRF_REGRTRRef.tag
  LoadBtnPictures cmdPEKTRF_REGRTRPrn,cmdPEKTRF_REGRTRPrn.tag
  LoadBtnPictures cmdPEKTRF_REGRTRFnd,cmdPEKTRF_REGRTRFnd.Tag
  LoadBtnPictures cmdPEKTRF_REGRTRCfg,cmdPEKTRF_REGRTRCfg.tag
  LoadBtnPictures cmdPEKTRF_REGRTRRun,cmdPEKTRF_REGRTRRun.Tag
  LoadBtnPictures cmdPEKTRF_REGRTRAcc,cmdPEKTRF_REGRTRAcc.Tag
  gridPEKTRF_REGRTR.Columns.Clear
  gridPEKTRF_REGRTR.ItemCount=0
  cmdPEKTRF_REGRTRRef_Click
end sub
private sub OnTabClick()

pnlPEKTRF_TR.RestorePosition
  gridPEKTRF_TR_RowColChange gridPEKTRF_TR.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_TR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_TR = nothing
  set fndPEKTRF_REGRTR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_ADDS_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_ADDS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_ADDS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_ADDS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_ADDSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_ADDSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_ADDSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_ADDSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_ADDSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_ADDSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Надбавки"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_ADDS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_ADDSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSOpen"/></ControlData><ControlData Name="mnuPEKTRF_ADDSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSRef"/></ControlData><ControlData Name="mnuPEKTRF_ADDSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSS1"/></ControlData><ControlData Name="mnuPEKTRF_ADDSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_ADDSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCOPY"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCUT"/></ControlData><ControlData Name="mnuPEKTRF_ADDSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSPASTE"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_ADDSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSPrn"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCfg"/></ControlData><ControlData Name="mnuPEKTRF_ADDSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSFind"/></ControlData><ControlData Name="mnuPEKTRF_ADDSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_ADDS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_ADDS as object
private menuActionPEKTRF_ADDS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_ADDSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_ADDS,&quot;gridPEKTRF_ADDS&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_ADDSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_ADDS,&quot;Надбавки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_ADDSRef_Click()
  on error resume next
  item.PEKTRF_ADDS.Refresh
  gridPEKTRF_ADDS.itemCount = item.PEKTRF_ADDS.count
  gridPEKTRF_ADDS.Refetch
  gridPEKTRF_ADDS.Refresh
End Sub
Private Sub cmdPEKTRF_ADDSAcc_Click()
On Error Resume Next
If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKTRF_ADDS.Row &gt; 0 Then
 If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_ADDSEdit_Click()
  on error resume next
If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKTRF_ADDS.Row &gt; 0 then
 If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_ADDS_main.Item = u
    again: frmPEKTRF_ADDS_main.NotFirstTime = False
    frmPEKTRF_ADDS_main.OnInit
    frmPEKTRF_ADDS_main.Show vbModal
    If frmPEKTRF_ADDS_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_ADDS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_ADDSDel_Click()
  on error resume next
  gridPEKTRF_ADDS.Delete
End Sub
Private Sub cmdPEKTRF_ADDSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_ADDS.Add()

      Set frmPEKTRF_ADDS_main.Item = u
      again: frmPEKTRF_ADDS_main.NotFirstTime = False
      frmPEKTRF_ADDS_main.OnInit
      frmPEKTRF_ADDS_main.Show vbModal
      If frmPEKTRF_ADDS_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_ADDS.ItemCount = Item.PEKTRF_ADDS.Count
        gridPEKTRF_ADDS.Refresh
        gridPEKTRF_ADDS.RefreshGroups
        gridPEKTRF_ADDS.Refreshsort
        gridPEKTRF_ADDS.MoveToBookmark u.ID &amp; &quot;PEKTRF_ADDS&quot;
      Else
        Item.PEKTRF_ADDS.Delete u.ID
        Item.PEKTRF_ADDS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_ADDSFnd_Click()
  on error resume next
  fndPEKTRF_ADDS.ShowForm
End Sub
Private Sub cmdPEKTRF_ADDSRun_Click()
  on error resume next
  gridPEKTRF_ADDS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_ADDS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_ADDS.LoadRow gridPEKTRF_ADDS, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_ADDS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_ADDS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_ADDS_DblClick()
  cmdPEKTRF_ADDSEdit_Click
End Sub
Private Sub gridPEKTRF_ADDS_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_ADDS.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_ADDS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_ADDS.Row And LastRow &gt; 0 Then
  gridPEKTRF_ADDS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_ADDS.GetRowData(gridPEKTRF_ADDS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_ADDSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_ADDS.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_ADDS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_ADDS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_ADDSCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_ADDS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_ADDS
End If
end sub
private sub mnuPEKTRF_ADDSAdd_click()
   menuActionPEKTRF_ADDS =&quot;ADD&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSEdit_click()
   menuActionPEKTRF_ADDS =&quot;EDIT&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSDelete_click()
   menuActionPEKTRF_ADDS =&quot;DEL&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSOpen_click()
   menuActionPEKTRF_ADDS =&quot;RUN&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSRef_click()
   menuActionPEKTRF_ADDS =&quot;REF&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
  Private Sub mnuPEKTRF_ADDSCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_ADDS.Row &gt; 0 Then
     If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_ADDSCUT_Click()
    On Error Resume Next
    If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_ADDS.Row &gt; 0 Then
     If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_ADDS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_ADDSCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_ADDS.Row &gt; 0 Then
   If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_ADDS.ItemCount = u.parent.Count
      gridPEKTRF_ADDS.RefreshRowIndex gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_ADDSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_ADDSPrn_click()
   menuActionPEKTRF_ADDS =&quot;PRN&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSCfg_click()
   menuActionPEKTRF_ADDS =&quot;CFG&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSFind_click()
   menuActionPEKTRF_ADDS =&quot;FND&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSAcc_click()
   menuActionPEKTRF_ADDS =&quot;ACC&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub menuTimerPEKTRF_ADDS_timer()
   menuTimerPEKTRF_ADDS.enabled = false
   if menuActionPEKTRF_ADDS =&quot;ADD&quot; then cmdPEKTRF_ADDSADD_CLick
   if menuActionPEKTRF_ADDS =&quot;EDIT&quot; then cmdPEKTRF_ADDSEDIT_CLick
   if menuActionPEKTRF_ADDS =&quot;DEL&quot; then cmdPEKTRF_ADDSDEL_CLick
   if menuActionPEKTRF_ADDS =&quot;RUN&quot; then cmdPEKTRF_ADDSRUN_CLick
   if menuActionPEKTRF_ADDS =&quot;REF&quot; then cmdPEKTRF_ADDSREF_CLick
   if menuActionPEKTRF_ADDS =&quot;PRN&quot; then cmdPEKTRF_ADDSPRN_CLick
   if menuActionPEKTRF_ADDS =&quot;CFG&quot; then cmdPEKTRF_ADDSCFG_CLick
   if menuActionPEKTRF_ADDS =&quot;FND&quot; then cmdPEKTRF_ADDSFND_CLick
   if menuActionPEKTRF_ADDS =&quot;ACC&quot; then cmdPEKTRF_ADDSACC_CLick
   menuActionPEKTRF_ADDS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_ADDSAdd,cmdPEKTRF_ADDSAdd.tag
  LoadBtnPictures cmdPEKTRF_ADDSEdit,cmdPEKTRF_ADDSEdit.tag
  LoadBtnPictures cmdPEKTRF_ADDSDel,cmdPEKTRF_ADDSDel.tag
  LoadBtnPictures cmdPEKTRF_ADDSRef,cmdPEKTRF_ADDSRef.tag
  LoadBtnPictures cmdPEKTRF_ADDSPrn,cmdPEKTRF_ADDSPrn.tag
  LoadBtnPictures cmdPEKTRF_ADDSFnd,cmdPEKTRF_ADDSFnd.tag
  LoadBtnPictures cmdPEKTRF_ADDSRun,cmdPEKTRF_ADDSRun.tag
  LoadBtnPictures cmdPEKTRF_ADDSAcc,cmdPEKTRF_ADDSAcc.tag
  LoadBtnPictures cmdPEKTRF_ADDSCfg,cmdPEKTRF_ADDSCfg.tag
  item.PEKTRF_ADDS.PrepareGrid gridPEKTRF_ADDS
  LoadGridLayout gridPEKTRF_ADDS
  Set fndPEKTRF_ADDS = Nothing
  On Error Resume Next
  Set fndPEKTRF_ADDS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_ADDS.Init gridPEKTRF_ADDS
end sub
private sub OnTabClick()

      gridPEKTRF_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_ADDS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_ADDS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_DECR_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_DECR" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_DECR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_DECR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_DECR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_DECRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_DECRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_DECRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_DECRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_DECRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_DECRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_DECR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Скидки"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_DECR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_DECRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_DECREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_DECROpen"/></ControlData><ControlData Name="mnuPEKTRF_DECRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRRef"/></ControlData><ControlData Name="mnuPEKTRF_DECRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRS1"/></ControlData><ControlData Name="mnuPEKTRF_DECRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_DECRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_DECRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCUT"/></ControlData><ControlData Name="mnuPEKTRF_DECRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_DECRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_DECRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_DECRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRPrn"/></ControlData><ControlData Name="mnuPEKTRF_DECRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCfg"/></ControlData><ControlData Name="mnuPEKTRF_DECRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRFind"/></ControlData><ControlData Name="mnuPEKTRF_DECRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_DECR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_DECR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_DECR as object
private menuActionPEKTRF_DECR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_DECRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_DECR,&quot;gridPEKTRF_DECR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_DECRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_DECR,&quot;Скидки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_DECRRef_Click()
  on error resume next
  item.PEKTRF_DECR.Refresh
  gridPEKTRF_DECR.itemCount = item.PEKTRF_DECR.count
  gridPEKTRF_DECR.Refetch
  gridPEKTRF_DECR.Refresh
End Sub
Private Sub cmdPEKTRF_DECRAcc_Click()
On Error Resume Next
If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_DECR.Row &gt; 0 Then
 If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_DECREdit_Click()
  on error resume next
If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_DECR.Row &gt; 0 then
 If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_DECR_main.Item = u
    again: frmPEKTRF_DECR_main.NotFirstTime = False
    frmPEKTRF_DECR_main.OnInit
    frmPEKTRF_DECR_main.Show vbModal
    If frmPEKTRF_DECR_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_DECR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_DECRDel_Click()
  on error resume next
  gridPEKTRF_DECR.Delete
End Sub
Private Sub cmdPEKTRF_DECRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_DECR.Add()

      Set frmPEKTRF_DECR_main.Item = u
      again: frmPEKTRF_DECR_main.NotFirstTime = False
      frmPEKTRF_DECR_main.OnInit
      frmPEKTRF_DECR_main.Show vbModal
      If frmPEKTRF_DECR_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_DECR.ItemCount = Item.PEKTRF_DECR.Count
        gridPEKTRF_DECR.Refresh
        gridPEKTRF_DECR.RefreshGroups
        gridPEKTRF_DECR.Refreshsort
        gridPEKTRF_DECR.MoveToBookmark u.ID &amp; &quot;PEKTRF_DECR&quot;
      Else
        Item.PEKTRF_DECR.Delete u.ID
        Item.PEKTRF_DECR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_DECRFnd_Click()
  on error resume next
  fndPEKTRF_DECR.ShowForm
End Sub
Private Sub cmdPEKTRF_DECRRun_Click()
  on error resume next
  gridPEKTRF_DECR_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_DECR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_DECR.LoadRow gridPEKTRF_DECR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_DECR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_DECR&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_DECR_DblClick()
  cmdPEKTRF_DECREdit_Click
End Sub
Private Sub gridPEKTRF_DECR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_DECR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_DECR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_DECR.Row And LastRow &gt; 0 Then
  gridPEKTRF_DECR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_DECR.GetRowData(gridPEKTRF_DECR.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_DECRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_DECR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_DECR.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_DECR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_DECRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_DECR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_DECR
End If
end sub
private sub mnuPEKTRF_DECRAdd_click()
   menuActionPEKTRF_DECR =&quot;ADD&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECREdit_click()
   menuActionPEKTRF_DECR =&quot;EDIT&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRDelete_click()
   menuActionPEKTRF_DECR =&quot;DEL&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECROpen_click()
   menuActionPEKTRF_DECR =&quot;RUN&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRRef_click()
   menuActionPEKTRF_DECR =&quot;REF&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
  Private Sub mnuPEKTRF_DECRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_DECR.Row &gt; 0 Then
     If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_DECRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_DECR.Row &gt; 0 Then
     If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_DECR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_DECRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_DECR.Row &gt; 0 Then
   If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_DECR.ItemCount = u.parent.Count
      gridPEKTRF_DECR.RefreshRowIndex gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_DECRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_DECRPrn_click()
   menuActionPEKTRF_DECR =&quot;PRN&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRCfg_click()
   menuActionPEKTRF_DECR =&quot;CFG&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRFind_click()
   menuActionPEKTRF_DECR =&quot;FND&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRAcc_click()
   menuActionPEKTRF_DECR =&quot;ACC&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub menuTimerPEKTRF_DECR_timer()
   menuTimerPEKTRF_DECR.enabled = false
   if menuActionPEKTRF_DECR =&quot;ADD&quot; then cmdPEKTRF_DECRADD_CLick
   if menuActionPEKTRF_DECR =&quot;EDIT&quot; then cmdPEKTRF_DECREDIT_CLick
   if menuActionPEKTRF_DECR =&quot;DEL&quot; then cmdPEKTRF_DECRDEL_CLick
   if menuActionPEKTRF_DECR =&quot;RUN&quot; then cmdPEKTRF_DECRRUN_CLick
   if menuActionPEKTRF_DECR =&quot;REF&quot; then cmdPEKTRF_DECRREF_CLick
   if menuActionPEKTRF_DECR =&quot;PRN&quot; then cmdPEKTRF_DECRPRN_CLick
   if menuActionPEKTRF_DECR =&quot;CFG&quot; then cmdPEKTRF_DECRCFG_CLick
   if menuActionPEKTRF_DECR =&quot;FND&quot; then cmdPEKTRF_DECRFND_CLick
   if menuActionPEKTRF_DECR =&quot;ACC&quot; then cmdPEKTRF_DECRACC_CLick
   menuActionPEKTRF_DECR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_DECRAdd,cmdPEKTRF_DECRAdd.tag
  LoadBtnPictures cmdPEKTRF_DECREdit,cmdPEKTRF_DECREdit.tag
  LoadBtnPictures cmdPEKTRF_DECRDel,cmdPEKTRF_DECRDel.tag
  LoadBtnPictures cmdPEKTRF_DECRRef,cmdPEKTRF_DECRRef.tag
  LoadBtnPictures cmdPEKTRF_DECRPrn,cmdPEKTRF_DECRPrn.tag
  LoadBtnPictures cmdPEKTRF_DECRFnd,cmdPEKTRF_DECRFnd.tag
  LoadBtnPictures cmdPEKTRF_DECRRun,cmdPEKTRF_DECRRun.tag
  LoadBtnPictures cmdPEKTRF_DECRAcc,cmdPEKTRF_DECRAcc.tag
  LoadBtnPictures cmdPEKTRF_DECRCfg,cmdPEKTRF_DECRCfg.tag
  item.PEKTRF_DECR.PrepareGrid gridPEKTRF_DECR
  LoadGridLayout gridPEKTRF_DECR
  Set fndPEKTRF_DECR = Nothing
  On Error Resume Next
  Set fndPEKTRF_DECR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_DECR.Init gridPEKTRF_DECR
end sub
private sub OnTabClick()

      gridPEKTRF_DECR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_DECR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_DECR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_DECR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_REGALL_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_REGALL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_REGALL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_REGALL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_REGALLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_REGALLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_REGALLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_REGALLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_REGALLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_REGALLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Регресс по общему весу"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_REGALL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_REGALLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLOpen"/></ControlData><ControlData Name="mnuPEKTRF_REGALLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLRef"/></ControlData><ControlData Name="mnuPEKTRF_REGALLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLS1"/></ControlData><ControlData Name="mnuPEKTRF_REGALLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_REGALLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCOPY"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCUT"/></ControlData><ControlData Name="mnuPEKTRF_REGALLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLPASTE"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_REGALLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLPrn"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCfg"/></ControlData><ControlData Name="mnuPEKTRF_REGALLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLFind"/></ControlData><ControlData Name="mnuPEKTRF_REGALLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_REGALL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_REGALL as object
private menuActionPEKTRF_REGALL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_REGALLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_REGALL,&quot;gridPEKTRF_REGALL&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGALLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_REGALL,&quot;Регресс по общему весу&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGALLRef_Click()
  on error resume next
  item.PEKTRF_REGALL.Refresh
  gridPEKTRF_REGALL.itemCount = item.PEKTRF_REGALL.count
  gridPEKTRF_REGALL.Refetch
  gridPEKTRF_REGALL.Refresh
End Sub
Private Sub cmdPEKTRF_REGALLAcc_Click()
On Error Resume Next
If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGALL.Row &gt; 0 Then
 If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGALLEdit_Click()
  on error resume next
If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGALL.Row &gt; 0 then
 If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_REGALL_main.Item = u
    again: frmPEKTRF_REGALL_main.NotFirstTime = False
    frmPEKTRF_REGALL_main.OnInit
    frmPEKTRF_REGALL_main.Show vbModal
    If frmPEKTRF_REGALL_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_REGALL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGALLDel_Click()
  on error resume next
  gridPEKTRF_REGALL.Delete
End Sub
Private Sub cmdPEKTRF_REGALLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_REGALL.Add()

      Set frmPEKTRF_REGALL_main.Item = u
      again: frmPEKTRF_REGALL_main.NotFirstTime = False
      frmPEKTRF_REGALL_main.OnInit
      frmPEKTRF_REGALL_main.Show vbModal
      If frmPEKTRF_REGALL_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_REGALL.ItemCount = Item.PEKTRF_REGALL.Count
        gridPEKTRF_REGALL.Refresh
        gridPEKTRF_REGALL.RefreshGroups
        gridPEKTRF_REGALL.Refreshsort
        gridPEKTRF_REGALL.MoveToBookmark u.ID &amp; &quot;PEKTRF_REGALL&quot;
      Else
        Item.PEKTRF_REGALL.Delete u.ID
        Item.PEKTRF_REGALL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_REGALLFnd_Click()
  on error resume next
  fndPEKTRF_REGALL.ShowForm
End Sub
Private Sub cmdPEKTRF_REGALLRun_Click()
  on error resume next
  gridPEKTRF_REGALL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_REGALL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_REGALL.LoadRow gridPEKTRF_REGALL, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_REGALL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_REGALL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_REGALL_DblClick()
  cmdPEKTRF_REGALLEdit_Click
End Sub
Private Sub gridPEKTRF_REGALL_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_REGALL.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_REGALL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_REGALL.Row And LastRow &gt; 0 Then
  gridPEKTRF_REGALL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_REGALL.GetRowData(gridPEKTRF_REGALL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_REGALLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_REGALL.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_REGALL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_REGALL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_REGALLCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_REGALL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_REGALL
End If
end sub
private sub mnuPEKTRF_REGALLAdd_click()
   menuActionPEKTRF_REGALL =&quot;ADD&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLEdit_click()
   menuActionPEKTRF_REGALL =&quot;EDIT&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLDelete_click()
   menuActionPEKTRF_REGALL =&quot;DEL&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLOpen_click()
   menuActionPEKTRF_REGALL =&quot;RUN&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLRef_click()
   menuActionPEKTRF_REGALL =&quot;REF&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
  Private Sub mnuPEKTRF_REGALLCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGALL.Row &gt; 0 Then
     If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_REGALLCUT_Click()
    On Error Resume Next
    If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGALL.Row &gt; 0 Then
     If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_REGALL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_REGALLCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_REGALL.Row &gt; 0 Then
   If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_REGALL.ItemCount = u.parent.Count
      gridPEKTRF_REGALL.RefreshRowIndex gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_REGALLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_REGALLPrn_click()
   menuActionPEKTRF_REGALL =&quot;PRN&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLCfg_click()
   menuActionPEKTRF_REGALL =&quot;CFG&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLFind_click()
   menuActionPEKTRF_REGALL =&quot;FND&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLAcc_click()
   menuActionPEKTRF_REGALL =&quot;ACC&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub menuTimerPEKTRF_REGALL_timer()
   menuTimerPEKTRF_REGALL.enabled = false
   if menuActionPEKTRF_REGALL =&quot;ADD&quot; then cmdPEKTRF_REGALLADD_CLick
   if menuActionPEKTRF_REGALL =&quot;EDIT&quot; then cmdPEKTRF_REGALLEDIT_CLick
   if menuActionPEKTRF_REGALL =&quot;DEL&quot; then cmdPEKTRF_REGALLDEL_CLick
   if menuActionPEKTRF_REGALL =&quot;RUN&quot; then cmdPEKTRF_REGALLRUN_CLick
   if menuActionPEKTRF_REGALL =&quot;REF&quot; then cmdPEKTRF_REGALLREF_CLick
   if menuActionPEKTRF_REGALL =&quot;PRN&quot; then cmdPEKTRF_REGALLPRN_CLick
   if menuActionPEKTRF_REGALL =&quot;CFG&quot; then cmdPEKTRF_REGALLCFG_CLick
   if menuActionPEKTRF_REGALL =&quot;FND&quot; then cmdPEKTRF_REGALLFND_CLick
   if menuActionPEKTRF_REGALL =&quot;ACC&quot; then cmdPEKTRF_REGALLACC_CLick
   menuActionPEKTRF_REGALL =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_REGALLAdd,cmdPEKTRF_REGALLAdd.tag
  LoadBtnPictures cmdPEKTRF_REGALLEdit,cmdPEKTRF_REGALLEdit.tag
  LoadBtnPictures cmdPEKTRF_REGALLDel,cmdPEKTRF_REGALLDel.tag
  LoadBtnPictures cmdPEKTRF_REGALLRef,cmdPEKTRF_REGALLRef.tag
  LoadBtnPictures cmdPEKTRF_REGALLPrn,cmdPEKTRF_REGALLPrn.tag
  LoadBtnPictures cmdPEKTRF_REGALLFnd,cmdPEKTRF_REGALLFnd.tag
  LoadBtnPictures cmdPEKTRF_REGALLRun,cmdPEKTRF_REGALLRun.tag
  LoadBtnPictures cmdPEKTRF_REGALLAcc,cmdPEKTRF_REGALLAcc.tag
  LoadBtnPictures cmdPEKTRF_REGALLCfg,cmdPEKTRF_REGALLCfg.tag
  item.PEKTRF_REGALL.PrepareGrid gridPEKTRF_REGALL
  LoadGridLayout gridPEKTRF_REGALL
  Set fndPEKTRF_REGALL = Nothing
  On Error Resume Next
  Set fndPEKTRF_REGALL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_REGALL.Init gridPEKTRF_REGALL
end sub
private sub OnTabClick()

      gridPEKTRF_REGALL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_REGALL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_REGALL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_REGALL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_AUTO_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_AUTO"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_AUTO" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_AUTO"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_AUTOAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTOEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTODel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTODel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTORef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTORef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_AUTOPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_AUTOCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_AUTOFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_AUTORun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTORun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_AUTOAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Автодоставка"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_AUTO"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_AUTOAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTOEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTODelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTODelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTOOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOOpen"/></ControlData><ControlData Name="mnuPEKTRF_AUTORef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTORef"/></ControlData><ControlData Name="mnuPEKTRF_AUTOS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOS1"/></ControlData><ControlData Name="mnuPEKTRF_AUTOBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_AUTOCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCOPY"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCUT"/></ControlData><ControlData Name="mnuPEKTRF_AUTOPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOPASTE"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_AUTOPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOPrn"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCfg"/></ControlData><ControlData Name="mnuPEKTRF_AUTOFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOFind"/></ControlData><ControlData Name="mnuPEKTRF_AUTOAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_AUTO"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_AUTO as object
private menuActionPEKTRF_AUTO as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_AUTOCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_AUTO,&quot;gridPEKTRF_AUTO&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_AUTOPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_AUTO,&quot;Автодоставка&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_AUTORef_Click()
  on error resume next
  item.PEKTRF_AUTO.Refresh
  gridPEKTRF_AUTO.itemCount = item.PEKTRF_AUTO.count
  gridPEKTRF_AUTO.Refetch
  gridPEKTRF_AUTO.Refresh
End Sub
Private Sub cmdPEKTRF_AUTOAcc_Click()
On Error Resume Next
If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKTRF_AUTO.Row &gt; 0 Then
 If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_AUTOEdit_Click()
  on error resume next
If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKTRF_AUTO.Row &gt; 0 then
 If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_AUTO_main.Item = u
    again: frmPEKTRF_AUTO_main.NotFirstTime = False
    frmPEKTRF_AUTO_main.OnInit
    frmPEKTRF_AUTO_main.Show vbModal
    If frmPEKTRF_AUTO_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_AUTO.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_AUTODel_Click()
  on error resume next
  gridPEKTRF_AUTO.Delete
End Sub
Private Sub cmdPEKTRF_AUTOAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_AUTO.Add()

      Set frmPEKTRF_AUTO_main.Item = u
      again: frmPEKTRF_AUTO_main.NotFirstTime = False
      frmPEKTRF_AUTO_main.OnInit
      frmPEKTRF_AUTO_main.Show vbModal
      If frmPEKTRF_AUTO_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_AUTO.ItemCount = Item.PEKTRF_AUTO.Count
        gridPEKTRF_AUTO.Refresh
        gridPEKTRF_AUTO.RefreshGroups
        gridPEKTRF_AUTO.Refreshsort
        gridPEKTRF_AUTO.MoveToBookmark u.ID &amp; &quot;PEKTRF_AUTO&quot;
      Else
        Item.PEKTRF_AUTO.Delete u.ID
        Item.PEKTRF_AUTO.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_AUTOFnd_Click()
  on error resume next
  fndPEKTRF_AUTO.ShowForm
End Sub
Private Sub cmdPEKTRF_AUTORun_Click()
  on error resume next
  gridPEKTRF_AUTO_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_AUTO_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_AUTO.LoadRow gridPEKTRF_AUTO, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_AUTO_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_AUTO&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_AUTO_DblClick()
  cmdPEKTRF_AUTOEdit_Click
End Sub
Private Sub gridPEKTRF_AUTO_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_AUTO.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_AUTO_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_AUTO.Row And LastRow &gt; 0 Then
  gridPEKTRF_AUTO.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_AUTO.GetRowData(gridPEKTRF_AUTO.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_AUTOPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_AUTO.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_AUTO.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_AUTO_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_AUTOCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_AUTO_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_AUTO
End If
end sub
private sub mnuPEKTRF_AUTOAdd_click()
   menuActionPEKTRF_AUTO =&quot;ADD&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOEdit_click()
   menuActionPEKTRF_AUTO =&quot;EDIT&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTODelete_click()
   menuActionPEKTRF_AUTO =&quot;DEL&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOOpen_click()
   menuActionPEKTRF_AUTO =&quot;RUN&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTORef_click()
   menuActionPEKTRF_AUTO =&quot;REF&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
  Private Sub mnuPEKTRF_AUTOCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_AUTO.Row &gt; 0 Then
     If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_AUTOCUT_Click()
    On Error Resume Next
    If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_AUTO.Row &gt; 0 Then
     If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_AUTO.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_AUTOCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_AUTO.Row &gt; 0 Then
   If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_AUTO.ItemCount = u.parent.Count
      gridPEKTRF_AUTO.RefreshRowIndex gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_AUTOCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_AUTOPrn_click()
   menuActionPEKTRF_AUTO =&quot;PRN&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOCfg_click()
   menuActionPEKTRF_AUTO =&quot;CFG&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOFind_click()
   menuActionPEKTRF_AUTO =&quot;FND&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOAcc_click()
   menuActionPEKTRF_AUTO =&quot;ACC&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub menuTimerPEKTRF_AUTO_timer()
   menuTimerPEKTRF_AUTO.enabled = false
   if menuActionPEKTRF_AUTO =&quot;ADD&quot; then cmdPEKTRF_AUTOADD_CLick
   if menuActionPEKTRF_AUTO =&quot;EDIT&quot; then cmdPEKTRF_AUTOEDIT_CLick
   if menuActionPEKTRF_AUTO =&quot;DEL&quot; then cmdPEKTRF_AUTODEL_CLick
   if menuActionPEKTRF_AUTO =&quot;RUN&quot; then cmdPEKTRF_AUTORUN_CLick
   if menuActionPEKTRF_AUTO =&quot;REF&quot; then cmdPEKTRF_AUTOREF_CLick
   if menuActionPEKTRF_AUTO =&quot;PRN&quot; then cmdPEKTRF_AUTOPRN_CLick
   if menuActionPEKTRF_AUTO =&quot;CFG&quot; then cmdPEKTRF_AUTOCFG_CLick
   if menuActionPEKTRF_AUTO =&quot;FND&quot; then cmdPEKTRF_AUTOFND_CLick
   if menuActionPEKTRF_AUTO =&quot;ACC&quot; then cmdPEKTRF_AUTOACC_CLick
   menuActionPEKTRF_AUTO =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_AUTOAdd,cmdPEKTRF_AUTOAdd.tag
  LoadBtnPictures cmdPEKTRF_AUTOEdit,cmdPEKTRF_AUTOEdit.tag
  LoadBtnPictures cmdPEKTRF_AUTODel,cmdPEKTRF_AUTODel.tag
  LoadBtnPictures cmdPEKTRF_AUTORef,cmdPEKTRF_AUTORef.tag
  LoadBtnPictures cmdPEKTRF_AUTOPrn,cmdPEKTRF_AUTOPrn.tag
  LoadBtnPictures cmdPEKTRF_AUTOFnd,cmdPEKTRF_AUTOFnd.tag
  LoadBtnPictures cmdPEKTRF_AUTORun,cmdPEKTRF_AUTORun.tag
  LoadBtnPictures cmdPEKTRF_AUTOAcc,cmdPEKTRF_AUTOAcc.tag
  LoadBtnPictures cmdPEKTRF_AUTOCfg,cmdPEKTRF_AUTOCfg.tag
  item.PEKTRF_AUTO.PrepareGrid gridPEKTRF_AUTO
  LoadGridLayout gridPEKTRF_AUTO
  Set fndPEKTRF_AUTO = Nothing
  On Error Resume Next
  Set fndPEKTRF_AUTO = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_AUTO.Init gridPEKTRF_AUTO
end sub
private sub OnTabClick()

      gridPEKTRF_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_AUTO.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_AUTO = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_DEF" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_DEF_main"><Properties Name="Name" PropValue="pnlPEKTRF_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_SRV" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_SRV_main"><Properties Name="Name" PropValue="pnlPEKTRF_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_TR" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_TR_main"><Properties Name="Name" PropValue="pnlPEKTRF_TR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_ADDS" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_ADDS_main"><Properties Name="Name" PropValue="pnlPEKTRF_ADDS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_DECR" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_DECR_main"><Properties Name="Name" PropValue="pnlPEKTRF_DECR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_REGALL" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_REGALL_main"><Properties Name="Name" PropValue="pnlPEKTRF_REGALL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_AUTO" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_AUTO_main"><Properties Name="Name" PropValue="pnlPEKTRF_AUTO"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Тарифы"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlPEKTRF_DEF.IsOK
if IsItOk then IsItOk = pnlPEKTRF_SRV.IsOK
if IsItOk then IsItOk = pnlPEKTRF_TR.IsOK
if IsItOk then IsItOk = pnlPEKTRF_ADDS.IsOK
if IsItOk then IsItOk = pnlPEKTRF_DECR.IsOK
if IsItOk then IsItOk = pnlPEKTRF_REGALL.IsOK
if IsItOk then IsItOk = pnlPEKTRF_AUTO.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlPEKTRF_AUTO.Visible = False
  pnlPEKTRF_REGALL.Visible = False
  pnlPEKTRF_DECR.Visible = False
  pnlPEKTRF_ADDS.Visible = False
  pnlPEKTRF_TR.Visible = False
  pnlPEKTRF_SRV.Visible = False
  pnlPEKTRF_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;PEKTRF_DEF&quot;
     With pnlPEKTRF_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_DEF.OnClick item,parentform
     End With
   Case &quot;PEKTRF_SRV&quot;
     With pnlPEKTRF_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_SRV.OnClick item,parentform
     End With
   Case &quot;PEKTRF_TR&quot;
     With pnlPEKTRF_TR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_TR.OnClick item,parentform
     End With
   Case &quot;PEKTRF_ADDS&quot;
     With pnlPEKTRF_ADDS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_ADDS.OnClick item,parentform
     End With
   Case &quot;PEKTRF_DECR&quot;
     With pnlPEKTRF_DECR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_DECR.OnClick item,parentform
     End With
   Case &quot;PEKTRF_REGALL&quot;
     With pnlPEKTRF_REGALL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_REGALL.OnClick item,parentform
     End With
   Case &quot;PEKTRF_AUTO&quot;
     With pnlPEKTRF_AUTO
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_AUTO.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общее описание&quot;
ts.Tabs.Item(1).key = &quot;PEKTRF_DEF&quot;
pnlPEKTRF_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_SRV&quot;, &quot;Тарифы на услуги&quot;)
pnlPEKTRF_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_TR&quot;, &quot;Транспортировка&quot;)
pnlPEKTRF_TR.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_ADDS&quot;, &quot;Надбавки&quot;)
pnlPEKTRF_ADDS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_DECR&quot;, &quot;Скидки&quot;)
pnlPEKTRF_DECR.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_REGALL&quot;, &quot;Регресс по общему весу&quot;)
pnlPEKTRF_REGALL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_AUTO&quot;, &quot;Автодоставка&quot;)
pnlPEKTRF_AUTO.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;PEK2TRF&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlPEKTRF_DEF.CloseClass
 pnlPEKTRF_SRV.CloseClass
 pnlPEKTRF_TR.CloseClass
 pnlPEKTRF_ADDS.CloseClass
 pnlPEKTRF_DECR.CloseClass
 pnlPEKTRF_REGALL.CloseClass
 pnlPEKTRF_AUTO.CloseClass
End Sub
public sub OnSave()
 pnlPEKTRF_DEF.OnSave
 pnlPEKTRF_SRV.OnSave
 pnlPEKTRF_TR.OnSave
 pnlPEKTRF_ADDS.OnSave
 pnlPEKTRF_DECR.OnSave
 pnlPEKTRF_REGALL.OnSave
 pnlPEKTRF_AUTO.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlPEKTRF_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_TR.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_ADDS.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_DECR.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_REGALL.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_AUTO.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Отменен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot;
    i = i + 1
    m(i).Caption = &quot;Введен в действие&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{53809047-E34B-4BC8-8497-710E4A51535E}&quot;
    i = i + 1
    m(i).Caption = &quot;Утвержден&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{A82A2432-3604-46A4-ABA9-E65AB3670363}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{53809047-E34B-4BC8-8497-710E4A51535E}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{A82A2432-3604-46A4-ABA9-E65AB3670363}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="PEK2TRFGUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Тарифы"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_DEF_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DEFread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Общее описание"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Общее описание"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot;
  Open s &amp; Me.name &amp; &quot;{8CAFFB2B-7AA8-4E13-9209-5C2E9AFDFFAC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_SRV_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_SRVread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тарифы на услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тарифы на услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot;
  Open s &amp; Me.name &amp; &quot;{89E6BF48-262C-4F9A-B2EC-CE081121BD9A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_TR_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_TRread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Транспортировка"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Транспортировка"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot;
  Open s &amp; Me.name &amp; &quot;{AD5A2AC0-C412-4DE1-9E24-F4208869F5F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_REGRTR_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_REGRTRread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Регресс по весу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Регресс по весу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot;
  Open s &amp; Me.name &amp; &quot;{36B61968-A25E-4520-AAE4-2803A82CFEE9}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_ADDS_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_ADDSread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Надбавки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Надбавки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot;
  Open s &amp; Me.name &amp; &quot;{DA3DC9D5-5D19-497F-AC26-30454C20D933}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_DECR_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DECRread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Скидки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Скидки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot;
  Open s &amp; Me.name &amp; &quot;{E26ADF09-CA7A-47F2-B5C1-28558C231A3A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_REGALL_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_REGALLread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Регресс по общему весу"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Регресс по общему весу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot;
  Open s &amp; Me.name &amp; &quot;{8CD97638-E530-45E5-B5B1-13F13DAF5BBD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKTRF_AUTO_read" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_AUTOread"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Стоимость автодоставки груза"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Автодоставка"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot;
  Open s &amp; Me.name &amp; &quot;{3C6E8B7B-8690-4E4C-9002-6DAD81E03C8B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_DEF_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editPEKTRF_DEF" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DEFread"><Properties Name="Name" PropValue="editPEKTRF_DEF"/></ControlData><ControlData Name="cmdPEKTRF_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opPEKTRF_DEF_UpdateItemName_read(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=.TType.Brief &amp; &quot; от &quot; &amp; .StartDate,  RowItem:=RowItem
end with
end sub
Private Sub cmdPEKTRF_DEFRef_Click()
  on error resume next
  Item.PEKTRF_DEF.Refresh
  cmdPEKTRF_DEFAdd_Click
End Sub
Private Sub cmdPEKTRF_DEFCfg_Click()
    on error resume next 
    editPEKTRF_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;PEK2TRF_editPEKTRF_DEF_read&quot; For Output As #ff
    print #ff, editPEKTRF_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdPEKTRF_DEFAdd_Click()
  on error resume next
 Set editPEKTRF_DEF.Item = Item.PEKTRF_DEF.Item(1)
 editPEKTRF_DEF.InitPanel
 cmdPEKTRF_DEFSave.Enabled = True
End Sub
Private Sub cmdPEKTRF_DEFDel_Click()
  on error resume next
End Sub
Private Sub editPEKTRF_DEF_Changed()
 cmdPEKTRF_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editPEKTRF_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdPEKTRF_DEFSave_Click()
  on error resume next
    if editPEKTRF_DEF.IsOK then
    MousePointer = vbHourglass
    editPEKTRF_DEF.Save
  on error goto bye
    editPEKTRF_DEF.item.Save
    MousePointer = vbNormal
        opPEKTRF_DEF_UpdateItemName_read editPEKTRF_DEF.item
    cmdPEKTRF_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editPEKTRF_DEF.item.REFRESH
  'editPEKTRF_DEF.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_DEFSave,cmdPEKTRF_DEFSave.tag
  LoadBtnPictures cmdPEKTRF_DEFRef,cmdPEKTRF_DEFRef.tag
  LoadBtnPictures cmdPEKTRF_DEFCfg,cmdPEKTRF_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;PEK2TRF_editPEKTRF_DEF_read&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editPEKTRF_DEF.PanelCustomisationString = buf
  cmdPEKTRF_DEFAdd_click
end sub
private sub OnTabClick()

      editPEKTRF_DEF.Top = 40 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Left = 5 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editPEKTRF_DEF.Save
if editPEKTRF_DEF.item.Changed then
  editPEKTRF_DEF.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editPEKTRF_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_SRV_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тарифы на услуги"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVOpen"/></ControlData><ControlData Name="mnuPEKTRF_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVRef"/></ControlData><ControlData Name="mnuPEKTRF_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVS1"/></ControlData><ControlData Name="mnuPEKTRF_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCOPY"/></ControlData><ControlData Name="mnuPEKTRF_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCUT"/></ControlData><ControlData Name="mnuPEKTRF_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVPASTE"/></ControlData><ControlData Name="mnuPEKTRF_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVPrn"/></ControlData><ControlData Name="mnuPEKTRF_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCfg"/></ControlData><ControlData Name="mnuPEKTRF_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVFind"/></ControlData><ControlData Name="mnuPEKTRF_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_SRV as object
private menuActionPEKTRF_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_SRV,&quot;gridPEKTRF_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_SRV,&quot;Тарифы на услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_SRVRef_Click()
  on error resume next
  item.PEKTRF_SRV.Refresh
  gridPEKTRF_SRV.itemCount = item.PEKTRF_SRV.count
  gridPEKTRF_SRV.Refetch
  gridPEKTRF_SRV.Refresh
End Sub
Private Sub cmdPEKTRF_SRVAcc_Click()
On Error Resume Next
If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
If gridPEKTRF_SRV.Row &gt; 0 Then
 If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_SRVEdit_Click()
  on error resume next
If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
If gridPEKTRF_SRV.Row &gt; 0 then
 If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_SRV_read.Item = u
    again: frmPEKTRF_SRV_read.NotFirstTime = False
    frmPEKTRF_SRV_read.OnInit
    frmPEKTRF_SRV_read.Show vbModal
    If frmPEKTRF_SRV_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKTRF_SRVAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_SRVFnd_Click()
  on error resume next
  fndPEKTRF_SRV.ShowForm
End Sub
Private Sub cmdPEKTRF_SRVRun_Click()
  on error resume next
  gridPEKTRF_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_SRV.LoadRow gridPEKTRF_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKTRF_SRV_DblClick()
  cmdPEKTRF_SRVEdit_Click
End Sub
Private Sub gridPEKTRF_SRV_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_SRV.Row And LastRow &gt; 0 Then
  gridPEKTRF_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_SRV.GetRowData(gridPEKTRF_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_SRV.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_SRVCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_SRV
End If
end sub
private sub mnuPEKTRF_SRVAdd_click()
   menuActionPEKTRF_SRV =&quot;ADD&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVEdit_click()
   menuActionPEKTRF_SRV =&quot;EDIT&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVDelete_click()
   menuActionPEKTRF_SRV =&quot;DEL&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVOpen_click()
   menuActionPEKTRF_SRV =&quot;RUN&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVRef_click()
   menuActionPEKTRF_SRV =&quot;REF&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
  Private Sub mnuPEKTRF_SRVCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_SRV.Row &gt; 0 Then
     If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_SRVCUT_Click()
    On Error Resume Next
    If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_SRV.Row &gt; 0 Then
     If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_SRVCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_SRV.Row &gt; 0 Then
   If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_SRV.ItemCount = u.parent.Count
      gridPEKTRF_SRV.RefreshRowIndex gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_SRVPrn_click()
   menuActionPEKTRF_SRV =&quot;PRN&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVCfg_click()
   menuActionPEKTRF_SRV =&quot;CFG&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVFind_click()
   menuActionPEKTRF_SRV =&quot;FND&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVAcc_click()
   menuActionPEKTRF_SRV =&quot;ACC&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub menuTimerPEKTRF_SRV_timer()
   menuTimerPEKTRF_SRV.enabled = false
   if menuActionPEKTRF_SRV =&quot;ADD&quot; then cmdPEKTRF_SRVADD_CLick
   if menuActionPEKTRF_SRV =&quot;EDIT&quot; then cmdPEKTRF_SRVEDIT_CLick
   if menuActionPEKTRF_SRV =&quot;DEL&quot; then cmdPEKTRF_SRVDEL_CLick
   if menuActionPEKTRF_SRV =&quot;RUN&quot; then cmdPEKTRF_SRVRUN_CLick
   if menuActionPEKTRF_SRV =&quot;REF&quot; then cmdPEKTRF_SRVREF_CLick
   if menuActionPEKTRF_SRV =&quot;PRN&quot; then cmdPEKTRF_SRVPRN_CLick
   if menuActionPEKTRF_SRV =&quot;CFG&quot; then cmdPEKTRF_SRVCFG_CLick
   if menuActionPEKTRF_SRV =&quot;FND&quot; then cmdPEKTRF_SRVFND_CLick
   if menuActionPEKTRF_SRV =&quot;ACC&quot; then cmdPEKTRF_SRVACC_CLick
   menuActionPEKTRF_SRV =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_SRVAdd,cmdPEKTRF_SRVAdd.tag
  LoadBtnPictures cmdPEKTRF_SRVEdit,cmdPEKTRF_SRVEdit.tag
  LoadBtnPictures cmdPEKTRF_SRVDel,cmdPEKTRF_SRVDel.tag
  LoadBtnPictures cmdPEKTRF_SRVRef,cmdPEKTRF_SRVRef.tag
  LoadBtnPictures cmdPEKTRF_SRVPrn,cmdPEKTRF_SRVPrn.tag
  LoadBtnPictures cmdPEKTRF_SRVFnd,cmdPEKTRF_SRVFnd.tag
  LoadBtnPictures cmdPEKTRF_SRVRun,cmdPEKTRF_SRVRun.tag
  LoadBtnPictures cmdPEKTRF_SRVAcc,cmdPEKTRF_SRVAcc.tag
  LoadBtnPictures cmdPEKTRF_SRVCfg,cmdPEKTRF_SRVCfg.tag
  item.PEKTRF_SRV.PrepareGrid gridPEKTRF_SRV
  LoadGridLayout gridPEKTRF_SRV
  Set fndPEKTRF_SRV = Nothing
  On Error Resume Next
  Set fndPEKTRF_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_SRV.Init gridPEKTRF_SRV
end sub
private sub OnTabClick()

      gridPEKTRF_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_TR_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_TR" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlPEKTRF_TR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridPEKTRF_TR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_TR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_TRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_TREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_TRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_TRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_TRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_TRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_TRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridPEKTRF_REGRTR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_REGRTR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_REGRTREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_TR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Транспортировка"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_TR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_TRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_TREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_TREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_TROpen"/></ControlData><ControlData Name="mnuPEKTRF_TRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRRef"/></ControlData><ControlData Name="mnuPEKTRF_TRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_TRS1"/></ControlData><ControlData Name="mnuPEKTRF_TRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_TRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_TRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_TRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCUT"/></ControlData><ControlData Name="mnuPEKTRF_TRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_TRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_TRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_TRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRPrn"/></ControlData><ControlData Name="mnuPEKTRF_TRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCfg"/></ControlData><ControlData Name="mnuPEKTRF_TRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_TRFind"/></ControlData><ControlData Name="mnuPEKTRF_TRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_TRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_TR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_TR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupPEKTRF_REGRTR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Регресс по весу"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_REGRTR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_REGRTRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_REGRTREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_REGRTROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTROpen"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRRef"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRS1"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_REGRTRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCUT"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_REGRTRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRPrn"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCfg"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRFind"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_REGRTR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_REGRTR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_TR as object
private menuActionPEKTRF_TR as string
private fndPEKTRF_REGRTR as object
private menuActionPEKTRF_REGRTR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKTRF_TR_PositionChanged()
  pnlPEKTRF_TR.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_TR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_TRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_TR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_TR
End If
end sub
private sub mnuPEKTRF_TRAdd_click()
   menuActionPEKTRF_TR =&quot;ADD&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TREdit_click()
   menuActionPEKTRF_TR =&quot;EDIT&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRDelete_click()
   menuActionPEKTRF_TR =&quot;DEL&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TROpen_click()
   menuActionPEKTRF_TR =&quot;RUN&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRRef_click()
   menuActionPEKTRF_TR =&quot;REF&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
  Private Sub mnuPEKTRF_TRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_TR.Row &gt; 0 Then
     If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_TRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_TR.Row &gt; 0 Then
     If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_TR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_TRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_TR.Row &gt; 0 Then
   If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_TR.ItemCount = u.parent.Count
      gridPEKTRF_TR.RefreshRowIndex gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_TRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_TRPrn_click()
   menuActionPEKTRF_TR =&quot;PRN&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRCfg_click()
   menuActionPEKTRF_TR =&quot;CFG&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRFind_click()
   menuActionPEKTRF_TR =&quot;FND&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRAcc_click()
   menuActionPEKTRF_TR =&quot;ACC&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub menuTimerPEKTRF_TR_timer()
   menuTimerPEKTRF_TR.enabled = false
   if menuActionPEKTRF_TR =&quot;ADD&quot; then cmdPEKTRF_TRADD_CLick
   if menuActionPEKTRF_TR =&quot;EDIT&quot; then cmdPEKTRF_TREDIT_CLick
   if menuActionPEKTRF_TR =&quot;DEL&quot; then cmdPEKTRF_TRDEL_CLick
   if menuActionPEKTRF_TR =&quot;RUN&quot; then cmdPEKTRF_TRRUN_CLick
   if menuActionPEKTRF_TR =&quot;REF&quot; then cmdPEKTRF_TRREF_CLick
   if menuActionPEKTRF_TR =&quot;PRN&quot; then cmdPEKTRF_TRPRN_CLick
   if menuActionPEKTRF_TR =&quot;CFG&quot; then cmdPEKTRF_TRCFG_CLick
   if menuActionPEKTRF_TR =&quot;FND&quot; then cmdPEKTRF_TRFND_CLick
   if menuActionPEKTRF_TR =&quot;ACC&quot; then cmdPEKTRF_TRACC_CLick
   menuActionPEKTRF_TR =&quot;&quot;
end sub
Private Sub cmdPEKTRF_TRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_TR,&quot;gridPEKTRF_TR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_TRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_TR,&quot;Транспортировка&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_TRRef_Click()
  on error resume next
  item.PEKTRF_TR.Refresh
  gridPEKTRF_TR.itemCount = item.PEKTRF_TR.count
  gridPEKTRF_TR.Refetch
  gridPEKTRF_TR.Refresh
End Sub
Private Sub cmdPEKTRF_TRAcc_Click()
On Error Resume Next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 Then
 If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_TREdit_Click()
  on error resume next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 then
 If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_TR_read.Item = u
    again: frmPEKTRF_TR_read.NotFirstTime = False
    frmPEKTRF_TR_read.OnInit
    frmPEKTRF_TR_read.Show vbModal
    If frmPEKTRF_TR_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_TR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_TRDel_Click()
  on error resume next
  gridPEKTRF_TR.Delete
End Sub
Private Sub cmdPEKTRF_TRAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_TRFnd_Click()
  on error resume next
  fndPEKTRF_TR.ShowForm
End Sub
Private Sub cmdPEKTRF_TRRun_Click()
  on error resume next
  gridPEKTRF_TR_DblClick
End Sub
Private Sub gridPEKTRF_TR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_TR.LoadRow gridPEKTRF_TR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_TR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_TR_DblClick()
  cmdPEKTRF_TREdit_Click
End Sub
Private Sub gridPEKTRF_TR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_TR.FindOnPress KeyAscii
End Sub

Private Sub pnlPEKTRF_TR_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridPEKTRF_TR.Left = Left
  gridPEKTRF_TR.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKTRF_TR.Width = Width
  gridPEKTRF_TR.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKTRF_TRAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TREdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdPEKTRF_TREdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKTRF_TRDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKTRF_TRRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKTRF_TRPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKTRF_TRCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKTRF_TRFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKTRF_TRRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKTRF_TRAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuPEKTRF_TRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_TR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_TR.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdPEKTRF_REGRTRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_REGRTR,&quot;gridPEKTRF_REGRTR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGRTRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_REGRTR,&quot;Регресс по весу&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGRTRAcc_Click()
On Error Resume Next
If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGRTR.Row &gt; 0 Then
 If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGRTRFnd_Click()
  on error resume next
  fndPEKTRF_REGRTR.ShowForm
End Sub
Private Sub cmdPEKTRF_REGRTRRun_Click()
  on error resume next
  gridPEKTRF_REGRTR_DblClick
End Sub
Private Sub pnlPEKTRF_TR_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKTRF_REGRTR.Left = Left
  gridPEKTRF_REGRTR.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKTRF_REGRTR.Width = Width
  gridPEKTRF_REGRTR.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTREdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdPEKTRF_REGRTREdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdPEKTRF_REGRTRRef_Click()
  on error resume next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 Then
 If gridPEKTRF_TR.RowIndex ( gridPEKTRF_TR.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.PEKTRF_REGRTR.refresh
   gridPEKTRF_REGRTR.itemcount=gu.PEKTRF_REGRTR.count
   gridPEKTRF_REGRTR.refetch
   gridPEKTRF_REGRTR.refresh
 else
  gridPEKTRF_REGRTR.columns.clear
  gridPEKTRF_REGRTR.itemcount=0
 End If
else
 gridPEKTRF_REGRTR.columns.clear
 gridPEKTRF_REGRTR.itemcount=0
End If
End Sub
Private Sub cmdPEKTRF_REGRTREdit_Click()
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmPEKTRF_REGRTR_read.Item = u
    again: frmPEKTRF_REGRTR_read.NotFirstTime = False
    frmPEKTRF_REGRTR_read.OnInit
    frmPEKTRF_REGRTR_read.Show vbModal
    If frmPEKTRF_REGRTR_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_REGRTR.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdPEKTRF_REGRTRDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKTRF_REGRTRAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridPEKTRF_TR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridPEKTRF_TR.ItemCount = 0 Then 
  gridPEKTRF_REGRTR.ItemCount=0
  Exit Sub
End If
If gridPEKTRF_TR.Row &gt; 0 Then
  If LastRow &lt;&gt; gridPEKTRF_TR.Row And LastRow &gt; 0 Then
    gridPEKTRF_TR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridPEKTRF_TR.GetRowData(gridPEKTRF_TR.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridPEKTRF_TR.RowIndex ( gridPEKTRF_TR.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridPEKTRF_TR.Row or gridPEKTRF_REGRTR.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.PEKTRF_REGRTR.Preparegrid gridPEKTRF_REGRTR
  gridPEKTRF_REGRTR.ItemCount=0
    LoadGridLayout gridPEKTRF_REGRTR
    Set fndPEKTRF_REGRTR = Nothing
    Set fndPEKTRF_REGRTR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKTRF_REGRTR.Init gridPEKTRF_REGRTR
  gridPEKTRF_REGRTR.ItemCount=gu.PEKTRF_REGRTR.Count
  End If
 End If
End If
End Sub
Private Sub gridPEKTRF_REGRTR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.PEKTRF_REGRTR.LoadRow gridPEKTRF_REGRTR, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridPEKTRF_REGRTR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_REGRTR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_REGRTR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub gridPEKTRF_REGRTR_DblClick()
    cmdPEKTRF_REGRTREdit_click
End Sub
Private Sub gridPEKTRF_REGRTR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
 If gridPEKTRF_REGRTR.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKTRF_REGRTR.Row And LastRow &gt; 0 Then
     gridPEKTRF_REGRTR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKTRF_REGRTR.GetRowData(gridPEKTRF_REGRTR.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuPEKTRF_REGRTRPASTE_Click()
On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.PEKTRF_REGRTR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_REGRTR.ItemCount = u.parent.Count
    ELSE
      GU.PEKTRF_REGRTR.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_REGRTR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_REGRTRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_REGRTR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_REGRTR
End If
end sub
private sub mnuPEKTRF_REGRTRAdd_click()
   menuActionPEKTRF_REGRTR =&quot;ADD&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTREdit_click()
   menuActionPEKTRF_REGRTR =&quot;EDIT&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRDelete_click()
   menuActionPEKTRF_REGRTR =&quot;DEL&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTROpen_click()
   menuActionPEKTRF_REGRTR =&quot;RUN&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRRef_click()
   menuActionPEKTRF_REGRTR =&quot;REF&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
  Private Sub mnuPEKTRF_REGRTRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.Row &gt; 0 Then
     If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_REGRTRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.Row &gt; 0 Then
     If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_REGRTR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_REGRTRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_REGRTR.Row &gt; 0 Then
   If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_REGRTR.ItemCount = u.parent.Count
      gridPEKTRF_REGRTR.RefreshRowIndex gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_REGRTRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_REGRTRPrn_click()
   menuActionPEKTRF_REGRTR =&quot;PRN&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRCfg_click()
   menuActionPEKTRF_REGRTR =&quot;CFG&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRFind_click()
   menuActionPEKTRF_REGRTR =&quot;FND&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRAcc_click()
   menuActionPEKTRF_REGRTR =&quot;ACC&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub menuTimerPEKTRF_REGRTR_timer()
   menuTimerPEKTRF_REGRTR.enabled = false
   if menuActionPEKTRF_REGRTR =&quot;ADD&quot; then cmdPEKTRF_REGRTRADD_CLick
   if menuActionPEKTRF_REGRTR =&quot;EDIT&quot; then cmdPEKTRF_REGRTREDIT_CLick
   if menuActionPEKTRF_REGRTR =&quot;DEL&quot; then cmdPEKTRF_REGRTRDEL_CLick
   if menuActionPEKTRF_REGRTR =&quot;RUN&quot; then cmdPEKTRF_REGRTRRUN_CLick
   if menuActionPEKTRF_REGRTR =&quot;REF&quot; then cmdPEKTRF_REGRTRREF_CLick
   if menuActionPEKTRF_REGRTR =&quot;PRN&quot; then cmdPEKTRF_REGRTRPRN_CLick
   if menuActionPEKTRF_REGRTR =&quot;CFG&quot; then cmdPEKTRF_REGRTRCFG_CLick
   if menuActionPEKTRF_REGRTR =&quot;FND&quot; then cmdPEKTRF_REGRTRFND_CLick
   if menuActionPEKTRF_REGRTR =&quot;ACC&quot; then cmdPEKTRF_REGRTRACC_CLick
   menuActionPEKTRF_REGRTR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_TRAdd,cmdPEKTRF_TRAdd.tag
  LoadBtnPictures cmdPEKTRF_TREdit,cmdPEKTRF_TREdit.tag
  LoadBtnPictures cmdPEKTRF_TRDel,cmdPEKTRF_TRDel.tag
  LoadBtnPictures cmdPEKTRF_TRRef,cmdPEKTRF_TRRef.tag
  LoadBtnPictures cmdPEKTRF_TRPrn,cmdPEKTRF_TRPrn.tag
  LoadBtnPictures cmdPEKTRF_TRFnd,cmdPEKTRF_TRFnd.tag
  LoadBtnPictures cmdPEKTRF_TRRun,cmdPEKTRF_TRRun.tag
  LoadBtnPictures cmdPEKTRF_TRAcc,cmdPEKTRF_TRAcc.tag
  LoadBtnPictures cmdPEKTRF_TRCfg,cmdPEKTRF_TRCfg.tag
  item.PEKTRF_TR.PrepareGrid gridPEKTRF_TR
  LoadGridLayout gridPEKTRF_TR
  Set fndPEKTRF_TR = Nothing
  On Error Resume Next
  Set fndPEKTRF_TR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_TR.Init gridPEKTRF_TR
  LoadBtnPictures cmdPEKTRF_REGRTRAdd,cmdPEKTRF_REGRTRAdd.tag
  LoadBtnPictures cmdPEKTRF_REGRTREdit,cmdPEKTRF_REGRTREdit.tag
  LoadBtnPictures cmdPEKTRF_REGRTRDel,cmdPEKTRF_REGRTRDel.tag
  LoadBtnPictures cmdPEKTRF_REGRTRRef,cmdPEKTRF_REGRTRRef.tag
  LoadBtnPictures cmdPEKTRF_REGRTRPrn,cmdPEKTRF_REGRTRPrn.tag
  LoadBtnPictures cmdPEKTRF_REGRTRFnd,cmdPEKTRF_REGRTRFnd.Tag
  LoadBtnPictures cmdPEKTRF_REGRTRCfg,cmdPEKTRF_REGRTRCfg.tag
  LoadBtnPictures cmdPEKTRF_REGRTRRun,cmdPEKTRF_REGRTRRun.Tag
  LoadBtnPictures cmdPEKTRF_REGRTRAcc,cmdPEKTRF_REGRTRAcc.Tag
  gridPEKTRF_REGRTR.Columns.Clear
  gridPEKTRF_REGRTR.ItemCount=0
  cmdPEKTRF_REGRTRRef_Click
end sub
private sub OnTabClick()

pnlPEKTRF_TR.RestorePosition
  gridPEKTRF_TR_RowColChange gridPEKTRF_TR.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_TR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_TR = nothing
  set fndPEKTRF_REGRTR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_ADDS_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_ADDS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_ADDS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_ADDS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_ADDSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_ADDSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_ADDSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_ADDSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_ADDSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_ADDSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_ADDSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_ADDSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Надбавки"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_ADDS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_ADDSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_ADDSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_ADDSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSOpen"/></ControlData><ControlData Name="mnuPEKTRF_ADDSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSRef"/></ControlData><ControlData Name="mnuPEKTRF_ADDSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSS1"/></ControlData><ControlData Name="mnuPEKTRF_ADDSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_ADDSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCOPY"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCUT"/></ControlData><ControlData Name="mnuPEKTRF_ADDSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSPASTE"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_ADDSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSPrn"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCfg"/></ControlData><ControlData Name="mnuPEKTRF_ADDSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSFind"/></ControlData><ControlData Name="mnuPEKTRF_ADDSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_ADDS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_ADDS as object
private menuActionPEKTRF_ADDS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_ADDSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_ADDS,&quot;gridPEKTRF_ADDS&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_ADDSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_ADDS,&quot;Надбавки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_ADDSRef_Click()
  on error resume next
  item.PEKTRF_ADDS.Refresh
  gridPEKTRF_ADDS.itemCount = item.PEKTRF_ADDS.count
  gridPEKTRF_ADDS.Refetch
  gridPEKTRF_ADDS.Refresh
End Sub
Private Sub cmdPEKTRF_ADDSAcc_Click()
On Error Resume Next
If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKTRF_ADDS.Row &gt; 0 Then
 If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_ADDSEdit_Click()
  on error resume next
If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKTRF_ADDS.Row &gt; 0 then
 If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_ADDS_read.Item = u
    again: frmPEKTRF_ADDS_read.NotFirstTime = False
    frmPEKTRF_ADDS_read.OnInit
    frmPEKTRF_ADDS_read.Show vbModal
    If frmPEKTRF_ADDS_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_ADDS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_ADDSDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKTRF_ADDSAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_ADDSFnd_Click()
  on error resume next
  fndPEKTRF_ADDS.ShowForm
End Sub
Private Sub cmdPEKTRF_ADDSRun_Click()
  on error resume next
  gridPEKTRF_ADDS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_ADDS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_ADDS.LoadRow gridPEKTRF_ADDS, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_ADDS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKTRF_ADDS_DblClick()
  cmdPEKTRF_ADDSEdit_Click
End Sub
Private Sub gridPEKTRF_ADDS_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_ADDS.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_ADDS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_ADDS.Row And LastRow &gt; 0 Then
  gridPEKTRF_ADDS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_ADDS.GetRowData(gridPEKTRF_ADDS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_ADDSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_ADDS.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_ADDS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_ADDS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_ADDSCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_ADDS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_ADDS
End If
end sub
private sub mnuPEKTRF_ADDSAdd_click()
   menuActionPEKTRF_ADDS =&quot;ADD&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSEdit_click()
   menuActionPEKTRF_ADDS =&quot;EDIT&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSDelete_click()
   menuActionPEKTRF_ADDS =&quot;DEL&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSOpen_click()
   menuActionPEKTRF_ADDS =&quot;RUN&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSRef_click()
   menuActionPEKTRF_ADDS =&quot;REF&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
  Private Sub mnuPEKTRF_ADDSCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_ADDS.Row &gt; 0 Then
     If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_ADDSCUT_Click()
    On Error Resume Next
    If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_ADDS.Row &gt; 0 Then
     If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_ADDS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_ADDSCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_ADDS.Row &gt; 0 Then
   If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_ADDS.ItemCount = u.parent.Count
      gridPEKTRF_ADDS.RefreshRowIndex gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_ADDSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_ADDSPrn_click()
   menuActionPEKTRF_ADDS =&quot;PRN&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSCfg_click()
   menuActionPEKTRF_ADDS =&quot;CFG&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSFind_click()
   menuActionPEKTRF_ADDS =&quot;FND&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSAcc_click()
   menuActionPEKTRF_ADDS =&quot;ACC&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub menuTimerPEKTRF_ADDS_timer()
   menuTimerPEKTRF_ADDS.enabled = false
   if menuActionPEKTRF_ADDS =&quot;ADD&quot; then cmdPEKTRF_ADDSADD_CLick
   if menuActionPEKTRF_ADDS =&quot;EDIT&quot; then cmdPEKTRF_ADDSEDIT_CLick
   if menuActionPEKTRF_ADDS =&quot;DEL&quot; then cmdPEKTRF_ADDSDEL_CLick
   if menuActionPEKTRF_ADDS =&quot;RUN&quot; then cmdPEKTRF_ADDSRUN_CLick
   if menuActionPEKTRF_ADDS =&quot;REF&quot; then cmdPEKTRF_ADDSREF_CLick
   if menuActionPEKTRF_ADDS =&quot;PRN&quot; then cmdPEKTRF_ADDSPRN_CLick
   if menuActionPEKTRF_ADDS =&quot;CFG&quot; then cmdPEKTRF_ADDSCFG_CLick
   if menuActionPEKTRF_ADDS =&quot;FND&quot; then cmdPEKTRF_ADDSFND_CLick
   if menuActionPEKTRF_ADDS =&quot;ACC&quot; then cmdPEKTRF_ADDSACC_CLick
   menuActionPEKTRF_ADDS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_ADDSAdd,cmdPEKTRF_ADDSAdd.tag
  LoadBtnPictures cmdPEKTRF_ADDSEdit,cmdPEKTRF_ADDSEdit.tag
  LoadBtnPictures cmdPEKTRF_ADDSDel,cmdPEKTRF_ADDSDel.tag
  LoadBtnPictures cmdPEKTRF_ADDSRef,cmdPEKTRF_ADDSRef.tag
  LoadBtnPictures cmdPEKTRF_ADDSPrn,cmdPEKTRF_ADDSPrn.tag
  LoadBtnPictures cmdPEKTRF_ADDSFnd,cmdPEKTRF_ADDSFnd.tag
  LoadBtnPictures cmdPEKTRF_ADDSRun,cmdPEKTRF_ADDSRun.tag
  LoadBtnPictures cmdPEKTRF_ADDSAcc,cmdPEKTRF_ADDSAcc.tag
  LoadBtnPictures cmdPEKTRF_ADDSCfg,cmdPEKTRF_ADDSCfg.tag
  item.PEKTRF_ADDS.PrepareGrid gridPEKTRF_ADDS
  LoadGridLayout gridPEKTRF_ADDS
  Set fndPEKTRF_ADDS = Nothing
  On Error Resume Next
  Set fndPEKTRF_ADDS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_ADDS.Init gridPEKTRF_ADDS
end sub
private sub OnTabClick()

      gridPEKTRF_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_ADDS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_ADDS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_DECR_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_DECR" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_DECR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_DECR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_DECR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_DECRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_DECREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_DECRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_DECRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_DECRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_DECRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_DECRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_DECRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_DECR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Скидки"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_DECR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_DECRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_DECREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_DECREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_DECROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_DECROpen"/></ControlData><ControlData Name="mnuPEKTRF_DECRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRRef"/></ControlData><ControlData Name="mnuPEKTRF_DECRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRS1"/></ControlData><ControlData Name="mnuPEKTRF_DECRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_DECRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_DECRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCUT"/></ControlData><ControlData Name="mnuPEKTRF_DECRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_DECRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_DECRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_DECRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRPrn"/></ControlData><ControlData Name="mnuPEKTRF_DECRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCfg"/></ControlData><ControlData Name="mnuPEKTRF_DECRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRFind"/></ControlData><ControlData Name="mnuPEKTRF_DECRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_DECR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_DECR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_DECR as object
private menuActionPEKTRF_DECR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_DECRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_DECR,&quot;gridPEKTRF_DECR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_DECRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_DECR,&quot;Скидки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_DECRRef_Click()
  on error resume next
  item.PEKTRF_DECR.Refresh
  gridPEKTRF_DECR.itemCount = item.PEKTRF_DECR.count
  gridPEKTRF_DECR.Refetch
  gridPEKTRF_DECR.Refresh
End Sub
Private Sub cmdPEKTRF_DECRAcc_Click()
On Error Resume Next
If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_DECR.Row &gt; 0 Then
 If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_DECREdit_Click()
  on error resume next
If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_DECR.Row &gt; 0 then
 If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_DECR_read.Item = u
    again: frmPEKTRF_DECR_read.NotFirstTime = False
    frmPEKTRF_DECR_read.OnInit
    frmPEKTRF_DECR_read.Show vbModal
    If frmPEKTRF_DECR_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_DECR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_DECRDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKTRF_DECRAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_DECRFnd_Click()
  on error resume next
  fndPEKTRF_DECR.ShowForm
End Sub
Private Sub cmdPEKTRF_DECRRun_Click()
  on error resume next
  gridPEKTRF_DECR_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_DECR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_DECR.LoadRow gridPEKTRF_DECR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_DECR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKTRF_DECR_DblClick()
  cmdPEKTRF_DECREdit_Click
End Sub
Private Sub gridPEKTRF_DECR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_DECR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_DECR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_DECR.Row And LastRow &gt; 0 Then
  gridPEKTRF_DECR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_DECR.GetRowData(gridPEKTRF_DECR.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_DECRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_DECR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_DECR.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_DECR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_DECRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_DECR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_DECR
End If
end sub
private sub mnuPEKTRF_DECRAdd_click()
   menuActionPEKTRF_DECR =&quot;ADD&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECREdit_click()
   menuActionPEKTRF_DECR =&quot;EDIT&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRDelete_click()
   menuActionPEKTRF_DECR =&quot;DEL&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECROpen_click()
   menuActionPEKTRF_DECR =&quot;RUN&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRRef_click()
   menuActionPEKTRF_DECR =&quot;REF&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
  Private Sub mnuPEKTRF_DECRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_DECR.Row &gt; 0 Then
     If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_DECRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_DECR.Row &gt; 0 Then
     If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_DECR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_DECRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_DECR.Row &gt; 0 Then
   If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_DECR.ItemCount = u.parent.Count
      gridPEKTRF_DECR.RefreshRowIndex gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_DECRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_DECRPrn_click()
   menuActionPEKTRF_DECR =&quot;PRN&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRCfg_click()
   menuActionPEKTRF_DECR =&quot;CFG&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRFind_click()
   menuActionPEKTRF_DECR =&quot;FND&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRAcc_click()
   menuActionPEKTRF_DECR =&quot;ACC&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub menuTimerPEKTRF_DECR_timer()
   menuTimerPEKTRF_DECR.enabled = false
   if menuActionPEKTRF_DECR =&quot;ADD&quot; then cmdPEKTRF_DECRADD_CLick
   if menuActionPEKTRF_DECR =&quot;EDIT&quot; then cmdPEKTRF_DECREDIT_CLick
   if menuActionPEKTRF_DECR =&quot;DEL&quot; then cmdPEKTRF_DECRDEL_CLick
   if menuActionPEKTRF_DECR =&quot;RUN&quot; then cmdPEKTRF_DECRRUN_CLick
   if menuActionPEKTRF_DECR =&quot;REF&quot; then cmdPEKTRF_DECRREF_CLick
   if menuActionPEKTRF_DECR =&quot;PRN&quot; then cmdPEKTRF_DECRPRN_CLick
   if menuActionPEKTRF_DECR =&quot;CFG&quot; then cmdPEKTRF_DECRCFG_CLick
   if menuActionPEKTRF_DECR =&quot;FND&quot; then cmdPEKTRF_DECRFND_CLick
   if menuActionPEKTRF_DECR =&quot;ACC&quot; then cmdPEKTRF_DECRACC_CLick
   menuActionPEKTRF_DECR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_DECRAdd,cmdPEKTRF_DECRAdd.tag
  LoadBtnPictures cmdPEKTRF_DECREdit,cmdPEKTRF_DECREdit.tag
  LoadBtnPictures cmdPEKTRF_DECRDel,cmdPEKTRF_DECRDel.tag
  LoadBtnPictures cmdPEKTRF_DECRRef,cmdPEKTRF_DECRRef.tag
  LoadBtnPictures cmdPEKTRF_DECRPrn,cmdPEKTRF_DECRPrn.tag
  LoadBtnPictures cmdPEKTRF_DECRFnd,cmdPEKTRF_DECRFnd.tag
  LoadBtnPictures cmdPEKTRF_DECRRun,cmdPEKTRF_DECRRun.tag
  LoadBtnPictures cmdPEKTRF_DECRAcc,cmdPEKTRF_DECRAcc.tag
  LoadBtnPictures cmdPEKTRF_DECRCfg,cmdPEKTRF_DECRCfg.tag
  item.PEKTRF_DECR.PrepareGrid gridPEKTRF_DECR
  LoadGridLayout gridPEKTRF_DECR
  Set fndPEKTRF_DECR = Nothing
  On Error Resume Next
  Set fndPEKTRF_DECR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_DECR.Init gridPEKTRF_DECR
end sub
private sub OnTabClick()

      gridPEKTRF_DECR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_DECR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_DECR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_DECR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_REGALL_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_REGALL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_REGALL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_REGALL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_REGALLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_REGALLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_REGALLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_REGALLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_REGALLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_REGALLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_REGALLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_REGALLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Регресс по общему весу"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_REGALL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_REGALLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_REGALLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_REGALLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLOpen"/></ControlData><ControlData Name="mnuPEKTRF_REGALLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLRef"/></ControlData><ControlData Name="mnuPEKTRF_REGALLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLS1"/></ControlData><ControlData Name="mnuPEKTRF_REGALLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_REGALLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCOPY"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCUT"/></ControlData><ControlData Name="mnuPEKTRF_REGALLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLPASTE"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_REGALLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLPrn"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCfg"/></ControlData><ControlData Name="mnuPEKTRF_REGALLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLFind"/></ControlData><ControlData Name="mnuPEKTRF_REGALLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_REGALL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_REGALL as object
private menuActionPEKTRF_REGALL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_REGALLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_REGALL,&quot;gridPEKTRF_REGALL&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGALLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_REGALL,&quot;Регресс по общему весу&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGALLRef_Click()
  on error resume next
  item.PEKTRF_REGALL.Refresh
  gridPEKTRF_REGALL.itemCount = item.PEKTRF_REGALL.count
  gridPEKTRF_REGALL.Refetch
  gridPEKTRF_REGALL.Refresh
End Sub
Private Sub cmdPEKTRF_REGALLAcc_Click()
On Error Resume Next
If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGALL.Row &gt; 0 Then
 If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGALLEdit_Click()
  on error resume next
If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGALL.Row &gt; 0 then
 If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_REGALL_read.Item = u
    again: frmPEKTRF_REGALL_read.NotFirstTime = False
    frmPEKTRF_REGALL_read.OnInit
    frmPEKTRF_REGALL_read.Show vbModal
    If frmPEKTRF_REGALL_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_REGALL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGALLDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKTRF_REGALLAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_REGALLFnd_Click()
  on error resume next
  fndPEKTRF_REGALL.ShowForm
End Sub
Private Sub cmdPEKTRF_REGALLRun_Click()
  on error resume next
  gridPEKTRF_REGALL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_REGALL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_REGALL.LoadRow gridPEKTRF_REGALL, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_REGALL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKTRF_REGALL_DblClick()
  cmdPEKTRF_REGALLEdit_Click
End Sub
Private Sub gridPEKTRF_REGALL_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_REGALL.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_REGALL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_REGALL.Row And LastRow &gt; 0 Then
  gridPEKTRF_REGALL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_REGALL.GetRowData(gridPEKTRF_REGALL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_REGALLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_REGALL.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_REGALL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_REGALL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_REGALLCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_REGALL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_REGALL
End If
end sub
private sub mnuPEKTRF_REGALLAdd_click()
   menuActionPEKTRF_REGALL =&quot;ADD&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLEdit_click()
   menuActionPEKTRF_REGALL =&quot;EDIT&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLDelete_click()
   menuActionPEKTRF_REGALL =&quot;DEL&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLOpen_click()
   menuActionPEKTRF_REGALL =&quot;RUN&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLRef_click()
   menuActionPEKTRF_REGALL =&quot;REF&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
  Private Sub mnuPEKTRF_REGALLCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGALL.Row &gt; 0 Then
     If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_REGALLCUT_Click()
    On Error Resume Next
    If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGALL.Row &gt; 0 Then
     If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_REGALL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_REGALLCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_REGALL.Row &gt; 0 Then
   If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_REGALL.ItemCount = u.parent.Count
      gridPEKTRF_REGALL.RefreshRowIndex gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_REGALLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_REGALLPrn_click()
   menuActionPEKTRF_REGALL =&quot;PRN&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLCfg_click()
   menuActionPEKTRF_REGALL =&quot;CFG&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLFind_click()
   menuActionPEKTRF_REGALL =&quot;FND&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLAcc_click()
   menuActionPEKTRF_REGALL =&quot;ACC&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub menuTimerPEKTRF_REGALL_timer()
   menuTimerPEKTRF_REGALL.enabled = false
   if menuActionPEKTRF_REGALL =&quot;ADD&quot; then cmdPEKTRF_REGALLADD_CLick
   if menuActionPEKTRF_REGALL =&quot;EDIT&quot; then cmdPEKTRF_REGALLEDIT_CLick
   if menuActionPEKTRF_REGALL =&quot;DEL&quot; then cmdPEKTRF_REGALLDEL_CLick
   if menuActionPEKTRF_REGALL =&quot;RUN&quot; then cmdPEKTRF_REGALLRUN_CLick
   if menuActionPEKTRF_REGALL =&quot;REF&quot; then cmdPEKTRF_REGALLREF_CLick
   if menuActionPEKTRF_REGALL =&quot;PRN&quot; then cmdPEKTRF_REGALLPRN_CLick
   if menuActionPEKTRF_REGALL =&quot;CFG&quot; then cmdPEKTRF_REGALLCFG_CLick
   if menuActionPEKTRF_REGALL =&quot;FND&quot; then cmdPEKTRF_REGALLFND_CLick
   if menuActionPEKTRF_REGALL =&quot;ACC&quot; then cmdPEKTRF_REGALLACC_CLick
   menuActionPEKTRF_REGALL =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_REGALLAdd,cmdPEKTRF_REGALLAdd.tag
  LoadBtnPictures cmdPEKTRF_REGALLEdit,cmdPEKTRF_REGALLEdit.tag
  LoadBtnPictures cmdPEKTRF_REGALLDel,cmdPEKTRF_REGALLDel.tag
  LoadBtnPictures cmdPEKTRF_REGALLRef,cmdPEKTRF_REGALLRef.tag
  LoadBtnPictures cmdPEKTRF_REGALLPrn,cmdPEKTRF_REGALLPrn.tag
  LoadBtnPictures cmdPEKTRF_REGALLFnd,cmdPEKTRF_REGALLFnd.tag
  LoadBtnPictures cmdPEKTRF_REGALLRun,cmdPEKTRF_REGALLRun.tag
  LoadBtnPictures cmdPEKTRF_REGALLAcc,cmdPEKTRF_REGALLAcc.tag
  LoadBtnPictures cmdPEKTRF_REGALLCfg,cmdPEKTRF_REGALLCfg.tag
  item.PEKTRF_REGALL.PrepareGrid gridPEKTRF_REGALL
  LoadGridLayout gridPEKTRF_REGALL
  Set fndPEKTRF_REGALL = Nothing
  On Error Resume Next
  Set fndPEKTRF_REGALL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_REGALL.Init gridPEKTRF_REGALL
end sub
private sub OnTabClick()

      gridPEKTRF_REGALL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_REGALL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_REGALL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_REGALL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_AUTO_read" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_AUTO"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_AUTO" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_AUTO"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_AUTOAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_AUTOEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTODel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTODel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKTRF_AUTORef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTORef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_AUTOPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_AUTOCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_AUTOFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_AUTORun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTORun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_AUTOAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Автодоставка"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_AUTO"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_AUTOAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOAdd"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_AUTOEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTODelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTODelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKTRF_AUTOOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOOpen"/></ControlData><ControlData Name="mnuPEKTRF_AUTORef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTORef"/></ControlData><ControlData Name="mnuPEKTRF_AUTOS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOS1"/></ControlData><ControlData Name="mnuPEKTRF_AUTOBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_AUTOCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCOPY"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCUT"/></ControlData><ControlData Name="mnuPEKTRF_AUTOPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOPASTE"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_AUTOPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOPrn"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCfg"/></ControlData><ControlData Name="mnuPEKTRF_AUTOFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOFind"/></ControlData><ControlData Name="mnuPEKTRF_AUTOAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_AUTO"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_AUTO as object
private menuActionPEKTRF_AUTO as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_AUTOCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_AUTO,&quot;gridPEKTRF_AUTO&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_AUTOPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_AUTO,&quot;Автодоставка&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_AUTORef_Click()
  on error resume next
  item.PEKTRF_AUTO.Refresh
  gridPEKTRF_AUTO.itemCount = item.PEKTRF_AUTO.count
  gridPEKTRF_AUTO.Refetch
  gridPEKTRF_AUTO.Refresh
End Sub
Private Sub cmdPEKTRF_AUTOAcc_Click()
On Error Resume Next
If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKTRF_AUTO.Row &gt; 0 Then
 If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_AUTOEdit_Click()
  on error resume next
If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKTRF_AUTO.Row &gt; 0 then
 If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_AUTO_read.Item = u
    again: frmPEKTRF_AUTO_read.NotFirstTime = False
    frmPEKTRF_AUTO_read.OnInit
    frmPEKTRF_AUTO_read.Show vbModal
    If frmPEKTRF_AUTO_read.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_AUTO.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_AUTODel_Click()
  on error resume next
End Sub
Private Sub cmdPEKTRF_AUTOAdd_Click()
  on error resume next
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_AUTOFnd_Click()
  on error resume next
  fndPEKTRF_AUTO.ShowForm
End Sub
Private Sub cmdPEKTRF_AUTORun_Click()
  on error resume next
  gridPEKTRF_AUTO_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_AUTO_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_AUTO.LoadRow gridPEKTRF_AUTO, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_AUTO_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKTRF_AUTO_DblClick()
  cmdPEKTRF_AUTOEdit_Click
End Sub
Private Sub gridPEKTRF_AUTO_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_AUTO.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_AUTO_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_AUTO.Row And LastRow &gt; 0 Then
  gridPEKTRF_AUTO.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_AUTO.GetRowData(gridPEKTRF_AUTO.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_AUTOPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_AUTO.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_AUTO.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_AUTO_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_AUTOCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_AUTO_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_AUTO
End If
end sub
private sub mnuPEKTRF_AUTOAdd_click()
   menuActionPEKTRF_AUTO =&quot;ADD&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOEdit_click()
   menuActionPEKTRF_AUTO =&quot;EDIT&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTODelete_click()
   menuActionPEKTRF_AUTO =&quot;DEL&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOOpen_click()
   menuActionPEKTRF_AUTO =&quot;RUN&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTORef_click()
   menuActionPEKTRF_AUTO =&quot;REF&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
  Private Sub mnuPEKTRF_AUTOCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_AUTO.Row &gt; 0 Then
     If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_AUTOCUT_Click()
    On Error Resume Next
    If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_AUTO.Row &gt; 0 Then
     If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_AUTO.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_AUTOCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_AUTO.Row &gt; 0 Then
   If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_AUTO.ItemCount = u.parent.Count
      gridPEKTRF_AUTO.RefreshRowIndex gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_AUTOCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_AUTOPrn_click()
   menuActionPEKTRF_AUTO =&quot;PRN&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOCfg_click()
   menuActionPEKTRF_AUTO =&quot;CFG&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOFind_click()
   menuActionPEKTRF_AUTO =&quot;FND&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOAcc_click()
   menuActionPEKTRF_AUTO =&quot;ACC&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub menuTimerPEKTRF_AUTO_timer()
   menuTimerPEKTRF_AUTO.enabled = false
   if menuActionPEKTRF_AUTO =&quot;ADD&quot; then cmdPEKTRF_AUTOADD_CLick
   if menuActionPEKTRF_AUTO =&quot;EDIT&quot; then cmdPEKTRF_AUTOEDIT_CLick
   if menuActionPEKTRF_AUTO =&quot;DEL&quot; then cmdPEKTRF_AUTODEL_CLick
   if menuActionPEKTRF_AUTO =&quot;RUN&quot; then cmdPEKTRF_AUTORUN_CLick
   if menuActionPEKTRF_AUTO =&quot;REF&quot; then cmdPEKTRF_AUTOREF_CLick
   if menuActionPEKTRF_AUTO =&quot;PRN&quot; then cmdPEKTRF_AUTOPRN_CLick
   if menuActionPEKTRF_AUTO =&quot;CFG&quot; then cmdPEKTRF_AUTOCFG_CLick
   if menuActionPEKTRF_AUTO =&quot;FND&quot; then cmdPEKTRF_AUTOFND_CLick
   if menuActionPEKTRF_AUTO =&quot;ACC&quot; then cmdPEKTRF_AUTOACC_CLick
   menuActionPEKTRF_AUTO =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_AUTOAdd,cmdPEKTRF_AUTOAdd.tag
  LoadBtnPictures cmdPEKTRF_AUTOEdit,cmdPEKTRF_AUTOEdit.tag
  LoadBtnPictures cmdPEKTRF_AUTODel,cmdPEKTRF_AUTODel.tag
  LoadBtnPictures cmdPEKTRF_AUTORef,cmdPEKTRF_AUTORef.tag
  LoadBtnPictures cmdPEKTRF_AUTOPrn,cmdPEKTRF_AUTOPrn.tag
  LoadBtnPictures cmdPEKTRF_AUTOFnd,cmdPEKTRF_AUTOFnd.tag
  LoadBtnPictures cmdPEKTRF_AUTORun,cmdPEKTRF_AUTORun.tag
  LoadBtnPictures cmdPEKTRF_AUTOAcc,cmdPEKTRF_AUTOAcc.tag
  LoadBtnPictures cmdPEKTRF_AUTOCfg,cmdPEKTRF_AUTOCfg.tag
  item.PEKTRF_AUTO.PrepareGrid gridPEKTRF_AUTO
  LoadGridLayout gridPEKTRF_AUTO
  Set fndPEKTRF_AUTO = Nothing
  On Error Resume Next
  Set fndPEKTRF_AUTO = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_AUTO.Init gridPEKTRF_AUTO
end sub
private sub OnTabClick()

      gridPEKTRF_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_AUTO.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_AUTO = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlread_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_DEF" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_DEF_read"><Properties Name="Name" PropValue="pnlPEKTRF_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_SRV" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_SRV_read"><Properties Name="Name" PropValue="pnlPEKTRF_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_TR" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_TR_read"><Properties Name="Name" PropValue="pnlPEKTRF_TR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_ADDS" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_ADDS_read"><Properties Name="Name" PropValue="pnlPEKTRF_ADDS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_DECR" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_DECR_read"><Properties Name="Name" PropValue="pnlPEKTRF_DECR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_REGALL" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_REGALL_read"><Properties Name="Name" PropValue="pnlPEKTRF_REGALL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_AUTO" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_AUTO_read"><Properties Name="Name" PropValue="pnlPEKTRF_AUTO"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Тарифы"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlPEKTRF_DEF.IsOK
if IsItOk then IsItOk = pnlPEKTRF_SRV.IsOK
if IsItOk then IsItOk = pnlPEKTRF_TR.IsOK
if IsItOk then IsItOk = pnlPEKTRF_ADDS.IsOK
if IsItOk then IsItOk = pnlPEKTRF_DECR.IsOK
if IsItOk then IsItOk = pnlPEKTRF_REGALL.IsOK
if IsItOk then IsItOk = pnlPEKTRF_AUTO.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlPEKTRF_AUTO.Visible = False
  pnlPEKTRF_REGALL.Visible = False
  pnlPEKTRF_DECR.Visible = False
  pnlPEKTRF_ADDS.Visible = False
  pnlPEKTRF_TR.Visible = False
  pnlPEKTRF_SRV.Visible = False
  pnlPEKTRF_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;PEKTRF_DEF&quot;
     With pnlPEKTRF_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_DEF.OnClick item,parentform
     End With
   Case &quot;PEKTRF_SRV&quot;
     With pnlPEKTRF_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_SRV.OnClick item,parentform
     End With
   Case &quot;PEKTRF_TR&quot;
     With pnlPEKTRF_TR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_TR.OnClick item,parentform
     End With
   Case &quot;PEKTRF_ADDS&quot;
     With pnlPEKTRF_ADDS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_ADDS.OnClick item,parentform
     End With
   Case &quot;PEKTRF_DECR&quot;
     With pnlPEKTRF_DECR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_DECR.OnClick item,parentform
     End With
   Case &quot;PEKTRF_REGALL&quot;
     With pnlPEKTRF_REGALL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_REGALL.OnClick item,parentform
     End With
   Case &quot;PEKTRF_AUTO&quot;
     With pnlPEKTRF_AUTO
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_AUTO.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общее описание&quot;
ts.Tabs.Item(1).key = &quot;PEKTRF_DEF&quot;
pnlPEKTRF_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_SRV&quot;, &quot;Тарифы на услуги&quot;)
pnlPEKTRF_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_TR&quot;, &quot;Транспортировка&quot;)
pnlPEKTRF_TR.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_ADDS&quot;, &quot;Надбавки&quot;)
pnlPEKTRF_ADDS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_DECR&quot;, &quot;Скидки&quot;)
pnlPEKTRF_DECR.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_REGALL&quot;, &quot;Регресс по общему весу&quot;)
pnlPEKTRF_REGALL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_AUTO&quot;, &quot;Автодоставка&quot;)
pnlPEKTRF_AUTO.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;PEK2TRF&quot;, &quot;ctlread_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlPEKTRF_DEF.CloseClass
 pnlPEKTRF_SRV.CloseClass
 pnlPEKTRF_TR.CloseClass
 pnlPEKTRF_ADDS.CloseClass
 pnlPEKTRF_DECR.CloseClass
 pnlPEKTRF_REGALL.CloseClass
 pnlPEKTRF_AUTO.CloseClass
End Sub
public sub OnSave()
 pnlPEKTRF_DEF.OnSave
 pnlPEKTRF_SRV.OnSave
 pnlPEKTRF_TR.OnSave
 pnlPEKTRF_ADDS.OnSave
 pnlPEKTRF_DECR.OnSave
 pnlPEKTRF_REGALL.OnSave
 pnlPEKTRF_AUTO.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlPEKTRF_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_TR.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_ADDS.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_DECR.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_REGALL.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_AUTO.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Отменен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot;
    i = i + 1
    m(i).Caption = &quot;Введен в действие&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{53809047-E34B-4BC8-8497-710E4A51535E}&quot;
    i = i + 1
    m(i).Caption = &quot;Утвержден&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{A82A2432-3604-46A4-ABA9-E65AB3670363}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{53809047-E34B-4BC8-8497-710E4A51535E}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{A82A2432-3604-46A4-ABA9-E65AB3670363}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmread_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="PEK2TRFGUI.ctlread_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Тарифы"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;read&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;read&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_DEF_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_DEF" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_DEF"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="editPEKTRF_DEF" ControlIndex="0" PROGID="PEK2TRFGUI.PEKTRF_DEF"><Properties Name="Name" PropValue="editPEKTRF_DEF"/></ControlData><ControlData Name="cmdPEKTRF_DEFSave" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFSave"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="SAVE.ico"/><Properties Name="ToolTipText" PropValue="Сохранить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DEFRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFRef"/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DEFCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DEFCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub opPEKTRF_DEF_UpdateItemName_(RowItem as object)
with RowItem
Run_VBUpdateItemName  Name:=.TType.Brief &amp; &quot; от &quot; &amp; .StartDate,  RowItem:=RowItem
end with
end sub
Private Sub cmdPEKTRF_DEFRef_Click()
  on error resume next
  Item.PEKTRF_DEF.Refresh
  cmdPEKTRF_DEFAdd_Click
End Sub
Private Sub cmdPEKTRF_DEFCfg_Click()
    on error resume next 
    editPEKTRF_DEF.Customize
    dim ff as long 
    ff = FreeFile
    Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, &quot;c:\&quot;) &amp; &quot;PEK2TRF_editPEKTRF_DEF_&quot; For Output As #ff
    print #ff, editPEKTRF_DEF.PanelCustomisationString
    Close #ff
End Sub
Private Sub cmdPEKTRF_DEFAdd_Click()
  on error resume next
 dim u as object
 If Item.PEKTRF_DEF.Count = 0 Then
   set u=Item.PEKTRF_DEF.Add

 End If
 Set editPEKTRF_DEF.Item = Item.PEKTRF_DEF.Item(1)
 editPEKTRF_DEF.InitPanel
 cmdPEKTRF_DEFSave.Enabled = True
End Sub
Private Sub cmdPEKTRF_DEFDel_Click()
  on error resume next
  if  editPEKTRF_DEF.item is nothing then exit sub
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; editPEKTRF_DEF.item.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
    on error goto bye
    editPEKTRF_DEF.item.parent.Delete editPEKTRF_DEF.item.id
    cmdPEKTRF_DEFSave.Enabled = false
    editPEKTRF_DEF.Enabled = false
    set editPEKTRF_DEF.item = nothing
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub
Private Sub editPEKTRF_DEF_Changed()
 cmdPEKTRF_DEFSave.Enabled = true
End Sub
Public Function IsOK() as BooLEAN
    if editPEKTRF_DEF.IsOK then
        IsOK=TRUE
    end if
End Function
Private Sub cmdPEKTRF_DEFSave_Click()
  on error resume next
    if editPEKTRF_DEF.IsOK then
    MousePointer = vbHourglass
    editPEKTRF_DEF.Save
  on error goto bye
    editPEKTRF_DEF.item.Save
    MousePointer = vbNormal
        opPEKTRF_DEF_UpdateItemName_ editPEKTRF_DEF.item
    cmdPEKTRF_DEFSave.Enabled = false
    else
      MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly+VBExclamation
    end if
Exit Sub
bye:
    MousePointer = vbNormal
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Изменение&quot;
  'editPEKTRF_DEF.item.REFRESH
  'editPEKTRF_DEF.InitPanel
End Sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_DEFSave,cmdPEKTRF_DEFSave.tag
  LoadBtnPictures cmdPEKTRF_DEFRef,cmdPEKTRF_DEFRef.tag
  LoadBtnPictures cmdPEKTRF_DEFCfg,cmdPEKTRF_DEFCfg.tag
  dim ff as long, buf as string
  ff = FreeFile
  On Error Resume Next
  Open GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.PAth &amp; &quot;\LAYOUTS\&quot;) &amp; &quot;PEK2TRF_editPEKTRF_DEF_&quot; For Input As #ff
  buf = &quot;&quot;
  buf = Input(LOF(ff), ff)
  Close #ff
  if buf &lt;&gt;&quot;&quot; then editPEKTRF_DEF.PanelCustomisationString = buf
  cmdPEKTRF_DEFAdd_click
end sub
private sub OnTabClick()

      editPEKTRF_DEF.Top = 40 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Left = 5 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      editPEKTRF_DEF.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
  editPEKTRF_DEF.Save
if editPEKTRF_DEF.item.Changed then
  editPEKTRF_DEF.item.Save
end if
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
 m_isChanged = m_isChanged or editPEKTRF_DEF.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_DEF.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_SRV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тарифы на услуги"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVOpen"/></ControlData><ControlData Name="mnuPEKTRF_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVRef"/></ControlData><ControlData Name="mnuPEKTRF_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVS1"/></ControlData><ControlData Name="mnuPEKTRF_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCOPY"/></ControlData><ControlData Name="mnuPEKTRF_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCUT"/></ControlData><ControlData Name="mnuPEKTRF_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVPASTE"/></ControlData><ControlData Name="mnuPEKTRF_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVPrn"/></ControlData><ControlData Name="mnuPEKTRF_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVCfg"/></ControlData><ControlData Name="mnuPEKTRF_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVFind"/></ControlData><ControlData Name="mnuPEKTRF_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_SRV as object
private menuActionPEKTRF_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_SRV,&quot;gridPEKTRF_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_SRV,&quot;Тарифы на услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_SRVRef_Click()
  on error resume next
  item.PEKTRF_SRV.Refresh
  gridPEKTRF_SRV.itemCount = item.PEKTRF_SRV.count
  gridPEKTRF_SRV.Refetch
  gridPEKTRF_SRV.Refresh
End Sub
Private Sub cmdPEKTRF_SRVAcc_Click()
On Error Resume Next
If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
If gridPEKTRF_SRV.Row &gt; 0 Then
 If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_SRVEdit_Click()
  on error resume next
If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
If gridPEKTRF_SRV.Row &gt; 0 then
 If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_SRV_.Item = u
    again: frmPEKTRF_SRV_.NotFirstTime = False
    frmPEKTRF_SRV_.OnInit
    frmPEKTRF_SRV_.Show vbModal
    If frmPEKTRF_SRV_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_SRVDel_Click()
  on error resume next
  gridPEKTRF_SRV.Delete
End Sub
Private Sub cmdPEKTRF_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_SRV.Add()

      Set frmPEKTRF_SRV_.Item = u
      again: frmPEKTRF_SRV_.NotFirstTime = False
      frmPEKTRF_SRV_.OnInit
      frmPEKTRF_SRV_.Show vbModal
      If frmPEKTRF_SRV_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_SRV.ItemCount = Item.PEKTRF_SRV.Count
        gridPEKTRF_SRV.Refresh
        gridPEKTRF_SRV.RefreshGroups
        gridPEKTRF_SRV.Refreshsort
        gridPEKTRF_SRV.MoveToBookmark u.ID &amp; &quot;PEKTRF_SRV&quot;
      Else
        Item.PEKTRF_SRV.Delete u.ID
        Item.PEKTRF_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_SRVFnd_Click()
  on error resume next
  fndPEKTRF_SRV.ShowForm
End Sub
Private Sub cmdPEKTRF_SRVRun_Click()
  on error resume next
  gridPEKTRF_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_SRV.LoadRow gridPEKTRF_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_SRV_DblClick()
  cmdPEKTRF_SRVEdit_Click
End Sub
Private Sub gridPEKTRF_SRV_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_SRV.Row And LastRow &gt; 0 Then
  gridPEKTRF_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_SRV.GetRowData(gridPEKTRF_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_SRV.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_SRVCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_SRV
End If
end sub
private sub mnuPEKTRF_SRVAdd_click()
   menuActionPEKTRF_SRV =&quot;ADD&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVEdit_click()
   menuActionPEKTRF_SRV =&quot;EDIT&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVDelete_click()
   menuActionPEKTRF_SRV =&quot;DEL&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVOpen_click()
   menuActionPEKTRF_SRV =&quot;RUN&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVRef_click()
   menuActionPEKTRF_SRV =&quot;REF&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
  Private Sub mnuPEKTRF_SRVCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_SRV.Row &gt; 0 Then
     If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_SRVCUT_Click()
    On Error Resume Next
    If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_SRV.Row &gt; 0 Then
     If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_SRVCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_SRV.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_SRV.Row &gt; 0 Then
   If gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_SRV.RowBookmark(gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_SRV.ItemCount = u.parent.Count
      gridPEKTRF_SRV.RefreshRowIndex gridPEKTRF_SRV.RowIndex(gridPEKTRF_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_SRVPrn_click()
   menuActionPEKTRF_SRV =&quot;PRN&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVCfg_click()
   menuActionPEKTRF_SRV =&quot;CFG&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVFind_click()
   menuActionPEKTRF_SRV =&quot;FND&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub mnuPEKTRF_SRVAcc_click()
   menuActionPEKTRF_SRV =&quot;ACC&quot;
   menuTimerPEKTRF_SRV.enabled = true
end sub
private sub menuTimerPEKTRF_SRV_timer()
   menuTimerPEKTRF_SRV.enabled = false
   if menuActionPEKTRF_SRV =&quot;ADD&quot; then cmdPEKTRF_SRVADD_CLick
   if menuActionPEKTRF_SRV =&quot;EDIT&quot; then cmdPEKTRF_SRVEDIT_CLick
   if menuActionPEKTRF_SRV =&quot;DEL&quot; then cmdPEKTRF_SRVDEL_CLick
   if menuActionPEKTRF_SRV =&quot;RUN&quot; then cmdPEKTRF_SRVRUN_CLick
   if menuActionPEKTRF_SRV =&quot;REF&quot; then cmdPEKTRF_SRVREF_CLick
   if menuActionPEKTRF_SRV =&quot;PRN&quot; then cmdPEKTRF_SRVPRN_CLick
   if menuActionPEKTRF_SRV =&quot;CFG&quot; then cmdPEKTRF_SRVCFG_CLick
   if menuActionPEKTRF_SRV =&quot;FND&quot; then cmdPEKTRF_SRVFND_CLick
   if menuActionPEKTRF_SRV =&quot;ACC&quot; then cmdPEKTRF_SRVACC_CLick
   menuActionPEKTRF_SRV =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_SRVAdd,cmdPEKTRF_SRVAdd.tag
  LoadBtnPictures cmdPEKTRF_SRVEdit,cmdPEKTRF_SRVEdit.tag
  LoadBtnPictures cmdPEKTRF_SRVDel,cmdPEKTRF_SRVDel.tag
  LoadBtnPictures cmdPEKTRF_SRVRef,cmdPEKTRF_SRVRef.tag
  LoadBtnPictures cmdPEKTRF_SRVPrn,cmdPEKTRF_SRVPrn.tag
  LoadBtnPictures cmdPEKTRF_SRVFnd,cmdPEKTRF_SRVFnd.tag
  LoadBtnPictures cmdPEKTRF_SRVRun,cmdPEKTRF_SRVRun.tag
  LoadBtnPictures cmdPEKTRF_SRVAcc,cmdPEKTRF_SRVAcc.tag
  LoadBtnPictures cmdPEKTRF_SRVCfg,cmdPEKTRF_SRVCfg.tag
  item.PEKTRF_SRV.PrepareGrid gridPEKTRF_SRV
  LoadGridLayout gridPEKTRF_SRV
  Set fndPEKTRF_SRV = Nothing
  On Error Resume Next
  Set fndPEKTRF_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_SRV.Init gridPEKTRF_SRV
end sub
private sub OnTabClick()

      gridPEKTRF_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_TR_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_TR" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlPEKTRF_TR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridPEKTRF_TR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_TR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_TRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_TRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_TRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_TRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_TRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_TRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_TRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_TRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridPEKTRF_REGRTR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_REGRTR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_REGRTRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGRTRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_TR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Транспортировка"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_TR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_TRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_TREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_TROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_TROpen"/></ControlData><ControlData Name="mnuPEKTRF_TRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRRef"/></ControlData><ControlData Name="mnuPEKTRF_TRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_TRS1"/></ControlData><ControlData Name="mnuPEKTRF_TRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_TRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_TRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_TRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCUT"/></ControlData><ControlData Name="mnuPEKTRF_TRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_TRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_TRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_TRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_TRPrn"/></ControlData><ControlData Name="mnuPEKTRF_TRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_TRCfg"/></ControlData><ControlData Name="mnuPEKTRF_TRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_TRFind"/></ControlData><ControlData Name="mnuPEKTRF_TRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_TRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_TR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_TR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupPEKTRF_REGRTR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Регресс по весу"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_REGRTR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_REGRTRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGRTROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTROpen"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRRef"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRS1"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_REGRTRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCUT"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_REGRTRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRPrn"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRCfg"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRFind"/></ControlData><ControlData Name="mnuPEKTRF_REGRTRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_REGRTRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_REGRTR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_REGRTR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_TR as object
private menuActionPEKTRF_TR as string
private fndPEKTRF_REGRTR as object
private menuActionPEKTRF_REGRTR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKTRF_TR_PositionChanged()
  pnlPEKTRF_TR.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_TR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_TRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_TR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_TR
End If
end sub
private sub mnuPEKTRF_TRAdd_click()
   menuActionPEKTRF_TR =&quot;ADD&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TREdit_click()
   menuActionPEKTRF_TR =&quot;EDIT&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRDelete_click()
   menuActionPEKTRF_TR =&quot;DEL&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TROpen_click()
   menuActionPEKTRF_TR =&quot;RUN&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRRef_click()
   menuActionPEKTRF_TR =&quot;REF&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
  Private Sub mnuPEKTRF_TRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_TR.Row &gt; 0 Then
     If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_TRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_TR.Row &gt; 0 Then
     If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_TR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_TRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_TR.Row &gt; 0 Then
   If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_TR.ItemCount = u.parent.Count
      gridPEKTRF_TR.RefreshRowIndex gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_TRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_TRPrn_click()
   menuActionPEKTRF_TR =&quot;PRN&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRCfg_click()
   menuActionPEKTRF_TR =&quot;CFG&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRFind_click()
   menuActionPEKTRF_TR =&quot;FND&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub mnuPEKTRF_TRAcc_click()
   menuActionPEKTRF_TR =&quot;ACC&quot;
   menuTimerPEKTRF_TR.enabled = true
end sub
private sub menuTimerPEKTRF_TR_timer()
   menuTimerPEKTRF_TR.enabled = false
   if menuActionPEKTRF_TR =&quot;ADD&quot; then cmdPEKTRF_TRADD_CLick
   if menuActionPEKTRF_TR =&quot;EDIT&quot; then cmdPEKTRF_TREDIT_CLick
   if menuActionPEKTRF_TR =&quot;DEL&quot; then cmdPEKTRF_TRDEL_CLick
   if menuActionPEKTRF_TR =&quot;RUN&quot; then cmdPEKTRF_TRRUN_CLick
   if menuActionPEKTRF_TR =&quot;REF&quot; then cmdPEKTRF_TRREF_CLick
   if menuActionPEKTRF_TR =&quot;PRN&quot; then cmdPEKTRF_TRPRN_CLick
   if menuActionPEKTRF_TR =&quot;CFG&quot; then cmdPEKTRF_TRCFG_CLick
   if menuActionPEKTRF_TR =&quot;FND&quot; then cmdPEKTRF_TRFND_CLick
   if menuActionPEKTRF_TR =&quot;ACC&quot; then cmdPEKTRF_TRACC_CLick
   menuActionPEKTRF_TR =&quot;&quot;
end sub
Private Sub cmdPEKTRF_TRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_TR,&quot;gridPEKTRF_TR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_TRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_TR,&quot;Транспортировка&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_TRRef_Click()
  on error resume next
  item.PEKTRF_TR.Refresh
  gridPEKTRF_TR.itemCount = item.PEKTRF_TR.count
  gridPEKTRF_TR.Refetch
  gridPEKTRF_TR.Refresh
End Sub
Private Sub cmdPEKTRF_TRAcc_Click()
On Error Resume Next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 Then
 If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_TREdit_Click()
  on error resume next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 then
 If gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_TR_.Item = u
    again: frmPEKTRF_TR_.NotFirstTime = False
    frmPEKTRF_TR_.OnInit
    frmPEKTRF_TR_.Show vbModal
    If frmPEKTRF_TR_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_TR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_TRDel_Click()
  on error resume next
  gridPEKTRF_TR.Delete
End Sub
Private Sub cmdPEKTRF_TRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_TR.Add()

      Set frmPEKTRF_TR_.Item = u
      again: frmPEKTRF_TR_.NotFirstTime = False
      frmPEKTRF_TR_.OnInit
      frmPEKTRF_TR_.Show vbModal
      If frmPEKTRF_TR_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_TR.ItemCount = Item.PEKTRF_TR.Count
        gridPEKTRF_TR.Refresh
        gridPEKTRF_TR.RefreshGroups
        gridPEKTRF_TR.Refreshsort
        gridPEKTRF_TR.MoveToBookmark u.ID &amp; &quot;PEKTRF_TR&quot;
      Else
        Item.PEKTRF_TR.Delete u.ID
        Item.PEKTRF_TR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_TRFnd_Click()
  on error resume next
  fndPEKTRF_TR.ShowForm
End Sub
Private Sub cmdPEKTRF_TRRun_Click()
  on error resume next
  gridPEKTRF_TR_DblClick
End Sub
Private Sub gridPEKTRF_TR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_TR.LoadRow gridPEKTRF_TR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_TR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_TR_DblClick()
  cmdPEKTRF_TREdit_Click
End Sub
Private Sub gridPEKTRF_TR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_TR.FindOnPress KeyAscii
End Sub

Private Sub pnlPEKTRF_TR_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridPEKTRF_TR.Left = Left
  gridPEKTRF_TR.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKTRF_TR.Width = Width
  gridPEKTRF_TR.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKTRF_TRAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TREdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_TRAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdPEKTRF_TREdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKTRF_TRDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKTRF_TRRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKTRF_TRPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKTRF_TRCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKTRF_TRFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKTRF_TRRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKTRF_TRAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuPEKTRF_TRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_TR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_TR.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdPEKTRF_REGRTRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_REGRTR,&quot;gridPEKTRF_REGRTR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGRTRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_REGRTR,&quot;Регресс по весу&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGRTRAcc_Click()
On Error Resume Next
If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGRTR.Row &gt; 0 Then
 If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGRTRFnd_Click()
  on error resume next
  fndPEKTRF_REGRTR.ShowForm
End Sub
Private Sub cmdPEKTRF_REGRTRRun_Click()
  on error resume next
  gridPEKTRF_REGRTR_DblClick
End Sub
Private Sub pnlPEKTRF_TR_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKTRF_REGRTR.Left = Left
  gridPEKTRF_REGRTR.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKTRF_REGRTR.Width = Width
  gridPEKTRF_REGRTR.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTREdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKTRF_REGRTRAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdPEKTRF_REGRTREdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKTRF_REGRTRAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdPEKTRF_REGRTRRef_Click()
  on error resume next
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_TR.Row &gt; 0 Then
 If gridPEKTRF_TR.RowIndex ( gridPEKTRF_TR.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.PEKTRF_REGRTR.refresh
   gridPEKTRF_REGRTR.itemcount=gu.PEKTRF_REGRTR.count
   gridPEKTRF_REGRTR.refetch
   gridPEKTRF_REGRTR.refresh
 else
  gridPEKTRF_REGRTR.columns.clear
  gridPEKTRF_REGRTR.itemcount=0
 End If
else
 gridPEKTRF_REGRTR.columns.clear
 gridPEKTRF_REGRTR.itemcount=0
End If
End Sub
Private Sub cmdPEKTRF_REGRTREdit_Click()
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmPEKTRF_REGRTR_.Item = u
    again: frmPEKTRF_REGRTR_.NotFirstTime = False
    frmPEKTRF_REGRTR_.OnInit
    frmPEKTRF_REGRTR_.Show vbModal
    If frmPEKTRF_REGRTR_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_REGRTR.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdPEKTRF_REGRTRDel_Click()
  on error resume next
  gridPEKTRF_REGRTR.Delete
End Sub
Private Sub cmdPEKTRF_REGRTRAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.PEKTRF_REGRTR.Add()

      Set frmPEKTRF_REGRTR_.Item = u
      again: frmPEKTRF_REGRTR_.NotFirstTime = False
      frmPEKTRF_REGRTR_.OnInit
      frmPEKTRF_REGRTR_.Show vbModal
      If frmPEKTRF_REGRTR_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_REGRTR.ItemCount = gu.PEKTRF_REGRTR.Count
        gridPEKTRF_REGRTR.Refresh
        gridPEKTRF_REGRTR.RefreshGroups
        gridPEKTRF_REGRTR.Refreshsort
        gridPEKTRF_REGRTR.MoveToBookmark u.ID &amp; &quot;PEKTRF_REGRTR&quot;
      Else
        gu.PEKTRF_REGRTR.Delete u.ID
        gu.PEKTRF_REGRTR.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridPEKTRF_TR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridPEKTRF_TR.ItemCount = 0 Then 
  gridPEKTRF_REGRTR.ItemCount=0
  Exit Sub
End If
If gridPEKTRF_TR.Row &gt; 0 Then
  If LastRow &lt;&gt; gridPEKTRF_TR.Row And LastRow &gt; 0 Then
    gridPEKTRF_TR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridPEKTRF_TR.GetRowData(gridPEKTRF_TR.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridPEKTRF_TR.RowIndex ( gridPEKTRF_TR.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridPEKTRF_TR.Row or gridPEKTRF_REGRTR.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.PEKTRF_REGRTR.Preparegrid gridPEKTRF_REGRTR
  gridPEKTRF_REGRTR.ItemCount=0
    LoadGridLayout gridPEKTRF_REGRTR
    Set fndPEKTRF_REGRTR = Nothing
    Set fndPEKTRF_REGRTR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKTRF_REGRTR.Init gridPEKTRF_REGRTR
  gridPEKTRF_REGRTR.ItemCount=gu.PEKTRF_REGRTR.Count
  End If
 End If
End If
End Sub
Private Sub gridPEKTRF_REGRTR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.PEKTRF_REGRTR.LoadRow gridPEKTRF_REGRTR, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridPEKTRF_REGRTR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_REGRTR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_REGRTR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridPEKTRF_REGRTR_DblClick()
    cmdPEKTRF_REGRTREdit_click
End Sub
Private Sub gridPEKTRF_REGRTR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
 If gridPEKTRF_REGRTR.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKTRF_REGRTR.Row And LastRow &gt; 0 Then
     gridPEKTRF_REGRTR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKTRF_REGRTR.GetRowData(gridPEKTRF_REGRTR.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuPEKTRF_REGRTRPASTE_Click()
On Error Resume Next
    If gridPEKTRF_TR.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridPEKTRF_TR.RowBookmark(gridPEKTRF_TR.RowIndex(gridPEKTRF_TR.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.PEKTRF_REGRTR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_REGRTR.ItemCount = u.parent.Count
    ELSE
      GU.PEKTRF_REGRTR.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_REGRTR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_REGRTRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_REGRTR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_REGRTR
End If
end sub
private sub mnuPEKTRF_REGRTRAdd_click()
   menuActionPEKTRF_REGRTR =&quot;ADD&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTREdit_click()
   menuActionPEKTRF_REGRTR =&quot;EDIT&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRDelete_click()
   menuActionPEKTRF_REGRTR =&quot;DEL&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTROpen_click()
   menuActionPEKTRF_REGRTR =&quot;RUN&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRRef_click()
   menuActionPEKTRF_REGRTR =&quot;REF&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
  Private Sub mnuPEKTRF_REGRTRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.Row &gt; 0 Then
     If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_REGRTRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGRTR.Row &gt; 0 Then
     If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_REGRTR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_REGRTRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_REGRTR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_REGRTR.Row &gt; 0 Then
   If gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGRTR.RowBookmark(gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_REGRTR.ItemCount = u.parent.Count
      gridPEKTRF_REGRTR.RefreshRowIndex gridPEKTRF_REGRTR.RowIndex(gridPEKTRF_REGRTR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_REGRTRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_REGRTRPrn_click()
   menuActionPEKTRF_REGRTR =&quot;PRN&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRCfg_click()
   menuActionPEKTRF_REGRTR =&quot;CFG&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRFind_click()
   menuActionPEKTRF_REGRTR =&quot;FND&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub mnuPEKTRF_REGRTRAcc_click()
   menuActionPEKTRF_REGRTR =&quot;ACC&quot;
   menuTimerPEKTRF_REGRTR.enabled = true
end sub
private sub menuTimerPEKTRF_REGRTR_timer()
   menuTimerPEKTRF_REGRTR.enabled = false
   if menuActionPEKTRF_REGRTR =&quot;ADD&quot; then cmdPEKTRF_REGRTRADD_CLick
   if menuActionPEKTRF_REGRTR =&quot;EDIT&quot; then cmdPEKTRF_REGRTREDIT_CLick
   if menuActionPEKTRF_REGRTR =&quot;DEL&quot; then cmdPEKTRF_REGRTRDEL_CLick
   if menuActionPEKTRF_REGRTR =&quot;RUN&quot; then cmdPEKTRF_REGRTRRUN_CLick
   if menuActionPEKTRF_REGRTR =&quot;REF&quot; then cmdPEKTRF_REGRTRREF_CLick
   if menuActionPEKTRF_REGRTR =&quot;PRN&quot; then cmdPEKTRF_REGRTRPRN_CLick
   if menuActionPEKTRF_REGRTR =&quot;CFG&quot; then cmdPEKTRF_REGRTRCFG_CLick
   if menuActionPEKTRF_REGRTR =&quot;FND&quot; then cmdPEKTRF_REGRTRFND_CLick
   if menuActionPEKTRF_REGRTR =&quot;ACC&quot; then cmdPEKTRF_REGRTRACC_CLick
   menuActionPEKTRF_REGRTR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_TRAdd,cmdPEKTRF_TRAdd.tag
  LoadBtnPictures cmdPEKTRF_TREdit,cmdPEKTRF_TREdit.tag
  LoadBtnPictures cmdPEKTRF_TRDel,cmdPEKTRF_TRDel.tag
  LoadBtnPictures cmdPEKTRF_TRRef,cmdPEKTRF_TRRef.tag
  LoadBtnPictures cmdPEKTRF_TRPrn,cmdPEKTRF_TRPrn.tag
  LoadBtnPictures cmdPEKTRF_TRFnd,cmdPEKTRF_TRFnd.tag
  LoadBtnPictures cmdPEKTRF_TRRun,cmdPEKTRF_TRRun.tag
  LoadBtnPictures cmdPEKTRF_TRAcc,cmdPEKTRF_TRAcc.tag
  LoadBtnPictures cmdPEKTRF_TRCfg,cmdPEKTRF_TRCfg.tag
  item.PEKTRF_TR.PrepareGrid gridPEKTRF_TR
  LoadGridLayout gridPEKTRF_TR
  Set fndPEKTRF_TR = Nothing
  On Error Resume Next
  Set fndPEKTRF_TR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_TR.Init gridPEKTRF_TR
  LoadBtnPictures cmdPEKTRF_REGRTRAdd,cmdPEKTRF_REGRTRAdd.tag
  LoadBtnPictures cmdPEKTRF_REGRTREdit,cmdPEKTRF_REGRTREdit.tag
  LoadBtnPictures cmdPEKTRF_REGRTRDel,cmdPEKTRF_REGRTRDel.tag
  LoadBtnPictures cmdPEKTRF_REGRTRRef,cmdPEKTRF_REGRTRRef.tag
  LoadBtnPictures cmdPEKTRF_REGRTRPrn,cmdPEKTRF_REGRTRPrn.tag
  LoadBtnPictures cmdPEKTRF_REGRTRFnd,cmdPEKTRF_REGRTRFnd.Tag
  LoadBtnPictures cmdPEKTRF_REGRTRCfg,cmdPEKTRF_REGRTRCfg.tag
  LoadBtnPictures cmdPEKTRF_REGRTRRun,cmdPEKTRF_REGRTRRun.Tag
  LoadBtnPictures cmdPEKTRF_REGRTRAcc,cmdPEKTRF_REGRTRAcc.Tag
  gridPEKTRF_REGRTR.Columns.Clear
  gridPEKTRF_REGRTR.ItemCount=0
  cmdPEKTRF_REGRTRRef_Click
end sub
private sub OnTabClick()

pnlPEKTRF_TR.RestorePosition
  gridPEKTRF_TR_RowColChange gridPEKTRF_TR.Row,-1
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_TR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_TR = nothing
  set fndPEKTRF_REGRTR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_ADDS_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_ADDS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_ADDS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_ADDS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_ADDSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_ADDSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_ADDSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_ADDSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_ADDSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_ADDSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_ADDSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_ADDSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Надбавки"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_ADDS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_ADDSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_ADDSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSOpen"/></ControlData><ControlData Name="mnuPEKTRF_ADDSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSRef"/></ControlData><ControlData Name="mnuPEKTRF_ADDSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSS1"/></ControlData><ControlData Name="mnuPEKTRF_ADDSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_ADDSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCOPY"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCUT"/></ControlData><ControlData Name="mnuPEKTRF_ADDSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSPASTE"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_ADDSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSPrn"/></ControlData><ControlData Name="mnuPEKTRF_ADDSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSCfg"/></ControlData><ControlData Name="mnuPEKTRF_ADDSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSFind"/></ControlData><ControlData Name="mnuPEKTRF_ADDSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_ADDSAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_ADDS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_ADDS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_ADDS as object
private menuActionPEKTRF_ADDS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_ADDSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_ADDS,&quot;gridPEKTRF_ADDS&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_ADDSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_ADDS,&quot;Надбавки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_ADDSRef_Click()
  on error resume next
  item.PEKTRF_ADDS.Refresh
  gridPEKTRF_ADDS.itemCount = item.PEKTRF_ADDS.count
  gridPEKTRF_ADDS.Refetch
  gridPEKTRF_ADDS.Refresh
End Sub
Private Sub cmdPEKTRF_ADDSAcc_Click()
On Error Resume Next
If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKTRF_ADDS.Row &gt; 0 Then
 If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_ADDSEdit_Click()
  on error resume next
If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKTRF_ADDS.Row &gt; 0 then
 If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_ADDS_.Item = u
    again: frmPEKTRF_ADDS_.NotFirstTime = False
    frmPEKTRF_ADDS_.OnInit
    frmPEKTRF_ADDS_.Show vbModal
    If frmPEKTRF_ADDS_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_ADDS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_ADDSDel_Click()
  on error resume next
  gridPEKTRF_ADDS.Delete
End Sub
Private Sub cmdPEKTRF_ADDSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_ADDS.Add()

      Set frmPEKTRF_ADDS_.Item = u
      again: frmPEKTRF_ADDS_.NotFirstTime = False
      frmPEKTRF_ADDS_.OnInit
      frmPEKTRF_ADDS_.Show vbModal
      If frmPEKTRF_ADDS_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_ADDS.ItemCount = Item.PEKTRF_ADDS.Count
        gridPEKTRF_ADDS.Refresh
        gridPEKTRF_ADDS.RefreshGroups
        gridPEKTRF_ADDS.Refreshsort
        gridPEKTRF_ADDS.MoveToBookmark u.ID &amp; &quot;PEKTRF_ADDS&quot;
      Else
        Item.PEKTRF_ADDS.Delete u.ID
        Item.PEKTRF_ADDS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_ADDSFnd_Click()
  on error resume next
  fndPEKTRF_ADDS.ShowForm
End Sub
Private Sub cmdPEKTRF_ADDSRun_Click()
  on error resume next
  gridPEKTRF_ADDS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_ADDS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_ADDS.LoadRow gridPEKTRF_ADDS, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_ADDS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_ADDS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_ADDS_DblClick()
  cmdPEKTRF_ADDSEdit_Click
End Sub
Private Sub gridPEKTRF_ADDS_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_ADDS.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_ADDS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_ADDS.Row And LastRow &gt; 0 Then
  gridPEKTRF_ADDS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_ADDS.GetRowData(gridPEKTRF_ADDS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_ADDSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_ADDS.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_ADDS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_ADDS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_ADDSCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_ADDS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_ADDS
End If
end sub
private sub mnuPEKTRF_ADDSAdd_click()
   menuActionPEKTRF_ADDS =&quot;ADD&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSEdit_click()
   menuActionPEKTRF_ADDS =&quot;EDIT&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSDelete_click()
   menuActionPEKTRF_ADDS =&quot;DEL&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSOpen_click()
   menuActionPEKTRF_ADDS =&quot;RUN&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSRef_click()
   menuActionPEKTRF_ADDS =&quot;REF&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
  Private Sub mnuPEKTRF_ADDSCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_ADDS.Row &gt; 0 Then
     If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_ADDSCUT_Click()
    On Error Resume Next
    If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_ADDS.Row &gt; 0 Then
     If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_ADDS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_ADDSCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_ADDS.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_ADDS.Row &gt; 0 Then
   If gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_ADDS.RowBookmark(gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_ADDS.ItemCount = u.parent.Count
      gridPEKTRF_ADDS.RefreshRowIndex gridPEKTRF_ADDS.RowIndex(gridPEKTRF_ADDS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_ADDSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_ADDSPrn_click()
   menuActionPEKTRF_ADDS =&quot;PRN&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSCfg_click()
   menuActionPEKTRF_ADDS =&quot;CFG&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSFind_click()
   menuActionPEKTRF_ADDS =&quot;FND&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub mnuPEKTRF_ADDSAcc_click()
   menuActionPEKTRF_ADDS =&quot;ACC&quot;
   menuTimerPEKTRF_ADDS.enabled = true
end sub
private sub menuTimerPEKTRF_ADDS_timer()
   menuTimerPEKTRF_ADDS.enabled = false
   if menuActionPEKTRF_ADDS =&quot;ADD&quot; then cmdPEKTRF_ADDSADD_CLick
   if menuActionPEKTRF_ADDS =&quot;EDIT&quot; then cmdPEKTRF_ADDSEDIT_CLick
   if menuActionPEKTRF_ADDS =&quot;DEL&quot; then cmdPEKTRF_ADDSDEL_CLick
   if menuActionPEKTRF_ADDS =&quot;RUN&quot; then cmdPEKTRF_ADDSRUN_CLick
   if menuActionPEKTRF_ADDS =&quot;REF&quot; then cmdPEKTRF_ADDSREF_CLick
   if menuActionPEKTRF_ADDS =&quot;PRN&quot; then cmdPEKTRF_ADDSPRN_CLick
   if menuActionPEKTRF_ADDS =&quot;CFG&quot; then cmdPEKTRF_ADDSCFG_CLick
   if menuActionPEKTRF_ADDS =&quot;FND&quot; then cmdPEKTRF_ADDSFND_CLick
   if menuActionPEKTRF_ADDS =&quot;ACC&quot; then cmdPEKTRF_ADDSACC_CLick
   menuActionPEKTRF_ADDS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_ADDSAdd,cmdPEKTRF_ADDSAdd.tag
  LoadBtnPictures cmdPEKTRF_ADDSEdit,cmdPEKTRF_ADDSEdit.tag
  LoadBtnPictures cmdPEKTRF_ADDSDel,cmdPEKTRF_ADDSDel.tag
  LoadBtnPictures cmdPEKTRF_ADDSRef,cmdPEKTRF_ADDSRef.tag
  LoadBtnPictures cmdPEKTRF_ADDSPrn,cmdPEKTRF_ADDSPrn.tag
  LoadBtnPictures cmdPEKTRF_ADDSFnd,cmdPEKTRF_ADDSFnd.tag
  LoadBtnPictures cmdPEKTRF_ADDSRun,cmdPEKTRF_ADDSRun.tag
  LoadBtnPictures cmdPEKTRF_ADDSAcc,cmdPEKTRF_ADDSAcc.tag
  LoadBtnPictures cmdPEKTRF_ADDSCfg,cmdPEKTRF_ADDSCfg.tag
  item.PEKTRF_ADDS.PrepareGrid gridPEKTRF_ADDS
  LoadGridLayout gridPEKTRF_ADDS
  Set fndPEKTRF_ADDS = Nothing
  On Error Resume Next
  Set fndPEKTRF_ADDS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_ADDS.Init gridPEKTRF_ADDS
end sub
private sub OnTabClick()

      gridPEKTRF_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_ADDS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_ADDS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_DECR_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_DECR" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_DECR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_DECR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_DECR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_DECRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_DECRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_DECRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_DECRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_DECRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_DECRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_DECRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_DECRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_DECR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Скидки"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_DECR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_DECRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_DECREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_DECROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_DECROpen"/></ControlData><ControlData Name="mnuPEKTRF_DECRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRRef"/></ControlData><ControlData Name="mnuPEKTRF_DECRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRS1"/></ControlData><ControlData Name="mnuPEKTRF_DECRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_DECRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCOPY"/></ControlData><ControlData Name="mnuPEKTRF_DECRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCUT"/></ControlData><ControlData Name="mnuPEKTRF_DECRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRPASTE"/></ControlData><ControlData Name="mnuPEKTRF_DECRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_DECRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_DECRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRPrn"/></ControlData><ControlData Name="mnuPEKTRF_DECRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRCfg"/></ControlData><ControlData Name="mnuPEKTRF_DECRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRFind"/></ControlData><ControlData Name="mnuPEKTRF_DECRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_DECRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_DECR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_DECR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_DECR as object
private menuActionPEKTRF_DECR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_DECRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_DECR,&quot;gridPEKTRF_DECR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_DECRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_DECR,&quot;Скидки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_DECRRef_Click()
  on error resume next
  item.PEKTRF_DECR.Refresh
  gridPEKTRF_DECR.itemCount = item.PEKTRF_DECR.count
  gridPEKTRF_DECR.Refetch
  gridPEKTRF_DECR.Refresh
End Sub
Private Sub cmdPEKTRF_DECRAcc_Click()
On Error Resume Next
If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_DECR.Row &gt; 0 Then
 If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_DECREdit_Click()
  on error resume next
If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
If gridPEKTRF_DECR.Row &gt; 0 then
 If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_DECR_.Item = u
    again: frmPEKTRF_DECR_.NotFirstTime = False
    frmPEKTRF_DECR_.OnInit
    frmPEKTRF_DECR_.Show vbModal
    If frmPEKTRF_DECR_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_DECR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_DECRDel_Click()
  on error resume next
  gridPEKTRF_DECR.Delete
End Sub
Private Sub cmdPEKTRF_DECRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_DECR.Add()

      Set frmPEKTRF_DECR_.Item = u
      again: frmPEKTRF_DECR_.NotFirstTime = False
      frmPEKTRF_DECR_.OnInit
      frmPEKTRF_DECR_.Show vbModal
      If frmPEKTRF_DECR_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_DECR.ItemCount = Item.PEKTRF_DECR.Count
        gridPEKTRF_DECR.Refresh
        gridPEKTRF_DECR.RefreshGroups
        gridPEKTRF_DECR.Refreshsort
        gridPEKTRF_DECR.MoveToBookmark u.ID &amp; &quot;PEKTRF_DECR&quot;
      Else
        Item.PEKTRF_DECR.Delete u.ID
        Item.PEKTRF_DECR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_DECRFnd_Click()
  on error resume next
  fndPEKTRF_DECR.ShowForm
End Sub
Private Sub cmdPEKTRF_DECRRun_Click()
  on error resume next
  gridPEKTRF_DECR_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_DECR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_DECR.LoadRow gridPEKTRF_DECR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_DECR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_DECR&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_DECR_DblClick()
  cmdPEKTRF_DECREdit_Click
End Sub
Private Sub gridPEKTRF_DECR_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_DECR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_DECR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_DECR.Row And LastRow &gt; 0 Then
  gridPEKTRF_DECR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_DECR.GetRowData(gridPEKTRF_DECR.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_DECRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_DECR.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_DECR.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_DECR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_DECRCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_DECR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_DECR
End If
end sub
private sub mnuPEKTRF_DECRAdd_click()
   menuActionPEKTRF_DECR =&quot;ADD&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECREdit_click()
   menuActionPEKTRF_DECR =&quot;EDIT&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRDelete_click()
   menuActionPEKTRF_DECR =&quot;DEL&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECROpen_click()
   menuActionPEKTRF_DECR =&quot;RUN&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRRef_click()
   menuActionPEKTRF_DECR =&quot;REF&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
  Private Sub mnuPEKTRF_DECRCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_DECR.Row &gt; 0 Then
     If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_DECRCUT_Click()
    On Error Resume Next
    If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_DECR.Row &gt; 0 Then
     If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_DECR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_DECRCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_DECR.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_DECR.Row &gt; 0 Then
   If gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_DECR.RowBookmark(gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_DECR.ItemCount = u.parent.Count
      gridPEKTRF_DECR.RefreshRowIndex gridPEKTRF_DECR.RowIndex(gridPEKTRF_DECR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_DECRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_DECRPrn_click()
   menuActionPEKTRF_DECR =&quot;PRN&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRCfg_click()
   menuActionPEKTRF_DECR =&quot;CFG&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRFind_click()
   menuActionPEKTRF_DECR =&quot;FND&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub mnuPEKTRF_DECRAcc_click()
   menuActionPEKTRF_DECR =&quot;ACC&quot;
   menuTimerPEKTRF_DECR.enabled = true
end sub
private sub menuTimerPEKTRF_DECR_timer()
   menuTimerPEKTRF_DECR.enabled = false
   if menuActionPEKTRF_DECR =&quot;ADD&quot; then cmdPEKTRF_DECRADD_CLick
   if menuActionPEKTRF_DECR =&quot;EDIT&quot; then cmdPEKTRF_DECREDIT_CLick
   if menuActionPEKTRF_DECR =&quot;DEL&quot; then cmdPEKTRF_DECRDEL_CLick
   if menuActionPEKTRF_DECR =&quot;RUN&quot; then cmdPEKTRF_DECRRUN_CLick
   if menuActionPEKTRF_DECR =&quot;REF&quot; then cmdPEKTRF_DECRREF_CLick
   if menuActionPEKTRF_DECR =&quot;PRN&quot; then cmdPEKTRF_DECRPRN_CLick
   if menuActionPEKTRF_DECR =&quot;CFG&quot; then cmdPEKTRF_DECRCFG_CLick
   if menuActionPEKTRF_DECR =&quot;FND&quot; then cmdPEKTRF_DECRFND_CLick
   if menuActionPEKTRF_DECR =&quot;ACC&quot; then cmdPEKTRF_DECRACC_CLick
   menuActionPEKTRF_DECR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_DECRAdd,cmdPEKTRF_DECRAdd.tag
  LoadBtnPictures cmdPEKTRF_DECREdit,cmdPEKTRF_DECREdit.tag
  LoadBtnPictures cmdPEKTRF_DECRDel,cmdPEKTRF_DECRDel.tag
  LoadBtnPictures cmdPEKTRF_DECRRef,cmdPEKTRF_DECRRef.tag
  LoadBtnPictures cmdPEKTRF_DECRPrn,cmdPEKTRF_DECRPrn.tag
  LoadBtnPictures cmdPEKTRF_DECRFnd,cmdPEKTRF_DECRFnd.tag
  LoadBtnPictures cmdPEKTRF_DECRRun,cmdPEKTRF_DECRRun.tag
  LoadBtnPictures cmdPEKTRF_DECRAcc,cmdPEKTRF_DECRAcc.tag
  LoadBtnPictures cmdPEKTRF_DECRCfg,cmdPEKTRF_DECRCfg.tag
  item.PEKTRF_DECR.PrepareGrid gridPEKTRF_DECR
  LoadGridLayout gridPEKTRF_DECR
  Set fndPEKTRF_DECR = Nothing
  On Error Resume Next
  Set fndPEKTRF_DECR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_DECR.Init gridPEKTRF_DECR
end sub
private sub OnTabClick()

      gridPEKTRF_DECR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_DECR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_DECR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_DECR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_DECR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_REGALL_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_REGALL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_REGALL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_REGALL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_REGALLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_REGALLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_REGALLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_REGALLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_REGALLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_REGALLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_REGALLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_REGALLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Регресс по общему весу"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_REGALL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_REGALLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_REGALLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLOpen"/></ControlData><ControlData Name="mnuPEKTRF_REGALLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLRef"/></ControlData><ControlData Name="mnuPEKTRF_REGALLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLS1"/></ControlData><ControlData Name="mnuPEKTRF_REGALLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_REGALLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCOPY"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCUT"/></ControlData><ControlData Name="mnuPEKTRF_REGALLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLPASTE"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_REGALLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLPrn"/></ControlData><ControlData Name="mnuPEKTRF_REGALLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLCfg"/></ControlData><ControlData Name="mnuPEKTRF_REGALLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLFind"/></ControlData><ControlData Name="mnuPEKTRF_REGALLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_REGALLAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_REGALL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_REGALL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_REGALL as object
private menuActionPEKTRF_REGALL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_REGALLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_REGALL,&quot;gridPEKTRF_REGALL&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGALLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_REGALL,&quot;Регресс по общему весу&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_REGALLRef_Click()
  on error resume next
  item.PEKTRF_REGALL.Refresh
  gridPEKTRF_REGALL.itemCount = item.PEKTRF_REGALL.count
  gridPEKTRF_REGALL.Refetch
  gridPEKTRF_REGALL.Refresh
End Sub
Private Sub cmdPEKTRF_REGALLAcc_Click()
On Error Resume Next
If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGALL.Row &gt; 0 Then
 If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGALLEdit_Click()
  on error resume next
If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
If gridPEKTRF_REGALL.Row &gt; 0 then
 If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_REGALL_.Item = u
    again: frmPEKTRF_REGALL_.NotFirstTime = False
    frmPEKTRF_REGALL_.OnInit
    frmPEKTRF_REGALL_.Show vbModal
    If frmPEKTRF_REGALL_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_REGALL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_REGALLDel_Click()
  on error resume next
  gridPEKTRF_REGALL.Delete
End Sub
Private Sub cmdPEKTRF_REGALLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_REGALL.Add()

      Set frmPEKTRF_REGALL_.Item = u
      again: frmPEKTRF_REGALL_.NotFirstTime = False
      frmPEKTRF_REGALL_.OnInit
      frmPEKTRF_REGALL_.Show vbModal
      If frmPEKTRF_REGALL_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_REGALL.ItemCount = Item.PEKTRF_REGALL.Count
        gridPEKTRF_REGALL.Refresh
        gridPEKTRF_REGALL.RefreshGroups
        gridPEKTRF_REGALL.Refreshsort
        gridPEKTRF_REGALL.MoveToBookmark u.ID &amp; &quot;PEKTRF_REGALL&quot;
      Else
        Item.PEKTRF_REGALL.Delete u.ID
        Item.PEKTRF_REGALL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_REGALLFnd_Click()
  on error resume next
  fndPEKTRF_REGALL.ShowForm
End Sub
Private Sub cmdPEKTRF_REGALLRun_Click()
  on error resume next
  gridPEKTRF_REGALL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_REGALL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_REGALL.LoadRow gridPEKTRF_REGALL, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_REGALL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_REGALL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_REGALL_DblClick()
  cmdPEKTRF_REGALLEdit_Click
End Sub
Private Sub gridPEKTRF_REGALL_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_REGALL.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_REGALL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_REGALL.Row And LastRow &gt; 0 Then
  gridPEKTRF_REGALL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_REGALL.GetRowData(gridPEKTRF_REGALL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_REGALLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_REGALL.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_REGALL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_REGALL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_REGALLCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_REGALL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_REGALL
End If
end sub
private sub mnuPEKTRF_REGALLAdd_click()
   menuActionPEKTRF_REGALL =&quot;ADD&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLEdit_click()
   menuActionPEKTRF_REGALL =&quot;EDIT&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLDelete_click()
   menuActionPEKTRF_REGALL =&quot;DEL&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLOpen_click()
   menuActionPEKTRF_REGALL =&quot;RUN&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLRef_click()
   menuActionPEKTRF_REGALL =&quot;REF&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
  Private Sub mnuPEKTRF_REGALLCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGALL.Row &gt; 0 Then
     If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_REGALLCUT_Click()
    On Error Resume Next
    If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_REGALL.Row &gt; 0 Then
     If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_REGALL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_REGALLCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_REGALL.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_REGALL.Row &gt; 0 Then
   If gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_REGALL.RowBookmark(gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_REGALL.ItemCount = u.parent.Count
      gridPEKTRF_REGALL.RefreshRowIndex gridPEKTRF_REGALL.RowIndex(gridPEKTRF_REGALL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_REGALLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_REGALLPrn_click()
   menuActionPEKTRF_REGALL =&quot;PRN&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLCfg_click()
   menuActionPEKTRF_REGALL =&quot;CFG&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLFind_click()
   menuActionPEKTRF_REGALL =&quot;FND&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub mnuPEKTRF_REGALLAcc_click()
   menuActionPEKTRF_REGALL =&quot;ACC&quot;
   menuTimerPEKTRF_REGALL.enabled = true
end sub
private sub menuTimerPEKTRF_REGALL_timer()
   menuTimerPEKTRF_REGALL.enabled = false
   if menuActionPEKTRF_REGALL =&quot;ADD&quot; then cmdPEKTRF_REGALLADD_CLick
   if menuActionPEKTRF_REGALL =&quot;EDIT&quot; then cmdPEKTRF_REGALLEDIT_CLick
   if menuActionPEKTRF_REGALL =&quot;DEL&quot; then cmdPEKTRF_REGALLDEL_CLick
   if menuActionPEKTRF_REGALL =&quot;RUN&quot; then cmdPEKTRF_REGALLRUN_CLick
   if menuActionPEKTRF_REGALL =&quot;REF&quot; then cmdPEKTRF_REGALLREF_CLick
   if menuActionPEKTRF_REGALL =&quot;PRN&quot; then cmdPEKTRF_REGALLPRN_CLick
   if menuActionPEKTRF_REGALL =&quot;CFG&quot; then cmdPEKTRF_REGALLCFG_CLick
   if menuActionPEKTRF_REGALL =&quot;FND&quot; then cmdPEKTRF_REGALLFND_CLick
   if menuActionPEKTRF_REGALL =&quot;ACC&quot; then cmdPEKTRF_REGALLACC_CLick
   menuActionPEKTRF_REGALL =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_REGALLAdd,cmdPEKTRF_REGALLAdd.tag
  LoadBtnPictures cmdPEKTRF_REGALLEdit,cmdPEKTRF_REGALLEdit.tag
  LoadBtnPictures cmdPEKTRF_REGALLDel,cmdPEKTRF_REGALLDel.tag
  LoadBtnPictures cmdPEKTRF_REGALLRef,cmdPEKTRF_REGALLRef.tag
  LoadBtnPictures cmdPEKTRF_REGALLPrn,cmdPEKTRF_REGALLPrn.tag
  LoadBtnPictures cmdPEKTRF_REGALLFnd,cmdPEKTRF_REGALLFnd.tag
  LoadBtnPictures cmdPEKTRF_REGALLRun,cmdPEKTRF_REGALLRun.tag
  LoadBtnPictures cmdPEKTRF_REGALLAcc,cmdPEKTRF_REGALLAcc.tag
  LoadBtnPictures cmdPEKTRF_REGALLCfg,cmdPEKTRF_REGALLCfg.tag
  item.PEKTRF_REGALL.PrepareGrid gridPEKTRF_REGALL
  LoadGridLayout gridPEKTRF_REGALL
  Set fndPEKTRF_REGALL = Nothing
  On Error Resume Next
  Set fndPEKTRF_REGALL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_REGALL.Init gridPEKTRF_REGALL
end sub
private sub OnTabClick()

      gridPEKTRF_REGALL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_REGALL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_REGALL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_REGALL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_REGALL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKTRF_AUTO_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKTRF_AUTO"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKTRF_AUTO" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKTRF_AUTO"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKTRF_AUTOAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTOEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTODel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTODel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKTRF_AUTORef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTORef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKTRF_AUTOPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKTRF_AUTOCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKTRF_AUTOFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKTRF_AUTORun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTORun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKTRF_AUTOAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKTRF_AUTOAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Автодоставка"/><Properties Name="Name" PropValue="mnuPopupPEKTRF_AUTO"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKTRF_AUTOAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTOEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTODelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTODelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKTRF_AUTOOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOOpen"/></ControlData><ControlData Name="mnuPEKTRF_AUTORef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTORef"/></ControlData><ControlData Name="mnuPEKTRF_AUTOS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOS1"/></ControlData><ControlData Name="mnuPEKTRF_AUTOBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKTRF_AUTOCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCOPY"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCUT"/></ControlData><ControlData Name="mnuPEKTRF_AUTOPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOPASTE"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCHANGE"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKTRF_AUTOPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOPrn"/></ControlData><ControlData Name="mnuPEKTRF_AUTOCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOCfg"/></ControlData><ControlData Name="mnuPEKTRF_AUTOFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOFind"/></ControlData><ControlData Name="mnuPEKTRF_AUTOAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKTRF_AUTOAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKTRF_AUTO" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKTRF_AUTO"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKTRF_AUTO as object
private menuActionPEKTRF_AUTO as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKTRF_AUTOCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKTRF_AUTO,&quot;gridPEKTRF_AUTO&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_AUTOPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKTRF_AUTO,&quot;Автодоставка&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKTRF_AUTORef_Click()
  on error resume next
  item.PEKTRF_AUTO.Refresh
  gridPEKTRF_AUTO.itemCount = item.PEKTRF_AUTO.count
  gridPEKTRF_AUTO.Refetch
  gridPEKTRF_AUTO.Refresh
End Sub
Private Sub cmdPEKTRF_AUTOAcc_Click()
On Error Resume Next
If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKTRF_AUTO.Row &gt; 0 Then
 If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKTRF_AUTOEdit_Click()
  on error resume next
If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKTRF_AUTO.Row &gt; 0 then
 If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKTRF_AUTO_.Item = u
    again: frmPEKTRF_AUTO_.NotFirstTime = False
    frmPEKTRF_AUTO_.OnInit
    frmPEKTRF_AUTO_.Show vbModal
    If frmPEKTRF_AUTO_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKTRF_AUTO.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKTRF_AUTODel_Click()
  on error resume next
  gridPEKTRF_AUTO.Delete
End Sub
Private Sub cmdPEKTRF_AUTOAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKTRF_AUTO.Add()

      Set frmPEKTRF_AUTO_.Item = u
      again: frmPEKTRF_AUTO_.NotFirstTime = False
      frmPEKTRF_AUTO_.OnInit
      frmPEKTRF_AUTO_.Show vbModal
      If frmPEKTRF_AUTO_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKTRF_AUTO.ItemCount = Item.PEKTRF_AUTO.Count
        gridPEKTRF_AUTO.Refresh
        gridPEKTRF_AUTO.RefreshGroups
        gridPEKTRF_AUTO.Refreshsort
        gridPEKTRF_AUTO.MoveToBookmark u.ID &amp; &quot;PEKTRF_AUTO&quot;
      Else
        Item.PEKTRF_AUTO.Delete u.ID
        Item.PEKTRF_AUTO.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKTRF_AUTOFnd_Click()
  on error resume next
  fndPEKTRF_AUTO.ShowForm
End Sub
Private Sub cmdPEKTRF_AUTORun_Click()
  on error resume next
  gridPEKTRF_AUTO_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKTRF_AUTO_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKTRF_AUTO.LoadRow gridPEKTRF_AUTO, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKTRF_AUTO_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKTRF_AUTO&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKTRF_AUTO_DblClick()
  cmdPEKTRF_AUTOEdit_Click
End Sub
Private Sub gridPEKTRF_AUTO_KeyPress(KeyAscii As Integer)
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKTRF_AUTO.FindOnPress KeyAscii
End Sub

Private Sub gridPEKTRF_AUTO_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKTRF_AUTO.Row And LastRow &gt; 0 Then
  gridPEKTRF_AUTO.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKTRF_AUTO.GetRowData(gridPEKTRF_AUTO.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKTRF_AUTOPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKTRF_AUTO.Add()
    If GetFromBuffer(u) Then
      gridPEKTRF_AUTO.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKTRF_AUTO_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKTRF_AUTOCfg_Click
        End If
    End If
end sub

private sub gridPEKTRF_AUTO_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKTRF_AUTO
End If
end sub
private sub mnuPEKTRF_AUTOAdd_click()
   menuActionPEKTRF_AUTO =&quot;ADD&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOEdit_click()
   menuActionPEKTRF_AUTO =&quot;EDIT&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTODelete_click()
   menuActionPEKTRF_AUTO =&quot;DEL&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOOpen_click()
   menuActionPEKTRF_AUTO =&quot;RUN&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTORef_click()
   menuActionPEKTRF_AUTO =&quot;REF&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
  Private Sub mnuPEKTRF_AUTOCOPY_Click()
    On Error Resume Next
    If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_AUTO.Row &gt; 0 Then
     If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKTRF_AUTOCUT_Click()
    On Error Resume Next
    If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKTRF_AUTO.Row &gt; 0 Then
     If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKTRF_AUTO.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKTRF_AUTOCHANGE_Click()
  On Error Resume Next
  If gridPEKTRF_AUTO.ItemCount = 0 Then Exit Sub
  If gridPEKTRF_AUTO.Row &gt; 0 Then
   If gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKTRF_AUTO.RowBookmark(gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKTRF_AUTO.ItemCount = u.parent.Count
      gridPEKTRF_AUTO.RefreshRowIndex gridPEKTRF_AUTO.RowIndex(gridPEKTRF_AUTO.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKTRF_AUTOCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKTRF_AUTOPrn_click()
   menuActionPEKTRF_AUTO =&quot;PRN&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOCfg_click()
   menuActionPEKTRF_AUTO =&quot;CFG&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOFind_click()
   menuActionPEKTRF_AUTO =&quot;FND&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub mnuPEKTRF_AUTOAcc_click()
   menuActionPEKTRF_AUTO =&quot;ACC&quot;
   menuTimerPEKTRF_AUTO.enabled = true
end sub
private sub menuTimerPEKTRF_AUTO_timer()
   menuTimerPEKTRF_AUTO.enabled = false
   if menuActionPEKTRF_AUTO =&quot;ADD&quot; then cmdPEKTRF_AUTOADD_CLick
   if menuActionPEKTRF_AUTO =&quot;EDIT&quot; then cmdPEKTRF_AUTOEDIT_CLick
   if menuActionPEKTRF_AUTO =&quot;DEL&quot; then cmdPEKTRF_AUTODEL_CLick
   if menuActionPEKTRF_AUTO =&quot;RUN&quot; then cmdPEKTRF_AUTORUN_CLick
   if menuActionPEKTRF_AUTO =&quot;REF&quot; then cmdPEKTRF_AUTOREF_CLick
   if menuActionPEKTRF_AUTO =&quot;PRN&quot; then cmdPEKTRF_AUTOPRN_CLick
   if menuActionPEKTRF_AUTO =&quot;CFG&quot; then cmdPEKTRF_AUTOCFG_CLick
   if menuActionPEKTRF_AUTO =&quot;FND&quot; then cmdPEKTRF_AUTOFND_CLick
   if menuActionPEKTRF_AUTO =&quot;ACC&quot; then cmdPEKTRF_AUTOACC_CLick
   menuActionPEKTRF_AUTO =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKTRF_AUTOAdd,cmdPEKTRF_AUTOAdd.tag
  LoadBtnPictures cmdPEKTRF_AUTOEdit,cmdPEKTRF_AUTOEdit.tag
  LoadBtnPictures cmdPEKTRF_AUTODel,cmdPEKTRF_AUTODel.tag
  LoadBtnPictures cmdPEKTRF_AUTORef,cmdPEKTRF_AUTORef.tag
  LoadBtnPictures cmdPEKTRF_AUTOPrn,cmdPEKTRF_AUTOPrn.tag
  LoadBtnPictures cmdPEKTRF_AUTOFnd,cmdPEKTRF_AUTOFnd.tag
  LoadBtnPictures cmdPEKTRF_AUTORun,cmdPEKTRF_AUTORun.tag
  LoadBtnPictures cmdPEKTRF_AUTOAcc,cmdPEKTRF_AUTOAcc.tag
  LoadBtnPictures cmdPEKTRF_AUTOCfg,cmdPEKTRF_AUTOCfg.tag
  item.PEKTRF_AUTO.PrepareGrid gridPEKTRF_AUTO
  LoadGridLayout gridPEKTRF_AUTO
  Set fndPEKTRF_AUTO = Nothing
  On Error Resume Next
  Set fndPEKTRF_AUTO = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKTRF_AUTO.Init gridPEKTRF_AUTO
end sub
private sub OnTabClick()

      gridPEKTRF_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKTRF_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKTRF_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKTRF_AUTO.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKTRF_AUTO = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_DEF" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_DEF_"><Properties Name="Name" PropValue="pnlPEKTRF_DEF"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_SRV" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_SRV_"><Properties Name="Name" PropValue="pnlPEKTRF_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_TR" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_TR_"><Properties Name="Name" PropValue="pnlPEKTRF_TR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_ADDS" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_ADDS_"><Properties Name="Name" PropValue="pnlPEKTRF_ADDS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_DECR" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_DECR_"><Properties Name="Name" PropValue="pnlPEKTRF_DECR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_REGALL" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_REGALL_"><Properties Name="Name" PropValue="pnlPEKTRF_REGALL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKTRF_AUTO" ControlIndex="0" PROGID="PEK2TRFGUI.vpnPEKTRF_AUTO_"><Properties Name="Name" PropValue="pnlPEKTRF_AUTO"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Тарифы"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlPEKTRF_DEF.IsOK
if IsItOk then IsItOk = pnlPEKTRF_SRV.IsOK
if IsItOk then IsItOk = pnlPEKTRF_TR.IsOK
if IsItOk then IsItOk = pnlPEKTRF_ADDS.IsOK
if IsItOk then IsItOk = pnlPEKTRF_DECR.IsOK
if IsItOk then IsItOk = pnlPEKTRF_REGALL.IsOK
if IsItOk then IsItOk = pnlPEKTRF_AUTO.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlPEKTRF_AUTO.Visible = False
  pnlPEKTRF_REGALL.Visible = False
  pnlPEKTRF_DECR.Visible = False
  pnlPEKTRF_ADDS.Visible = False
  pnlPEKTRF_TR.Visible = False
  pnlPEKTRF_SRV.Visible = False
  pnlPEKTRF_DEF.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;PEKTRF_DEF&quot;
     With pnlPEKTRF_DEF
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_DEF.OnClick item,parentform
     End With
   Case &quot;PEKTRF_SRV&quot;
     With pnlPEKTRF_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_SRV.OnClick item,parentform
     End With
   Case &quot;PEKTRF_TR&quot;
     With pnlPEKTRF_TR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_TR.OnClick item,parentform
     End With
   Case &quot;PEKTRF_ADDS&quot;
     With pnlPEKTRF_ADDS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_ADDS.OnClick item,parentform
     End With
   Case &quot;PEKTRF_DECR&quot;
     With pnlPEKTRF_DECR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_DECR.OnClick item,parentform
     End With
   Case &quot;PEKTRF_REGALL&quot;
     With pnlPEKTRF_REGALL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_REGALL.OnClick item,parentform
     End With
   Case &quot;PEKTRF_AUTO&quot;
     With pnlPEKTRF_AUTO
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKTRF_AUTO.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Общее описание&quot;
ts.Tabs.Item(1).key = &quot;PEKTRF_DEF&quot;
pnlPEKTRF_DEF.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_SRV&quot;, &quot;Тарифы на услуги&quot;)
pnlPEKTRF_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_TR&quot;, &quot;Транспортировка&quot;)
pnlPEKTRF_TR.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_ADDS&quot;, &quot;Надбавки&quot;)
pnlPEKTRF_ADDS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_DECR&quot;, &quot;Скидки&quot;)
pnlPEKTRF_DECR.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_REGALL&quot;, &quot;Регресс по общему весу&quot;)
pnlPEKTRF_REGALL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKTRF_AUTO&quot;, &quot;Автодоставка&quot;)
pnlPEKTRF_AUTO.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;PEK2TRF&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlPEKTRF_DEF.CloseClass
 pnlPEKTRF_SRV.CloseClass
 pnlPEKTRF_TR.CloseClass
 pnlPEKTRF_ADDS.CloseClass
 pnlPEKTRF_DECR.CloseClass
 pnlPEKTRF_REGALL.CloseClass
 pnlPEKTRF_AUTO.CloseClass
End Sub
public sub OnSave()
 pnlPEKTRF_DEF.OnSave
 pnlPEKTRF_SRV.OnSave
 pnlPEKTRF_TR.OnSave
 pnlPEKTRF_ADDS.OnSave
 pnlPEKTRF_DECR.OnSave
 pnlPEKTRF_REGALL.OnSave
 pnlPEKTRF_AUTO.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlPEKTRF_DEF.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_TR.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_ADDS.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_DECR.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_REGALL.IsChanged
m_IsChanged = m_IsChanged or pnlPEKTRF_AUTO.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 4
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
    i = i + 1
    m(i).Caption = &quot;Отменен&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot;
    i = i + 1
    m(i).Caption = &quot;Введен в действие&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{53809047-E34B-4BC8-8497-710E4A51535E}&quot;
    i = i + 1
    m(i).Caption = &quot;Утвержден&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot;
    i = i + 1
    m(i).Caption = &quot;Оформляется&quot;
    m(i).Visible = True
    m(i).Enabled = True
    m(i).Checked = false
    m(i).Tag = &quot;{A82A2432-3604-46A4-ABA9-E65AB3670363}&quot;
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
      If Item.Statusid = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{53809047-E34B-4BC8-8497-710E4A51535E}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
      If Item.Statusid = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot; Then
        For i = 1 To StatusMenuCount
        Next
      End If
      If Item.Statusid = &quot;{A82A2432-3604-46A4-ABA9-E65AB3670363}&quot; Then
        For i = 1 To StatusMenuCount
          If m(i).Tag = &quot;{0DB75CA2-422E-4D9E-B384-348537B6E402}&quot; Then
            m(i).Enabled = True
          End If
          If m(i).Tag = &quot;{0006EF82-3613-4C46-82BD-9878AAF6C9FF}&quot; Then
            m(i).Enabled = True
          End If
        Next
      End If
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="PEK2TRFGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Тарифы"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2TRF&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;main&quot; then

if Name=&quot;PEKTRF_DEF&quot; then 
 set FormByName = new frmPEKTRF_DEF_main
 exit function
end if

if Name=&quot;PEKTRF_SRV&quot; then 
 set FormByName = new frmPEKTRF_SRV_main
 exit function
end if

if Name=&quot;PEKTRF_TR&quot; then 
 set FormByName = new frmPEKTRF_TR_main
 exit function
end if

if Name=&quot;PEKTRF_REGRTR&quot; then 
 set FormByName = new frmPEKTRF_REGRTR_main
 exit function
end if

if Name=&quot;PEKTRF_ADDS&quot; then 
 set FormByName = new frmPEKTRF_ADDS_main
 exit function
end if

if Name=&quot;PEKTRF_DECR&quot; then 
 set FormByName = new frmPEKTRF_DECR_main
 exit function
end if

if Name=&quot;PEKTRF_REGALL&quot; then 
 set FormByName = new frmPEKTRF_REGALL_main
 exit function
end if

if Name=&quot;PEKTRF_AUTO&quot; then 
 set FormByName = new frmPEKTRF_AUTO_main
 exit function
end if

end if
if Mode=&quot;read&quot; then

if Name=&quot;PEKTRF_DEF&quot; then 
 set FormByName = new frmPEKTRF_DEF_read
 exit function
end if

if Name=&quot;PEKTRF_SRV&quot; then 
 set FormByName = new frmPEKTRF_SRV_read
 exit function
end if

if Name=&quot;PEKTRF_TR&quot; then 
 set FormByName = new frmPEKTRF_TR_read
 exit function
end if

if Name=&quot;PEKTRF_REGRTR&quot; then 
 set FormByName = new frmPEKTRF_REGRTR_read
 exit function
end if

if Name=&quot;PEKTRF_ADDS&quot; then 
 set FormByName = new frmPEKTRF_ADDS_read
 exit function
end if

if Name=&quot;PEKTRF_DECR&quot; then 
 set FormByName = new frmPEKTRF_DECR_read
 exit function
end if

if Name=&quot;PEKTRF_REGALL&quot; then 
 set FormByName = new frmPEKTRF_REGALL_read
 exit function
end if

if Name=&quot;PEKTRF_AUTO&quot; then 
 set FormByName = new frmPEKTRF_AUTO_read
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;PEKTRF_DEF&quot; then 
 set FormByName = new frmPEKTRF_DEF_
 exit function
end if

if Name=&quot;PEKTRF_SRV&quot; then 
 set FormByName = new frmPEKTRF_SRV_
 exit function
end if

if Name=&quot;PEKTRF_TR&quot; then 
 set FormByName = new frmPEKTRF_TR_
 exit function
end if

if Name=&quot;PEKTRF_REGRTR&quot; then 
 set FormByName = new frmPEKTRF_REGRTR_
 exit function
end if

if Name=&quot;PEKTRF_ADDS&quot; then 
 set FormByName = new frmPEKTRF_ADDS_
 exit function
end if

if Name=&quot;PEKTRF_DECR&quot; then 
 set FormByName = new frmPEKTRF_DECR_
 exit function
end if

if Name=&quot;PEKTRF_REGALL&quot; then 
 set FormByName = new frmPEKTRF_REGALL_
 exit function
end if

if Name=&quot;PEKTRF_AUTO&quot; then 
 set FormByName = new frmPEKTRF_AUTO_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
