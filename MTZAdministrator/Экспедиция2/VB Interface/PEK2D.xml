<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Справочники: Экспедиция"/><AttributeHolder Name="Name" Value="PEK2DGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Справочники: Экспедиция&quot;
End Sub

Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub
public property get IsModal() as boolean
 IsModal = mOpenModal
end property
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Справочники: Экспедиция)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2D:admi&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2D:main&quot;) ) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
   exit sub
  else
   mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2D:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочники: Экспедиция&quot; 
  end if
end if
if OpenModal then
if mode=&quot;admi&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2D:admi&quot;)) then
     set f = new frmadmi_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
if mode=&quot;main&quot; then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2D:main&quot;)) then
     set f = new frmmain_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
     f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
     exit sub
  else
     mode =&quot;&quot; 
  end if
end if
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;PEK2D:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Справочники: Экспедиция&quot; 
  end if
end if
end sub
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;PEKD_ADDS&quot; Then
    Set f = New frmPEKD_ADDS_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRAINTYPE&quot; Then
    Set f = New frmPEKD_TRAINTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_AUTO&quot; Then
    Set f = New frmPEKD_AUTO_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_GOTYPE&quot; Then
    Set f = New frmPEKD_GOTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_INFOSENDTYPE&quot; Then
    Set f = New frmPEKD_INFOSENDTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRTYPE&quot; Then
    Set f = New frmPEKD_TRTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_GRPDPUSL&quot; Then
    Set f = New frmPEKD_GRPDpUSL_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_1CTR&quot; Then
    Set f = New frmPEKD_1CTR_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_POSTTYPE&quot; Then
    Set f = New frmPEKD_POSTTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRFGRP&quot; Then
    Set f = New frmPEKD_TRFGRP_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;PEKD_TRFTYPE&quot; Then
    Set f = New frmPEKD_TRFTYPE_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_DEPT&quot; Then
    Set f = New frmPEKD_DEPT_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;PEKD_DEPLIMITS&quot; Then
    Set f = New frmPEKD_DEPLIMITS_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_DEPDOG&quot; Then
    Set f = New frmPEKD_DEPDOG_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_DIRECTION&quot; Then
    Set f = New frmPEKD_DIRECTION_admi
  End If

 If Mode = &quot;admi&quot; Then
  If UCase(PartName) = &quot;PEKD_TRAINS&quot; Then
    Set f = New frmPEKD_TRAINS_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_DIRSTATION&quot; Then
    Set f = New frmPEKD_DIRSTATION_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_SRV&quot; Then
    Set f = New frmPEKD_SRV_admi
  End If

 If Mode = &quot;admi&quot; Then
 End If
 End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;PEKD_ADDS&quot; Then
    Set f = New frmPEKD_ADDS_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRAINTYPE&quot; Then
    Set f = New frmPEKD_TRAINTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_AUTO&quot; Then
    Set f = New frmPEKD_AUTO_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_GOTYPE&quot; Then
    Set f = New frmPEKD_GOTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_INFOSENDTYPE&quot; Then
    Set f = New frmPEKD_INFOSENDTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRTYPE&quot; Then
    Set f = New frmPEKD_TRTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_GRPDPUSL&quot; Then
    Set f = New frmPEKD_GRPDpUSL_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_1CTR&quot; Then
    Set f = New frmPEKD_1CTR_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_POSTTYPE&quot; Then
    Set f = New frmPEKD_POSTTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRFGRP&quot; Then
    Set f = New frmPEKD_TRFGRP_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;PEKD_TRFTYPE&quot; Then
    Set f = New frmPEKD_TRFTYPE_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_DEPT&quot; Then
    Set f = New frmPEKD_DEPT_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;PEKD_DEPLIMITS&quot; Then
    Set f = New frmPEKD_DEPLIMITS_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_DEPDOG&quot; Then
    Set f = New frmPEKD_DEPDOG_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_DIRECTION&quot; Then
    Set f = New frmPEKD_DIRECTION_main
  End If

 If Mode = &quot;main&quot; Then
  If UCase(PartName) = &quot;PEKD_TRAINS&quot; Then
    Set f = New frmPEKD_TRAINS_main
  End If

 If Mode = &quot;main&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_DIRSTATION&quot; Then
    Set f = New frmPEKD_DIRSTATION_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_SRV&quot; Then
    Set f = New frmPEKD_SRV_main
  End If

 If Mode = &quot;main&quot; Then
 End If
 End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;PEKD_ADDS&quot; Then
    Set f = New frmPEKD_ADDS_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRAINTYPE&quot; Then
    Set f = New frmPEKD_TRAINTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_AUTO&quot; Then
    Set f = New frmPEKD_AUTO_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_GOTYPE&quot; Then
    Set f = New frmPEKD_GOTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_INFOSENDTYPE&quot; Then
    Set f = New frmPEKD_INFOSENDTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRTYPE&quot; Then
    Set f = New frmPEKD_TRTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_GRPDPUSL&quot; Then
    Set f = New frmPEKD_GRPDpUSL_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_1CTR&quot; Then
    Set f = New frmPEKD_1CTR_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_POSTTYPE&quot; Then
    Set f = New frmPEKD_POSTTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_TRFGRP&quot; Then
    Set f = New frmPEKD_TRFGRP_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;PEKD_TRFTYPE&quot; Then
    Set f = New frmPEKD_TRFTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_DEPT&quot; Then
    Set f = New frmPEKD_DEPT_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;PEKD_DEPLIMITS&quot; Then
    Set f = New frmPEKD_DEPLIMITS_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_DEPDOG&quot; Then
    Set f = New frmPEKD_DEPDOG_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_DIRECTION&quot; Then
    Set f = New frmPEKD_DIRECTION_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;PEKD_TRAINS&quot; Then
    Set f = New frmPEKD_TRAINS_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;PEKD_DIRSTATION&quot; Then
    Set f = New frmPEKD_DIRSTATION_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;PEKD_SRV&quot; Then
    Set f = New frmPEKD_SRV_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_ADDS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcType"/><Properties Name="Caption" PropValue="Тип расчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип расчета"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbCalcType_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbCalcType.Clear
cmbCalcType.additem &quot;Объем&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 1
cmbCalcType.additem &quot;Плотность&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 2
cmbCalcType.additem &quot;Прочее&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 3
cmbCalcType.additem &quot;Вес&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 0
 For iii = 0 To cmbCalcType.ListCount-1
  If Item.CalcType = cmbCalcType.ItemData(iii) Then
   cmbCalcType.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbCalcType.listindex&gt;=0 then
   item.CalcType = cmbCalcType.itemdata(cmbCalcType.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRAINTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_AUTO" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheVolume"/><Properties Name="Caption" PropValue="Грузоподъемность:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtTheVolume"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Грузоподъемность"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDimentions"/><Properties Name="Caption" PropValue="Габариты:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDimentions"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="80"/><Properties Name="ToolTipText" PropValue="Габариты"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcWithNDS"/><Properties Name="Caption" PropValue="Расчет с НДС:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcWithNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Расчет с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheVolume_Validate(cancel as boolean)
if txtTheVolume.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheVolume.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheVolume.SetFocus 
  elseif Val(txtTheVolume.text) &lt; -922337203685477.5808 or Val(txtTheVolume.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheVolume.SetFocus 
  end if
end if
end sub
Private Sub txtTheVolume_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheVolume_Change()
  Changing

end sub
private sub txtTheDimentions_Change()
  Changing

end sub
private sub cmbCalcWithNDS_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheVolume = item.TheVolume
  on error resume next
txtTheDimentions = item.TheDimentions
cmbCalcWithNDS.Clear
cmbCalcWithNDS.additem &quot;Да&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= -1
cmbCalcWithNDS.additem &quot;Нет&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= 0
 For iii = 0 To cmbCalcWithNDS.ListCount-1
  If Item.CalcWithNDS = cmbCalcWithNDS.ItemData(iii) Then
   cmbCalcWithNDS.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheVolume = cdbl(txtTheVolume)
item.TheDimentions = txtTheDimentions
 if cmbCalcWithNDS.listindex&gt;=0 then
   item.CalcWithNDS = cmbCalcWithNDS.itemdata(cmbCalcWithNDS.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_GOTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_INFOSENDTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_GRPDpUSL" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_1CTR" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTR1CCode"/><Properties Name="Caption" PropValue="Код строки таранспортных услуг:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTR1CCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код строки таранспортных услуг"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheDept.Tag = Left(id, 38)
          txtTheDept = brief
        End If
end sub
private sub cmdTheDept_MenuClick(ByVal sCaption As String)
          txtTheDept.Tag = &quot;&quot;
          txtTheDept = &quot;&quot;
End sub
private sub txtTR1CCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheDept.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtTR1CCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheDept Is Nothing Then
  txtTheDept.Tag = item.TheDept.id
  txtTheDept = item.TheDept.brief
else
  txtTheDept.Tag = &quot;&quot; 
  txtTheDept = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDept,cmdTheDept.tag
  cmdTheDept.RemoveAllMenu
  cmdTheDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtTR1CCode = item.TR1CCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTheDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheDept.Tag)
Else
  Set item.TheDept = Nothing
End If
item.TR1CCode = txtTR1CCode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_POSTTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRFGRP" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Группа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Группа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRFTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPT" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddress"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddress"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Основной поставщик:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Основной поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2715"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Основной поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocPrefix"/><Properties Name="Caption" PropValue="Префикс номеров документов:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocPrefix"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="3"/><Properties Name="ToolTipText" PropValue="Префикс номеров документов"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPGDPName"/><Properties Name="Caption" PropValue="Название ПЖДП:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPGDPName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название ПЖДП"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtAddress_Change()
  Changing

end sub
private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtDocPrefix_Change()
  Changing

end sub
private sub txtPGDPName_Change()
  Changing

end sub
private sub txttown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdtown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txttown.Tag = Left(id, 38)
          txttown = brief
        End If
end sub
private sub cmdtown_MenuClick(ByVal sCaption As String)
          txttown.Tag = &quot;&quot;
          txttown = &quot;&quot;
End sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
txtAddress = item.Address
If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
  on error resume next
txtDocPrefix = item.DocPrefix
  on error resume next
txtPGDPName = item.PGDPName
If Not item.town Is Nothing Then
  txttown.Tag = item.town.id
  txttown = item.town.brief
else
  txttown.Tag = &quot;&quot; 
  txttown = &quot;&quot; 
End If
 LoadBtnPictures cmdtown,cmdtown.tag
  cmdtown.RemoveAllMenu
  cmdtown.AddMenu &quot;Очистить&quot; 
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.Address = txtAddress
If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
item.DocPrefix = txtDocPrefix
item.PGDPName = txtPGDPName
If txttown.Tag &lt;&gt; &quot;&quot; Then
  Set item.town = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txttown.Tag)
Else
  Set item.town = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPLIMITS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLimitMark"/><Properties Name="Caption" PropValue="Необходимый остаток:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtLimitMark"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Необходимый остаток"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDaysToCrash"/><Properties Name="Caption" PropValue="Запас в днях:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDaysToCrash"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Запас в днях"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtLimitMark_Validate(cancel as boolean)
if txtLimitMark.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtLimitMark.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLimitMark.SetFocus 
  elseif Val(txtLimitMark.text) &lt; -922337203685477.5808 or Val(txtLimitMark.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLimitMark.SetFocus 
  end if
end if
end sub
Private Sub txtLimitMark_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtLimitMark_Change()
  Changing

end sub
private sub txtDaysToCrash_Validate(cancel as boolean)
if txtDaysToCrash.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDaysToCrash.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDaysToCrash.SetFocus 
  elseif Val(txtDaysToCrash.text) &lt;&gt;clng(Val(txtDaysToCrash.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDaysToCrash.SetFocus 
  end if
end if
end sub
Private Sub txtDaysToCrash_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDaysToCrash_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSupplier.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtLimitMark.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
txtLimitMark = item.LimitMark
txtDaysToCrash = item.DaysToCrash
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
item.LimitMark = cdbl(txtLimitMark)
item.DaysToCrash = cdbl(txtDaysToCrash)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPDOG" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDogovor"/><Properties Name="Caption" PropValue="Договор:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDogovor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDogovor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtTheDogovor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDogovor_CLick()
  on error resume next
     If txtTheDogovor.Tag =&quot;&quot; then
       cmdTheDogovor_MenuClick &quot;Выбрать&quot; 
     Else
       cmdTheDogovor_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdTheDogovor_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtTheDogovor.Tag = &quot;&quot;
          txtTheDogovor = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtTheDogovor.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtTheDogovor.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtTheDogovor.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRDG2&quot;)
        If OK Then
          txtTheDogovor.Tag = left(ID,38)
          txtTheDogovor = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRDG2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRDG2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtTheDogovor.Tag = ID
              txtTheDogovor = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRDG2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtTheDogovor.Tag = obj.ID
              txtTheDogovor = obj.brief
          else
              txtTheDogovor.Tag = &quot;&quot;
              txtTheDogovor = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSupplier.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtTheDogovor.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
If Not item.TheDogovor Is Nothing Then
  txtTheDogovor.Tag = item.TheDogovor.id
  txtTheDogovor = item.TheDogovor.brief
else
  txtTheDogovor.Tag = &quot;&quot; 
  txtTheDogovor = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDogovor,cmdTheDogovor.tag
  cmdTheDogovor.RemoveAllMenu
  cmdTheDogovor.AddMenu &quot;Очистить&quot; 
  cmdTheDogovor.AddMenu &quot;Создать&quot; 
  cmdTheDogovor.AddMenu &quot;Выбрать&quot; 
  cmdTheDogovor.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
If txtTheDogovor.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDogovor = Item.Application.Manager.GetInstanceObject(txtTheDogovor.Tag)
Else
  Set item.TheDogovor = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DIRECTION" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Направление:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Направление"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSrok"/><Properties Name="Caption" PropValue="Срок доставки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSrok"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Срок доставки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Rule"/><Properties Name="Caption" PropValue="Отправка:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Rule"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отправка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPOSTINDEX"/><Properties Name="Caption" PropValue="Почтовый индекс:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPOSTINDEX"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Почтовый индекс"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheTransport"/><Properties Name="Caption" PropValue="Транспорт:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheTransport"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Транспорт"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheTransport"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Транспорт"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheAgent"/><Properties Name="Caption" PropValue="Агент:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheAgent"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Агент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheAgent"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Агент"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txtTown.Tag = Left(id, 38)
          txtTown = brief
        End If
end sub
private sub cmdTown_MenuClick(ByVal sCaption As String)
          txtTown.Tag = &quot;&quot;
          txtTown = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtDept.Tag = Left(id, 38)
          txtDept = brief
        End If
end sub
private sub cmdDept_MenuClick(ByVal sCaption As String)
          txtDept.Tag = &quot;&quot;
          txtDept = &quot;&quot;
End sub
private sub txtSrok_Change()
  Changing

end sub
private sub txtthe_Rule_Change()
  Changing

end sub
private sub txtPOSTINDEX_Change()
  Changing

end sub
private sub txtTheTransport_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheTransport_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TransportType&quot;, id, brief) Then
          txtTheTransport.Tag = Left(id, 38)
          txtTheTransport = brief
        End If
end sub
private sub cmdTheTransport_MenuClick(ByVal sCaption As String)
          txtTheTransport.Tag = &quot;&quot;
          txtTheTransport = &quot;&quot;
End sub
private sub txtTheAgent_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheAgent_CLick()
  on error resume next
     If txtTheAgent.Tag =&quot;&quot; then
       cmdTheAgent_MenuClick &quot;Выбрать&quot; 
     Else
       cmdTheAgent_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdTheAgent_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtTheAgent.Tag = &quot;&quot;
          txtTheAgent = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtTheAgent.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtTheAgent.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtTheAgent.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;,&quot;VRCCommonInfo_Transporter_Val=-1&quot;)
        If OK Then
          txtTheAgent.Tag = left(ID,38)
          txtTheAgent = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtTheAgent.Tag = ID
              txtTheAgent = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtTheAgent.Tag = obj.ID
              txtTheAgent = obj.brief
          else
              txtTheAgent.Tag = &quot;&quot;
              txtTheAgent = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTown.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = txtTheTransport.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Town Is Nothing Then
  txtTown.Tag = item.Town.id
  txtTown = item.Town.brief
else
  txtTown.Tag = &quot;&quot; 
  txtTown = &quot;&quot; 
End If
 LoadBtnPictures cmdTown,cmdTown.tag
  cmdTown.RemoveAllMenu
  cmdTown.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
If Not item.Dept Is Nothing Then
  txtDept.Tag = item.Dept.id
  txtDept = item.Dept.brief
else
  txtDept.Tag = &quot;&quot; 
  txtDept = &quot;&quot; 
End If
 LoadBtnPictures cmdDept,cmdDept.tag
  cmdDept.RemoveAllMenu
  cmdDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtSrok = item.Srok
  on error resume next
txtthe_Rule = item.the_Rule
  on error resume next
txtPOSTINDEX = item.POSTINDEX
If Not item.TheTransport Is Nothing Then
  txtTheTransport.Tag = item.TheTransport.id
  txtTheTransport = item.TheTransport.brief
else
  txtTheTransport.Tag = &quot;&quot; 
  txtTheTransport = &quot;&quot; 
End If
 LoadBtnPictures cmdTheTransport,cmdTheTransport.tag
  cmdTheTransport.RemoveAllMenu
  cmdTheTransport.AddMenu &quot;Очистить&quot; 
If Not item.TheAgent Is Nothing Then
  txtTheAgent.Tag = item.TheAgent.id
  txtTheAgent = item.TheAgent.brief
else
  txtTheAgent.Tag = &quot;&quot; 
  txtTheAgent = &quot;&quot; 
End If
 LoadBtnPictures cmdTheAgent,cmdTheAgent.tag
  cmdTheAgent.RemoveAllMenu
  cmdTheAgent.AddMenu &quot;Очистить&quot; 
  cmdTheAgent.AddMenu &quot;Создать&quot; 
  cmdTheAgent.AddMenu &quot;Выбрать&quot; 
  cmdTheAgent.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTown.Tag &lt;&gt; &quot;&quot; Then
  Set item.Town = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txtTown.Tag)
Else
  Set item.Town = Nothing
End If
item.Name = txtName
If txtDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.Dept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtDept.Tag)
Else
  Set item.Dept = Nothing
End If
item.Srok = txtSrok
item.the_Rule = txtthe_Rule
item.POSTINDEX = txtPOSTINDEX
If txtTheTransport.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheTransport = Item.Application.FindRowObject(&quot;ENTDIC_TransportType&quot;,txtTheTransport.Tag)
Else
  Set item.TheTransport = Nothing
End If
If txtTheAgent.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheAgent = Item.Application.Manager.GetInstanceObject(txtTheAgent.Tag)
Else
  Set item.TheAgent = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRAINS" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrainNo"/><Properties Name="Caption" PropValue="№ поезда:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrainNo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="№ поезда"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFromStation"/><Properties Name="Caption" PropValue="Из:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFromStation"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Из"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFromStation"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Из"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblToSTATION"/><Properties Name="Caption" PropValue="В:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtToSTATION"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="В"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdToSTATION"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="В"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Rule"/><Properties Name="Caption" PropValue="Отправка:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Rule"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отправка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDesciption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDesciption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheComment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheComment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrainType"/><Properties Name="Caption" PropValue="Тип поезда:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrainType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип поезда"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTrainType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип поезда"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTrainNo_Change()
  Changing

end sub
private sub txtFromStation_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFromStation_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,&quot;PEKD_DIRECTIONID='&quot; &amp; item.parent.parent.id &amp; &quot;'&quot;) Then
          txtFromStation.Tag = Left(id, 38)
          txtFromStation = brief
        End If
end sub
private sub cmdFromStation_MenuClick(ByVal sCaption As String)
          txtFromStation.Tag = &quot;&quot;
          txtFromStation = &quot;&quot;
End sub
private sub txtToSTATION_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdToSTATION_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,&quot;PEKD_DIRECTIONID='&quot; &amp; item.parent.parent.id &amp; &quot;'&quot;) Then
          txtToSTATION.Tag = Left(id, 38)
          txtToSTATION = brief
        End If
end sub
private sub cmdToSTATION_MenuClick(ByVal sCaption As String)
          txtToSTATION.Tag = &quot;&quot;
          txtToSTATION = &quot;&quot;
End sub
private sub txtthe_Rule_Change()
  Changing

end sub
private sub txtTheDesciption_Change()
  Changing

end sub
private sub txtTheComment_Change()
  Changing

end sub
private sub txtTrainType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTrainType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_TRAINTYPE&quot;, id, brief) Then
          txtTrainType.Tag = Left(id, 38)
          txtTrainType = brief
        End If
end sub
private sub cmdTrainType_MenuClick(ByVal sCaption As String)
          txtTrainType.Tag = &quot;&quot;
          txtTrainType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTrainNo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTrainNo = item.TrainNo
If Not item.FromStation Is Nothing Then
  txtFromStation.Tag = item.FromStation.id
  txtFromStation = item.FromStation.brief
else
  txtFromStation.Tag = &quot;&quot; 
  txtFromStation = &quot;&quot; 
End If
 LoadBtnPictures cmdFromStation,cmdFromStation.tag
  cmdFromStation.RemoveAllMenu
  cmdFromStation.AddMenu &quot;Очистить&quot; 
If Not item.ToSTATION Is Nothing Then
  txtToSTATION.Tag = item.ToSTATION.id
  txtToSTATION = item.ToSTATION.brief
else
  txtToSTATION.Tag = &quot;&quot; 
  txtToSTATION = &quot;&quot; 
End If
 LoadBtnPictures cmdToSTATION,cmdToSTATION.tag
  cmdToSTATION.RemoveAllMenu
  cmdToSTATION.AddMenu &quot;Очистить&quot; 
  on error resume next
txtthe_Rule = item.the_Rule
  on error resume next
txtTheDesciption = item.TheDesciption
txtTheComment = item.TheComment
If Not item.TrainType Is Nothing Then
  txtTrainType.Tag = item.TrainType.id
  txtTrainType = item.TrainType.brief
else
  txtTrainType.Tag = &quot;&quot; 
  txtTrainType = &quot;&quot; 
End If
 LoadBtnPictures cmdTrainType,cmdTrainType.tag
  cmdTrainType.RemoveAllMenu
  cmdTrainType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.TrainNo = txtTrainNo
If txtFromStation.Tag &lt;&gt; &quot;&quot; Then
  Set item.FromStation = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtFromStation.Tag)
Else
  Set item.FromStation = Nothing
End If
If txtToSTATION.Tag &lt;&gt; &quot;&quot; Then
  Set item.ToSTATION = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtToSTATION.Tag)
Else
  Set item.ToSTATION = Nothing
End If
item.the_Rule = txtthe_Rule
item.TheDesciption = txtTheDesciption
item.TheComment = txtTheComment
If txtTrainType.Tag &lt;&gt; &quot;&quot; Then
  Set item.TrainType = Item.Application.FindRowObject(&quot;PEKD_TRAINTYPE&quot;,txtTrainType.Tag)
Else
  Set item.TrainType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DIRSTATION" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPOSTINDEX"/><Properties Name="Caption" PropValue="Индекс отделения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPOSTINDEX"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Индекс отделения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblregion"/><Properties Name="Caption" PropValue="Регион:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtregion"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Регион"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdregion"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Регион"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarea"/><Properties Name="Caption" PropValue="Район:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarea"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Район"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNextTown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNextTown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNextTown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolSwitchWeight"/><Properties Name="Caption" PropValue="Минимальная плотность (клиент):"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtVolSwitchWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальная плотность (клиент)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolSwitchWeightSup"/><Properties Name="Caption" PropValue="Минимальная плотность (поставщик):"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtVolSwitchWeightSup"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальная плотность (поставщик)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtPOSTINDEX_Change()
  Changing

end sub
private sub txtregion_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdregion_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_REGION&quot;, id, brief) Then
          txtregion.Tag = Left(id, 38)
          txtregion = brief
        End If
end sub
private sub cmdregion_MenuClick(ByVal sCaption As String)
          txtregion.Tag = &quot;&quot;
          txtregion = &quot;&quot;
End sub
private sub txtarea_Change()
  Changing

end sub
private sub txtTheNextTown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNextTown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txtTheNextTown.Tag = Left(id, 38)
          txtTheNextTown = brief
        End If
end sub
private sub cmdTheNextTown_MenuClick(ByVal sCaption As String)
          txtTheNextTown.Tag = &quot;&quot;
          txtTheNextTown = &quot;&quot;
End sub
private sub txtVolSwitchWeight_Validate(cancel as boolean)
if txtVolSwitchWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtVolSwitchWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeight.SetFocus 
  elseif Val(txtVolSwitchWeight.text) &lt; -922337203685477.5808 or Val(txtVolSwitchWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeight.SetFocus 
  end if
end if
end sub
Private Sub txtVolSwitchWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtVolSwitchWeight_Change()
  Changing

end sub
private sub txtVolSwitchWeightSup_Validate(cancel as boolean)
if txtVolSwitchWeightSup.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtVolSwitchWeightSup.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeightSup.SetFocus 
  elseif Val(txtVolSwitchWeightSup.text) &lt; -922337203685477.5808 or Val(txtVolSwitchWeightSup.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeightSup.SetFocus 
  end if
end if
end sub
Private Sub txtVolSwitchWeightSup_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtVolSwitchWeightSup_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
  on error resume next
txtPOSTINDEX = item.POSTINDEX
If Not item.region Is Nothing Then
  txtregion.Tag = item.region.id
  txtregion = item.region.brief
else
  txtregion.Tag = &quot;&quot; 
  txtregion = &quot;&quot; 
End If
 LoadBtnPictures cmdregion,cmdregion.tag
  cmdregion.RemoveAllMenu
  cmdregion.AddMenu &quot;Очистить&quot; 
  on error resume next
txtarea = item.area
If Not item.TheNextTown Is Nothing Then
  txtTheNextTown.Tag = item.TheNextTown.id
  txtTheNextTown = item.TheNextTown.brief
else
  txtTheNextTown.Tag = &quot;&quot; 
  txtTheNextTown = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNextTown,cmdTheNextTown.tag
  cmdTheNextTown.RemoveAllMenu
  cmdTheNextTown.AddMenu &quot;Очистить&quot; 
txtVolSwitchWeight = item.VolSwitchWeight
txtVolSwitchWeightSup = item.VolSwitchWeightSup
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.POSTINDEX = txtPOSTINDEX
If txtregion.Tag &lt;&gt; &quot;&quot; Then
  Set item.region = Item.Application.FindRowObject(&quot;ENTDIC_REGION&quot;,txtregion.Tag)
Else
  Set item.region = Nothing
End If
item.area = txtarea
If txtTheNextTown.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNextTown = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txtTheNextTown.Tag)
Else
  Set item.TheNextTown = Nothing
End If
item.VolSwitchWeight = cdbl(txtVolSwitchWeight)
item.VolSwitchWeightSup = cdbl(txtVolSwitchWeightSup)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_SRV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDependOnWeight"/><Properties Name="Caption" PropValue="Зависит от веса:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbDependOnWeight"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Зависит от веса"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Единица измерения:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGRPDpUsl"/><Properties Name="Caption" PropValue="Группа Услуг:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtGRPDpUsl"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Группа Услуг"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdGRPDpUsl"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Группа Услуг"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsObligate"/><Properties Name="Caption" PropValue="Является обязательной:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsObligate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Является обязательной"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcWithNDS"/><Properties Name="Caption" PropValue="Расчет с НДС:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcWithNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Расчет с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub cmbDependOnWeight_Click()
  on error resume next
  Changing

end sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
private sub txtGRPDpUsl_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdGRPDpUsl_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_GRPDpUSL&quot;, id, brief) Then
          txtGRPDpUsl.Tag = Left(id, 38)
          txtGRPDpUsl = brief
        End If
end sub
private sub cmdGRPDpUsl_MenuClick(ByVal sCaption As String)
          txtGRPDpUsl.Tag = &quot;&quot;
          txtGRPDpUsl = &quot;&quot;
End sub
private sub cmbIsObligate_Click()
  on error resume next
  Changing

end sub
private sub cmbCalcWithNDS_Click()
  on error resume next
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK =(cmbIsObligate.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
cmbDependOnWeight.Clear
cmbDependOnWeight.additem &quot;Да&quot;
cmbDependOnWeight.itemdata(cmbDependOnWeight.newindex)= -1
cmbDependOnWeight.additem &quot;Нет&quot;
cmbDependOnWeight.itemdata(cmbDependOnWeight.newindex)= 0
 For iii = 0 To cmbDependOnWeight.ListCount-1
  If Item.DependOnWeight = cmbDependOnWeight.ItemData(iii) Then
   cmbDependOnWeight.ListIndex = iii
   Exit For
  End If
 Next
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
If Not item.GRPDpUsl Is Nothing Then
  txtGRPDpUsl.Tag = item.GRPDpUsl.id
  txtGRPDpUsl = item.GRPDpUsl.brief
else
  txtGRPDpUsl.Tag = &quot;&quot; 
  txtGRPDpUsl = &quot;&quot; 
End If
 LoadBtnPictures cmdGRPDpUsl,cmdGRPDpUsl.tag
  cmdGRPDpUsl.RemoveAllMenu
  cmdGRPDpUsl.AddMenu &quot;Очистить&quot; 
cmbIsObligate.Clear
cmbIsObligate.additem &quot;Да&quot;
cmbIsObligate.itemdata(cmbIsObligate.newindex)= -1
cmbIsObligate.additem &quot;Нет&quot;
cmbIsObligate.itemdata(cmbIsObligate.newindex)= 0
 For iii = 0 To cmbIsObligate.ListCount-1
  If Item.IsObligate = cmbIsObligate.ItemData(iii) Then
   cmbIsObligate.ListIndex = iii
   Exit For
  End If
 Next
cmbCalcWithNDS.Clear
cmbCalcWithNDS.additem &quot;Да&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= -1
cmbCalcWithNDS.additem &quot;Нет&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= 0
 For iii = 0 To cmbCalcWithNDS.ListCount-1
  If Item.CalcWithNDS = cmbCalcWithNDS.ItemData(iii) Then
   cmbCalcWithNDS.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 if cmbDependOnWeight.listindex&gt;=0 then
   item.DependOnWeight = cmbDependOnWeight.itemdata(cmbDependOnWeight.listindex)
 end if
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
If txtGRPDpUsl.Tag &lt;&gt; &quot;&quot; Then
  Set item.GRPDpUsl = Item.Application.FindRowObject(&quot;PEKD_GRPDpUSL&quot;,txtGRPDpUsl.Tag)
Else
  Set item.GRPDpUsl = Nothing
End If
 if cmbIsObligate.listindex&gt;=0 then
   item.IsObligate = cmbIsObligate.itemdata(cmbIsObligate.listindex)
 end if
 if cmbCalcWithNDS.listindex&gt;=0 then
   item.CalcWithNDS = cmbCalcWithNDS.itemdata(cmbCalcWithNDS.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_ADDSadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcType"/><Properties Name="Caption" PropValue="Тип расчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип расчета"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbCalcType_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbCalcType.Clear
cmbCalcType.additem &quot;Объем&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 1
cmbCalcType.additem &quot;Плотность&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 2
cmbCalcType.additem &quot;Прочее&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 3
cmbCalcType.additem &quot;Вес&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 0
 For iii = 0 To cmbCalcType.ListCount-1
  If Item.CalcType = cmbCalcType.ItemData(iii) Then
   cmbCalcType.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbCalcType.listindex&gt;=0 then
   item.CalcType = cmbCalcType.itemdata(cmbCalcType.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRAINTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_AUTOadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheVolume"/><Properties Name="Caption" PropValue="Грузоподъемность:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtTheVolume"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Грузоподъемность"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDimentions"/><Properties Name="Caption" PropValue="Габариты:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDimentions"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="80"/><Properties Name="ToolTipText" PropValue="Габариты"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcWithNDS"/><Properties Name="Caption" PropValue="Расчет с НДС:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcWithNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Расчет с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheVolume_Validate(cancel as boolean)
if txtTheVolume.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheVolume.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheVolume.SetFocus 
  elseif Val(txtTheVolume.text) &lt; -922337203685477.5808 or Val(txtTheVolume.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheVolume.SetFocus 
  end if
end if
end sub
Private Sub txtTheVolume_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheVolume_Change()
  Changing

end sub
private sub txtTheDimentions_Change()
  Changing

end sub
private sub cmbCalcWithNDS_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheVolume = item.TheVolume
  on error resume next
txtTheDimentions = item.TheDimentions
cmbCalcWithNDS.Clear
cmbCalcWithNDS.additem &quot;Да&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= -1
cmbCalcWithNDS.additem &quot;Нет&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= 0
 For iii = 0 To cmbCalcWithNDS.ListCount-1
  If Item.CalcWithNDS = cmbCalcWithNDS.ItemData(iii) Then
   cmbCalcWithNDS.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheVolume = cdbl(txtTheVolume)
item.TheDimentions = txtTheDimentions
 if cmbCalcWithNDS.listindex&gt;=0 then
   item.CalcWithNDS = cmbCalcWithNDS.itemdata(cmbCalcWithNDS.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_GOTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_INFOSENDTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_GRPDpUSLadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_1CTRadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTR1CCode"/><Properties Name="Caption" PropValue="Код строки таранспортных услуг:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTR1CCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код строки таранспортных услуг"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheDept.Tag = Left(id, 38)
          txtTheDept = brief
        End If
end sub
private sub cmdTheDept_MenuClick(ByVal sCaption As String)
          txtTheDept.Tag = &quot;&quot;
          txtTheDept = &quot;&quot;
End sub
private sub txtTR1CCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheDept.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtTR1CCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheDept Is Nothing Then
  txtTheDept.Tag = item.TheDept.id
  txtTheDept = item.TheDept.brief
else
  txtTheDept.Tag = &quot;&quot; 
  txtTheDept = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDept,cmdTheDept.tag
  cmdTheDept.RemoveAllMenu
  cmdTheDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtTR1CCode = item.TR1CCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTheDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheDept.Tag)
Else
  Set item.TheDept = Nothing
End If
item.TR1CCode = txtTR1CCode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_POSTTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRFGRPadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Группа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Группа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRFTYPEadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPTadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddress"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddress"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Основной поставщик:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Основной поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2715"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Основной поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocPrefix"/><Properties Name="Caption" PropValue="Префикс номеров документов:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocPrefix"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="3"/><Properties Name="ToolTipText" PropValue="Префикс номеров документов"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPGDPName"/><Properties Name="Caption" PropValue="Название ПЖДП:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPGDPName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название ПЖДП"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtAddress_Change()
  Changing

end sub
private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtDocPrefix_Change()
  Changing

end sub
private sub txtPGDPName_Change()
  Changing

end sub
private sub txttown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdtown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txttown.Tag = Left(id, 38)
          txttown = brief
        End If
end sub
private sub cmdtown_MenuClick(ByVal sCaption As String)
          txttown.Tag = &quot;&quot;
          txttown = &quot;&quot;
End sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
txtAddress = item.Address
If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
  on error resume next
txtDocPrefix = item.DocPrefix
  on error resume next
txtPGDPName = item.PGDPName
If Not item.town Is Nothing Then
  txttown.Tag = item.town.id
  txttown = item.town.brief
else
  txttown.Tag = &quot;&quot; 
  txttown = &quot;&quot; 
End If
 LoadBtnPictures cmdtown,cmdtown.tag
  cmdtown.RemoveAllMenu
  cmdtown.AddMenu &quot;Очистить&quot; 
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.Address = txtAddress
If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
item.DocPrefix = txtDocPrefix
item.PGDPName = txtPGDPName
If txttown.Tag &lt;&gt; &quot;&quot; Then
  Set item.town = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txttown.Tag)
Else
  Set item.town = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPLIMITSadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLimitMark"/><Properties Name="Caption" PropValue="Необходимый остаток:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtLimitMark"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Необходимый остаток"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDaysToCrash"/><Properties Name="Caption" PropValue="Запас в днях:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDaysToCrash"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Запас в днях"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtLimitMark_Validate(cancel as boolean)
if txtLimitMark.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtLimitMark.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLimitMark.SetFocus 
  elseif Val(txtLimitMark.text) &lt; -922337203685477.5808 or Val(txtLimitMark.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLimitMark.SetFocus 
  end if
end if
end sub
Private Sub txtLimitMark_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtLimitMark_Change()
  Changing

end sub
private sub txtDaysToCrash_Validate(cancel as boolean)
if txtDaysToCrash.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDaysToCrash.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDaysToCrash.SetFocus 
  elseif Val(txtDaysToCrash.text) &lt;&gt;clng(Val(txtDaysToCrash.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDaysToCrash.SetFocus 
  end if
end if
end sub
Private Sub txtDaysToCrash_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDaysToCrash_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSupplier.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtLimitMark.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
txtLimitMark = item.LimitMark
txtDaysToCrash = item.DaysToCrash
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
item.LimitMark = cdbl(txtLimitMark)
item.DaysToCrash = cdbl(txtDaysToCrash)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPDOGadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDogovor"/><Properties Name="Caption" PropValue="Договор:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDogovor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDogovor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtTheDogovor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDogovor_CLick()
  on error resume next
     If txtTheDogovor.Tag =&quot;&quot; then
       cmdTheDogovor_MenuClick &quot;Выбрать&quot; 
     Else
       cmdTheDogovor_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdTheDogovor_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtTheDogovor.Tag = &quot;&quot;
          txtTheDogovor = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtTheDogovor.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtTheDogovor.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtTheDogovor.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRDG2&quot;)
        If OK Then
          txtTheDogovor.Tag = left(ID,38)
          txtTheDogovor = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRDG2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRDG2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtTheDogovor.Tag = ID
              txtTheDogovor = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRDG2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtTheDogovor.Tag = obj.ID
              txtTheDogovor = obj.brief
          else
              txtTheDogovor.Tag = &quot;&quot;
              txtTheDogovor = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSupplier.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtTheDogovor.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
If Not item.TheDogovor Is Nothing Then
  txtTheDogovor.Tag = item.TheDogovor.id
  txtTheDogovor = item.TheDogovor.brief
else
  txtTheDogovor.Tag = &quot;&quot; 
  txtTheDogovor = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDogovor,cmdTheDogovor.tag
  cmdTheDogovor.RemoveAllMenu
  cmdTheDogovor.AddMenu &quot;Очистить&quot; 
  cmdTheDogovor.AddMenu &quot;Создать&quot; 
  cmdTheDogovor.AddMenu &quot;Выбрать&quot; 
  cmdTheDogovor.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
If txtTheDogovor.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDogovor = Item.Application.Manager.GetInstanceObject(txtTheDogovor.Tag)
Else
  Set item.TheDogovor = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DIRECTIONadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Направление:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Направление"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSrok"/><Properties Name="Caption" PropValue="Срок доставки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSrok"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Срок доставки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Rule"/><Properties Name="Caption" PropValue="Отправка:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Rule"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отправка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPOSTINDEX"/><Properties Name="Caption" PropValue="Почтовый индекс:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPOSTINDEX"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Почтовый индекс"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheTransport"/><Properties Name="Caption" PropValue="Транспорт:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheTransport"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Транспорт"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheTransport"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Транспорт"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheAgent"/><Properties Name="Caption" PropValue="Агент:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheAgent"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Агент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheAgent"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Агент"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txtTown.Tag = Left(id, 38)
          txtTown = brief
        End If
end sub
private sub cmdTown_MenuClick(ByVal sCaption As String)
          txtTown.Tag = &quot;&quot;
          txtTown = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtDept.Tag = Left(id, 38)
          txtDept = brief
        End If
end sub
private sub cmdDept_MenuClick(ByVal sCaption As String)
          txtDept.Tag = &quot;&quot;
          txtDept = &quot;&quot;
End sub
private sub txtSrok_Change()
  Changing

end sub
private sub txtthe_Rule_Change()
  Changing

end sub
private sub txtPOSTINDEX_Change()
  Changing

end sub
private sub txtTheTransport_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheTransport_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TransportType&quot;, id, brief) Then
          txtTheTransport.Tag = Left(id, 38)
          txtTheTransport = brief
        End If
end sub
private sub cmdTheTransport_MenuClick(ByVal sCaption As String)
          txtTheTransport.Tag = &quot;&quot;
          txtTheTransport = &quot;&quot;
End sub
private sub txtTheAgent_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheAgent_CLick()
  on error resume next
     If txtTheAgent.Tag =&quot;&quot; then
       cmdTheAgent_MenuClick &quot;Выбрать&quot; 
     Else
       cmdTheAgent_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdTheAgent_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtTheAgent.Tag = &quot;&quot;
          txtTheAgent = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtTheAgent.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtTheAgent.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtTheAgent.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;,&quot;VRCCommonInfo_Transporter_Val=-1&quot;)
        If OK Then
          txtTheAgent.Tag = left(ID,38)
          txtTheAgent = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtTheAgent.Tag = ID
              txtTheAgent = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtTheAgent.Tag = obj.ID
              txtTheAgent = obj.brief
          else
              txtTheAgent.Tag = &quot;&quot;
              txtTheAgent = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTown.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = txtTheTransport.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Town Is Nothing Then
  txtTown.Tag = item.Town.id
  txtTown = item.Town.brief
else
  txtTown.Tag = &quot;&quot; 
  txtTown = &quot;&quot; 
End If
 LoadBtnPictures cmdTown,cmdTown.tag
  cmdTown.RemoveAllMenu
  cmdTown.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
If Not item.Dept Is Nothing Then
  txtDept.Tag = item.Dept.id
  txtDept = item.Dept.brief
else
  txtDept.Tag = &quot;&quot; 
  txtDept = &quot;&quot; 
End If
 LoadBtnPictures cmdDept,cmdDept.tag
  cmdDept.RemoveAllMenu
  cmdDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtSrok = item.Srok
  on error resume next
txtthe_Rule = item.the_Rule
  on error resume next
txtPOSTINDEX = item.POSTINDEX
If Not item.TheTransport Is Nothing Then
  txtTheTransport.Tag = item.TheTransport.id
  txtTheTransport = item.TheTransport.brief
else
  txtTheTransport.Tag = &quot;&quot; 
  txtTheTransport = &quot;&quot; 
End If
 LoadBtnPictures cmdTheTransport,cmdTheTransport.tag
  cmdTheTransport.RemoveAllMenu
  cmdTheTransport.AddMenu &quot;Очистить&quot; 
If Not item.TheAgent Is Nothing Then
  txtTheAgent.Tag = item.TheAgent.id
  txtTheAgent = item.TheAgent.brief
else
  txtTheAgent.Tag = &quot;&quot; 
  txtTheAgent = &quot;&quot; 
End If
 LoadBtnPictures cmdTheAgent,cmdTheAgent.tag
  cmdTheAgent.RemoveAllMenu
  cmdTheAgent.AddMenu &quot;Очистить&quot; 
  cmdTheAgent.AddMenu &quot;Создать&quot; 
  cmdTheAgent.AddMenu &quot;Выбрать&quot; 
  cmdTheAgent.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTown.Tag &lt;&gt; &quot;&quot; Then
  Set item.Town = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txtTown.Tag)
Else
  Set item.Town = Nothing
End If
item.Name = txtName
If txtDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.Dept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtDept.Tag)
Else
  Set item.Dept = Nothing
End If
item.Srok = txtSrok
item.the_Rule = txtthe_Rule
item.POSTINDEX = txtPOSTINDEX
If txtTheTransport.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheTransport = Item.Application.FindRowObject(&quot;ENTDIC_TransportType&quot;,txtTheTransport.Tag)
Else
  Set item.TheTransport = Nothing
End If
If txtTheAgent.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheAgent = Item.Application.Manager.GetInstanceObject(txtTheAgent.Tag)
Else
  Set item.TheAgent = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRAINSadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrainNo"/><Properties Name="Caption" PropValue="№ поезда:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrainNo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="№ поезда"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFromStation"/><Properties Name="Caption" PropValue="Из:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFromStation"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Из"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFromStation"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Из"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblToSTATION"/><Properties Name="Caption" PropValue="В:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtToSTATION"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="В"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdToSTATION"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="В"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Rule"/><Properties Name="Caption" PropValue="Отправка:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Rule"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отправка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDesciption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDesciption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheComment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheComment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrainType"/><Properties Name="Caption" PropValue="Тип поезда:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrainType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип поезда"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTrainType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип поезда"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTrainNo_Change()
  Changing

end sub
private sub txtFromStation_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFromStation_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,&quot;PEKD_DIRECTIONID='&quot; &amp; item.parent.parent.id &amp; &quot;'&quot;) Then
          txtFromStation.Tag = Left(id, 38)
          txtFromStation = brief
        End If
end sub
private sub cmdFromStation_MenuClick(ByVal sCaption As String)
          txtFromStation.Tag = &quot;&quot;
          txtFromStation = &quot;&quot;
End sub
private sub txtToSTATION_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdToSTATION_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,&quot;PEKD_DIRECTIONID='&quot; &amp; item.parent.parent.id &amp; &quot;'&quot;) Then
          txtToSTATION.Tag = Left(id, 38)
          txtToSTATION = brief
        End If
end sub
private sub cmdToSTATION_MenuClick(ByVal sCaption As String)
          txtToSTATION.Tag = &quot;&quot;
          txtToSTATION = &quot;&quot;
End sub
private sub txtthe_Rule_Change()
  Changing

end sub
private sub txtTheDesciption_Change()
  Changing

end sub
private sub txtTheComment_Change()
  Changing

end sub
private sub txtTrainType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTrainType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_TRAINTYPE&quot;, id, brief) Then
          txtTrainType.Tag = Left(id, 38)
          txtTrainType = brief
        End If
end sub
private sub cmdTrainType_MenuClick(ByVal sCaption As String)
          txtTrainType.Tag = &quot;&quot;
          txtTrainType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTrainNo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTrainNo = item.TrainNo
If Not item.FromStation Is Nothing Then
  txtFromStation.Tag = item.FromStation.id
  txtFromStation = item.FromStation.brief
else
  txtFromStation.Tag = &quot;&quot; 
  txtFromStation = &quot;&quot; 
End If
 LoadBtnPictures cmdFromStation,cmdFromStation.tag
  cmdFromStation.RemoveAllMenu
  cmdFromStation.AddMenu &quot;Очистить&quot; 
If Not item.ToSTATION Is Nothing Then
  txtToSTATION.Tag = item.ToSTATION.id
  txtToSTATION = item.ToSTATION.brief
else
  txtToSTATION.Tag = &quot;&quot; 
  txtToSTATION = &quot;&quot; 
End If
 LoadBtnPictures cmdToSTATION,cmdToSTATION.tag
  cmdToSTATION.RemoveAllMenu
  cmdToSTATION.AddMenu &quot;Очистить&quot; 
  on error resume next
txtthe_Rule = item.the_Rule
  on error resume next
txtTheDesciption = item.TheDesciption
txtTheComment = item.TheComment
If Not item.TrainType Is Nothing Then
  txtTrainType.Tag = item.TrainType.id
  txtTrainType = item.TrainType.brief
else
  txtTrainType.Tag = &quot;&quot; 
  txtTrainType = &quot;&quot; 
End If
 LoadBtnPictures cmdTrainType,cmdTrainType.tag
  cmdTrainType.RemoveAllMenu
  cmdTrainType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.TrainNo = txtTrainNo
If txtFromStation.Tag &lt;&gt; &quot;&quot; Then
  Set item.FromStation = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtFromStation.Tag)
Else
  Set item.FromStation = Nothing
End If
If txtToSTATION.Tag &lt;&gt; &quot;&quot; Then
  Set item.ToSTATION = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtToSTATION.Tag)
Else
  Set item.ToSTATION = Nothing
End If
item.the_Rule = txtthe_Rule
item.TheDesciption = txtTheDesciption
item.TheComment = txtTheComment
If txtTrainType.Tag &lt;&gt; &quot;&quot; Then
  Set item.TrainType = Item.Application.FindRowObject(&quot;PEKD_TRAINTYPE&quot;,txtTrainType.Tag)
Else
  Set item.TrainType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DIRSTATIONadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPOSTINDEX"/><Properties Name="Caption" PropValue="Индекс отделения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPOSTINDEX"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Индекс отделения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblregion"/><Properties Name="Caption" PropValue="Регион:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtregion"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Регион"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdregion"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Регион"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarea"/><Properties Name="Caption" PropValue="Район:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarea"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Район"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNextTown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNextTown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNextTown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolSwitchWeight"/><Properties Name="Caption" PropValue="Минимальная плотность (клиент):"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtVolSwitchWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальная плотность (клиент)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolSwitchWeightSup"/><Properties Name="Caption" PropValue="Минимальная плотность (поставщик):"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtVolSwitchWeightSup"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальная плотность (поставщик)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtPOSTINDEX_Change()
  Changing

end sub
private sub txtregion_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdregion_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_REGION&quot;, id, brief) Then
          txtregion.Tag = Left(id, 38)
          txtregion = brief
        End If
end sub
private sub cmdregion_MenuClick(ByVal sCaption As String)
          txtregion.Tag = &quot;&quot;
          txtregion = &quot;&quot;
End sub
private sub txtarea_Change()
  Changing

end sub
private sub txtTheNextTown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNextTown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txtTheNextTown.Tag = Left(id, 38)
          txtTheNextTown = brief
        End If
end sub
private sub cmdTheNextTown_MenuClick(ByVal sCaption As String)
          txtTheNextTown.Tag = &quot;&quot;
          txtTheNextTown = &quot;&quot;
End sub
private sub txtVolSwitchWeight_Validate(cancel as boolean)
if txtVolSwitchWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtVolSwitchWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeight.SetFocus 
  elseif Val(txtVolSwitchWeight.text) &lt; -922337203685477.5808 or Val(txtVolSwitchWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeight.SetFocus 
  end if
end if
end sub
Private Sub txtVolSwitchWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtVolSwitchWeight_Change()
  Changing

end sub
private sub txtVolSwitchWeightSup_Validate(cancel as boolean)
if txtVolSwitchWeightSup.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtVolSwitchWeightSup.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeightSup.SetFocus 
  elseif Val(txtVolSwitchWeightSup.text) &lt; -922337203685477.5808 or Val(txtVolSwitchWeightSup.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeightSup.SetFocus 
  end if
end if
end sub
Private Sub txtVolSwitchWeightSup_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtVolSwitchWeightSup_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
  on error resume next
txtPOSTINDEX = item.POSTINDEX
If Not item.region Is Nothing Then
  txtregion.Tag = item.region.id
  txtregion = item.region.brief
else
  txtregion.Tag = &quot;&quot; 
  txtregion = &quot;&quot; 
End If
 LoadBtnPictures cmdregion,cmdregion.tag
  cmdregion.RemoveAllMenu
  cmdregion.AddMenu &quot;Очистить&quot; 
  on error resume next
txtarea = item.area
If Not item.TheNextTown Is Nothing Then
  txtTheNextTown.Tag = item.TheNextTown.id
  txtTheNextTown = item.TheNextTown.brief
else
  txtTheNextTown.Tag = &quot;&quot; 
  txtTheNextTown = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNextTown,cmdTheNextTown.tag
  cmdTheNextTown.RemoveAllMenu
  cmdTheNextTown.AddMenu &quot;Очистить&quot; 
txtVolSwitchWeight = item.VolSwitchWeight
txtVolSwitchWeightSup = item.VolSwitchWeightSup
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.POSTINDEX = txtPOSTINDEX
If txtregion.Tag &lt;&gt; &quot;&quot; Then
  Set item.region = Item.Application.FindRowObject(&quot;ENTDIC_REGION&quot;,txtregion.Tag)
Else
  Set item.region = Nothing
End If
item.area = txtarea
If txtTheNextTown.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNextTown = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txtTheNextTown.Tag)
Else
  Set item.TheNextTown = Nothing
End If
item.VolSwitchWeight = cdbl(txtVolSwitchWeight)
item.VolSwitchWeightSup = cdbl(txtVolSwitchWeightSup)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_SRVadmi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDependOnWeight"/><Properties Name="Caption" PropValue="Зависит от веса:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbDependOnWeight"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Зависит от веса"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Единица измерения:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGRPDpUsl"/><Properties Name="Caption" PropValue="Группа Услуг:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtGRPDpUsl"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Группа Услуг"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdGRPDpUsl"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Группа Услуг"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsObligate"/><Properties Name="Caption" PropValue="Является обязательной:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsObligate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Является обязательной"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcWithNDS"/><Properties Name="Caption" PropValue="Расчет с НДС:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcWithNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Расчет с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub cmbDependOnWeight_Click()
  on error resume next
  Changing

end sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
private sub txtGRPDpUsl_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdGRPDpUsl_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_GRPDpUSL&quot;, id, brief) Then
          txtGRPDpUsl.Tag = Left(id, 38)
          txtGRPDpUsl = brief
        End If
end sub
private sub cmdGRPDpUsl_MenuClick(ByVal sCaption As String)
          txtGRPDpUsl.Tag = &quot;&quot;
          txtGRPDpUsl = &quot;&quot;
End sub
private sub cmbIsObligate_Click()
  on error resume next
  Changing

end sub
private sub cmbCalcWithNDS_Click()
  on error resume next
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK =(cmbIsObligate.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
cmbDependOnWeight.Clear
cmbDependOnWeight.additem &quot;Да&quot;
cmbDependOnWeight.itemdata(cmbDependOnWeight.newindex)= -1
cmbDependOnWeight.additem &quot;Нет&quot;
cmbDependOnWeight.itemdata(cmbDependOnWeight.newindex)= 0
 For iii = 0 To cmbDependOnWeight.ListCount-1
  If Item.DependOnWeight = cmbDependOnWeight.ItemData(iii) Then
   cmbDependOnWeight.ListIndex = iii
   Exit For
  End If
 Next
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
If Not item.GRPDpUsl Is Nothing Then
  txtGRPDpUsl.Tag = item.GRPDpUsl.id
  txtGRPDpUsl = item.GRPDpUsl.brief
else
  txtGRPDpUsl.Tag = &quot;&quot; 
  txtGRPDpUsl = &quot;&quot; 
End If
 LoadBtnPictures cmdGRPDpUsl,cmdGRPDpUsl.tag
  cmdGRPDpUsl.RemoveAllMenu
  cmdGRPDpUsl.AddMenu &quot;Очистить&quot; 
cmbIsObligate.Clear
cmbIsObligate.additem &quot;Да&quot;
cmbIsObligate.itemdata(cmbIsObligate.newindex)= -1
cmbIsObligate.additem &quot;Нет&quot;
cmbIsObligate.itemdata(cmbIsObligate.newindex)= 0
 For iii = 0 To cmbIsObligate.ListCount-1
  If Item.IsObligate = cmbIsObligate.ItemData(iii) Then
   cmbIsObligate.ListIndex = iii
   Exit For
  End If
 Next
cmbCalcWithNDS.Clear
cmbCalcWithNDS.additem &quot;Да&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= -1
cmbCalcWithNDS.additem &quot;Нет&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= 0
 For iii = 0 To cmbCalcWithNDS.ListCount-1
  If Item.CalcWithNDS = cmbCalcWithNDS.ItemData(iii) Then
   cmbCalcWithNDS.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 if cmbDependOnWeight.listindex&gt;=0 then
   item.DependOnWeight = cmbDependOnWeight.itemdata(cmbDependOnWeight.listindex)
 end if
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
If txtGRPDpUsl.Tag &lt;&gt; &quot;&quot; Then
  Set item.GRPDpUsl = Item.Application.FindRowObject(&quot;PEKD_GRPDpUSL&quot;,txtGRPDpUsl.Tag)
Else
  Set item.GRPDpUsl = Nothing
End If
 if cmbIsObligate.listindex&gt;=0 then
   item.IsObligate = cmbIsObligate.itemdata(cmbIsObligate.listindex)
 end if
 if cmbCalcWithNDS.listindex&gt;=0 then
   item.CalcWithNDS = cmbCalcWithNDS.itemdata(cmbCalcWithNDS.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_ADDSmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcType"/><Properties Name="Caption" PropValue="Тип расчета:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип расчета"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub cmbCalcType_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
cmbCalcType.Clear
cmbCalcType.additem &quot;Объем&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 1
cmbCalcType.additem &quot;Плотность&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 2
cmbCalcType.additem &quot;Прочее&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 3
cmbCalcType.additem &quot;Вес&quot;
cmbCalcType.itemdata(cmbCalcType.newindex)= 0
 For iii = 0 To cmbCalcType.ListCount-1
  If Item.CalcType = cmbCalcType.ItemData(iii) Then
   cmbCalcType.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 if cmbCalcType.listindex&gt;=0 then
   item.CalcType = cmbCalcType.itemdata(cmbCalcType.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRAINTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_AUTOmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheVolume"/><Properties Name="Caption" PropValue="Грузоподъемность:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtTheVolume"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Грузоподъемность"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDimentions"/><Properties Name="Caption" PropValue="Габариты:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDimentions"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="80"/><Properties Name="ToolTipText" PropValue="Габариты"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcWithNDS"/><Properties Name="Caption" PropValue="Расчет с НДС:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcWithNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Расчет с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheVolume_Validate(cancel as boolean)
if txtTheVolume.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtTheVolume.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheVolume.SetFocus 
  elseif Val(txtTheVolume.text) &lt; -922337203685477.5808 or Val(txtTheVolume.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtTheVolume.SetFocus 
  end if
end if
end sub
Private Sub txtTheVolume_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtTheVolume_Change()
  Changing

end sub
private sub txtTheDimentions_Change()
  Changing

end sub
private sub cmbCalcWithNDS_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
txtTheVolume = item.TheVolume
  on error resume next
txtTheDimentions = item.TheDimentions
cmbCalcWithNDS.Clear
cmbCalcWithNDS.additem &quot;Да&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= -1
cmbCalcWithNDS.additem &quot;Нет&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= 0
 For iii = 0 To cmbCalcWithNDS.ListCount-1
  If Item.CalcWithNDS = cmbCalcWithNDS.ItemData(iii) Then
   cmbCalcWithNDS.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheVolume = cdbl(txtTheVolume)
item.TheDimentions = txtTheDimentions
 if cmbCalcWithNDS.listindex&gt;=0 then
   item.CalcWithNDS = cmbCalcWithNDS.itemdata(cmbCalcWithNDS.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_GOTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_INFOSENDTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_GRPDpUSLmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_1CTRmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTR1CCode"/><Properties Name="Caption" PropValue="Код строки таранспортных услуг:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTR1CCode"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код строки таранспортных услуг"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtTheDept.Tag = Left(id, 38)
          txtTheDept = brief
        End If
end sub
private sub cmdTheDept_MenuClick(ByVal sCaption As String)
          txtTheDept.Tag = &quot;&quot;
          txtTheDept = &quot;&quot;
End sub
private sub txtTR1CCode_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheDept.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtTR1CCode.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheDept Is Nothing Then
  txtTheDept.Tag = item.TheDept.id
  txtTheDept = item.TheDept.brief
else
  txtTheDept.Tag = &quot;&quot; 
  txtTheDept = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDept,cmdTheDept.tag
  cmdTheDept.RemoveAllMenu
  cmdTheDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtTR1CCode = item.TR1CCode
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTheDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtTheDept.Tag)
Else
  Set item.TheDept = Nothing
End If
item.TR1CCode = txtTR1CCode
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_POSTTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRFGRPmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Группа:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Группа"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRFTYPEmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPTmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAddress"/><Properties Name="Caption" PropValue="Адрес:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAddress"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Адрес"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Основной поставщик:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Основной поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2715"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Основной поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDocPrefix"/><Properties Name="Caption" PropValue="Префикс номеров документов:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDocPrefix"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="3"/><Properties Name="ToolTipText" PropValue="Префикс номеров документов"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPGDPName"/><Properties Name="Caption" PropValue="Название ПЖДП:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPGDPName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название ПЖДП"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lbltown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txttown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdtown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4830"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtAddress_Change()
  Changing

end sub
private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtDocPrefix_Change()
  Changing

end sub
private sub txtPGDPName_Change()
  Changing

end sub
private sub txttown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdtown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txttown.Tag = Left(id, 38)
          txttown = brief
        End If
end sub
private sub cmdtown_MenuClick(ByVal sCaption As String)
          txttown.Tag = &quot;&quot;
          txttown = &quot;&quot;
End sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
txtAddress = item.Address
If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
  on error resume next
txtDocPrefix = item.DocPrefix
  on error resume next
txtPGDPName = item.PGDPName
If Not item.town Is Nothing Then
  txttown.Tag = item.town.id
  txttown = item.town.brief
else
  txttown.Tag = &quot;&quot; 
  txttown = &quot;&quot; 
End If
 LoadBtnPictures cmdtown,cmdtown.tag
  cmdtown.RemoveAllMenu
  cmdtown.AddMenu &quot;Очистить&quot; 
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.Address = txtAddress
If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
item.DocPrefix = txtDocPrefix
item.PGDPName = txtPGDPName
If txttown.Tag &lt;&gt; &quot;&quot; Then
  Set item.town = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txttown.Tag)
Else
  Set item.town = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPLIMITSmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLimitMark"/><Properties Name="Caption" PropValue="Необходимый остаток:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtLimitMark"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Необходимый остаток"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDaysToCrash"/><Properties Name="Caption" PropValue="Запас в днях:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDaysToCrash"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Запас в днях"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtLimitMark_Validate(cancel as boolean)
if txtLimitMark.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtLimitMark.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLimitMark.SetFocus 
  elseif Val(txtLimitMark.text) &lt; -922337203685477.5808 or Val(txtLimitMark.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtLimitMark.SetFocus 
  end if
end if
end sub
Private Sub txtLimitMark_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtLimitMark_Change()
  Changing

end sub
private sub txtDaysToCrash_Validate(cancel as boolean)
if txtDaysToCrash.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtDaysToCrash.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDaysToCrash.SetFocus 
  elseif Val(txtDaysToCrash.text) &lt;&gt;clng(Val(txtDaysToCrash.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtDaysToCrash.SetFocus 
  end if
end if
end sub
Private Sub txtDaysToCrash_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtDaysToCrash_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSupplier.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = IsSet(txtLimitMark.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
txtLimitMark = item.LimitMark
txtDaysToCrash = item.DaysToCrash
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
item.LimitMark = cdbl(txtLimitMark)
item.DaysToCrash = cdbl(txtDaysToCrash)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DEPDOGmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSupplier"/><Properties Name="Caption" PropValue="Поставщик:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSupplier"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSupplier"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Поставщик"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDogovor"/><Properties Name="Caption" PropValue="Договор:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDogovor"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheDogovor"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Договор"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSupplier_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSupplier_CLick()
  on error resume next
     If txtSupplier.Tag =&quot;&quot; then
       cmdSupplier_MenuClick &quot;Выбрать&quot; 
     Else
       cmdSupplier_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdSupplier_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtSupplier.Tag = &quot;&quot;
          txtSupplier = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtSupplier.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtSupplier.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtSupplier.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;)
        If OK Then
          txtSupplier.Tag = left(ID,38)
          txtSupplier = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtSupplier.Tag = ID
              txtSupplier = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtSupplier.Tag = obj.ID
              txtSupplier = obj.brief
          else
              txtSupplier.Tag = &quot;&quot;
              txtSupplier = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtTheDogovor_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheDogovor_CLick()
  on error resume next
     If txtTheDogovor.Tag =&quot;&quot; then
       cmdTheDogovor_MenuClick &quot;Выбрать&quot; 
     Else
       cmdTheDogovor_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdTheDogovor_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtTheDogovor.Tag = &quot;&quot;
          txtTheDogovor = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtTheDogovor.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtTheDogovor.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtTheDogovor.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRDG2&quot;)
        If OK Then
          txtTheDogovor.Tag = left(ID,38)
          txtTheDogovor = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRDG2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRDG2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtTheDogovor.Tag = ID
              txtTheDogovor = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRDG2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtTheDogovor.Tag = obj.ID
              txtTheDogovor = obj.brief
          else
              txtTheDogovor.Tag = &quot;&quot;
              txtTheDogovor = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSupplier.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtTheDogovor.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Supplier Is Nothing Then
  txtSupplier.Tag = item.Supplier.id
  txtSupplier = item.Supplier.brief
else
  txtSupplier.Tag = &quot;&quot; 
  txtSupplier = &quot;&quot; 
End If
 LoadBtnPictures cmdSupplier,cmdSupplier.tag
  cmdSupplier.RemoveAllMenu
  cmdSupplier.AddMenu &quot;Очистить&quot; 
  cmdSupplier.AddMenu &quot;Создать&quot; 
  cmdSupplier.AddMenu &quot;Выбрать&quot; 
  cmdSupplier.AddMenu &quot;Открыть&quot; 
If Not item.TheDogovor Is Nothing Then
  txtTheDogovor.Tag = item.TheDogovor.id
  txtTheDogovor = item.TheDogovor.brief
else
  txtTheDogovor.Tag = &quot;&quot; 
  txtTheDogovor = &quot;&quot; 
End If
 LoadBtnPictures cmdTheDogovor,cmdTheDogovor.tag
  cmdTheDogovor.RemoveAllMenu
  cmdTheDogovor.AddMenu &quot;Очистить&quot; 
  cmdTheDogovor.AddMenu &quot;Создать&quot; 
  cmdTheDogovor.AddMenu &quot;Выбрать&quot; 
  cmdTheDogovor.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtSupplier.Tag &lt;&gt; &quot;&quot; Then
  Set item.Supplier = Item.Application.Manager.GetInstanceObject(txtSupplier.Tag)
Else
  Set item.Supplier = Nothing
End If
If txtTheDogovor.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheDogovor = Item.Application.Manager.GetInstanceObject(txtTheDogovor.Tag)
Else
  Set item.TheDogovor = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DIRECTIONmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Направление:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Направление"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDept"/><Properties Name="Caption" PropValue="Филиал:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDept"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDept"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Филиал"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSrok"/><Properties Name="Caption" PropValue="Срок доставки:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSrok"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Срок доставки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Rule"/><Properties Name="Caption" PropValue="Отправка:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Rule"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отправка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPOSTINDEX"/><Properties Name="Caption" PropValue="Почтовый индекс:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPOSTINDEX"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Почтовый индекс"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheTransport"/><Properties Name="Caption" PropValue="Транспорт:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheTransport"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Транспорт"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheTransport"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Транспорт"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheAgent"/><Properties Name="Caption" PropValue="Агент:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheAgent"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Агент"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheAgent"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Агент"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txtTown.Tag = Left(id, 38)
          txtTown = brief
        End If
end sub
private sub cmdTown_MenuClick(ByVal sCaption As String)
          txtTown.Tag = &quot;&quot;
          txtTown = &quot;&quot;
End sub
private sub txtName_Change()
  Changing

end sub
private sub txtDept_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDept_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DEPT&quot;, id, brief) Then
          txtDept.Tag = Left(id, 38)
          txtDept = brief
        End If
end sub
private sub cmdDept_MenuClick(ByVal sCaption As String)
          txtDept.Tag = &quot;&quot;
          txtDept = &quot;&quot;
End sub
private sub txtSrok_Change()
  Changing

end sub
private sub txtthe_Rule_Change()
  Changing

end sub
private sub txtPOSTINDEX_Change()
  Changing

end sub
private sub txtTheTransport_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheTransport_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TransportType&quot;, id, brief) Then
          txtTheTransport.Tag = Left(id, 38)
          txtTheTransport = brief
        End If
end sub
private sub cmdTheTransport_MenuClick(ByVal sCaption As String)
          txtTheTransport.Tag = &quot;&quot;
          txtTheTransport = &quot;&quot;
End sub
private sub txtTheAgent_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheAgent_CLick()
  on error resume next
     If txtTheAgent.Tag =&quot;&quot; then
       cmdTheAgent_MenuClick &quot;Выбрать&quot; 
     Else
       cmdTheAgent_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdTheAgent_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtTheAgent.Tag = &quot;&quot;
          txtTheAgent = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtTheAgent.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtTheAgent.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtTheAgent.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;VRC2&quot;,&quot;VRCCommonInfo_Transporter_Val=-1&quot;)
        If OK Then
          txtTheAgent.Tag = left(ID,38)
          txtTheAgent = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Dim ook As Boolean
        Dim Cancel As Boolean
        Brief = &quot;VRC2&quot; &amp; Now
        ook = FindObject(Item.Application.Manager, &quot;VRC2&quot;, id,brief,cancel)
        If Cancel Then
          Exit sub
        End If
        If  ook Then
              txtTheAgent.Tag = ID
              txtTheAgent = brief
              exit sub
        End If
        If Not ook Then
          ID = CreateGUID2()
          ook = Item.Application.Manager.NewInstance(ID, &quot;VRC2&quot;, Brief)
        End If
        Set obj = Item.Application.Manager.GetInstanceObject(id)
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtTheAgent.Tag = obj.ID
              txtTheAgent = obj.brief
          else
              txtTheAgent.Tag = &quot;&quot;
              txtTheAgent = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTown.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =IsSet(txtName.text)
if mIsOK then mIsOK = txtTheTransport.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Town Is Nothing Then
  txtTown.Tag = item.Town.id
  txtTown = item.Town.brief
else
  txtTown.Tag = &quot;&quot; 
  txtTown = &quot;&quot; 
End If
 LoadBtnPictures cmdTown,cmdTown.tag
  cmdTown.RemoveAllMenu
  cmdTown.AddMenu &quot;Очистить&quot; 
  on error resume next
txtName = item.Name
If Not item.Dept Is Nothing Then
  txtDept.Tag = item.Dept.id
  txtDept = item.Dept.brief
else
  txtDept.Tag = &quot;&quot; 
  txtDept = &quot;&quot; 
End If
 LoadBtnPictures cmdDept,cmdDept.tag
  cmdDept.RemoveAllMenu
  cmdDept.AddMenu &quot;Очистить&quot; 
  on error resume next
txtSrok = item.Srok
  on error resume next
txtthe_Rule = item.the_Rule
  on error resume next
txtPOSTINDEX = item.POSTINDEX
If Not item.TheTransport Is Nothing Then
  txtTheTransport.Tag = item.TheTransport.id
  txtTheTransport = item.TheTransport.brief
else
  txtTheTransport.Tag = &quot;&quot; 
  txtTheTransport = &quot;&quot; 
End If
 LoadBtnPictures cmdTheTransport,cmdTheTransport.tag
  cmdTheTransport.RemoveAllMenu
  cmdTheTransport.AddMenu &quot;Очистить&quot; 
If Not item.TheAgent Is Nothing Then
  txtTheAgent.Tag = item.TheAgent.id
  txtTheAgent = item.TheAgent.brief
else
  txtTheAgent.Tag = &quot;&quot; 
  txtTheAgent = &quot;&quot; 
End If
 LoadBtnPictures cmdTheAgent,cmdTheAgent.tag
  cmdTheAgent.RemoveAllMenu
  cmdTheAgent.AddMenu &quot;Очистить&quot; 
  cmdTheAgent.AddMenu &quot;Создать&quot; 
  cmdTheAgent.AddMenu &quot;Выбрать&quot; 
  cmdTheAgent.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

If txtTown.Tag &lt;&gt; &quot;&quot; Then
  Set item.Town = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txtTown.Tag)
Else
  Set item.Town = Nothing
End If
item.Name = txtName
If txtDept.Tag &lt;&gt; &quot;&quot; Then
  Set item.Dept = Item.Application.FindRowObject(&quot;PEKD_DEPT&quot;,txtDept.Tag)
Else
  Set item.Dept = Nothing
End If
item.Srok = txtSrok
item.the_Rule = txtthe_Rule
item.POSTINDEX = txtPOSTINDEX
If txtTheTransport.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheTransport = Item.Application.FindRowObject(&quot;ENTDIC_TransportType&quot;,txtTheTransport.Tag)
Else
  Set item.TheTransport = Nothing
End If
If txtTheAgent.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheAgent = Item.Application.Manager.GetInstanceObject(txtTheAgent.Tag)
Else
  Set item.TheAgent = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_TRAINSmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrainNo"/><Properties Name="Caption" PropValue="№ поезда:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrainNo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="50"/><Properties Name="ToolTipText" PropValue="№ поезда"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFromStation"/><Properties Name="Caption" PropValue="Из:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFromStation"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Из"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdFromStation"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Из"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblToSTATION"/><Properties Name="Caption" PropValue="В:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtToSTATION"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="В"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdToSTATION"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="В"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblthe_Rule"/><Properties Name="Caption" PropValue="Отправка:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtthe_Rule"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Отправка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDesciption"/><Properties Name="Caption" PropValue="Описание:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDesciption"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Описание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheComment"/><Properties Name="Caption" PropValue="Примечание:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheComment"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Примечание"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTrainType"/><Properties Name="Caption" PropValue="Тип поезда:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTrainType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип поезда"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTrainType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5535"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип поезда"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTrainNo_Change()
  Changing

end sub
private sub txtFromStation_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdFromStation_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,&quot;PEKD_DIRECTIONID='&quot; &amp; item.parent.parent.id &amp; &quot;'&quot;) Then
          txtFromStation.Tag = Left(id, 38)
          txtFromStation = brief
        End If
end sub
private sub cmdFromStation_MenuClick(ByVal sCaption As String)
          txtFromStation.Tag = &quot;&quot;
          txtFromStation = &quot;&quot;
End sub
private sub txtToSTATION_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdToSTATION_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_DIRSTATION&quot;, id, brief,,,&quot;PEKD_DIRECTIONID='&quot; &amp; item.parent.parent.id &amp; &quot;'&quot;) Then
          txtToSTATION.Tag = Left(id, 38)
          txtToSTATION = brief
        End If
end sub
private sub cmdToSTATION_MenuClick(ByVal sCaption As String)
          txtToSTATION.Tag = &quot;&quot;
          txtToSTATION = &quot;&quot;
End sub
private sub txtthe_Rule_Change()
  Changing

end sub
private sub txtTheDesciption_Change()
  Changing

end sub
private sub txtTheComment_Change()
  Changing

end sub
private sub txtTrainType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTrainType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_TRAINTYPE&quot;, id, brief) Then
          txtTrainType.Tag = Left(id, 38)
          txtTrainType = brief
        End If
end sub
private sub cmdTrainType_MenuClick(ByVal sCaption As String)
          txtTrainType.Tag = &quot;&quot;
          txtTrainType = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTrainNo.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTrainNo = item.TrainNo
If Not item.FromStation Is Nothing Then
  txtFromStation.Tag = item.FromStation.id
  txtFromStation = item.FromStation.brief
else
  txtFromStation.Tag = &quot;&quot; 
  txtFromStation = &quot;&quot; 
End If
 LoadBtnPictures cmdFromStation,cmdFromStation.tag
  cmdFromStation.RemoveAllMenu
  cmdFromStation.AddMenu &quot;Очистить&quot; 
If Not item.ToSTATION Is Nothing Then
  txtToSTATION.Tag = item.ToSTATION.id
  txtToSTATION = item.ToSTATION.brief
else
  txtToSTATION.Tag = &quot;&quot; 
  txtToSTATION = &quot;&quot; 
End If
 LoadBtnPictures cmdToSTATION,cmdToSTATION.tag
  cmdToSTATION.RemoveAllMenu
  cmdToSTATION.AddMenu &quot;Очистить&quot; 
  on error resume next
txtthe_Rule = item.the_Rule
  on error resume next
txtTheDesciption = item.TheDesciption
txtTheComment = item.TheComment
If Not item.TrainType Is Nothing Then
  txtTrainType.Tag = item.TrainType.id
  txtTrainType = item.TrainType.brief
else
  txtTrainType.Tag = &quot;&quot; 
  txtTrainType = &quot;&quot; 
End If
 LoadBtnPictures cmdTrainType,cmdTrainType.tag
  cmdTrainType.RemoveAllMenu
  cmdTrainType.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.TrainNo = txtTrainNo
If txtFromStation.Tag &lt;&gt; &quot;&quot; Then
  Set item.FromStation = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtFromStation.Tag)
Else
  Set item.FromStation = Nothing
End If
If txtToSTATION.Tag &lt;&gt; &quot;&quot; Then
  Set item.ToSTATION = Item.Application.FindRowObject(&quot;PEKD_DIRSTATION&quot;,txtToSTATION.Tag)
Else
  Set item.ToSTATION = Nothing
End If
item.the_Rule = txtthe_Rule
item.TheDesciption = txtTheDesciption
item.TheComment = txtTheComment
If txtTrainType.Tag &lt;&gt; &quot;&quot; Then
  Set item.TrainType = Item.Application.FindRowObject(&quot;PEKD_TRAINTYPE&quot;,txtTrainType.Tag)
Else
  Set item.TrainType = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_DIRSTATIONmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPOSTINDEX"/><Properties Name="Caption" PropValue="Индекс отделения:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPOSTINDEX"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="20"/><Properties Name="ToolTipText" PropValue="Индекс отделения"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblregion"/><Properties Name="Caption" PropValue="Регион:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtregion"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Регион"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdregion"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Регион"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblarea"/><Properties Name="Caption" PropValue="Район:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtarea"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Район"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheNextTown"/><Properties Name="Caption" PropValue="Город:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheNextTown"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheNextTown"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Город"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolSwitchWeight"/><Properties Name="Caption" PropValue="Минимальная плотность (клиент):"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtVolSwitchWeight"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальная плотность (клиент)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblVolSwitchWeightSup"/><Properties Name="Caption" PropValue="Минимальная плотность (поставщик):"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSMask.MaskEdBox"><Properties Name="NAME" PropValue="txtVolSwitchWeightSup"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Минимальная плотность (поставщик)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="27"/><Properties Name="Format" PropValue="#,##0.00;(#,##0.00)"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub txtPOSTINDEX_Change()
  Changing

end sub
private sub txtregion_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdregion_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_REGION&quot;, id, brief) Then
          txtregion.Tag = Left(id, 38)
          txtregion = brief
        End If
end sub
private sub cmdregion_MenuClick(ByVal sCaption As String)
          txtregion.Tag = &quot;&quot;
          txtregion = &quot;&quot;
End sub
private sub txtarea_Change()
  Changing

end sub
private sub txtTheNextTown_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheNextTown_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_TOWN&quot;, id, brief) Then
          txtTheNextTown.Tag = Left(id, 38)
          txtTheNextTown = brief
        End If
end sub
private sub cmdTheNextTown_MenuClick(ByVal sCaption As String)
          txtTheNextTown.Tag = &quot;&quot;
          txtTheNextTown = &quot;&quot;
End sub
private sub txtVolSwitchWeight_Validate(cancel as boolean)
if txtVolSwitchWeight.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtVolSwitchWeight.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeight.SetFocus 
  elseif Val(txtVolSwitchWeight.text) &lt; -922337203685477.5808 or Val(txtVolSwitchWeight.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeight.SetFocus 
  end if
end if
end sub
Private Sub txtVolSwitchWeight_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtVolSwitchWeight_Change()
  Changing

end sub
private sub txtVolSwitchWeightSup_Validate(cancel as boolean)
if txtVolSwitchWeightSup.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtVolSwitchWeightSup.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeightSup.SetFocus 
  elseif Val(txtVolSwitchWeightSup.text) &lt; -922337203685477.5808 or Val(txtVolSwitchWeightSup.text)&gt;+922337203685477.5807 then 
     cancel=true 
     msgbox &quot;Значение вне допустимого диапазона&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtVolSwitchWeightSup.SetFocus 
  end if
end if
end sub
Private Sub txtVolSwitchWeightSup_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtVolSwitchWeightSup_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
  on error resume next
txtPOSTINDEX = item.POSTINDEX
If Not item.region Is Nothing Then
  txtregion.Tag = item.region.id
  txtregion = item.region.brief
else
  txtregion.Tag = &quot;&quot; 
  txtregion = &quot;&quot; 
End If
 LoadBtnPictures cmdregion,cmdregion.tag
  cmdregion.RemoveAllMenu
  cmdregion.AddMenu &quot;Очистить&quot; 
  on error resume next
txtarea = item.area
If Not item.TheNextTown Is Nothing Then
  txtTheNextTown.Tag = item.TheNextTown.id
  txtTheNextTown = item.TheNextTown.brief
else
  txtTheNextTown.Tag = &quot;&quot; 
  txtTheNextTown = &quot;&quot; 
End If
 LoadBtnPictures cmdTheNextTown,cmdTheNextTown.tag
  cmdTheNextTown.RemoveAllMenu
  cmdTheNextTown.AddMenu &quot;Очистить&quot; 
txtVolSwitchWeight = item.VolSwitchWeight
txtVolSwitchWeightSup = item.VolSwitchWeightSup
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
item.POSTINDEX = txtPOSTINDEX
If txtregion.Tag &lt;&gt; &quot;&quot; Then
  Set item.region = Item.Application.FindRowObject(&quot;ENTDIC_REGION&quot;,txtregion.Tag)
Else
  Set item.region = Nothing
End If
item.area = txtarea
If txtTheNextTown.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheNextTown = Item.Application.FindRowObject(&quot;ENTDIC_TOWN&quot;,txtTheNextTown.Tag)
Else
  Set item.TheNextTown = Nothing
End If
item.VolSwitchWeight = cdbl(txtVolSwitchWeight)
item.VolSwitchWeightSup = cdbl(txtVolSwitchWeightSup)
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="PEKD_SRVmain" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDependOnWeight"/><Properties Name="Caption" PropValue="Зависит от веса:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbDependOnWeight"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Зависит от веса"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblEDIZM"/><Properties Name="Caption" PropValue="Единица измерения:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtEDIZM"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdEDIZM"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Единица измерения"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblGRPDpUsl"/><Properties Name="Caption" PropValue="Группа Услуг:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtGRPDpUsl"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Группа Услуг"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdGRPDpUsl"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Группа Услуг"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsObligate"/><Properties Name="Caption" PropValue="Является обязательной:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsObligate"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Является обязательной"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCalcWithNDS"/><Properties Name="Caption" PropValue="Расчет с НДС:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCalcWithNDS"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Расчет с НДС"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCode1C"/><Properties Name="Caption" PropValue="Код1С:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="False"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCode1C"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="40"/><Properties Name="ToolTipText" PropValue="Код1С"/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtname_Change()
  Changing

end sub
private sub cmbDependOnWeight_Click()
  on error resume next
  Changing

end sub
private sub txtEDIZM_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdEDIZM_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;ENTDIC_EDIZM&quot;, id, brief) Then
          txtEDIZM.Tag = Left(id, 38)
          txtEDIZM = brief
        End If
end sub
private sub cmdEDIZM_MenuClick(ByVal sCaption As String)
          txtEDIZM.Tag = &quot;&quot;
          txtEDIZM = &quot;&quot;
End sub
private sub txtGRPDpUsl_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdGRPDpUsl_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;PEKD_GRPDpUSL&quot;, id, brief) Then
          txtGRPDpUsl.Tag = Left(id, 38)
          txtGRPDpUsl = brief
        End If
end sub
private sub cmdGRPDpUsl_MenuClick(ByVal sCaption As String)
          txtGRPDpUsl.Tag = &quot;&quot;
          txtGRPDpUsl = &quot;&quot;
End sub
private sub cmbIsObligate_Click()
  on error resume next
  Changing

end sub
private sub cmbCalcWithNDS_Click()
  on error resume next
  Changing

end sub
private sub txtCode1C_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
if mIsOK then mIsOK =(cmbIsObligate.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtname = item.name
cmbDependOnWeight.Clear
cmbDependOnWeight.additem &quot;Да&quot;
cmbDependOnWeight.itemdata(cmbDependOnWeight.newindex)= -1
cmbDependOnWeight.additem &quot;Нет&quot;
cmbDependOnWeight.itemdata(cmbDependOnWeight.newindex)= 0
 For iii = 0 To cmbDependOnWeight.ListCount-1
  If Item.DependOnWeight = cmbDependOnWeight.ItemData(iii) Then
   cmbDependOnWeight.ListIndex = iii
   Exit For
  End If
 Next
If Not item.EDIZM Is Nothing Then
  txtEDIZM.Tag = item.EDIZM.id
  txtEDIZM = item.EDIZM.brief
else
  txtEDIZM.Tag = &quot;&quot; 
  txtEDIZM = &quot;&quot; 
End If
 LoadBtnPictures cmdEDIZM,cmdEDIZM.tag
  cmdEDIZM.RemoveAllMenu
  cmdEDIZM.AddMenu &quot;Очистить&quot; 
If Not item.GRPDpUsl Is Nothing Then
  txtGRPDpUsl.Tag = item.GRPDpUsl.id
  txtGRPDpUsl = item.GRPDpUsl.brief
else
  txtGRPDpUsl.Tag = &quot;&quot; 
  txtGRPDpUsl = &quot;&quot; 
End If
 LoadBtnPictures cmdGRPDpUsl,cmdGRPDpUsl.tag
  cmdGRPDpUsl.RemoveAllMenu
  cmdGRPDpUsl.AddMenu &quot;Очистить&quot; 
cmbIsObligate.Clear
cmbIsObligate.additem &quot;Да&quot;
cmbIsObligate.itemdata(cmbIsObligate.newindex)= -1
cmbIsObligate.additem &quot;Нет&quot;
cmbIsObligate.itemdata(cmbIsObligate.newindex)= 0
 For iii = 0 To cmbIsObligate.ListCount-1
  If Item.IsObligate = cmbIsObligate.ItemData(iii) Then
   cmbIsObligate.ListIndex = iii
   Exit For
  End If
 Next
cmbCalcWithNDS.Clear
cmbCalcWithNDS.additem &quot;Да&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= -1
cmbCalcWithNDS.additem &quot;Нет&quot;
cmbCalcWithNDS.itemdata(cmbCalcWithNDS.newindex)= 0
 For iii = 0 To cmbCalcWithNDS.ListCount-1
  If Item.CalcWithNDS = cmbCalcWithNDS.ItemData(iii) Then
   cmbCalcWithNDS.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtCode1C = item.Code1C
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub
Public sub Save
if OnInit then exit sub

item.name = txtname
 if cmbDependOnWeight.listindex&gt;=0 then
   item.DependOnWeight = cmbDependOnWeight.itemdata(cmbDependOnWeight.listindex)
 end if
If txtEDIZM.Tag &lt;&gt; &quot;&quot; Then
  Set item.EDIZM = Item.Application.FindRowObject(&quot;ENTDIC_EDIZM&quot;,txtEDIZM.Tag)
Else
  Set item.EDIZM = Nothing
End If
If txtGRPDpUsl.Tag &lt;&gt; &quot;&quot; Then
  Set item.GRPDpUsl = Item.Application.FindRowObject(&quot;PEKD_GRPDpUSL&quot;,txtGRPDpUsl.Tag)
Else
  Set item.GRPDpUsl = Nothing
End If
 if cmbIsObligate.listindex&gt;=0 then
   item.IsObligate = cmbIsObligate.itemdata(cmbIsObligate.listindex)
 end if
 if cmbCalcWithNDS.listindex&gt;=0 then
   item.CalcWithNDS = cmbCalcWithNDS.itemdata(cmbCalcWithNDS.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function
 Public sub Customize()
   Panel.Customize
 End sub
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_ADDS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_ADDS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Варианты надбавок"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Надбавки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot;
  Open s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRAINTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRAINTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип поезда"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип поезда"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot;
  Open s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_AUTO_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_AUTO"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Справочник типов автотранспорта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип автотранспорта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot;
  Open s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_GOTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_GOTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы СГО"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы СГО"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot;
  Open s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_INFOSENDTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_INFOSENDTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Способ передачи информации "/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Способ передачи информации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot;
  Open s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Система отправки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Система отправки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot;
  Open s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_GRPDpUSL_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_GRPDpUSL"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="позволяет группировать ДопУслуги (PEKD_SRV)"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Группы ДопУслуг"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot;
  Open s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_1CTR_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_1CTR"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Коды строк транспортировки в различных базах филиалов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Коды основных услуг"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot;
  Open s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_POSTTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_POSTTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Характер отправления"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Характер отправления"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot;
  Open s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRFGRP_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRFGRP"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Группы тарифов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Группы тарифов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot;
  Open s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRFTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRFTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы тарифов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы тарифов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot;
  Open s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPT_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPT"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Филиал"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Филиал"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot;
  Open s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPLIMITS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPLIMITS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Уровни неснижаемых остатков по постащикам"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Контролируемые лимиты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot;
  Open s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPDOG_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPDOG"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Договора в рамках которого поставщик поставляет услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Договора с поставщиками"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot;
  Open s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DIRECTION_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DIRECTION"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Направление перевозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Направление перевозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot;
  Open s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRAINS_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRAINS"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Маршруты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Маршруты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot;
  Open s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DIRSTATION_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DIRSTATION"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Точки доставки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Точки доставки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot;
  Open s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_SRV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_SRV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot;
  Open s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_ADDS_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_ADDSadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Варианты надбавок"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Надбавки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot;
  Open s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRAINTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRAINTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип поезда"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип поезда"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot;
  Open s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_AUTO_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_AUTOadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Справочник типов автотранспорта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип автотранспорта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot;
  Open s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_GOTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_GOTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы СГО"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы СГО"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot;
  Open s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_INFOSENDTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_INFOSENDTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Способ передачи информации "/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Способ передачи информации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot;
  Open s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Система отправки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Система отправки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot;
  Open s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_GRPDpUSL_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_GRPDpUSLadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="позволяет группировать ДопУслуги (PEKD_SRV)"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Группы ДопУслуг"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot;
  Open s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_1CTR_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_1CTRadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Коды строк транспортировки в различных базах филиалов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Коды основных услуг"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot;
  Open s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_POSTTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_POSTTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Характер отправления"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Характер отправления"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot;
  Open s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRFGRP_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRFGRPadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Группы тарифов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Группы тарифов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot;
  Open s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRFTYPE_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRFTYPEadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы тарифов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы тарифов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot;
  Open s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPT_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPTadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Филиал"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Филиал"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot;
  Open s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPLIMITS_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPLIMITSadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Уровни неснижаемых остатков по постащикам"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Контролируемые лимиты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot;
  Open s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPDOG_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPDOGadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Договора в рамках которого поставщик поставляет услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Договора с поставщиками"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot;
  Open s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DIRECTION_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DIRECTIONadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Направление перевозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Направление перевозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot;
  Open s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRAINS_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRAINSadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Маршруты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Маршруты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot;
  Open s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DIRSTATION_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DIRSTATIONadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Точки доставки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Точки доставки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot;
  Open s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_SRV_admi" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_SRVadmi"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot;
  Open s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_SRV_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные услуги"/><Properties Name="Name" PropValue="mnuPopupPEKD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_SRVOpen"/></ControlData><ControlData Name="mnuPEKD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_SRVRef"/></ControlData><ControlData Name="mnuPEKD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_SRVS1"/></ControlData><ControlData Name="mnuPEKD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_SRVCOPY"/></ControlData><ControlData Name="mnuPEKD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_SRVCUT"/></ControlData><ControlData Name="mnuPEKD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_SRVPASTE"/></ControlData><ControlData Name="mnuPEKD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCHANGE"/></ControlData><ControlData Name="mnuPEKD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_SRVPrn"/></ControlData><ControlData Name="mnuPEKD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCfg"/></ControlData><ControlData Name="mnuPEKD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_SRVFind"/></ControlData><ControlData Name="mnuPEKD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_SRV as object
private menuActionPEKD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_SRV,&quot;gridPEKD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_SRV,&quot;Дополнительные услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_SRVRef_Click()
  on error resume next
  item.PEKD_SRV.Refresh
  gridPEKD_SRV.itemCount = item.PEKD_SRV.count
  gridPEKD_SRV.Refetch
  gridPEKD_SRV.Refresh
End Sub
Private Sub cmdPEKD_SRVAcc_Click()
On Error Resume Next
If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
If gridPEKD_SRV.Row &gt; 0 Then
 If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_SRVEdit_Click()
  on error resume next
If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
If gridPEKD_SRV.Row &gt; 0 then
 If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_SRV_admi.Item = u
    again: frmPEKD_SRV_admi.NotFirstTime = False
    frmPEKD_SRV_admi.OnInit
    frmPEKD_SRV_admi.Show vbModal
    If frmPEKD_SRV_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_SRVDel_Click()
  on error resume next
  gridPEKD_SRV.Delete
End Sub
Private Sub cmdPEKD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_SRV.Add()

      Set frmPEKD_SRV_admi.Item = u
      again: frmPEKD_SRV_admi.NotFirstTime = False
      frmPEKD_SRV_admi.OnInit
      frmPEKD_SRV_admi.Show vbModal
      If frmPEKD_SRV_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_SRV.ItemCount = Item.PEKD_SRV.Count
        gridPEKD_SRV.Refresh
        gridPEKD_SRV.RefreshGroups
        gridPEKD_SRV.Refreshsort
        gridPEKD_SRV.MoveToBookmark u.ID &amp; &quot;PEKD_SRV&quot;
      Else
        Item.PEKD_SRV.Delete u.ID
        Item.PEKD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_SRVFnd_Click()
  on error resume next
  fndPEKD_SRV.ShowForm
End Sub
Private Sub cmdPEKD_SRVRun_Click()
  on error resume next
  gridPEKD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_SRV.LoadRow gridPEKD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_SRV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_SRV_DblClick()
  cmdPEKD_SRVEdit_Click
End Sub
Private Sub gridPEKD_SRV_KeyPress(KeyAscii As Integer)
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_SRV.Row And LastRow &gt; 0 Then
  gridPEKD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_SRV.GetRowData(gridPEKD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_SRV.Add()
    If GetFromBuffer(u) Then
      gridPEKD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_SRVCfg_Click
        End If
    End If
end sub

private sub gridPEKD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_SRV
End If
end sub
private sub mnuPEKD_SRVAdd_click()
   menuActionPEKD_SRV =&quot;ADD&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVEdit_click()
   menuActionPEKD_SRV =&quot;EDIT&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVDelete_click()
   menuActionPEKD_SRV =&quot;DEL&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVOpen_click()
   menuActionPEKD_SRV =&quot;RUN&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVRef_click()
   menuActionPEKD_SRV =&quot;REF&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
  Private Sub mnuPEKD_SRVCOPY_Click()
    On Error Resume Next
    If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKD_SRV.Row &gt; 0 Then
     If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_SRVCUT_Click()
    On Error Resume Next
    If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKD_SRV.Row &gt; 0 Then
     If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_SRVCHANGE_Click()
  On Error Resume Next
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  If gridPEKD_SRV.Row &gt; 0 Then
   If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_SRV.ItemCount = u.parent.Count
      gridPEKD_SRV.RefreshRowIndex gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_SRVPrn_click()
   menuActionPEKD_SRV =&quot;PRN&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVCfg_click()
   menuActionPEKD_SRV =&quot;CFG&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVFind_click()
   menuActionPEKD_SRV =&quot;FND&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVAcc_click()
   menuActionPEKD_SRV =&quot;ACC&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub menuTimerPEKD_SRV_timer()
   menuTimerPEKD_SRV.enabled = false
   if menuActionPEKD_SRV =&quot;ADD&quot; then cmdPEKD_SRVADD_CLick
   if menuActionPEKD_SRV =&quot;EDIT&quot; then cmdPEKD_SRVEDIT_CLick
   if menuActionPEKD_SRV =&quot;DEL&quot; then cmdPEKD_SRVDEL_CLick
   if menuActionPEKD_SRV =&quot;RUN&quot; then cmdPEKD_SRVRUN_CLick
   if menuActionPEKD_SRV =&quot;REF&quot; then cmdPEKD_SRVREF_CLick
   if menuActionPEKD_SRV =&quot;PRN&quot; then cmdPEKD_SRVPRN_CLick
   if menuActionPEKD_SRV =&quot;CFG&quot; then cmdPEKD_SRVCFG_CLick
   if menuActionPEKD_SRV =&quot;FND&quot; then cmdPEKD_SRVFND_CLick
   if menuActionPEKD_SRV =&quot;ACC&quot; then cmdPEKD_SRVACC_CLick
   menuActionPEKD_SRV =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_SRVAdd,cmdPEKD_SRVAdd.tag
  LoadBtnPictures cmdPEKD_SRVEdit,cmdPEKD_SRVEdit.tag
  LoadBtnPictures cmdPEKD_SRVDel,cmdPEKD_SRVDel.tag
  LoadBtnPictures cmdPEKD_SRVRef,cmdPEKD_SRVRef.tag
  LoadBtnPictures cmdPEKD_SRVPrn,cmdPEKD_SRVPrn.tag
  LoadBtnPictures cmdPEKD_SRVFnd,cmdPEKD_SRVFnd.tag
  LoadBtnPictures cmdPEKD_SRVRun,cmdPEKD_SRVRun.tag
  LoadBtnPictures cmdPEKD_SRVAcc,cmdPEKD_SRVAcc.tag
  LoadBtnPictures cmdPEKD_SRVCfg,cmdPEKD_SRVCfg.tag
  item.PEKD_SRV.PrepareGrid gridPEKD_SRV
  LoadGridLayout gridPEKD_SRV
  Set fndPEKD_SRV = Nothing
  On Error Resume Next
  Set fndPEKD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_SRV.Init gridPEKD_SRV
end sub
private sub OnTabClick()

      gridPEKD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_TRTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_TRTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Система отправки"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_TRTYPE as object
private menuActionPEKD_TRTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_TRTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRTYPE,&quot;gridPEKD_TRTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRTYPE,&quot;Система отправки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRTYPERef_Click()
  on error resume next
  item.PEKD_TRTYPE.Refresh
  gridPEKD_TRTYPE.itemCount = item.PEKD_TRTYPE.count
  gridPEKD_TRTYPE.Refetch
  gridPEKD_TRTYPE.Refresh
End Sub
Private Sub cmdPEKD_TRTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRTYPE.Row &gt; 0 Then
 If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRTYPEEdit_Click()
  on error resume next
If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRTYPE.Row &gt; 0 then
 If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_TRTYPE_admi.Item = u
    again: frmPEKD_TRTYPE_admi.NotFirstTime = False
    frmPEKD_TRTYPE_admi.OnInit
    frmPEKD_TRTYPE_admi.Show vbModal
    If frmPEKD_TRTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_TRTYPEDel_Click()
  on error resume next
  gridPEKD_TRTYPE.Delete
End Sub
Private Sub cmdPEKD_TRTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_TRTYPE.Add()

      Set frmPEKD_TRTYPE_admi.Item = u
      again: frmPEKD_TRTYPE_admi.NotFirstTime = False
      frmPEKD_TRTYPE_admi.OnInit
      frmPEKD_TRTYPE_admi.Show vbModal
      If frmPEKD_TRTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRTYPE.ItemCount = Item.PEKD_TRTYPE.Count
        gridPEKD_TRTYPE.Refresh
        gridPEKD_TRTYPE.RefreshGroups
        gridPEKD_TRTYPE.Refreshsort
        gridPEKD_TRTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRTYPE&quot;
      Else
        Item.PEKD_TRTYPE.Delete u.ID
        Item.PEKD_TRTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_TRTYPEFnd_Click()
  on error resume next
  fndPEKD_TRTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRTYPERun_Click()
  on error resume next
  gridPEKD_TRTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_TRTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_TRTYPE.LoadRow gridPEKD_TRTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_TRTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_TRTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_TRTYPE_DblClick()
  cmdPEKD_TRTYPEEdit_Click
End Sub
Private Sub gridPEKD_TRTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_TRTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_TRTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_TRTYPE.GetRowData(gridPEKD_TRTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_TRTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_TRTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRTYPE
End If
end sub
private sub mnuPEKD_TRTYPEAdd_click()
   menuActionPEKD_TRTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEEdit_click()
   menuActionPEKD_TRTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEDelete_click()
   menuActionPEKD_TRTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEOpen_click()
   menuActionPEKD_TRTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPERef_click()
   menuActionPEKD_TRTYPE =&quot;REF&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRTYPE.Row &gt; 0 Then
     If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRTYPE.Row &gt; 0 Then
     If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRTYPE.Row &gt; 0 Then
   If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRTYPE.ItemCount = u.parent.Count
      gridPEKD_TRTYPE.RefreshRowIndex gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRTYPEPrn_click()
   menuActionPEKD_TRTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPECfg_click()
   menuActionPEKD_TRTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEFind_click()
   menuActionPEKD_TRTYPE =&quot;FND&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEAcc_click()
   menuActionPEKD_TRTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRTYPE_timer()
   menuTimerPEKD_TRTYPE.enabled = false
   if menuActionPEKD_TRTYPE =&quot;ADD&quot; then cmdPEKD_TRTYPEADD_CLick
   if menuActionPEKD_TRTYPE =&quot;EDIT&quot; then cmdPEKD_TRTYPEEDIT_CLick
   if menuActionPEKD_TRTYPE =&quot;DEL&quot; then cmdPEKD_TRTYPEDEL_CLick
   if menuActionPEKD_TRTYPE =&quot;RUN&quot; then cmdPEKD_TRTYPERUN_CLick
   if menuActionPEKD_TRTYPE =&quot;REF&quot; then cmdPEKD_TRTYPEREF_CLick
   if menuActionPEKD_TRTYPE =&quot;PRN&quot; then cmdPEKD_TRTYPEPRN_CLick
   if menuActionPEKD_TRTYPE =&quot;CFG&quot; then cmdPEKD_TRTYPECFG_CLick
   if menuActionPEKD_TRTYPE =&quot;FND&quot; then cmdPEKD_TRTYPEFND_CLick
   if menuActionPEKD_TRTYPE =&quot;ACC&quot; then cmdPEKD_TRTYPEACC_CLick
   menuActionPEKD_TRTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRTYPEAdd,cmdPEKD_TRTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRTYPEEdit,cmdPEKD_TRTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRTYPEDel,cmdPEKD_TRTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRTYPERef,cmdPEKD_TRTYPERef.tag
  LoadBtnPictures cmdPEKD_TRTYPEPrn,cmdPEKD_TRTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRTYPEFnd,cmdPEKD_TRTYPEFnd.tag
  LoadBtnPictures cmdPEKD_TRTYPERun,cmdPEKD_TRTYPERun.tag
  LoadBtnPictures cmdPEKD_TRTYPEAcc,cmdPEKD_TRTYPEAcc.tag
  LoadBtnPictures cmdPEKD_TRTYPECfg,cmdPEKD_TRTYPECfg.tag
  item.PEKD_TRTYPE.PrepareGrid gridPEKD_TRTYPE
  LoadGridLayout gridPEKD_TRTYPE
  Set fndPEKD_TRTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_TRTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_TRTYPE.Init gridPEKD_TRTYPE
end sub
private sub OnTabClick()

      gridPEKD_TRTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_TRTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_GOTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_GOTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_GOTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_GOTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_GOTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_GOTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_GOTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_GOTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_GOTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_GOTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы СГО"/><Properties Name="Name" PropValue="mnuPopupPEKD_GOTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_GOTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_GOTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPERef"/></ControlData><ControlData Name="mnuPEKD_GOTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPES1"/></ControlData><ControlData Name="mnuPEKD_GOTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_GOTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_GOTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECUT"/></ControlData><ControlData Name="mnuPEKD_GOTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_GOTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_GOTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_GOTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_GOTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECfg"/></ControlData><ControlData Name="mnuPEKD_GOTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEFind"/></ControlData><ControlData Name="mnuPEKD_GOTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_GOTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_GOTYPE as object
private menuActionPEKD_GOTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_GOTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_GOTYPE,&quot;gridPEKD_GOTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GOTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_GOTYPE,&quot;Типы СГО&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GOTYPERef_Click()
  on error resume next
  item.PEKD_GOTYPE.Refresh
  gridPEKD_GOTYPE.itemCount = item.PEKD_GOTYPE.count
  gridPEKD_GOTYPE.Refetch
  gridPEKD_GOTYPE.Refresh
End Sub
Private Sub cmdPEKD_GOTYPEAcc_Click()
On Error Resume Next
If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_GOTYPE.Row &gt; 0 Then
 If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_GOTYPEEdit_Click()
  on error resume next
If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_GOTYPE.Row &gt; 0 then
 If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_GOTYPE_admi.Item = u
    again: frmPEKD_GOTYPE_admi.NotFirstTime = False
    frmPEKD_GOTYPE_admi.OnInit
    frmPEKD_GOTYPE_admi.Show vbModal
    If frmPEKD_GOTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_GOTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_GOTYPEDel_Click()
  on error resume next
  gridPEKD_GOTYPE.Delete
End Sub
Private Sub cmdPEKD_GOTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_GOTYPE.Add()

      Set frmPEKD_GOTYPE_admi.Item = u
      again: frmPEKD_GOTYPE_admi.NotFirstTime = False
      frmPEKD_GOTYPE_admi.OnInit
      frmPEKD_GOTYPE_admi.Show vbModal
      If frmPEKD_GOTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_GOTYPE.ItemCount = Item.PEKD_GOTYPE.Count
        gridPEKD_GOTYPE.Refresh
        gridPEKD_GOTYPE.RefreshGroups
        gridPEKD_GOTYPE.Refreshsort
        gridPEKD_GOTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_GOTYPE&quot;
      Else
        Item.PEKD_GOTYPE.Delete u.ID
        Item.PEKD_GOTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_GOTYPEFnd_Click()
  on error resume next
  fndPEKD_GOTYPE.ShowForm
End Sub
Private Sub cmdPEKD_GOTYPERun_Click()
  on error resume next
  gridPEKD_GOTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_GOTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_GOTYPE.LoadRow gridPEKD_GOTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_GOTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_GOTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_GOTYPE_DblClick()
  cmdPEKD_GOTYPEEdit_Click
End Sub
Private Sub gridPEKD_GOTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_GOTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_GOTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_GOTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_GOTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_GOTYPE.GetRowData(gridPEKD_GOTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_GOTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_GOTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_GOTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_GOTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_GOTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_GOTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_GOTYPE
End If
end sub
private sub mnuPEKD_GOTYPEAdd_click()
   menuActionPEKD_GOTYPE =&quot;ADD&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEEdit_click()
   menuActionPEKD_GOTYPE =&quot;EDIT&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEDelete_click()
   menuActionPEKD_GOTYPE =&quot;DEL&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEOpen_click()
   menuActionPEKD_GOTYPE =&quot;RUN&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPERef_click()
   menuActionPEKD_GOTYPE =&quot;REF&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
  Private Sub mnuPEKD_GOTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_GOTYPE.Row &gt; 0 Then
     If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_GOTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_GOTYPE.Row &gt; 0 Then
     If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_GOTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_GOTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_GOTYPE.Row &gt; 0 Then
   If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_GOTYPE.ItemCount = u.parent.Count
      gridPEKD_GOTYPE.RefreshRowIndex gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_GOTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_GOTYPEPrn_click()
   menuActionPEKD_GOTYPE =&quot;PRN&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPECfg_click()
   menuActionPEKD_GOTYPE =&quot;CFG&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEFind_click()
   menuActionPEKD_GOTYPE =&quot;FND&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEAcc_click()
   menuActionPEKD_GOTYPE =&quot;ACC&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub menuTimerPEKD_GOTYPE_timer()
   menuTimerPEKD_GOTYPE.enabled = false
   if menuActionPEKD_GOTYPE =&quot;ADD&quot; then cmdPEKD_GOTYPEADD_CLick
   if menuActionPEKD_GOTYPE =&quot;EDIT&quot; then cmdPEKD_GOTYPEEDIT_CLick
   if menuActionPEKD_GOTYPE =&quot;DEL&quot; then cmdPEKD_GOTYPEDEL_CLick
   if menuActionPEKD_GOTYPE =&quot;RUN&quot; then cmdPEKD_GOTYPERUN_CLick
   if menuActionPEKD_GOTYPE =&quot;REF&quot; then cmdPEKD_GOTYPEREF_CLick
   if menuActionPEKD_GOTYPE =&quot;PRN&quot; then cmdPEKD_GOTYPEPRN_CLick
   if menuActionPEKD_GOTYPE =&quot;CFG&quot; then cmdPEKD_GOTYPECFG_CLick
   if menuActionPEKD_GOTYPE =&quot;FND&quot; then cmdPEKD_GOTYPEFND_CLick
   if menuActionPEKD_GOTYPE =&quot;ACC&quot; then cmdPEKD_GOTYPEACC_CLick
   menuActionPEKD_GOTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_GOTYPEAdd,cmdPEKD_GOTYPEAdd.tag
  LoadBtnPictures cmdPEKD_GOTYPEEdit,cmdPEKD_GOTYPEEdit.tag
  LoadBtnPictures cmdPEKD_GOTYPEDel,cmdPEKD_GOTYPEDel.tag
  LoadBtnPictures cmdPEKD_GOTYPERef,cmdPEKD_GOTYPERef.tag
  LoadBtnPictures cmdPEKD_GOTYPEPrn,cmdPEKD_GOTYPEPrn.tag
  LoadBtnPictures cmdPEKD_GOTYPEFnd,cmdPEKD_GOTYPEFnd.tag
  LoadBtnPictures cmdPEKD_GOTYPERun,cmdPEKD_GOTYPERun.tag
  LoadBtnPictures cmdPEKD_GOTYPEAcc,cmdPEKD_GOTYPEAcc.tag
  LoadBtnPictures cmdPEKD_GOTYPECfg,cmdPEKD_GOTYPECfg.tag
  item.PEKD_GOTYPE.PrepareGrid gridPEKD_GOTYPE
  LoadGridLayout gridPEKD_GOTYPE
  Set fndPEKD_GOTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_GOTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_GOTYPE.Init gridPEKD_GOTYPE
end sub
private sub OnTabClick()

      gridPEKD_GOTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_GOTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_GOTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_GOTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRFGRP_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRFGRP" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_TRFGRP"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_TRFGRP" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_TRFGRP"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Indentation" PropValue="75"/><Properties Name="Sorted" PropValue="True"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAddRoot" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAddRoot"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEWROOT.ico"/><Properties Name="ToolTipText" PropValue="Добавить ветку"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridPEKD_TRFTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRFTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRFTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRFTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRFGRP" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Группы тарифов"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRFGRP"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRFGRPAddRoot" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать ветку"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAddRoot"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPS1"/></ControlData><ControlData Name="mnuPEKD_TRFGRPBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRFGRPCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCOPY"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCUT"/></ControlData><ControlData Name="mnuPEKD_TRFGRPPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPPASTE"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCHANGE"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRFGRPRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPRef"/></ControlData><ControlData Name="mnuPEKD_TRFGRPAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRFGRP" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRFGRP"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupPEKD_TRFTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы тарифов"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRFTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRFTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRFTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRFTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRFTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRFTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRFTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRFTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private menuActionPEKD_TRFGRP as string
private fndPEKD_TRFTYPE as object
private menuActionPEKD_TRFTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_TRFGRP_PositionChanged()
  pnlPEKD_TRFGRP.SavePosition
End Sub
private sub treePEKD_TRFGRP_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_TRFGRP
End If
end sub
private sub mnuPEKD_TRFGRPAddRoot_click()
   menuActionPEKD_TRFGRP =&quot;ADDROOT&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPAdd_click()
   menuActionPEKD_TRFGRP =&quot;ADD&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPEdit_click()
   menuActionPEKD_TRFGRP =&quot;EDIT&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPDelete_click()
   menuActionPEKD_TRFGRP =&quot;DEL&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
  Private Sub mnuPEKD_TRFGRPCOPY_Click()
    On Error Resume Next
    If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
        Dim u As Object
        Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
        SaveToBuffer u
  End Sub
  Private Sub mnuPEKD_TRFGRPCUT_Click()
    On Error Resume Next
    If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
    Dim u As Object,BM
    Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
    SaveToBuffer u
    SET BM = u.parent
    u.parent.Delete u.ID
    TREEPEKD_TRFGRP.nodes.remove TREEPEKD_TRFGRP.selecteditem.key
  End Sub
Private Sub mnuPEKD_TRFGRPPASTE_Click()
On Error Resume Next
If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Dim u As Object, f as object
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set u = f.PEKD_TRFGRP.Add()
  If GetFromBuffer(u) Then
    If treePEKD_TRFGRP.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
      u.LoadToTree treePEKD_TRFGRP, treePEKD_TRFGRP.SelectedItem.Key
    end if
  Else
   f.PEKD_TRFGRP.refresh
  End If
End Sub
Private Sub mnuPEKD_TRFGRPCHANGE_Click()
  On Error Resume Next
  If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
  Dim u As Object,BM
  Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  If GetFromBuffer(u) Then
    TREEPEKD_TRFGRP.SELECTEDItem.text = u.brief
      treePEKD_TRFGRP.SelectedItem.Expanded = False
      While treePEKD_TRFGRP.SelectedItem.Children &gt; 0
        treePEKD_TRFGRP.Nodes.Remove treePEKD_TRFGRP.SelectedItem.Child.Key
      Wend
      treePEKD_TRFGRP.Nodes.Add(treePEKD_TRFGRP.SelectedItem.Key, 4, &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_TRFGRP_Expand treePEKD_TRFGRP.SelectedItem
  End If
End Sub
  Private Sub mnuPEKD_TRFGRPCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRFGRPRef_click()
   menuActionPEKD_TRFGRP =&quot;REF&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPAcc_click()
   menuActionPEKD_TRFGRP =&quot;ACC&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub menuTimerPEKD_TRFGRP_timer()
   menuTimerPEKD_TRFGRP.enabled = false
   if menuActionPEKD_TRFGRP =&quot;ADDROOT&quot; then cmdPEKD_TRFGRPADDROOT_CLick
   if menuActionPEKD_TRFGRP =&quot;ADD&quot; then cmdPEKD_TRFGRPADD_CLick
   if menuActionPEKD_TRFGRP =&quot;EDIT&quot; then cmdPEKD_TRFGRPEDIT_CLick
   if menuActionPEKD_TRFGRP =&quot;DEL&quot; then cmdPEKD_TRFGRPDEL_CLick
   if menuActionPEKD_TRFGRP =&quot;REF&quot; then cmdPEKD_TRFGRPREF_CLick
   if menuActionPEKD_TRFGRP =&quot;ACC&quot; then cmdPEKD_TRFGRPACC_CLick
   menuActionPEKD_TRFGRP =&quot;&quot;
end sub
Private Sub cmdPEKD_TRFGRPAdd_Click()
  on error resume next
  on error resume next
  Dim f As Object, p As Object
If (treePEKD_TRFGRP.SelectedItem is Nothing) Then  exit sub
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set f = p.PEKD_TRFGRP.Add()

      Set frmPEKD_TRFGRP_admi.Item = f
      again: frmPEKD_TRFGRP_admi.NotFirstTime = False
      frmPEKD_TRFGRP_admi.OnInit
      frmPEKD_TRFGRP_admi.Show vbModal
      If frmPEKD_TRFGRP_admi.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
          If treePEKD_TRFGRP.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
            f.LoadToTree treePEKD_TRFGRP, treePEKD_TRFGRP.SelectedItem.Key
          end if
          set treePEKD_TRFGRP.SelectedItem = treePEKD_TRFGRP.nodes.item(  f.ID &amp; &quot;PEKD_TRFGRP&quot;)
      Else
        Item.PEKD_TRFGRP.Delete f.ID
        Item.PEKD_TRFGRP.Remove f.ID
      End If
End Sub

Private Sub cmdPEKD_TRFGRPAddRoot_Click()
  on error resume next
Dim f As Object, p As Object
  Set f = Item.PEKD_TRFGRP.Add()

      Set frmPEKD_TRFGRP_admi.Item = f
      again: frmPEKD_TRFGRP_admi.NotFirstTime = False
      frmPEKD_TRFGRP_admi.OnInit
      frmPEKD_TRFGRP_admi.Show vbModal
      If frmPEKD_TRFGRP_admi.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
    Item.PEKD_TRFGRP.refresh
    treePEKD_TRFGRP.nodes.clear
    Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
          set treePEKD_TRFGRP.SelectedItem = treePEKD_TRFGRP.nodes.item(  f.ID &amp; &quot;PEKD_TRFGRP&quot;)
      Else
        Item.PEKD_TRFGRP.Remove f.ID
      End If
End Sub

Private Sub cmdPEKD_TRFGRPEdit_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set frmPEKD_TRFGRP_admi.Item = f
  again: frmPEKD_TRFGRP_admi.NotFirstTime = False
  frmPEKD_TRFGRP_admi.OnInit
  frmPEKD_TRFGRP_admi.Show vbModal
  If frmPEKD_TRFGRP_admi.OK Then
    err.clear
    f.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
  End If
End Sub

Private Sub cmdPEKD_TRFGRPDel_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; f.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
  on error goto bye
     if f.Parent.Delete( f.ID) then
       treePEKD_TRFGRP.Nodes.Remove treePEKD_TRFGRP.SelectedItem.Key
     End If
  End If
Exit Sub
bye:
msgbox err.description,vbokonly+vbExclamation,&quot;Удаление&quot;
End Sub

Private Sub cmdPEKD_TRFGRPAcc_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  item.application.manager.ShowSecurityDialog f
End Sub

Private Sub cmdPEKD_TRFGRPREf_Click()
  on error resume next
  Item.PEKD_TRFGRP.refresh
  treePEKD_TRFGRP.nodes.clear
  Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
End Sub

Private Sub treePEKD_TRFGRP_DblClick()
If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  cmdPEKD_TRFGRPEdit_Click
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function

Private Sub treePEKD_TRFGRP_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_TRFGRP.Nodes.Remove Node.Child.Index
 Dim f As Object
 Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(Node.Key, 38))
 f.expandpart treePEKD_TRFGRP, Node.Key
 parentform.mousepointer = vbNormal
End If
 set treePEKD_TRFGRP.SelectedItem = Node
 treePEKD_TRFGRP_NodeClick Node
End Sub

Private Sub treePEKD_TRFGRP_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_TRFGRP.SelectedItem = Node
 treePEKD_TRFGRP_NodeClick Node
End Sub

Private Sub pnlPEKD_TRFGRP_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_TRFGRP.Left = Left
  treePEKD_TRFGRP.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_TRFGRP.Width = Width
  treePEKD_TRFGRP.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAddRoot.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAddRoot.Left = Left +5 * Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPAdd.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPEdit.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPDel.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPRef.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPAcc.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdPEKD_TRFTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRFTYPE,&quot;gridPEKD_TRFTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRFTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRFTYPE,&quot;Типы тарифов&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRFTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRFTYPE.Row &gt; 0 Then
 If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRFTYPEFnd_Click()
  on error resume next
  fndPEKD_TRFTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRFTYPERun_Click()
  on error resume next
  gridPEKD_TRFTYPE_DblClick
End Sub
Private Sub pnlPEKD_TRFGRP_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_TRFTYPE.Left = Left
  gridPEKD_TRFTYPE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_TRFTYPE.Width = Width
  gridPEKD_TRFTYPE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdPEKD_TRFTYPEEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub treePEKD_TRFGRP_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(Node.Key, 38))
  p.PEKD_TRFTYPE.Refresh
  p.PEKD_TRFTYPE.preparegrid gridPEKD_TRFTYPE
  LoadGridLayout gridPEKD_TRFTYPE
    Set fndPEKD_TRFTYPE = Nothing
    Set fndPEKD_TRFTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_TRFTYPE.Init gridPEKD_TRFTYPE
End Sub

Private Sub gridPEKD_TRFTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
  Dim p As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  p.PEKD_TRFTYPE.LoadRow gridPEKD_TRFTYPE, RowIndex, Bookmark, Values
  Set p = Nothing
End Sub
Private Sub gridPEKD_TRFTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRFTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRFTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
    if gridPEKD_TRFTYPE.Row=0 then exit sub
    if gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)=0 then exit sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
        on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub cmdPEKD_TRFTYPEEdit_Click()
    on error resume next
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
    if gridPEKD_TRFTYPE.Row=0 then exit sub
    if gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)=0 then exit sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)- 38), Left(bm2, 38))
    Set frmPEKD_TRFTYPE_admi.Item = u
    again: frmPEKD_TRFTYPE_admi.NotFirstTime = False
    frmPEKD_TRFTYPE_admi.OnInit
    frmPEKD_TRFTYPE_admi.Show vbModal
    If frmPEKD_TRFTYPE_admi.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRFTYPE.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
  Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdPEKD_TRFTYPERef_Click()
  on error resume next
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
  gridPEKD_TRFTYPE.columns.clear
  gridPEKD_TRFTYPE.itemcount=0
   treePEKD_TRFGRP_NodeClick treePEKD_TRFGRP.selecteditem
End Sub
Private Sub cmdPEKD_TRFTYPEDel_Click()
  on error resume next
   gridPEKD_TRFTYPE.Delete
End Sub
Private Sub cmdPEKD_TRFTYPEAdd_Click()
  on error resume next
   If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
   Dim gu As Object
   Set gu = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.selecteditem.Key, 38))
   Dim u As Object
   Set u = gu.PEKD_TRFTYPE.Add()

      Set frmPEKD_TRFTYPE_admi.Item = u
      again: frmPEKD_TRFTYPE_admi.NotFirstTime = False
      frmPEKD_TRFTYPE_admi.OnInit
      frmPEKD_TRFTYPE_admi.Show vbModal
      If frmPEKD_TRFTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRFTYPE.ItemCount = gu.PEKD_TRFTYPE.Count
        gridPEKD_TRFTYPE.Refresh
        gridPEKD_TRFTYPE.RefreshGroups
        gridPEKD_TRFTYPE.Refreshsort
        gridPEKD_TRFTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRFTYPE&quot;
      Else
        gu.PEKD_TRFTYPE.Delete u.ID
        gu.PEKD_TRFTYPE.Remove u.ID
      End If
Exit Sub
bye:
  MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridPEKD_TRFTYPE_DblClick()
    cmdPEKD_TRFTYPEEdit_click
End Sub
Private Sub gridPEKD_TRFTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
 If gridPEKD_TRFTYPE.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_TRFTYPE.Row And LastRow &gt; 0 Then
     gridPEKD_TRFTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_TRFTYPE.GetRowData(gridPEKD_TRFTYPE.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuPEKD_TRFTYPEPASTE_Click()
On Error Resume Next
   If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
   Dim gu As Object
   Set gu = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.selecteditem.Key, 38))
   Dim u As Object
   Set u = gu.PEKD_TRFTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRFTYPE.ItemCount = u.parent.Count
    ELSE
      GU.PEKD_TRFTYPE.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRFTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRFTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRFTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRFTYPE
End If
end sub
private sub mnuPEKD_TRFTYPEAdd_click()
   menuActionPEKD_TRFTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEEdit_click()
   menuActionPEKD_TRFTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEDelete_click()
   menuActionPEKD_TRFTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEOpen_click()
   menuActionPEKD_TRFTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPERef_click()
   menuActionPEKD_TRFTYPE =&quot;REF&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRFTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRFTYPE.Row &gt; 0 Then
     If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRFTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRFTYPE.Row &gt; 0 Then
     If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRFTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRFTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRFTYPE.Row &gt; 0 Then
   If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRFTYPE.ItemCount = u.parent.Count
      gridPEKD_TRFTYPE.RefreshRowIndex gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRFTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRFTYPEPrn_click()
   menuActionPEKD_TRFTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPECfg_click()
   menuActionPEKD_TRFTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEFind_click()
   menuActionPEKD_TRFTYPE =&quot;FND&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEAcc_click()
   menuActionPEKD_TRFTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRFTYPE_timer()
   menuTimerPEKD_TRFTYPE.enabled = false
   if menuActionPEKD_TRFTYPE =&quot;ADD&quot; then cmdPEKD_TRFTYPEADD_CLick
   if menuActionPEKD_TRFTYPE =&quot;EDIT&quot; then cmdPEKD_TRFTYPEEDIT_CLick
   if menuActionPEKD_TRFTYPE =&quot;DEL&quot; then cmdPEKD_TRFTYPEDEL_CLick
   if menuActionPEKD_TRFTYPE =&quot;RUN&quot; then cmdPEKD_TRFTYPERUN_CLick
   if menuActionPEKD_TRFTYPE =&quot;REF&quot; then cmdPEKD_TRFTYPEREF_CLick
   if menuActionPEKD_TRFTYPE =&quot;PRN&quot; then cmdPEKD_TRFTYPEPRN_CLick
   if menuActionPEKD_TRFTYPE =&quot;CFG&quot; then cmdPEKD_TRFTYPECFG_CLick
   if menuActionPEKD_TRFTYPE =&quot;FND&quot; then cmdPEKD_TRFTYPEFND_CLick
   if menuActionPEKD_TRFTYPE =&quot;ACC&quot; then cmdPEKD_TRFTYPEACC_CLick
   menuActionPEKD_TRFTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRFGRPAddRoot,cmdPEKD_TRFGRPAddRoot.tag
  LoadBtnPictures cmdPEKD_TRFGRPAdd,cmdPEKD_TRFGRPAdd.tag
  LoadBtnPictures cmdPEKD_TRFGRPEdit,cmdPEKD_TRFGRPEdit.tag
  LoadBtnPictures cmdPEKD_TRFGRPDel,cmdPEKD_TRFGRPDel.tag
  LoadBtnPictures cmdPEKD_TRFGRPRef,cmdPEKD_TRFGRPRef.tag
  LoadBtnPictures cmdPEKD_TRFGRPAcc,cmdPEKD_TRFGRPAcc.tag
Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
  LoadBtnPictures cmdPEKD_TRFTYPEAdd,cmdPEKD_TRFTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRFTYPEEdit,cmdPEKD_TRFTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRFTYPEDel,cmdPEKD_TRFTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRFTYPERef,cmdPEKD_TRFTYPERef.tag
  LoadBtnPictures cmdPEKD_TRFTYPEPrn,cmdPEKD_TRFTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRFTYPEFnd,cmdPEKD_TRFTYPEFnd.Tag
  LoadBtnPictures cmdPEKD_TRFTYPECfg,cmdPEKD_TRFTYPECfg.tag
  LoadBtnPictures cmdPEKD_TRFTYPERun,cmdPEKD_TRFTYPERun.Tag
  LoadBtnPictures cmdPEKD_TRFTYPEAcc,cmdPEKD_TRFTYPEAcc.Tag
  gridPEKD_TRFTYPE.Columns.Clear
  gridPEKD_TRFTYPE.ItemCount=0
  cmdPEKD_TRFTYPERef_Click
end sub
private sub OnTabClick()

pnlPEKD_TRFGRP.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRFGRP.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRFTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_DIRECTION_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_DIRECTION" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_DIRECTION"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_DIRECTION" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_DIRECTION"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridPEKD_DIRECTION" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_DIRECTION"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTPEKD_DIRECTIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_DIRECTION" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Направление перевозки"/><Properties Name="Name" PropValue="mnuPopupPEKD_DIRECTION"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_DIRECTIONAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONOpen"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONRef"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONS1"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_DIRECTIONCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCOPY"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCUT"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONPASTE"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCHANGE"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_DIRECTIONPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONPrn"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCfg"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONFind"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_DIRECTION" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_DIRECTION"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_DIRECTION as object
private menuActionPEKD_DIRECTION as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_DIRECTION_PositionChanged()
  pnlPEKD_DIRECTION.SavePosition
End Sub
Private Sub cmdPEKD_DIRECTIONPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_DIRECTION,&quot;Направление перевозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_DIRECTIONFnd_Click()
  on error resume next
  fndPEKD_DIRECTION.ShowForm
End Sub
Private Sub cmdPEKD_DIRECTIONRun_Click()
  on error resume next
  gridPEKD_DIRECTION_DblClick
End Sub
Private Sub pnlPEKD_DIRECTION_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_DIRECTION.Left = Left
  treePEKD_DIRECTION.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_DIRECTION.Width = Width
  treePEKD_DIRECTION.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlPEKD_DIRECTION_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_DIRECTION.Left = Left
  gridPEKD_DIRECTION.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_DIRECTION.Width = Width
  gridPEKD_DIRECTION.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_DIRECTIONAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdPEKD_DIRECTIONEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdPEKD_DIRECTIONDel_Click()
  on error resume next
  gridPEKD_DIRECTION.Delete
End Sub

Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdPEKD_DIRECTIONEdit_Click()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;admi&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DIRECTION.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdPEKD_DIRECTIONAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DIRECTION.SelectedItem.key, 39, 38)
      struct = treePEKD_DIRECTION.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
      If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;admi&quot;)



if TypeName(u)=&quot;PEKD_DIRSTATION&quot; then
u.VolSwitchWeight =150
u.VolSwitchWeightSup =150

end if
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridPEKD_DIRECTION.ItemCount = u.Parent.Count
        gridPEKD_DIRECTION.Refresh
        gridPEKD_DIRECTION.RefreshGroups
        gridPEKD_DIRECTION.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdPEKD_DIRECTIONCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treePEKD_DIRECTION.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_DIRECTION,&quot;gridPEKD_DIRECTION&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treePEKD_DIRECTION_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_DIRECTION.Nodes.Remove Node.Child.Index
 item.Expand treePEKD_DIRECTION, Node.Key, &quot;admi&quot;
 parentform.mousepointer = vbNormal
End If
 set treePEKD_DIRECTION.SelectedItem = Node
 treePEKD_DIRECTION_NodeClick Node
End Sub

Private Sub treePEKD_DIRECTION_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_DIRECTION.SelectedItem = Node
 treePEKD_DIRECTION_NodeClick Node
End Sub

Private Sub treePEKD_DIRECTION_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridPEKD_DIRECTION
      LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.parent.tag
    Set fndPEKD_DIRECTION = Nothing
    Set fndPEKD_DIRECTION = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_DIRECTION.Init gridPEKD_DIRECTION
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridPEKD_DIRECTION
      LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DIRECTION
       LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DIRECTION
       LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTPEKD_DIRECTIONRef_Click()
  on error resume next
  treePEKD_DIRECTION.Nodes.Clear
  Item.FillTree treePEKD_DIRECTION, &quot;&quot;, &quot;&quot;, &quot;PEKD_DIRECTION&quot;
  gridPEKD_DIRECTION.columns.clear
  gridPEKD_DIRECTION.itemcount=0
End Sub
Private Sub cmdPEKD_DIRECTIONRef_Click()
  on error resume next
  treePEKD_DIRECTION_NodeClick   treePEKD_DIRECTION.SelectedItem 
End Sub
Private Sub cmdPEKD_DIRECTIONAcc_Click()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridPEKD_DIRECTION_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
  If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treePEKD_DIRECTION.SelectedItem.Key, 39, 38)
    struct = treePEKD_DIRECTION.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treePEKD_DIRECTION.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
      else
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.Key, 39, 38)
          struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
        End If
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridPEKD_DIRECTION_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_DIRECTION_DblClick()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;admi&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DIRECTION.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridPEKD_DIRECTION_KeyPress(KeyAscii As Integer)
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_DIRECTION.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_DIRECTION_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
 If gridPEKD_DIRECTION.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_DIRECTION.Row And LastRow &gt; 0 Then
     gridPEKD_DIRECTION.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_DIRECTION.GetRowData(gridPEKD_DIRECTION.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridPEKD_DIRECTION_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_DIRECTION
End If
end sub
private sub mnuPEKD_DIRECTIONAdd_click()
   menuActionPEKD_DIRECTION =&quot;ADD&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONEdit_click()
   menuActionPEKD_DIRECTION =&quot;EDIT&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONDelete_click()
   menuActionPEKD_DIRECTION =&quot;DEL&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONOpen_click()
   menuActionPEKD_DIRECTION =&quot;RUN&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONRef_click()
   menuActionPEKD_DIRECTION =&quot;REF&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
  Private Sub mnuPEKD_DIRECTIONCOPY_Click()
    On Error Resume Next
    If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
    If gridPEKD_DIRECTION.Row &gt; 0 Then
     If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_DIRECTIONCUT_Click()
    On Error Resume Next
    If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
    If gridPEKD_DIRECTION.Row &gt; 0 Then
     If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_DIRECTION.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuPEKD_DIRECTIONPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DIRECTION.SelectedItem.key, 39, 38)
      struct = treePEKD_DIRECTION.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
      If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridPEKD_DIRECTION.ItemCount = u.Parent.Count
      gridPEKD_DIRECTION.Refresh
      gridPEKD_DIRECTION.RefreshGroups
      gridPEKD_DIRECTION.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuPEKD_DIRECTIONCHANGE_Click()
  On Error Resume Next
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  If gridPEKD_DIRECTION.Row &gt; 0 Then
   If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_DIRECTION.ItemCount = u.parent.Count
      gridPEKD_DIRECTION.RefreshRowIndex gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_DIRECTIONCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_DIRECTIONPrn_click()
   menuActionPEKD_DIRECTION =&quot;PRN&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONCfg_click()
   menuActionPEKD_DIRECTION =&quot;CFG&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONFind_click()
   menuActionPEKD_DIRECTION =&quot;FND&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONAcc_click()
   menuActionPEKD_DIRECTION =&quot;ACC&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub menuTimerPEKD_DIRECTION_timer()
   menuTimerPEKD_DIRECTION.enabled = false
   if menuActionPEKD_DIRECTION =&quot;ADD&quot; then cmdPEKD_DIRECTIONADD_CLick
   if menuActionPEKD_DIRECTION =&quot;EDIT&quot; then cmdPEKD_DIRECTIONEDIT_CLick
   if menuActionPEKD_DIRECTION =&quot;DEL&quot; then cmdPEKD_DIRECTIONDEL_CLick
   if menuActionPEKD_DIRECTION =&quot;RUN&quot; then cmdPEKD_DIRECTIONRUN_CLick
   if menuActionPEKD_DIRECTION =&quot;REF&quot; then cmdPEKD_DIRECTIONREF_CLick
   if menuActionPEKD_DIRECTION =&quot;PRN&quot; then cmdPEKD_DIRECTIONPRN_CLick
   if menuActionPEKD_DIRECTION =&quot;CFG&quot; then cmdPEKD_DIRECTIONCFG_CLick
   if menuActionPEKD_DIRECTION =&quot;FND&quot; then cmdPEKD_DIRECTIONFND_CLick
   if menuActionPEKD_DIRECTION =&quot;ACC&quot; then cmdPEKD_DIRECTIONACC_CLick
   menuActionPEKD_DIRECTION =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treePEKD_DIRECTION,&quot;&quot;,&quot;admi&quot;,&quot;PEKD_DIRECTION&quot;
  LoadBtnPictures cmdTPEKD_DIRECTIONRef,cmdTPEKD_DIRECTIONRef.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONRef,cmdPEKD_DIRECTIONRef.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONAdd,cmdPEKD_DIRECTIONAdd.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONEdit,cmdPEKD_DIRECTIONEdit.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONDel,cmdPEKD_DIRECTIONDel.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONPrn,cmdPEKD_DIRECTIONPrn.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONFnd,cmdPEKD_DIRECTIONFnd.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONCfg,cmdPEKD_DIRECTIONCfg.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONRun,cmdPEKD_DIRECTIONRun.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONAcc,cmdPEKD_DIRECTIONAcc.Tag
  gridPEKD_DIRECTION.Columns.Clear
  gridPEKD_DIRECTION.ItemCount=0
end sub
private sub OnTabClick()

pnlPEKD_DIRECTION.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_DIRECTION.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_DIRECTION = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_DEPT_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_DEPT" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_DEPT"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_DEPT" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_DEPT"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridPEKD_DEPT" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_DEPT"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTPEKD_DEPTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTPEKD_DEPTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_DEPTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_DEPTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_DEPTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_DEPTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_DEPTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_DEPT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Филиал"/><Properties Name="Name" PropValue="mnuPopupPEKD_DEPT"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_DEPTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_DEPTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_DEPTOpen"/></ControlData><ControlData Name="mnuPEKD_DEPTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTRef"/></ControlData><ControlData Name="mnuPEKD_DEPTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_DEPTS1"/></ControlData><ControlData Name="mnuPEKD_DEPTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_DEPTBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_DEPTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCOPY"/></ControlData><ControlData Name="mnuPEKD_DEPTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCUT"/></ControlData><ControlData Name="mnuPEKD_DEPTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTPASTE"/></ControlData><ControlData Name="mnuPEKD_DEPTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCHANGE"/></ControlData><ControlData Name="mnuPEKD_DEPTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_DEPTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTPrn"/></ControlData><ControlData Name="mnuPEKD_DEPTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCfg"/></ControlData><ControlData Name="mnuPEKD_DEPTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_DEPTFind"/></ControlData><ControlData Name="mnuPEKD_DEPTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_DEPTAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_DEPT" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_DEPT"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_DEPT as object
private menuActionPEKD_DEPT as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_DEPT_PositionChanged()
  pnlPEKD_DEPT.SavePosition
End Sub
Private Sub cmdPEKD_DEPTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_DEPT,&quot;Филиал&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_DEPTFnd_Click()
  on error resume next
  fndPEKD_DEPT.ShowForm
End Sub
Private Sub cmdPEKD_DEPTRun_Click()
  on error resume next
  gridPEKD_DEPT_DblClick
End Sub
Private Sub pnlPEKD_DEPT_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_DEPT.Left = Left
  treePEKD_DEPT.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_DEPT.Width = Width
  treePEKD_DEPT.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlPEKD_DEPT_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_DEPT.Left = Left
  gridPEKD_DEPT.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_DEPT.Width = Width
  gridPEKD_DEPT.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_DEPTAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdPEKD_DEPTEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_DEPTDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_DEPTRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_DEPTPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_DEPTCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_DEPTFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_DEPTRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_DEPTAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdPEKD_DEPTDel_Click()
  on error resume next
  gridPEKD_DEPT.Delete
End Sub

Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdPEKD_DEPTEdit_Click()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;admi&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DEPT.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdPEKD_DEPTAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DEPT.SelectedItem.key, 39, 38)
      struct = treePEKD_DEPT.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
      If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;admi&quot;)




    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridPEKD_DEPT.ItemCount = u.Parent.Count
        gridPEKD_DEPT.Refresh
        gridPEKD_DEPT.RefreshGroups
        gridPEKD_DEPT.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdPEKD_DEPTCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treePEKD_DEPT.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_DEPT,&quot;gridPEKD_DEPT&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treePEKD_DEPT_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_DEPT.Nodes.Remove Node.Child.Index
 item.Expand treePEKD_DEPT, Node.Key, &quot;admi&quot;
 parentform.mousepointer = vbNormal
End If
 set treePEKD_DEPT.SelectedItem = Node
 treePEKD_DEPT_NodeClick Node
End Sub

Private Sub treePEKD_DEPT_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_DEPT.SelectedItem = Node
 treePEKD_DEPT_NodeClick Node
End Sub

Private Sub treePEKD_DEPT_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridPEKD_DEPT
      LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.parent.tag
    Set fndPEKD_DEPT = Nothing
    Set fndPEKD_DEPT = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_DEPT.Init gridPEKD_DEPT
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridPEKD_DEPT
      LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DEPT
       LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DEPT
       LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTPEKD_DEPTRef_Click()
  on error resume next
  treePEKD_DEPT.Nodes.Clear
  Item.FillTree treePEKD_DEPT, &quot;&quot;, &quot;&quot;, &quot;PEKD_DEPT&quot;
  gridPEKD_DEPT.columns.clear
  gridPEKD_DEPT.itemcount=0
End Sub
Private Sub cmdPEKD_DEPTRef_Click()
  on error resume next
  treePEKD_DEPT_NodeClick   treePEKD_DEPT.SelectedItem 
End Sub
Private Sub cmdPEKD_DEPTAcc_Click()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridPEKD_DEPT_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
  If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treePEKD_DEPT.SelectedItem.Key, 39, 38)
    struct = treePEKD_DEPT.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treePEKD_DEPT.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
      else
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treePEKD_DEPT.SelectedItem.Parent.Key, 39, 38)
          struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
        End If
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treePEKD_DEPT.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridPEKD_DEPT_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_DEPT_DblClick()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;admi&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DEPT.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridPEKD_DEPT_KeyPress(KeyAscii As Integer)
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_DEPT.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_DEPT_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
 If gridPEKD_DEPT.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_DEPT.Row And LastRow &gt; 0 Then
     gridPEKD_DEPT.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_DEPT.GetRowData(gridPEKD_DEPT.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridPEKD_DEPT_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_DEPT
End If
end sub
private sub mnuPEKD_DEPTAdd_click()
   menuActionPEKD_DEPT =&quot;ADD&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTEdit_click()
   menuActionPEKD_DEPT =&quot;EDIT&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTDelete_click()
   menuActionPEKD_DEPT =&quot;DEL&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTOpen_click()
   menuActionPEKD_DEPT =&quot;RUN&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTRef_click()
   menuActionPEKD_DEPT =&quot;REF&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
  Private Sub mnuPEKD_DEPTCOPY_Click()
    On Error Resume Next
    If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
    If gridPEKD_DEPT.Row &gt; 0 Then
     If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_DEPTCUT_Click()
    On Error Resume Next
    If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
    If gridPEKD_DEPT.Row &gt; 0 Then
     If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_DEPT.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuPEKD_DEPTPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DEPT.SelectedItem.key, 39, 38)
      struct = treePEKD_DEPT.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
      If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridPEKD_DEPT.ItemCount = u.Parent.Count
      gridPEKD_DEPT.Refresh
      gridPEKD_DEPT.RefreshGroups
      gridPEKD_DEPT.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuPEKD_DEPTCHANGE_Click()
  On Error Resume Next
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  If gridPEKD_DEPT.Row &gt; 0 Then
   If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_DEPT.ItemCount = u.parent.Count
      gridPEKD_DEPT.RefreshRowIndex gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_DEPTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_DEPTPrn_click()
   menuActionPEKD_DEPT =&quot;PRN&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTCfg_click()
   menuActionPEKD_DEPT =&quot;CFG&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTFind_click()
   menuActionPEKD_DEPT =&quot;FND&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTAcc_click()
   menuActionPEKD_DEPT =&quot;ACC&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub menuTimerPEKD_DEPT_timer()
   menuTimerPEKD_DEPT.enabled = false
   if menuActionPEKD_DEPT =&quot;ADD&quot; then cmdPEKD_DEPTADD_CLick
   if menuActionPEKD_DEPT =&quot;EDIT&quot; then cmdPEKD_DEPTEDIT_CLick
   if menuActionPEKD_DEPT =&quot;DEL&quot; then cmdPEKD_DEPTDEL_CLick
   if menuActionPEKD_DEPT =&quot;RUN&quot; then cmdPEKD_DEPTRUN_CLick
   if menuActionPEKD_DEPT =&quot;REF&quot; then cmdPEKD_DEPTREF_CLick
   if menuActionPEKD_DEPT =&quot;PRN&quot; then cmdPEKD_DEPTPRN_CLick
   if menuActionPEKD_DEPT =&quot;CFG&quot; then cmdPEKD_DEPTCFG_CLick
   if menuActionPEKD_DEPT =&quot;FND&quot; then cmdPEKD_DEPTFND_CLick
   if menuActionPEKD_DEPT =&quot;ACC&quot; then cmdPEKD_DEPTACC_CLick
   menuActionPEKD_DEPT =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treePEKD_DEPT,&quot;&quot;,&quot;admi&quot;,&quot;PEKD_DEPT&quot;
  LoadBtnPictures cmdTPEKD_DEPTRef,cmdTPEKD_DEPTRef.Tag
  LoadBtnPictures cmdPEKD_DEPTRef,cmdPEKD_DEPTRef.Tag
  LoadBtnPictures cmdPEKD_DEPTAdd,cmdPEKD_DEPTAdd.Tag
  LoadBtnPictures cmdPEKD_DEPTEdit,cmdPEKD_DEPTEdit.Tag
  LoadBtnPictures cmdPEKD_DEPTDel,cmdPEKD_DEPTDel.Tag
  LoadBtnPictures cmdPEKD_DEPTPrn,cmdPEKD_DEPTPrn.Tag
  LoadBtnPictures cmdPEKD_DEPTFnd,cmdPEKD_DEPTFnd.Tag
  LoadBtnPictures cmdPEKD_DEPTCfg,cmdPEKD_DEPTCfg.Tag
  LoadBtnPictures cmdPEKD_DEPTRun,cmdPEKD_DEPTRun.Tag
  LoadBtnPictures cmdPEKD_DEPTAcc,cmdPEKD_DEPTAcc.Tag
  gridPEKD_DEPT.Columns.Clear
  gridPEKD_DEPT.ItemCount=0
end sub
private sub OnTabClick()

pnlPEKD_DEPT.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_DEPT.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_DEPT = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRAINTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_TRAINTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_TRAINTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRAINTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип поезда"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRAINTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRAINTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRAINTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRAINTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRAINTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_TRAINTYPE as object
private menuActionPEKD_TRAINTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_TRAINTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRAINTYPE,&quot;gridPEKD_TRAINTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRAINTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRAINTYPE,&quot;Тип поезда&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRAINTYPERef_Click()
  on error resume next
  item.PEKD_TRAINTYPE.Refresh
  gridPEKD_TRAINTYPE.itemCount = item.PEKD_TRAINTYPE.count
  gridPEKD_TRAINTYPE.Refetch
  gridPEKD_TRAINTYPE.Refresh
End Sub
Private Sub cmdPEKD_TRAINTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRAINTYPE.Row &gt; 0 Then
 If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRAINTYPEEdit_Click()
  on error resume next
If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRAINTYPE.Row &gt; 0 then
 If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_TRAINTYPE_admi.Item = u
    again: frmPEKD_TRAINTYPE_admi.NotFirstTime = False
    frmPEKD_TRAINTYPE_admi.OnInit
    frmPEKD_TRAINTYPE_admi.Show vbModal
    If frmPEKD_TRAINTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRAINTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_TRAINTYPEDel_Click()
  on error resume next
  gridPEKD_TRAINTYPE.Delete
End Sub
Private Sub cmdPEKD_TRAINTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_TRAINTYPE.Add()

      Set frmPEKD_TRAINTYPE_admi.Item = u
      again: frmPEKD_TRAINTYPE_admi.NotFirstTime = False
      frmPEKD_TRAINTYPE_admi.OnInit
      frmPEKD_TRAINTYPE_admi.Show vbModal
      If frmPEKD_TRAINTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRAINTYPE.ItemCount = Item.PEKD_TRAINTYPE.Count
        gridPEKD_TRAINTYPE.Refresh
        gridPEKD_TRAINTYPE.RefreshGroups
        gridPEKD_TRAINTYPE.Refreshsort
        gridPEKD_TRAINTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRAINTYPE&quot;
      Else
        Item.PEKD_TRAINTYPE.Delete u.ID
        Item.PEKD_TRAINTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_TRAINTYPEFnd_Click()
  on error resume next
  fndPEKD_TRAINTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRAINTYPERun_Click()
  on error resume next
  gridPEKD_TRAINTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_TRAINTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_TRAINTYPE.LoadRow gridPEKD_TRAINTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_TRAINTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_TRAINTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_TRAINTYPE_DblClick()
  cmdPEKD_TRAINTYPEEdit_Click
End Sub
Private Sub gridPEKD_TRAINTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRAINTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRAINTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_TRAINTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_TRAINTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_TRAINTYPE.GetRowData(gridPEKD_TRAINTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_TRAINTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_TRAINTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRAINTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRAINTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRAINTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRAINTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRAINTYPE
End If
end sub
private sub mnuPEKD_TRAINTYPEAdd_click()
   menuActionPEKD_TRAINTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEEdit_click()
   menuActionPEKD_TRAINTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEDelete_click()
   menuActionPEKD_TRAINTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEOpen_click()
   menuActionPEKD_TRAINTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPERef_click()
   menuActionPEKD_TRAINTYPE =&quot;REF&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRAINTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRAINTYPE.Row &gt; 0 Then
     If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRAINTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRAINTYPE.Row &gt; 0 Then
     If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRAINTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRAINTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRAINTYPE.Row &gt; 0 Then
   If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRAINTYPE.ItemCount = u.parent.Count
      gridPEKD_TRAINTYPE.RefreshRowIndex gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRAINTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRAINTYPEPrn_click()
   menuActionPEKD_TRAINTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPECfg_click()
   menuActionPEKD_TRAINTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEFind_click()
   menuActionPEKD_TRAINTYPE =&quot;FND&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEAcc_click()
   menuActionPEKD_TRAINTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRAINTYPE_timer()
   menuTimerPEKD_TRAINTYPE.enabled = false
   if menuActionPEKD_TRAINTYPE =&quot;ADD&quot; then cmdPEKD_TRAINTYPEADD_CLick
   if menuActionPEKD_TRAINTYPE =&quot;EDIT&quot; then cmdPEKD_TRAINTYPEEDIT_CLick
   if menuActionPEKD_TRAINTYPE =&quot;DEL&quot; then cmdPEKD_TRAINTYPEDEL_CLick
   if menuActionPEKD_TRAINTYPE =&quot;RUN&quot; then cmdPEKD_TRAINTYPERUN_CLick
   if menuActionPEKD_TRAINTYPE =&quot;REF&quot; then cmdPEKD_TRAINTYPEREF_CLick
   if menuActionPEKD_TRAINTYPE =&quot;PRN&quot; then cmdPEKD_TRAINTYPEPRN_CLick
   if menuActionPEKD_TRAINTYPE =&quot;CFG&quot; then cmdPEKD_TRAINTYPECFG_CLick
   if menuActionPEKD_TRAINTYPE =&quot;FND&quot; then cmdPEKD_TRAINTYPEFND_CLick
   if menuActionPEKD_TRAINTYPE =&quot;ACC&quot; then cmdPEKD_TRAINTYPEACC_CLick
   menuActionPEKD_TRAINTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRAINTYPEAdd,cmdPEKD_TRAINTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEEdit,cmdPEKD_TRAINTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEDel,cmdPEKD_TRAINTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRAINTYPERef,cmdPEKD_TRAINTYPERef.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEPrn,cmdPEKD_TRAINTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEFnd,cmdPEKD_TRAINTYPEFnd.tag
  LoadBtnPictures cmdPEKD_TRAINTYPERun,cmdPEKD_TRAINTYPERun.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEAcc,cmdPEKD_TRAINTYPEAcc.tag
  LoadBtnPictures cmdPEKD_TRAINTYPECfg,cmdPEKD_TRAINTYPECfg.tag
  item.PEKD_TRAINTYPE.PrepareGrid gridPEKD_TRAINTYPE
  LoadGridLayout gridPEKD_TRAINTYPE
  Set fndPEKD_TRAINTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_TRAINTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_TRAINTYPE.Init gridPEKD_TRAINTYPE
end sub
private sub OnTabClick()

      gridPEKD_TRAINTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_TRAINTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRAINTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRAINTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_ADDS_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_ADDS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_ADDS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_ADDS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_ADDS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_ADDSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_ADDSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_ADDSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_ADDSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_ADDSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_ADDSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_ADDS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Надбавки"/><Properties Name="Name" PropValue="mnuPopupPEKD_ADDS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_ADDSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_ADDSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_ADDSOpen"/></ControlData><ControlData Name="mnuPEKD_ADDSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSRef"/></ControlData><ControlData Name="mnuPEKD_ADDSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_ADDSS1"/></ControlData><ControlData Name="mnuPEKD_ADDSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_ADDSBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_ADDSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCOPY"/></ControlData><ControlData Name="mnuPEKD_ADDSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCUT"/></ControlData><ControlData Name="mnuPEKD_ADDSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSPASTE"/></ControlData><ControlData Name="mnuPEKD_ADDSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCHANGE"/></ControlData><ControlData Name="mnuPEKD_ADDSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_ADDSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSPrn"/></ControlData><ControlData Name="mnuPEKD_ADDSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCfg"/></ControlData><ControlData Name="mnuPEKD_ADDSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_ADDSFind"/></ControlData><ControlData Name="mnuPEKD_ADDSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_ADDSAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_ADDS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_ADDS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_ADDS as object
private menuActionPEKD_ADDS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_ADDSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_ADDS,&quot;gridPEKD_ADDS&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_ADDSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_ADDS,&quot;Надбавки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_ADDSRef_Click()
  on error resume next
  item.PEKD_ADDS.Refresh
  gridPEKD_ADDS.itemCount = item.PEKD_ADDS.count
  gridPEKD_ADDS.Refetch
  gridPEKD_ADDS.Refresh
End Sub
Private Sub cmdPEKD_ADDSAcc_Click()
On Error Resume Next
If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKD_ADDS.Row &gt; 0 Then
 If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_ADDSEdit_Click()
  on error resume next
If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKD_ADDS.Row &gt; 0 then
 If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_ADDS_admi.Item = u
    again: frmPEKD_ADDS_admi.NotFirstTime = False
    frmPEKD_ADDS_admi.OnInit
    frmPEKD_ADDS_admi.Show vbModal
    If frmPEKD_ADDS_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_ADDS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_ADDSDel_Click()
  on error resume next
  gridPEKD_ADDS.Delete
End Sub
Private Sub cmdPEKD_ADDSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_ADDS.Add()

      Set frmPEKD_ADDS_admi.Item = u
      again: frmPEKD_ADDS_admi.NotFirstTime = False
      frmPEKD_ADDS_admi.OnInit
      frmPEKD_ADDS_admi.Show vbModal
      If frmPEKD_ADDS_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_ADDS.ItemCount = Item.PEKD_ADDS.Count
        gridPEKD_ADDS.Refresh
        gridPEKD_ADDS.RefreshGroups
        gridPEKD_ADDS.Refreshsort
        gridPEKD_ADDS.MoveToBookmark u.ID &amp; &quot;PEKD_ADDS&quot;
      Else
        Item.PEKD_ADDS.Delete u.ID
        Item.PEKD_ADDS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_ADDSFnd_Click()
  on error resume next
  fndPEKD_ADDS.ShowForm
End Sub
Private Sub cmdPEKD_ADDSRun_Click()
  on error resume next
  gridPEKD_ADDS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_ADDS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_ADDS.LoadRow gridPEKD_ADDS, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_ADDS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_ADDS&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_ADDS_DblClick()
  cmdPEKD_ADDSEdit_Click
End Sub
Private Sub gridPEKD_ADDS_KeyPress(KeyAscii As Integer)
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_ADDS.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_ADDS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_ADDS.Row And LastRow &gt; 0 Then
  gridPEKD_ADDS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_ADDS.GetRowData(gridPEKD_ADDS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_ADDSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_ADDS.Add()
    If GetFromBuffer(u) Then
      gridPEKD_ADDS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_ADDS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_ADDSCfg_Click
        End If
    End If
end sub

private sub gridPEKD_ADDS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_ADDS
End If
end sub
private sub mnuPEKD_ADDSAdd_click()
   menuActionPEKD_ADDS =&quot;ADD&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSEdit_click()
   menuActionPEKD_ADDS =&quot;EDIT&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSDelete_click()
   menuActionPEKD_ADDS =&quot;DEL&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSOpen_click()
   menuActionPEKD_ADDS =&quot;RUN&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSRef_click()
   menuActionPEKD_ADDS =&quot;REF&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
  Private Sub mnuPEKD_ADDSCOPY_Click()
    On Error Resume Next
    If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKD_ADDS.Row &gt; 0 Then
     If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_ADDSCUT_Click()
    On Error Resume Next
    If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKD_ADDS.Row &gt; 0 Then
     If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_ADDS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_ADDSCHANGE_Click()
  On Error Resume Next
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  If gridPEKD_ADDS.Row &gt; 0 Then
   If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_ADDS.ItemCount = u.parent.Count
      gridPEKD_ADDS.RefreshRowIndex gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_ADDSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_ADDSPrn_click()
   menuActionPEKD_ADDS =&quot;PRN&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSCfg_click()
   menuActionPEKD_ADDS =&quot;CFG&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSFind_click()
   menuActionPEKD_ADDS =&quot;FND&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSAcc_click()
   menuActionPEKD_ADDS =&quot;ACC&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub menuTimerPEKD_ADDS_timer()
   menuTimerPEKD_ADDS.enabled = false
   if menuActionPEKD_ADDS =&quot;ADD&quot; then cmdPEKD_ADDSADD_CLick
   if menuActionPEKD_ADDS =&quot;EDIT&quot; then cmdPEKD_ADDSEDIT_CLick
   if menuActionPEKD_ADDS =&quot;DEL&quot; then cmdPEKD_ADDSDEL_CLick
   if menuActionPEKD_ADDS =&quot;RUN&quot; then cmdPEKD_ADDSRUN_CLick
   if menuActionPEKD_ADDS =&quot;REF&quot; then cmdPEKD_ADDSREF_CLick
   if menuActionPEKD_ADDS =&quot;PRN&quot; then cmdPEKD_ADDSPRN_CLick
   if menuActionPEKD_ADDS =&quot;CFG&quot; then cmdPEKD_ADDSCFG_CLick
   if menuActionPEKD_ADDS =&quot;FND&quot; then cmdPEKD_ADDSFND_CLick
   if menuActionPEKD_ADDS =&quot;ACC&quot; then cmdPEKD_ADDSACC_CLick
   menuActionPEKD_ADDS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_ADDSAdd,cmdPEKD_ADDSAdd.tag
  LoadBtnPictures cmdPEKD_ADDSEdit,cmdPEKD_ADDSEdit.tag
  LoadBtnPictures cmdPEKD_ADDSDel,cmdPEKD_ADDSDel.tag
  LoadBtnPictures cmdPEKD_ADDSRef,cmdPEKD_ADDSRef.tag
  LoadBtnPictures cmdPEKD_ADDSPrn,cmdPEKD_ADDSPrn.tag
  LoadBtnPictures cmdPEKD_ADDSFnd,cmdPEKD_ADDSFnd.tag
  LoadBtnPictures cmdPEKD_ADDSRun,cmdPEKD_ADDSRun.tag
  LoadBtnPictures cmdPEKD_ADDSAcc,cmdPEKD_ADDSAcc.tag
  LoadBtnPictures cmdPEKD_ADDSCfg,cmdPEKD_ADDSCfg.tag
  item.PEKD_ADDS.PrepareGrid gridPEKD_ADDS
  LoadGridLayout gridPEKD_ADDS
  Set fndPEKD_ADDS = Nothing
  On Error Resume Next
  Set fndPEKD_ADDS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_ADDS.Init gridPEKD_ADDS
end sub
private sub OnTabClick()

      gridPEKD_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_ADDS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_ADDS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_POSTTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_POSTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_POSTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_POSTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_POSTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_POSTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Характер отправления"/><Properties Name="Name" PropValue="mnuPopupPEKD_POSTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_POSTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_POSTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPERef"/></ControlData><ControlData Name="mnuPEKD_POSTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPES1"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_POSTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECUT"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_POSTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECfg"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEFind"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_POSTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_POSTTYPE as object
private menuActionPEKD_POSTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_POSTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_POSTTYPE,&quot;gridPEKD_POSTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_POSTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_POSTTYPE,&quot;Характер отправления&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_POSTTYPERef_Click()
  on error resume next
  item.PEKD_POSTTYPE.Refresh
  gridPEKD_POSTTYPE.itemCount = item.PEKD_POSTTYPE.count
  gridPEKD_POSTTYPE.Refetch
  gridPEKD_POSTTYPE.Refresh
End Sub
Private Sub cmdPEKD_POSTTYPEAcc_Click()
On Error Resume Next
If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_POSTTYPE.Row &gt; 0 Then
 If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_POSTTYPEEdit_Click()
  on error resume next
If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_POSTTYPE.Row &gt; 0 then
 If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_POSTTYPE_admi.Item = u
    again: frmPEKD_POSTTYPE_admi.NotFirstTime = False
    frmPEKD_POSTTYPE_admi.OnInit
    frmPEKD_POSTTYPE_admi.Show vbModal
    If frmPEKD_POSTTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_POSTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_POSTTYPEDel_Click()
  on error resume next
  gridPEKD_POSTTYPE.Delete
End Sub
Private Sub cmdPEKD_POSTTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_POSTTYPE.Add()

      Set frmPEKD_POSTTYPE_admi.Item = u
      again: frmPEKD_POSTTYPE_admi.NotFirstTime = False
      frmPEKD_POSTTYPE_admi.OnInit
      frmPEKD_POSTTYPE_admi.Show vbModal
      If frmPEKD_POSTTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_POSTTYPE.ItemCount = Item.PEKD_POSTTYPE.Count
        gridPEKD_POSTTYPE.Refresh
        gridPEKD_POSTTYPE.RefreshGroups
        gridPEKD_POSTTYPE.Refreshsort
        gridPEKD_POSTTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_POSTTYPE&quot;
      Else
        Item.PEKD_POSTTYPE.Delete u.ID
        Item.PEKD_POSTTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_POSTTYPEFnd_Click()
  on error resume next
  fndPEKD_POSTTYPE.ShowForm
End Sub
Private Sub cmdPEKD_POSTTYPERun_Click()
  on error resume next
  gridPEKD_POSTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_POSTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_POSTTYPE.LoadRow gridPEKD_POSTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_POSTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_POSTTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_POSTTYPE_DblClick()
  cmdPEKD_POSTTYPEEdit_Click
End Sub
Private Sub gridPEKD_POSTTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_POSTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_POSTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_POSTTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_POSTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_POSTTYPE.GetRowData(gridPEKD_POSTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_POSTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_POSTTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_POSTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_POSTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_POSTTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_POSTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_POSTTYPE
End If
end sub
private sub mnuPEKD_POSTTYPEAdd_click()
   menuActionPEKD_POSTTYPE =&quot;ADD&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEEdit_click()
   menuActionPEKD_POSTTYPE =&quot;EDIT&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEDelete_click()
   menuActionPEKD_POSTTYPE =&quot;DEL&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEOpen_click()
   menuActionPEKD_POSTTYPE =&quot;RUN&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPERef_click()
   menuActionPEKD_POSTTYPE =&quot;REF&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
  Private Sub mnuPEKD_POSTTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_POSTTYPE.Row &gt; 0 Then
     If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_POSTTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_POSTTYPE.Row &gt; 0 Then
     If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_POSTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_POSTTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_POSTTYPE.Row &gt; 0 Then
   If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_POSTTYPE.ItemCount = u.parent.Count
      gridPEKD_POSTTYPE.RefreshRowIndex gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_POSTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_POSTTYPEPrn_click()
   menuActionPEKD_POSTTYPE =&quot;PRN&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPECfg_click()
   menuActionPEKD_POSTTYPE =&quot;CFG&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEFind_click()
   menuActionPEKD_POSTTYPE =&quot;FND&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEAcc_click()
   menuActionPEKD_POSTTYPE =&quot;ACC&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub menuTimerPEKD_POSTTYPE_timer()
   menuTimerPEKD_POSTTYPE.enabled = false
   if menuActionPEKD_POSTTYPE =&quot;ADD&quot; then cmdPEKD_POSTTYPEADD_CLick
   if menuActionPEKD_POSTTYPE =&quot;EDIT&quot; then cmdPEKD_POSTTYPEEDIT_CLick
   if menuActionPEKD_POSTTYPE =&quot;DEL&quot; then cmdPEKD_POSTTYPEDEL_CLick
   if menuActionPEKD_POSTTYPE =&quot;RUN&quot; then cmdPEKD_POSTTYPERUN_CLick
   if menuActionPEKD_POSTTYPE =&quot;REF&quot; then cmdPEKD_POSTTYPEREF_CLick
   if menuActionPEKD_POSTTYPE =&quot;PRN&quot; then cmdPEKD_POSTTYPEPRN_CLick
   if menuActionPEKD_POSTTYPE =&quot;CFG&quot; then cmdPEKD_POSTTYPECFG_CLick
   if menuActionPEKD_POSTTYPE =&quot;FND&quot; then cmdPEKD_POSTTYPEFND_CLick
   if menuActionPEKD_POSTTYPE =&quot;ACC&quot; then cmdPEKD_POSTTYPEACC_CLick
   menuActionPEKD_POSTTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_POSTTYPEAdd,cmdPEKD_POSTTYPEAdd.tag
  LoadBtnPictures cmdPEKD_POSTTYPEEdit,cmdPEKD_POSTTYPEEdit.tag
  LoadBtnPictures cmdPEKD_POSTTYPEDel,cmdPEKD_POSTTYPEDel.tag
  LoadBtnPictures cmdPEKD_POSTTYPERef,cmdPEKD_POSTTYPERef.tag
  LoadBtnPictures cmdPEKD_POSTTYPEPrn,cmdPEKD_POSTTYPEPrn.tag
  LoadBtnPictures cmdPEKD_POSTTYPEFnd,cmdPEKD_POSTTYPEFnd.tag
  LoadBtnPictures cmdPEKD_POSTTYPERun,cmdPEKD_POSTTYPERun.tag
  LoadBtnPictures cmdPEKD_POSTTYPEAcc,cmdPEKD_POSTTYPEAcc.tag
  LoadBtnPictures cmdPEKD_POSTTYPECfg,cmdPEKD_POSTTYPECfg.tag
  item.PEKD_POSTTYPE.PrepareGrid gridPEKD_POSTTYPE
  LoadGridLayout gridPEKD_POSTTYPE
  Set fndPEKD_POSTTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_POSTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_POSTTYPE.Init gridPEKD_POSTTYPE
end sub
private sub OnTabClick()

      gridPEKD_POSTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_POSTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_POSTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_POSTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_INFOSENDTYPE_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_INFOSENDTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_INFOSENDTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Способ передачи информации"/><Properties Name="Name" PropValue="mnuPopupPEKD_INFOSENDTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_INFOSENDTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPERef"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPES1"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_INFOSENDTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECUT"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECfg"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEFind"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_INFOSENDTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_INFOSENDTYPE as object
private menuActionPEKD_INFOSENDTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_INFOSENDTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_INFOSENDTYPE,&quot;gridPEKD_INFOSENDTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_INFOSENDTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_INFOSENDTYPE,&quot;Способ передачи информации&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_INFOSENDTYPERef_Click()
  on error resume next
  item.PEKD_INFOSENDTYPE.Refresh
  gridPEKD_INFOSENDTYPE.itemCount = item.PEKD_INFOSENDTYPE.count
  gridPEKD_INFOSENDTYPE.Refetch
  gridPEKD_INFOSENDTYPE.Refresh
End Sub
Private Sub cmdPEKD_INFOSENDTYPEAcc_Click()
On Error Resume Next
If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
 If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_INFOSENDTYPEEdit_Click()
  on error resume next
If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_INFOSENDTYPE.Row &gt; 0 then
 If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_INFOSENDTYPE_admi.Item = u
    again: frmPEKD_INFOSENDTYPE_admi.NotFirstTime = False
    frmPEKD_INFOSENDTYPE_admi.OnInit
    frmPEKD_INFOSENDTYPE_admi.Show vbModal
    If frmPEKD_INFOSENDTYPE_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_INFOSENDTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_INFOSENDTYPEDel_Click()
  on error resume next
  gridPEKD_INFOSENDTYPE.Delete
End Sub
Private Sub cmdPEKD_INFOSENDTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_INFOSENDTYPE.Add()

      Set frmPEKD_INFOSENDTYPE_admi.Item = u
      again: frmPEKD_INFOSENDTYPE_admi.NotFirstTime = False
      frmPEKD_INFOSENDTYPE_admi.OnInit
      frmPEKD_INFOSENDTYPE_admi.Show vbModal
      If frmPEKD_INFOSENDTYPE_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_INFOSENDTYPE.ItemCount = Item.PEKD_INFOSENDTYPE.Count
        gridPEKD_INFOSENDTYPE.Refresh
        gridPEKD_INFOSENDTYPE.RefreshGroups
        gridPEKD_INFOSENDTYPE.Refreshsort
        gridPEKD_INFOSENDTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_INFOSENDTYPE&quot;
      Else
        Item.PEKD_INFOSENDTYPE.Delete u.ID
        Item.PEKD_INFOSENDTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_INFOSENDTYPEFnd_Click()
  on error resume next
  fndPEKD_INFOSENDTYPE.ShowForm
End Sub
Private Sub cmdPEKD_INFOSENDTYPERun_Click()
  on error resume next
  gridPEKD_INFOSENDTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_INFOSENDTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_INFOSENDTYPE.LoadRow gridPEKD_INFOSENDTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_INFOSENDTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_INFOSENDTYPE&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_INFOSENDTYPE_DblClick()
  cmdPEKD_INFOSENDTYPEEdit_Click
End Sub
Private Sub gridPEKD_INFOSENDTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_INFOSENDTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_INFOSENDTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_INFOSENDTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_INFOSENDTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_INFOSENDTYPE.GetRowData(gridPEKD_INFOSENDTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_INFOSENDTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_INFOSENDTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_INFOSENDTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_INFOSENDTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_INFOSENDTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_INFOSENDTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_INFOSENDTYPE
End If
end sub
private sub mnuPEKD_INFOSENDTYPEAdd_click()
   menuActionPEKD_INFOSENDTYPE =&quot;ADD&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEEdit_click()
   menuActionPEKD_INFOSENDTYPE =&quot;EDIT&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEDelete_click()
   menuActionPEKD_INFOSENDTYPE =&quot;DEL&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEOpen_click()
   menuActionPEKD_INFOSENDTYPE =&quot;RUN&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPERef_click()
   menuActionPEKD_INFOSENDTYPE =&quot;REF&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
  Private Sub mnuPEKD_INFOSENDTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
     If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_INFOSENDTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
     If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_INFOSENDTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_INFOSENDTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
   If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_INFOSENDTYPE.ItemCount = u.parent.Count
      gridPEKD_INFOSENDTYPE.RefreshRowIndex gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_INFOSENDTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_INFOSENDTYPEPrn_click()
   menuActionPEKD_INFOSENDTYPE =&quot;PRN&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPECfg_click()
   menuActionPEKD_INFOSENDTYPE =&quot;CFG&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEFind_click()
   menuActionPEKD_INFOSENDTYPE =&quot;FND&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEAcc_click()
   menuActionPEKD_INFOSENDTYPE =&quot;ACC&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub menuTimerPEKD_INFOSENDTYPE_timer()
   menuTimerPEKD_INFOSENDTYPE.enabled = false
   if menuActionPEKD_INFOSENDTYPE =&quot;ADD&quot; then cmdPEKD_INFOSENDTYPEADD_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;EDIT&quot; then cmdPEKD_INFOSENDTYPEEDIT_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;DEL&quot; then cmdPEKD_INFOSENDTYPEDEL_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;RUN&quot; then cmdPEKD_INFOSENDTYPERUN_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;REF&quot; then cmdPEKD_INFOSENDTYPEREF_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;PRN&quot; then cmdPEKD_INFOSENDTYPEPRN_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;CFG&quot; then cmdPEKD_INFOSENDTYPECFG_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;FND&quot; then cmdPEKD_INFOSENDTYPEFND_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;ACC&quot; then cmdPEKD_INFOSENDTYPEACC_CLick
   menuActionPEKD_INFOSENDTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_INFOSENDTYPEAdd,cmdPEKD_INFOSENDTYPEAdd.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEEdit,cmdPEKD_INFOSENDTYPEEdit.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEDel,cmdPEKD_INFOSENDTYPEDel.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPERef,cmdPEKD_INFOSENDTYPERef.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEPrn,cmdPEKD_INFOSENDTYPEPrn.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEFnd,cmdPEKD_INFOSENDTYPEFnd.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPERun,cmdPEKD_INFOSENDTYPERun.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEAcc,cmdPEKD_INFOSENDTYPEAcc.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPECfg,cmdPEKD_INFOSENDTYPECfg.tag
  item.PEKD_INFOSENDTYPE.PrepareGrid gridPEKD_INFOSENDTYPE
  LoadGridLayout gridPEKD_INFOSENDTYPE
  Set fndPEKD_INFOSENDTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_INFOSENDTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_INFOSENDTYPE.Init gridPEKD_INFOSENDTYPE
end sub
private sub OnTabClick()

      gridPEKD_INFOSENDTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_INFOSENDTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_INFOSENDTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_INFOSENDTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_AUTO_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_AUTO" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_AUTO"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_AUTO" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_AUTO"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_AUTOAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTOEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTODel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTODel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTORef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTORef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_AUTOPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_AUTOCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_AUTOFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_AUTORun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_AUTORun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_AUTOAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_AUTO" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип автотранспорта"/><Properties Name="Name" PropValue="mnuPopupPEKD_AUTO"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_AUTOAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTOEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_AUTOEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTODelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_AUTODelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTOOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_AUTOOpen"/></ControlData><ControlData Name="mnuPEKD_AUTORef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_AUTORef"/></ControlData><ControlData Name="mnuPEKD_AUTOS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_AUTOS1"/></ControlData><ControlData Name="mnuPEKD_AUTOBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_AUTOBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_AUTOCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCOPY"/></ControlData><ControlData Name="mnuPEKD_AUTOCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCUT"/></ControlData><ControlData Name="mnuPEKD_AUTOPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOPASTE"/></ControlData><ControlData Name="mnuPEKD_AUTOCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCHANGE"/></ControlData><ControlData Name="mnuPEKD_AUTOCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_AUTOPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOPrn"/></ControlData><ControlData Name="mnuPEKD_AUTOCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCfg"/></ControlData><ControlData Name="mnuPEKD_AUTOFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_AUTOFind"/></ControlData><ControlData Name="mnuPEKD_AUTOAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_AUTOAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_AUTO" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_AUTO"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_AUTO as object
private menuActionPEKD_AUTO as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_AUTOCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_AUTO,&quot;gridPEKD_AUTO&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_AUTOPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_AUTO,&quot;Тип автотранспорта&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_AUTORef_Click()
  on error resume next
  item.PEKD_AUTO.Refresh
  gridPEKD_AUTO.itemCount = item.PEKD_AUTO.count
  gridPEKD_AUTO.Refetch
  gridPEKD_AUTO.Refresh
End Sub
Private Sub cmdPEKD_AUTOAcc_Click()
On Error Resume Next
If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKD_AUTO.Row &gt; 0 Then
 If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_AUTOEdit_Click()
  on error resume next
If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKD_AUTO.Row &gt; 0 then
 If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_AUTO_admi.Item = u
    again: frmPEKD_AUTO_admi.NotFirstTime = False
    frmPEKD_AUTO_admi.OnInit
    frmPEKD_AUTO_admi.Show vbModal
    If frmPEKD_AUTO_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_AUTO.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_AUTODel_Click()
  on error resume next
  gridPEKD_AUTO.Delete
End Sub
Private Sub cmdPEKD_AUTOAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_AUTO.Add()

      Set frmPEKD_AUTO_admi.Item = u
      again: frmPEKD_AUTO_admi.NotFirstTime = False
      frmPEKD_AUTO_admi.OnInit
      frmPEKD_AUTO_admi.Show vbModal
      If frmPEKD_AUTO_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_AUTO.ItemCount = Item.PEKD_AUTO.Count
        gridPEKD_AUTO.Refresh
        gridPEKD_AUTO.RefreshGroups
        gridPEKD_AUTO.Refreshsort
        gridPEKD_AUTO.MoveToBookmark u.ID &amp; &quot;PEKD_AUTO&quot;
      Else
        Item.PEKD_AUTO.Delete u.ID
        Item.PEKD_AUTO.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_AUTOFnd_Click()
  on error resume next
  fndPEKD_AUTO.ShowForm
End Sub
Private Sub cmdPEKD_AUTORun_Click()
  on error resume next
  gridPEKD_AUTO_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_AUTO_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_AUTO.LoadRow gridPEKD_AUTO, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_AUTO_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_AUTO&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_AUTO_DblClick()
  cmdPEKD_AUTOEdit_Click
End Sub
Private Sub gridPEKD_AUTO_KeyPress(KeyAscii As Integer)
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_AUTO.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_AUTO_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_AUTO.Row And LastRow &gt; 0 Then
  gridPEKD_AUTO.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_AUTO.GetRowData(gridPEKD_AUTO.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_AUTOPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_AUTO.Add()
    If GetFromBuffer(u) Then
      gridPEKD_AUTO.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_AUTO_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_AUTOCfg_Click
        End If
    End If
end sub

private sub gridPEKD_AUTO_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_AUTO
End If
end sub
private sub mnuPEKD_AUTOAdd_click()
   menuActionPEKD_AUTO =&quot;ADD&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOEdit_click()
   menuActionPEKD_AUTO =&quot;EDIT&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTODelete_click()
   menuActionPEKD_AUTO =&quot;DEL&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOOpen_click()
   menuActionPEKD_AUTO =&quot;RUN&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTORef_click()
   menuActionPEKD_AUTO =&quot;REF&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
  Private Sub mnuPEKD_AUTOCOPY_Click()
    On Error Resume Next
    If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKD_AUTO.Row &gt; 0 Then
     If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_AUTOCUT_Click()
    On Error Resume Next
    If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKD_AUTO.Row &gt; 0 Then
     If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_AUTO.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_AUTOCHANGE_Click()
  On Error Resume Next
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  If gridPEKD_AUTO.Row &gt; 0 Then
   If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_AUTO.ItemCount = u.parent.Count
      gridPEKD_AUTO.RefreshRowIndex gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_AUTOCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_AUTOPrn_click()
   menuActionPEKD_AUTO =&quot;PRN&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOCfg_click()
   menuActionPEKD_AUTO =&quot;CFG&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOFind_click()
   menuActionPEKD_AUTO =&quot;FND&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOAcc_click()
   menuActionPEKD_AUTO =&quot;ACC&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub menuTimerPEKD_AUTO_timer()
   menuTimerPEKD_AUTO.enabled = false
   if menuActionPEKD_AUTO =&quot;ADD&quot; then cmdPEKD_AUTOADD_CLick
   if menuActionPEKD_AUTO =&quot;EDIT&quot; then cmdPEKD_AUTOEDIT_CLick
   if menuActionPEKD_AUTO =&quot;DEL&quot; then cmdPEKD_AUTODEL_CLick
   if menuActionPEKD_AUTO =&quot;RUN&quot; then cmdPEKD_AUTORUN_CLick
   if menuActionPEKD_AUTO =&quot;REF&quot; then cmdPEKD_AUTOREF_CLick
   if menuActionPEKD_AUTO =&quot;PRN&quot; then cmdPEKD_AUTOPRN_CLick
   if menuActionPEKD_AUTO =&quot;CFG&quot; then cmdPEKD_AUTOCFG_CLick
   if menuActionPEKD_AUTO =&quot;FND&quot; then cmdPEKD_AUTOFND_CLick
   if menuActionPEKD_AUTO =&quot;ACC&quot; then cmdPEKD_AUTOACC_CLick
   menuActionPEKD_AUTO =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_AUTOAdd,cmdPEKD_AUTOAdd.tag
  LoadBtnPictures cmdPEKD_AUTOEdit,cmdPEKD_AUTOEdit.tag
  LoadBtnPictures cmdPEKD_AUTODel,cmdPEKD_AUTODel.tag
  LoadBtnPictures cmdPEKD_AUTORef,cmdPEKD_AUTORef.tag
  LoadBtnPictures cmdPEKD_AUTOPrn,cmdPEKD_AUTOPrn.tag
  LoadBtnPictures cmdPEKD_AUTOFnd,cmdPEKD_AUTOFnd.tag
  LoadBtnPictures cmdPEKD_AUTORun,cmdPEKD_AUTORun.tag
  LoadBtnPictures cmdPEKD_AUTOAcc,cmdPEKD_AUTOAcc.tag
  LoadBtnPictures cmdPEKD_AUTOCfg,cmdPEKD_AUTOCfg.tag
  item.PEKD_AUTO.PrepareGrid gridPEKD_AUTO
  LoadGridLayout gridPEKD_AUTO
  Set fndPEKD_AUTO = Nothing
  On Error Resume Next
  Set fndPEKD_AUTO = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_AUTO.Init gridPEKD_AUTO
end sub
private sub OnTabClick()

      gridPEKD_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_AUTO.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_AUTO = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_GRPDpUSL_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_GRPDpUSL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_GRPDpUSL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_GRPDpUSL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Группы ДопУслуг"/><Properties Name="Name" PropValue="mnuPopupPEKD_GRPDpUSL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_GRPDpUSLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLOpen"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLRef"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLS1"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_GRPDpUSLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCOPY"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCUT"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLPASTE"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCHANGE"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_GRPDpUSLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLPrn"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCfg"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLFind"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_GRPDpUSL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_GRPDpUSL as object
private menuActionPEKD_GRPDpUSL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_GRPDpUSLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_GRPDpUSL,&quot;gridPEKD_GRPDpUSL&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GRPDpUSLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_GRPDpUSL,&quot;Группы ДопУслуг&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GRPDpUSLRef_Click()
  on error resume next
  item.PEKD_GRPDpUSL.Refresh
  gridPEKD_GRPDpUSL.itemCount = item.PEKD_GRPDpUSL.count
  gridPEKD_GRPDpUSL.Refetch
  gridPEKD_GRPDpUSL.Refresh
End Sub
Private Sub cmdPEKD_GRPDpUSLAcc_Click()
On Error Resume Next
If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
If gridPEKD_GRPDpUSL.Row &gt; 0 Then
 If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_GRPDpUSLEdit_Click()
  on error resume next
If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
If gridPEKD_GRPDpUSL.Row &gt; 0 then
 If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_GRPDpUSL_admi.Item = u
    again: frmPEKD_GRPDpUSL_admi.NotFirstTime = False
    frmPEKD_GRPDpUSL_admi.OnInit
    frmPEKD_GRPDpUSL_admi.Show vbModal
    If frmPEKD_GRPDpUSL_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_GRPDpUSL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_GRPDpUSLDel_Click()
  on error resume next
  gridPEKD_GRPDpUSL.Delete
End Sub
Private Sub cmdPEKD_GRPDpUSLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_GRPDpUSL.Add()

      Set frmPEKD_GRPDpUSL_admi.Item = u
      again: frmPEKD_GRPDpUSL_admi.NotFirstTime = False
      frmPEKD_GRPDpUSL_admi.OnInit
      frmPEKD_GRPDpUSL_admi.Show vbModal
      If frmPEKD_GRPDpUSL_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_GRPDpUSL.ItemCount = Item.PEKD_GRPDpUSL.Count
        gridPEKD_GRPDpUSL.Refresh
        gridPEKD_GRPDpUSL.RefreshGroups
        gridPEKD_GRPDpUSL.Refreshsort
        gridPEKD_GRPDpUSL.MoveToBookmark u.ID &amp; &quot;PEKD_GRPDpUSL&quot;
      Else
        Item.PEKD_GRPDpUSL.Delete u.ID
        Item.PEKD_GRPDpUSL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_GRPDpUSLFnd_Click()
  on error resume next
  fndPEKD_GRPDpUSL.ShowForm
End Sub
Private Sub cmdPEKD_GRPDpUSLRun_Click()
  on error resume next
  gridPEKD_GRPDpUSL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_GRPDpUSL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_GRPDpUSL.LoadRow gridPEKD_GRPDpUSL, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_GRPDpUSL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_GRPDpUSL&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_GRPDpUSL_DblClick()
  cmdPEKD_GRPDpUSLEdit_Click
End Sub
Private Sub gridPEKD_GRPDpUSL_KeyPress(KeyAscii As Integer)
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_GRPDpUSL.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_GRPDpUSL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_GRPDpUSL.Row And LastRow &gt; 0 Then
  gridPEKD_GRPDpUSL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_GRPDpUSL.GetRowData(gridPEKD_GRPDpUSL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_GRPDpUSLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_GRPDpUSL.Add()
    If GetFromBuffer(u) Then
      gridPEKD_GRPDpUSL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_GRPDpUSL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_GRPDpUSLCfg_Click
        End If
    End If
end sub

private sub gridPEKD_GRPDpUSL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_GRPDpUSL
End If
end sub
private sub mnuPEKD_GRPDpUSLAdd_click()
   menuActionPEKD_GRPDpUSL =&quot;ADD&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLEdit_click()
   menuActionPEKD_GRPDpUSL =&quot;EDIT&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLDelete_click()
   menuActionPEKD_GRPDpUSL =&quot;DEL&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLOpen_click()
   menuActionPEKD_GRPDpUSL =&quot;RUN&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLRef_click()
   menuActionPEKD_GRPDpUSL =&quot;REF&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
  Private Sub mnuPEKD_GRPDpUSLCOPY_Click()
    On Error Resume Next
    If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
    If gridPEKD_GRPDpUSL.Row &gt; 0 Then
     If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_GRPDpUSLCUT_Click()
    On Error Resume Next
    If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
    If gridPEKD_GRPDpUSL.Row &gt; 0 Then
     If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_GRPDpUSL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_GRPDpUSLCHANGE_Click()
  On Error Resume Next
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  If gridPEKD_GRPDpUSL.Row &gt; 0 Then
   If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_GRPDpUSL.ItemCount = u.parent.Count
      gridPEKD_GRPDpUSL.RefreshRowIndex gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_GRPDpUSLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_GRPDpUSLPrn_click()
   menuActionPEKD_GRPDpUSL =&quot;PRN&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLCfg_click()
   menuActionPEKD_GRPDpUSL =&quot;CFG&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLFind_click()
   menuActionPEKD_GRPDpUSL =&quot;FND&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLAcc_click()
   menuActionPEKD_GRPDpUSL =&quot;ACC&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub menuTimerPEKD_GRPDpUSL_timer()
   menuTimerPEKD_GRPDpUSL.enabled = false
   if menuActionPEKD_GRPDpUSL =&quot;ADD&quot; then cmdPEKD_GRPDpUSLADD_CLick
   if menuActionPEKD_GRPDpUSL =&quot;EDIT&quot; then cmdPEKD_GRPDpUSLEDIT_CLick
   if menuActionPEKD_GRPDpUSL =&quot;DEL&quot; then cmdPEKD_GRPDpUSLDEL_CLick
   if menuActionPEKD_GRPDpUSL =&quot;RUN&quot; then cmdPEKD_GRPDpUSLRUN_CLick
   if menuActionPEKD_GRPDpUSL =&quot;REF&quot; then cmdPEKD_GRPDpUSLREF_CLick
   if menuActionPEKD_GRPDpUSL =&quot;PRN&quot; then cmdPEKD_GRPDpUSLPRN_CLick
   if menuActionPEKD_GRPDpUSL =&quot;CFG&quot; then cmdPEKD_GRPDpUSLCFG_CLick
   if menuActionPEKD_GRPDpUSL =&quot;FND&quot; then cmdPEKD_GRPDpUSLFND_CLick
   if menuActionPEKD_GRPDpUSL =&quot;ACC&quot; then cmdPEKD_GRPDpUSLACC_CLick
   menuActionPEKD_GRPDpUSL =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_GRPDpUSLAdd,cmdPEKD_GRPDpUSLAdd.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLEdit,cmdPEKD_GRPDpUSLEdit.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLDel,cmdPEKD_GRPDpUSLDel.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLRef,cmdPEKD_GRPDpUSLRef.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLPrn,cmdPEKD_GRPDpUSLPrn.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLFnd,cmdPEKD_GRPDpUSLFnd.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLRun,cmdPEKD_GRPDpUSLRun.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLAcc,cmdPEKD_GRPDpUSLAcc.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLCfg,cmdPEKD_GRPDpUSLCfg.tag
  item.PEKD_GRPDpUSL.PrepareGrid gridPEKD_GRPDpUSL
  LoadGridLayout gridPEKD_GRPDpUSL
  Set fndPEKD_GRPDpUSL = Nothing
  On Error Resume Next
  Set fndPEKD_GRPDpUSL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_GRPDpUSL.Init gridPEKD_GRPDpUSL
end sub
private sub OnTabClick()

      gridPEKD_GRPDpUSL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_GRPDpUSL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_GRPDpUSL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_GRPDpUSL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_1CTR_admi" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_1CTR" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_1CTR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_1CTR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_1CTR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_1CTRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_1CTRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_1CTRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_1CTRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_1CTRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_1CTRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_1CTR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Коды основных услуг"/><Properties Name="Name" PropValue="mnuPopupPEKD_1CTR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_1CTRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_1CTREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_1CTROpen"/></ControlData><ControlData Name="mnuPEKD_1CTRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRRef"/></ControlData><ControlData Name="mnuPEKD_1CTRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_1CTRS1"/></ControlData><ControlData Name="mnuPEKD_1CTRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_1CTRBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_1CTRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCOPY"/></ControlData><ControlData Name="mnuPEKD_1CTRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCUT"/></ControlData><ControlData Name="mnuPEKD_1CTRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRPASTE"/></ControlData><ControlData Name="mnuPEKD_1CTRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCHANGE"/></ControlData><ControlData Name="mnuPEKD_1CTRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_1CTRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRPrn"/></ControlData><ControlData Name="mnuPEKD_1CTRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCfg"/></ControlData><ControlData Name="mnuPEKD_1CTRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_1CTRFind"/></ControlData><ControlData Name="mnuPEKD_1CTRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_1CTRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_1CTR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_1CTR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_1CTR as object
private menuActionPEKD_1CTR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_1CTRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_1CTR,&quot;gridPEKD_1CTR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_1CTRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_1CTR,&quot;Коды основных услуг&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_1CTRRef_Click()
  on error resume next
  item.PEKD_1CTR.Refresh
  gridPEKD_1CTR.itemCount = item.PEKD_1CTR.count
  gridPEKD_1CTR.Refetch
  gridPEKD_1CTR.Refresh
End Sub
Private Sub cmdPEKD_1CTRAcc_Click()
On Error Resume Next
If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
If gridPEKD_1CTR.Row &gt; 0 Then
 If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_1CTREdit_Click()
  on error resume next
If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
If gridPEKD_1CTR.Row &gt; 0 then
 If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_1CTR_admi.Item = u
    again: frmPEKD_1CTR_admi.NotFirstTime = False
    frmPEKD_1CTR_admi.OnInit
    frmPEKD_1CTR_admi.Show vbModal
    If frmPEKD_1CTR_admi.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_1CTR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_1CTRDel_Click()
  on error resume next
  gridPEKD_1CTR.Delete
End Sub
Private Sub cmdPEKD_1CTRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_1CTR.Add()

      Set frmPEKD_1CTR_admi.Item = u
      again: frmPEKD_1CTR_admi.NotFirstTime = False
      frmPEKD_1CTR_admi.OnInit
      frmPEKD_1CTR_admi.Show vbModal
      If frmPEKD_1CTR_admi.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_1CTR.ItemCount = Item.PEKD_1CTR.Count
        gridPEKD_1CTR.Refresh
        gridPEKD_1CTR.RefreshGroups
        gridPEKD_1CTR.Refreshsort
        gridPEKD_1CTR.MoveToBookmark u.ID &amp; &quot;PEKD_1CTR&quot;
      Else
        Item.PEKD_1CTR.Delete u.ID
        Item.PEKD_1CTR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_1CTRFnd_Click()
  on error resume next
  fndPEKD_1CTR.ShowForm
End Sub
Private Sub cmdPEKD_1CTRRun_Click()
  on error resume next
  gridPEKD_1CTR_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_1CTR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_1CTR.LoadRow gridPEKD_1CTR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_1CTR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;PEKD_1CTR&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_1CTR_DblClick()
  cmdPEKD_1CTREdit_Click
End Sub
Private Sub gridPEKD_1CTR_KeyPress(KeyAscii As Integer)
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_1CTR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_1CTR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_1CTR.Row And LastRow &gt; 0 Then
  gridPEKD_1CTR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_1CTR.GetRowData(gridPEKD_1CTR.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_1CTRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_1CTR.Add()
    If GetFromBuffer(u) Then
      gridPEKD_1CTR.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_1CTR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_1CTRCfg_Click
        End If
    End If
end sub

private sub gridPEKD_1CTR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_1CTR
End If
end sub
private sub mnuPEKD_1CTRAdd_click()
   menuActionPEKD_1CTR =&quot;ADD&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTREdit_click()
   menuActionPEKD_1CTR =&quot;EDIT&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRDelete_click()
   menuActionPEKD_1CTR =&quot;DEL&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTROpen_click()
   menuActionPEKD_1CTR =&quot;RUN&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRRef_click()
   menuActionPEKD_1CTR =&quot;REF&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
  Private Sub mnuPEKD_1CTRCOPY_Click()
    On Error Resume Next
    If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
    If gridPEKD_1CTR.Row &gt; 0 Then
     If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_1CTRCUT_Click()
    On Error Resume Next
    If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
    If gridPEKD_1CTR.Row &gt; 0 Then
     If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_1CTR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_1CTRCHANGE_Click()
  On Error Resume Next
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  If gridPEKD_1CTR.Row &gt; 0 Then
   If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_1CTR.ItemCount = u.parent.Count
      gridPEKD_1CTR.RefreshRowIndex gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_1CTRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_1CTRPrn_click()
   menuActionPEKD_1CTR =&quot;PRN&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRCfg_click()
   menuActionPEKD_1CTR =&quot;CFG&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRFind_click()
   menuActionPEKD_1CTR =&quot;FND&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRAcc_click()
   menuActionPEKD_1CTR =&quot;ACC&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub menuTimerPEKD_1CTR_timer()
   menuTimerPEKD_1CTR.enabled = false
   if menuActionPEKD_1CTR =&quot;ADD&quot; then cmdPEKD_1CTRADD_CLick
   if menuActionPEKD_1CTR =&quot;EDIT&quot; then cmdPEKD_1CTREDIT_CLick
   if menuActionPEKD_1CTR =&quot;DEL&quot; then cmdPEKD_1CTRDEL_CLick
   if menuActionPEKD_1CTR =&quot;RUN&quot; then cmdPEKD_1CTRRUN_CLick
   if menuActionPEKD_1CTR =&quot;REF&quot; then cmdPEKD_1CTRREF_CLick
   if menuActionPEKD_1CTR =&quot;PRN&quot; then cmdPEKD_1CTRPRN_CLick
   if menuActionPEKD_1CTR =&quot;CFG&quot; then cmdPEKD_1CTRCFG_CLick
   if menuActionPEKD_1CTR =&quot;FND&quot; then cmdPEKD_1CTRFND_CLick
   if menuActionPEKD_1CTR =&quot;ACC&quot; then cmdPEKD_1CTRACC_CLick
   menuActionPEKD_1CTR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_1CTRAdd,cmdPEKD_1CTRAdd.tag
  LoadBtnPictures cmdPEKD_1CTREdit,cmdPEKD_1CTREdit.tag
  LoadBtnPictures cmdPEKD_1CTRDel,cmdPEKD_1CTRDel.tag
  LoadBtnPictures cmdPEKD_1CTRRef,cmdPEKD_1CTRRef.tag
  LoadBtnPictures cmdPEKD_1CTRPrn,cmdPEKD_1CTRPrn.tag
  LoadBtnPictures cmdPEKD_1CTRFnd,cmdPEKD_1CTRFnd.tag
  LoadBtnPictures cmdPEKD_1CTRRun,cmdPEKD_1CTRRun.tag
  LoadBtnPictures cmdPEKD_1CTRAcc,cmdPEKD_1CTRAcc.tag
  LoadBtnPictures cmdPEKD_1CTRCfg,cmdPEKD_1CTRCfg.tag
  item.PEKD_1CTR.PrepareGrid gridPEKD_1CTR
  LoadGridLayout gridPEKD_1CTR
  Set fndPEKD_1CTR = Nothing
  On Error Resume Next
  Set fndPEKD_1CTR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_1CTR.Init gridPEKD_1CTR
end sub
private sub OnTabClick()

      gridPEKD_1CTR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_1CTR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_1CTR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_1CTR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctladmi_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_SRV" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_SRV_admi"><Properties Name="Name" PropValue="pnlPEKD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRTYPE_admi"><Properties Name="Name" PropValue="pnlPEKD_TRTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_GOTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_GOTYPE_admi"><Properties Name="Name" PropValue="pnlPEKD_GOTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRFGRP" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRFGRP_admi"><Properties Name="Name" PropValue="pnlPEKD_TRFGRP"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_DIRECTION" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_DIRECTION_admi"><Properties Name="Name" PropValue="pnlPEKD_DIRECTION"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_DEPT" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_DEPT_admi"><Properties Name="Name" PropValue="pnlPEKD_DEPT"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRAINTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRAINTYPE_admi"><Properties Name="Name" PropValue="pnlPEKD_TRAINTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_ADDS" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_ADDS_admi"><Properties Name="Name" PropValue="pnlPEKD_ADDS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_POSTTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_POSTTYPE_admi"><Properties Name="Name" PropValue="pnlPEKD_POSTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_INFOSENDTYPE_admi"><Properties Name="Name" PropValue="pnlPEKD_INFOSENDTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_AUTO" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_AUTO_admi"><Properties Name="Name" PropValue="pnlPEKD_AUTO"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_GRPDpUSL" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_GRPDpUSL_admi"><Properties Name="Name" PropValue="pnlPEKD_GRPDpUSL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_1CTR" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_1CTR_admi"><Properties Name="Name" PropValue="pnlPEKD_1CTR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочники: Экспедиция"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlPEKD_SRV.IsOK
if IsItOk then IsItOk = pnlPEKD_TRTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_GOTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_TRFGRP.IsOK
if IsItOk then IsItOk = pnlPEKD_DIRECTION.IsOK
if IsItOk then IsItOk = pnlPEKD_DEPT.IsOK
if IsItOk then IsItOk = pnlPEKD_TRAINTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_ADDS.IsOK
if IsItOk then IsItOk = pnlPEKD_POSTTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_INFOSENDTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_AUTO.IsOK
if IsItOk then IsItOk = pnlPEKD_GRPDpUSL.IsOK
if IsItOk then IsItOk = pnlPEKD_1CTR.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlPEKD_1CTR.Visible = False
  pnlPEKD_GRPDpUSL.Visible = False
  pnlPEKD_AUTO.Visible = False
  pnlPEKD_INFOSENDTYPE.Visible = False
  pnlPEKD_POSTTYPE.Visible = False
  pnlPEKD_ADDS.Visible = False
  pnlPEKD_TRAINTYPE.Visible = False
  pnlPEKD_DEPT.Visible = False
  pnlPEKD_DIRECTION.Visible = False
  pnlPEKD_TRFGRP.Visible = False
  pnlPEKD_GOTYPE.Visible = False
  pnlPEKD_TRTYPE.Visible = False
  pnlPEKD_SRV.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;PEKD_SRV&quot;
     With pnlPEKD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_SRV.OnClick item,parentform
     End With
   Case &quot;PEKD_TRTYPE&quot;
     With pnlPEKD_TRTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_GOTYPE&quot;
     With pnlPEKD_GOTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_GOTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_TRFGRP&quot;
     With pnlPEKD_TRFGRP
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRFGRP.OnClick item,parentform
     End With
   Case &quot;PEKD_DIRECTION&quot;
     With pnlPEKD_DIRECTION
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_DIRECTION.OnClick item,parentform
     End With
   Case &quot;PEKD_DEPT&quot;
     With pnlPEKD_DEPT
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_DEPT.OnClick item,parentform
     End With
   Case &quot;PEKD_TRAINTYPE&quot;
     With pnlPEKD_TRAINTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRAINTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_ADDS&quot;
     With pnlPEKD_ADDS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_ADDS.OnClick item,parentform
     End With
   Case &quot;PEKD_POSTTYPE&quot;
     With pnlPEKD_POSTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_POSTTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_INFOSENDTYPE&quot;
     With pnlPEKD_INFOSENDTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_INFOSENDTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_AUTO&quot;
     With pnlPEKD_AUTO
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_AUTO.OnClick item,parentform
     End With
   Case &quot;PEKD_GRPDpUSL&quot;
     With pnlPEKD_GRPDpUSL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_GRPDpUSL.OnClick item,parentform
     End With
   Case &quot;PEKD_1CTR&quot;
     With pnlPEKD_1CTR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_1CTR.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Дополнительные услуги&quot;
ts.Tabs.Item(1).key = &quot;PEKD_SRV&quot;
pnlPEKD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRTYPE&quot;, &quot;Система отправки&quot;)
pnlPEKD_TRTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_GOTYPE&quot;, &quot;Типы СГО&quot;)
pnlPEKD_GOTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRFGRP&quot;, &quot;Группы тарифов&quot;)
pnlPEKD_TRFGRP.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_DIRECTION&quot;, &quot;Направление перевозки&quot;)
pnlPEKD_DIRECTION.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_DEPT&quot;, &quot;Филиал&quot;)
pnlPEKD_DEPT.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRAINTYPE&quot;, &quot;Тип поезда&quot;)
pnlPEKD_TRAINTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_ADDS&quot;, &quot;Надбавки&quot;)
pnlPEKD_ADDS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_POSTTYPE&quot;, &quot;Характер отправления&quot;)
pnlPEKD_POSTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_INFOSENDTYPE&quot;, &quot;Способ передачи информации&quot;)
pnlPEKD_INFOSENDTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_AUTO&quot;, &quot;Тип автотранспорта&quot;)
pnlPEKD_AUTO.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_GRPDpUSL&quot;, &quot;Группы ДопУслуг&quot;)
pnlPEKD_GRPDpUSL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_1CTR&quot;, &quot;Коды основных услуг&quot;)
pnlPEKD_1CTR.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;PEK2D&quot;, &quot;ctladmi_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlPEKD_SRV.CloseClass
 pnlPEKD_TRTYPE.CloseClass
 pnlPEKD_GOTYPE.CloseClass
 pnlPEKD_TRFGRP.CloseClass
 pnlPEKD_DIRECTION.CloseClass
 pnlPEKD_DEPT.CloseClass
 pnlPEKD_TRAINTYPE.CloseClass
 pnlPEKD_ADDS.CloseClass
 pnlPEKD_POSTTYPE.CloseClass
 pnlPEKD_INFOSENDTYPE.CloseClass
 pnlPEKD_AUTO.CloseClass
 pnlPEKD_GRPDpUSL.CloseClass
 pnlPEKD_1CTR.CloseClass
End Sub
public sub OnSave()
 pnlPEKD_SRV.OnSave
 pnlPEKD_TRTYPE.OnSave
 pnlPEKD_GOTYPE.OnSave
 pnlPEKD_TRFGRP.OnSave
 pnlPEKD_DIRECTION.OnSave
 pnlPEKD_DEPT.OnSave
 pnlPEKD_TRAINTYPE.OnSave
 pnlPEKD_ADDS.OnSave
 pnlPEKD_POSTTYPE.OnSave
 pnlPEKD_INFOSENDTYPE.OnSave
 pnlPEKD_AUTO.OnSave
 pnlPEKD_GRPDpUSL.OnSave
 pnlPEKD_1CTR.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlPEKD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_GOTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRFGRP.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_DIRECTION.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_DEPT.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRAINTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_ADDS.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_POSTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_INFOSENDTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_AUTO.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_GRPDpUSL.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_1CTR.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmadmi_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="PEK2DGUI.ctladmi_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочники: Экспедиция"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;admi&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;admi&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_SRV_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_SRVmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Дополнительные услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Дополнительные услуги"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot;
  Open s &amp; Me.name &amp; &quot;{C0B79638-E7AE-4AB3-AAE4-FE0A3D7065FA}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Система отправки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Система отправки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot;
  Open s &amp; Me.name &amp; &quot;{5A20BACE-5BFC-4CB8-BF67-7953AC9D8574}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_GOTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_GOTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы СГО"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы СГО"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot;
  Open s &amp; Me.name &amp; &quot;{C7B99BDF-0B8E-4CE4-A3E9-2FA22B5E8500}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRFGRP_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRFGRPmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Группы тарифов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Группы тарифов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot;
  Open s &amp; Me.name &amp; &quot;{A4B55DB0-3617-41FA-BEF4-D164545CD7F1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRFTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRFTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Типы тарифов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Типы тарифов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot;
  Open s &amp; Me.name &amp; &quot;{22D6DE52-B68D-48BC-B826-2C4DEADA492F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DIRECTION_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DIRECTIONmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Направление перевозки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Направление перевозки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot;
  Open s &amp; Me.name &amp; &quot;{9A974555-F9B0-419D-AF7A-E351E583E92B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRAINS_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRAINSmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Маршруты"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Маршруты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot;
  Open s &amp; Me.name &amp; &quot;{9BAEB37A-1831-4742-A5FF-0BCD88FD62E6}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DIRSTATION_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DIRSTATIONmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Точки доставки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Точки доставки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot;
  Open s &amp; Me.name &amp; &quot;{2806E56C-1C5E-42FC-B958-F02C14AFA704}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPT_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPTmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Филиал"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Филиал"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot;
  Open s &amp; Me.name &amp; &quot;{4A54C33B-958B-43E0-9A6F-D27F9A09F792}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPLIMITS_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPLIMITSmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Уровни неснижаемых остатков по постащикам"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Контролируемые лимиты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot;
  Open s &amp; Me.name &amp; &quot;{AAC048B8-CD76-4EBC-BD43-5E30BBC86DCC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_DEPDOG_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_DEPDOGmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Договора в рамках которого поставщик поставляет услуги"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Договора с поставщиками"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot;
  Open s &amp; Me.name &amp; &quot;{D7ECFCA7-D1E0-4497-86DE-70961937CBFD}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_TRAINTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_TRAINTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Тип поезда"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип поезда"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot;
  Open s &amp; Me.name &amp; &quot;{500B8DA4-8727-4FFA-B3AA-22DD5458BD13}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_ADDS_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_ADDSmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Варианты надбавок"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Надбавки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot;
  Open s &amp; Me.name &amp; &quot;{2171C0A2-4CF3-447C-96DB-1B4340D5CF76}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_POSTTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_POSTTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Характер отправления"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Характер отправления"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot;
  Open s &amp; Me.name &amp; &quot;{497BD450-C645-432E-A96A-C19695D7C90A}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_INFOSENDTYPE_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_INFOSENDTYPEmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Способ передачи информации "/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Способ передачи информации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot;
  Open s &amp; Me.name &amp; &quot;{7A8B9940-10E4-45D8-AF94-65575EBA1510}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_AUTO_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_AUTOmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Справочник типов автотранспорта"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип автотранспорта"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot;
  Open s &amp; Me.name &amp; &quot;{37F3EB7D-282C-434B-9073-2BAC38BBC1AE}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_GRPDpUSL_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_GRPDpUSLmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="позволяет группировать ДопУслуги (PEKD_SRV)"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Группы ДопУслуг"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot;
  Open s &amp; Me.name &amp; &quot;{ACB75863-3DE8-4613-9FCD-87C8F04174D7}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmPEKD_1CTR_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="PEK2DGUI.PEKD_1CTRmain"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Коды строк транспортировки в различных базах филиалов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Коды основных услуг"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot;
  Open s &amp; Me.name &amp; &quot;{4D1F9DF9-FFDF-43B2-ACA4-BC2C29C3B55F}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_SRV_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные услуги"/><Properties Name="Name" PropValue="mnuPopupPEKD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_SRVOpen"/></ControlData><ControlData Name="mnuPEKD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_SRVRef"/></ControlData><ControlData Name="mnuPEKD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_SRVS1"/></ControlData><ControlData Name="mnuPEKD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_SRVCOPY"/></ControlData><ControlData Name="mnuPEKD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_SRVCUT"/></ControlData><ControlData Name="mnuPEKD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_SRVPASTE"/></ControlData><ControlData Name="mnuPEKD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCHANGE"/></ControlData><ControlData Name="mnuPEKD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_SRVPrn"/></ControlData><ControlData Name="mnuPEKD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCfg"/></ControlData><ControlData Name="mnuPEKD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_SRVFind"/></ControlData><ControlData Name="mnuPEKD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_SRV as object
private menuActionPEKD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_SRV,&quot;gridPEKD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_SRV,&quot;Дополнительные услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_SRVRef_Click()
  on error resume next
  item.PEKD_SRV.Refresh
  gridPEKD_SRV.itemCount = item.PEKD_SRV.count
  gridPEKD_SRV.Refetch
  gridPEKD_SRV.Refresh
End Sub
Private Sub cmdPEKD_SRVAcc_Click()
On Error Resume Next
If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
If gridPEKD_SRV.Row &gt; 0 Then
 If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_SRVEdit_Click()
  on error resume next
If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
If gridPEKD_SRV.Row &gt; 0 then
 If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_SRV_main.Item = u
    again: frmPEKD_SRV_main.NotFirstTime = False
    frmPEKD_SRV_main.OnInit
    frmPEKD_SRV_main.Show vbModal
    If frmPEKD_SRV_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_SRV.Add()

      Set frmPEKD_SRV_main.Item = u
      again: frmPEKD_SRV_main.NotFirstTime = False
      frmPEKD_SRV_main.OnInit
      frmPEKD_SRV_main.Show vbModal
      If frmPEKD_SRV_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_SRV.ItemCount = Item.PEKD_SRV.Count
        gridPEKD_SRV.Refresh
        gridPEKD_SRV.RefreshGroups
        gridPEKD_SRV.Refreshsort
        gridPEKD_SRV.MoveToBookmark u.ID &amp; &quot;PEKD_SRV&quot;
      Else
        Item.PEKD_SRV.Delete u.ID
        Item.PEKD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_SRVFnd_Click()
  on error resume next
  fndPEKD_SRV.ShowForm
End Sub
Private Sub cmdPEKD_SRVRun_Click()
  on error resume next
  gridPEKD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_SRV.LoadRow gridPEKD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_SRV_DblClick()
  cmdPEKD_SRVEdit_Click
End Sub
Private Sub gridPEKD_SRV_KeyPress(KeyAscii As Integer)
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_SRV.Row And LastRow &gt; 0 Then
  gridPEKD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_SRV.GetRowData(gridPEKD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_SRV.Add()
    If GetFromBuffer(u) Then
      gridPEKD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_SRVCfg_Click
        End If
    End If
end sub

private sub gridPEKD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_SRV
End If
end sub
private sub mnuPEKD_SRVAdd_click()
   menuActionPEKD_SRV =&quot;ADD&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVEdit_click()
   menuActionPEKD_SRV =&quot;EDIT&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVDelete_click()
   menuActionPEKD_SRV =&quot;DEL&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVOpen_click()
   menuActionPEKD_SRV =&quot;RUN&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVRef_click()
   menuActionPEKD_SRV =&quot;REF&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
  Private Sub mnuPEKD_SRVCOPY_Click()
    On Error Resume Next
    If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKD_SRV.Row &gt; 0 Then
     If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_SRVCUT_Click()
    On Error Resume Next
    If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKD_SRV.Row &gt; 0 Then
     If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_SRVCHANGE_Click()
  On Error Resume Next
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  If gridPEKD_SRV.Row &gt; 0 Then
   If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_SRV.ItemCount = u.parent.Count
      gridPEKD_SRV.RefreshRowIndex gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_SRVPrn_click()
   menuActionPEKD_SRV =&quot;PRN&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVCfg_click()
   menuActionPEKD_SRV =&quot;CFG&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVFind_click()
   menuActionPEKD_SRV =&quot;FND&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVAcc_click()
   menuActionPEKD_SRV =&quot;ACC&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub menuTimerPEKD_SRV_timer()
   menuTimerPEKD_SRV.enabled = false
   if menuActionPEKD_SRV =&quot;ADD&quot; then cmdPEKD_SRVADD_CLick
   if menuActionPEKD_SRV =&quot;EDIT&quot; then cmdPEKD_SRVEDIT_CLick
   if menuActionPEKD_SRV =&quot;DEL&quot; then cmdPEKD_SRVDEL_CLick
   if menuActionPEKD_SRV =&quot;RUN&quot; then cmdPEKD_SRVRUN_CLick
   if menuActionPEKD_SRV =&quot;REF&quot; then cmdPEKD_SRVREF_CLick
   if menuActionPEKD_SRV =&quot;PRN&quot; then cmdPEKD_SRVPRN_CLick
   if menuActionPEKD_SRV =&quot;CFG&quot; then cmdPEKD_SRVCFG_CLick
   if menuActionPEKD_SRV =&quot;FND&quot; then cmdPEKD_SRVFND_CLick
   if menuActionPEKD_SRV =&quot;ACC&quot; then cmdPEKD_SRVACC_CLick
   menuActionPEKD_SRV =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_SRVAdd,cmdPEKD_SRVAdd.tag
  LoadBtnPictures cmdPEKD_SRVEdit,cmdPEKD_SRVEdit.tag
  LoadBtnPictures cmdPEKD_SRVDel,cmdPEKD_SRVDel.tag
  LoadBtnPictures cmdPEKD_SRVRef,cmdPEKD_SRVRef.tag
  LoadBtnPictures cmdPEKD_SRVPrn,cmdPEKD_SRVPrn.tag
  LoadBtnPictures cmdPEKD_SRVFnd,cmdPEKD_SRVFnd.tag
  LoadBtnPictures cmdPEKD_SRVRun,cmdPEKD_SRVRun.tag
  LoadBtnPictures cmdPEKD_SRVAcc,cmdPEKD_SRVAcc.tag
  LoadBtnPictures cmdPEKD_SRVCfg,cmdPEKD_SRVCfg.tag
  item.PEKD_SRV.PrepareGrid gridPEKD_SRV
  LoadGridLayout gridPEKD_SRV
  Set fndPEKD_SRV = Nothing
  On Error Resume Next
  Set fndPEKD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_SRV.Init gridPEKD_SRV
end sub
private sub OnTabClick()

      gridPEKD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_TRTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_TRTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Система отправки"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_TRTYPE as object
private menuActionPEKD_TRTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_TRTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRTYPE,&quot;gridPEKD_TRTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRTYPE,&quot;Система отправки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRTYPERef_Click()
  on error resume next
  item.PEKD_TRTYPE.Refresh
  gridPEKD_TRTYPE.itemCount = item.PEKD_TRTYPE.count
  gridPEKD_TRTYPE.Refetch
  gridPEKD_TRTYPE.Refresh
End Sub
Private Sub cmdPEKD_TRTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRTYPE.Row &gt; 0 Then
 If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRTYPEEdit_Click()
  on error resume next
If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRTYPE.Row &gt; 0 then
 If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_TRTYPE_main.Item = u
    again: frmPEKD_TRTYPE_main.NotFirstTime = False
    frmPEKD_TRTYPE_main.OnInit
    frmPEKD_TRTYPE_main.Show vbModal
    If frmPEKD_TRTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_TRTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_TRTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_TRTYPE.Add()

      Set frmPEKD_TRTYPE_main.Item = u
      again: frmPEKD_TRTYPE_main.NotFirstTime = False
      frmPEKD_TRTYPE_main.OnInit
      frmPEKD_TRTYPE_main.Show vbModal
      If frmPEKD_TRTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRTYPE.ItemCount = Item.PEKD_TRTYPE.Count
        gridPEKD_TRTYPE.Refresh
        gridPEKD_TRTYPE.RefreshGroups
        gridPEKD_TRTYPE.Refreshsort
        gridPEKD_TRTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRTYPE&quot;
      Else
        Item.PEKD_TRTYPE.Delete u.ID
        Item.PEKD_TRTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_TRTYPEFnd_Click()
  on error resume next
  fndPEKD_TRTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRTYPERun_Click()
  on error resume next
  gridPEKD_TRTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_TRTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_TRTYPE.LoadRow gridPEKD_TRTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_TRTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_TRTYPE_DblClick()
  cmdPEKD_TRTYPEEdit_Click
End Sub
Private Sub gridPEKD_TRTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_TRTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_TRTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_TRTYPE.GetRowData(gridPEKD_TRTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_TRTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_TRTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRTYPE
End If
end sub
private sub mnuPEKD_TRTYPEAdd_click()
   menuActionPEKD_TRTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEEdit_click()
   menuActionPEKD_TRTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEDelete_click()
   menuActionPEKD_TRTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEOpen_click()
   menuActionPEKD_TRTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPERef_click()
   menuActionPEKD_TRTYPE =&quot;REF&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRTYPE.Row &gt; 0 Then
     If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRTYPE.Row &gt; 0 Then
     If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRTYPE.Row &gt; 0 Then
   If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRTYPE.ItemCount = u.parent.Count
      gridPEKD_TRTYPE.RefreshRowIndex gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRTYPEPrn_click()
   menuActionPEKD_TRTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPECfg_click()
   menuActionPEKD_TRTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEFind_click()
   menuActionPEKD_TRTYPE =&quot;FND&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEAcc_click()
   menuActionPEKD_TRTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRTYPE_timer()
   menuTimerPEKD_TRTYPE.enabled = false
   if menuActionPEKD_TRTYPE =&quot;ADD&quot; then cmdPEKD_TRTYPEADD_CLick
   if menuActionPEKD_TRTYPE =&quot;EDIT&quot; then cmdPEKD_TRTYPEEDIT_CLick
   if menuActionPEKD_TRTYPE =&quot;DEL&quot; then cmdPEKD_TRTYPEDEL_CLick
   if menuActionPEKD_TRTYPE =&quot;RUN&quot; then cmdPEKD_TRTYPERUN_CLick
   if menuActionPEKD_TRTYPE =&quot;REF&quot; then cmdPEKD_TRTYPEREF_CLick
   if menuActionPEKD_TRTYPE =&quot;PRN&quot; then cmdPEKD_TRTYPEPRN_CLick
   if menuActionPEKD_TRTYPE =&quot;CFG&quot; then cmdPEKD_TRTYPECFG_CLick
   if menuActionPEKD_TRTYPE =&quot;FND&quot; then cmdPEKD_TRTYPEFND_CLick
   if menuActionPEKD_TRTYPE =&quot;ACC&quot; then cmdPEKD_TRTYPEACC_CLick
   menuActionPEKD_TRTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRTYPEAdd,cmdPEKD_TRTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRTYPEEdit,cmdPEKD_TRTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRTYPEDel,cmdPEKD_TRTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRTYPERef,cmdPEKD_TRTYPERef.tag
  LoadBtnPictures cmdPEKD_TRTYPEPrn,cmdPEKD_TRTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRTYPEFnd,cmdPEKD_TRTYPEFnd.tag
  LoadBtnPictures cmdPEKD_TRTYPERun,cmdPEKD_TRTYPERun.tag
  LoadBtnPictures cmdPEKD_TRTYPEAcc,cmdPEKD_TRTYPEAcc.tag
  LoadBtnPictures cmdPEKD_TRTYPECfg,cmdPEKD_TRTYPECfg.tag
  item.PEKD_TRTYPE.PrepareGrid gridPEKD_TRTYPE
  LoadGridLayout gridPEKD_TRTYPE
  Set fndPEKD_TRTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_TRTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_TRTYPE.Init gridPEKD_TRTYPE
end sub
private sub OnTabClick()

      gridPEKD_TRTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_TRTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_GOTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_GOTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_GOTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_GOTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_GOTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_GOTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_GOTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_GOTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_GOTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_GOTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_GOTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы СГО"/><Properties Name="Name" PropValue="mnuPopupPEKD_GOTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_GOTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_GOTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_GOTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPERef"/></ControlData><ControlData Name="mnuPEKD_GOTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPES1"/></ControlData><ControlData Name="mnuPEKD_GOTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_GOTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_GOTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECUT"/></ControlData><ControlData Name="mnuPEKD_GOTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_GOTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_GOTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_GOTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_GOTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECfg"/></ControlData><ControlData Name="mnuPEKD_GOTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEFind"/></ControlData><ControlData Name="mnuPEKD_GOTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_GOTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_GOTYPE as object
private menuActionPEKD_GOTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_GOTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_GOTYPE,&quot;gridPEKD_GOTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GOTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_GOTYPE,&quot;Типы СГО&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GOTYPERef_Click()
  on error resume next
  item.PEKD_GOTYPE.Refresh
  gridPEKD_GOTYPE.itemCount = item.PEKD_GOTYPE.count
  gridPEKD_GOTYPE.Refetch
  gridPEKD_GOTYPE.Refresh
End Sub
Private Sub cmdPEKD_GOTYPEAcc_Click()
On Error Resume Next
If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_GOTYPE.Row &gt; 0 Then
 If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_GOTYPEEdit_Click()
  on error resume next
If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_GOTYPE.Row &gt; 0 then
 If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_GOTYPE_main.Item = u
    again: frmPEKD_GOTYPE_main.NotFirstTime = False
    frmPEKD_GOTYPE_main.OnInit
    frmPEKD_GOTYPE_main.Show vbModal
    If frmPEKD_GOTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_GOTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_GOTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_GOTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_GOTYPE.Add()

      Set frmPEKD_GOTYPE_main.Item = u
      again: frmPEKD_GOTYPE_main.NotFirstTime = False
      frmPEKD_GOTYPE_main.OnInit
      frmPEKD_GOTYPE_main.Show vbModal
      If frmPEKD_GOTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_GOTYPE.ItemCount = Item.PEKD_GOTYPE.Count
        gridPEKD_GOTYPE.Refresh
        gridPEKD_GOTYPE.RefreshGroups
        gridPEKD_GOTYPE.Refreshsort
        gridPEKD_GOTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_GOTYPE&quot;
      Else
        Item.PEKD_GOTYPE.Delete u.ID
        Item.PEKD_GOTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_GOTYPEFnd_Click()
  on error resume next
  fndPEKD_GOTYPE.ShowForm
End Sub
Private Sub cmdPEKD_GOTYPERun_Click()
  on error resume next
  gridPEKD_GOTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_GOTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_GOTYPE.LoadRow gridPEKD_GOTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_GOTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_GOTYPE_DblClick()
  cmdPEKD_GOTYPEEdit_Click
End Sub
Private Sub gridPEKD_GOTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_GOTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_GOTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_GOTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_GOTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_GOTYPE.GetRowData(gridPEKD_GOTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_GOTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_GOTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_GOTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_GOTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_GOTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_GOTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_GOTYPE
End If
end sub
private sub mnuPEKD_GOTYPEAdd_click()
   menuActionPEKD_GOTYPE =&quot;ADD&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEEdit_click()
   menuActionPEKD_GOTYPE =&quot;EDIT&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEDelete_click()
   menuActionPEKD_GOTYPE =&quot;DEL&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEOpen_click()
   menuActionPEKD_GOTYPE =&quot;RUN&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPERef_click()
   menuActionPEKD_GOTYPE =&quot;REF&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
  Private Sub mnuPEKD_GOTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_GOTYPE.Row &gt; 0 Then
     If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_GOTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_GOTYPE.Row &gt; 0 Then
     If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_GOTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_GOTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_GOTYPE.Row &gt; 0 Then
   If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_GOTYPE.ItemCount = u.parent.Count
      gridPEKD_GOTYPE.RefreshRowIndex gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_GOTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_GOTYPEPrn_click()
   menuActionPEKD_GOTYPE =&quot;PRN&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPECfg_click()
   menuActionPEKD_GOTYPE =&quot;CFG&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEFind_click()
   menuActionPEKD_GOTYPE =&quot;FND&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEAcc_click()
   menuActionPEKD_GOTYPE =&quot;ACC&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub menuTimerPEKD_GOTYPE_timer()
   menuTimerPEKD_GOTYPE.enabled = false
   if menuActionPEKD_GOTYPE =&quot;ADD&quot; then cmdPEKD_GOTYPEADD_CLick
   if menuActionPEKD_GOTYPE =&quot;EDIT&quot; then cmdPEKD_GOTYPEEDIT_CLick
   if menuActionPEKD_GOTYPE =&quot;DEL&quot; then cmdPEKD_GOTYPEDEL_CLick
   if menuActionPEKD_GOTYPE =&quot;RUN&quot; then cmdPEKD_GOTYPERUN_CLick
   if menuActionPEKD_GOTYPE =&quot;REF&quot; then cmdPEKD_GOTYPEREF_CLick
   if menuActionPEKD_GOTYPE =&quot;PRN&quot; then cmdPEKD_GOTYPEPRN_CLick
   if menuActionPEKD_GOTYPE =&quot;CFG&quot; then cmdPEKD_GOTYPECFG_CLick
   if menuActionPEKD_GOTYPE =&quot;FND&quot; then cmdPEKD_GOTYPEFND_CLick
   if menuActionPEKD_GOTYPE =&quot;ACC&quot; then cmdPEKD_GOTYPEACC_CLick
   menuActionPEKD_GOTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_GOTYPEAdd,cmdPEKD_GOTYPEAdd.tag
  LoadBtnPictures cmdPEKD_GOTYPEEdit,cmdPEKD_GOTYPEEdit.tag
  LoadBtnPictures cmdPEKD_GOTYPEDel,cmdPEKD_GOTYPEDel.tag
  LoadBtnPictures cmdPEKD_GOTYPERef,cmdPEKD_GOTYPERef.tag
  LoadBtnPictures cmdPEKD_GOTYPEPrn,cmdPEKD_GOTYPEPrn.tag
  LoadBtnPictures cmdPEKD_GOTYPEFnd,cmdPEKD_GOTYPEFnd.tag
  LoadBtnPictures cmdPEKD_GOTYPERun,cmdPEKD_GOTYPERun.tag
  LoadBtnPictures cmdPEKD_GOTYPEAcc,cmdPEKD_GOTYPEAcc.tag
  LoadBtnPictures cmdPEKD_GOTYPECfg,cmdPEKD_GOTYPECfg.tag
  item.PEKD_GOTYPE.PrepareGrid gridPEKD_GOTYPE
  LoadGridLayout gridPEKD_GOTYPE
  Set fndPEKD_GOTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_GOTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_GOTYPE.Init gridPEKD_GOTYPE
end sub
private sub OnTabClick()

      gridPEKD_GOTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_GOTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_GOTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_GOTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRFGRP_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRFGRP" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_TRFGRP"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_TRFGRP" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_TRFGRP"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Indentation" PropValue="75"/><Properties Name="Sorted" PropValue="True"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAddRoot" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAddRoot"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEWROOT.ico"/><Properties Name="ToolTipText" PropValue="Добавить ветку"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFGRPRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridPEKD_TRFTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRFTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRFTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRFTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRFGRP" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Группы тарифов"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRFGRP"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRFGRPAddRoot" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать ветку"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAddRoot"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRFGRPS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPS1"/></ControlData><ControlData Name="mnuPEKD_TRFGRPBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRFGRPCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCOPY"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCUT"/></ControlData><ControlData Name="mnuPEKD_TRFGRPPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPPASTE"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCHANGE"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRFGRPRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPRef"/></ControlData><ControlData Name="mnuPEKD_TRFGRPAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRFGRP" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRFGRP"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupPEKD_TRFTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы тарифов"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRFTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRFTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRFTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRFTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRFTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRFTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRFTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRFTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private menuActionPEKD_TRFGRP as string
private fndPEKD_TRFTYPE as object
private menuActionPEKD_TRFTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_TRFGRP_PositionChanged()
  pnlPEKD_TRFGRP.SavePosition
End Sub
private sub treePEKD_TRFGRP_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_TRFGRP
End If
end sub
private sub mnuPEKD_TRFGRPAddRoot_click()
   menuActionPEKD_TRFGRP =&quot;ADDROOT&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPAdd_click()
   menuActionPEKD_TRFGRP =&quot;ADD&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPEdit_click()
   menuActionPEKD_TRFGRP =&quot;EDIT&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPDelete_click()
   menuActionPEKD_TRFGRP =&quot;DEL&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
  Private Sub mnuPEKD_TRFGRPCOPY_Click()
    On Error Resume Next
    If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
        Dim u As Object
        Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
        SaveToBuffer u
  End Sub
  Private Sub mnuPEKD_TRFGRPCUT_Click()
    On Error Resume Next
    If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
    Dim u As Object,BM
    Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
    SaveToBuffer u
    SET BM = u.parent
    u.parent.Delete u.ID
    TREEPEKD_TRFGRP.nodes.remove TREEPEKD_TRFGRP.selecteditem.key
  End Sub
Private Sub mnuPEKD_TRFGRPPASTE_Click()
On Error Resume Next
If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Dim u As Object, f as object
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set u = f.PEKD_TRFGRP.Add()
  If GetFromBuffer(u) Then
    If treePEKD_TRFGRP.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
      u.LoadToTree treePEKD_TRFGRP, treePEKD_TRFGRP.SelectedItem.Key
    end if
  Else
   f.PEKD_TRFGRP.refresh
  End If
End Sub
Private Sub mnuPEKD_TRFGRPCHANGE_Click()
  On Error Resume Next
  If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
  Dim u As Object,BM
  Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  If GetFromBuffer(u) Then
    TREEPEKD_TRFGRP.SELECTEDItem.text = u.brief
      treePEKD_TRFGRP.SelectedItem.Expanded = False
      While treePEKD_TRFGRP.SelectedItem.Children &gt; 0
        treePEKD_TRFGRP.Nodes.Remove treePEKD_TRFGRP.SelectedItem.Child.Key
      Wend
      treePEKD_TRFGRP.Nodes.Add(treePEKD_TRFGRP.SelectedItem.Key, 4, &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_TRFGRP_Expand treePEKD_TRFGRP.SelectedItem
  End If
End Sub
  Private Sub mnuPEKD_TRFGRPCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRFGRPRef_click()
   menuActionPEKD_TRFGRP =&quot;REF&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPAcc_click()
   menuActionPEKD_TRFGRP =&quot;ACC&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub menuTimerPEKD_TRFGRP_timer()
   menuTimerPEKD_TRFGRP.enabled = false
   if menuActionPEKD_TRFGRP =&quot;ADDROOT&quot; then cmdPEKD_TRFGRPADDROOT_CLick
   if menuActionPEKD_TRFGRP =&quot;ADD&quot; then cmdPEKD_TRFGRPADD_CLick
   if menuActionPEKD_TRFGRP =&quot;EDIT&quot; then cmdPEKD_TRFGRPEDIT_CLick
   if menuActionPEKD_TRFGRP =&quot;DEL&quot; then cmdPEKD_TRFGRPDEL_CLick
   if menuActionPEKD_TRFGRP =&quot;REF&quot; then cmdPEKD_TRFGRPREF_CLick
   if menuActionPEKD_TRFGRP =&quot;ACC&quot; then cmdPEKD_TRFGRPACC_CLick
   menuActionPEKD_TRFGRP =&quot;&quot;
end sub
Private Sub cmdPEKD_TRFGRPAdd_Click()
  on error resume next
  on error resume next
  Dim f As Object, p As Object
If (treePEKD_TRFGRP.SelectedItem is Nothing) Then  exit sub
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set f = p.PEKD_TRFGRP.Add()

      Set frmPEKD_TRFGRP_main.Item = f
      again: frmPEKD_TRFGRP_main.NotFirstTime = False
      frmPEKD_TRFGRP_main.OnInit
      frmPEKD_TRFGRP_main.Show vbModal
      If frmPEKD_TRFGRP_main.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
          If treePEKD_TRFGRP.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
            f.LoadToTree treePEKD_TRFGRP, treePEKD_TRFGRP.SelectedItem.Key
          end if
          set treePEKD_TRFGRP.SelectedItem = treePEKD_TRFGRP.nodes.item(  f.ID &amp; &quot;PEKD_TRFGRP&quot;)
      Else
        Item.PEKD_TRFGRP.Delete f.ID
        Item.PEKD_TRFGRP.Remove f.ID
      End If
End Sub

Private Sub cmdPEKD_TRFGRPAddRoot_Click()
  on error resume next
Dim f As Object, p As Object
  Set f = Item.PEKD_TRFGRP.Add()

      Set frmPEKD_TRFGRP_main.Item = f
      again: frmPEKD_TRFGRP_main.NotFirstTime = False
      frmPEKD_TRFGRP_main.OnInit
      frmPEKD_TRFGRP_main.Show vbModal
      If frmPEKD_TRFGRP_main.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
    Item.PEKD_TRFGRP.refresh
    treePEKD_TRFGRP.nodes.clear
    Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
          set treePEKD_TRFGRP.SelectedItem = treePEKD_TRFGRP.nodes.item(  f.ID &amp; &quot;PEKD_TRFGRP&quot;)
      Else
        Item.PEKD_TRFGRP.Remove f.ID
      End If
End Sub

Private Sub cmdPEKD_TRFGRPEdit_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set frmPEKD_TRFGRP_main.Item = f
  again: frmPEKD_TRFGRP_main.NotFirstTime = False
  frmPEKD_TRFGRP_main.OnInit
  frmPEKD_TRFGRP_main.Show vbModal
  If frmPEKD_TRFGRP_main.OK Then
    err.clear
    f.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
  End If
End Sub

Private Sub cmdPEKD_TRFGRPDel_Click()
  on error resume next
End Sub

Private Sub cmdPEKD_TRFGRPAcc_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  item.application.manager.ShowSecurityDialog f
End Sub

Private Sub cmdPEKD_TRFGRPREf_Click()
  on error resume next
  Item.PEKD_TRFGRP.refresh
  treePEKD_TRFGRP.nodes.clear
  Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
End Sub

Private Sub treePEKD_TRFGRP_DblClick()
If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  cmdPEKD_TRFGRPEdit_Click
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function

Private Sub treePEKD_TRFGRP_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_TRFGRP.Nodes.Remove Node.Child.Index
 Dim f As Object
 Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(Node.Key, 38))
 f.expandpart treePEKD_TRFGRP, Node.Key
 parentform.mousepointer = vbNormal
End If
 set treePEKD_TRFGRP.SelectedItem = Node
 treePEKD_TRFGRP_NodeClick Node
End Sub

Private Sub treePEKD_TRFGRP_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_TRFGRP.SelectedItem = Node
 treePEKD_TRFGRP_NodeClick Node
End Sub

Private Sub pnlPEKD_TRFGRP_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_TRFGRP.Left = Left
  treePEKD_TRFGRP.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_TRFGRP.Width = Width
  treePEKD_TRFGRP.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAddRoot.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAddRoot.Left = Left +5 * Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPAdd.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPEdit.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPDel.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPRef.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPAcc.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdPEKD_TRFTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRFTYPE,&quot;gridPEKD_TRFTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRFTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRFTYPE,&quot;Типы тарифов&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRFTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRFTYPE.Row &gt; 0 Then
 If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRFTYPEFnd_Click()
  on error resume next
  fndPEKD_TRFTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRFTYPERun_Click()
  on error resume next
  gridPEKD_TRFTYPE_DblClick
End Sub
Private Sub pnlPEKD_TRFGRP_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_TRFTYPE.Left = Left
  gridPEKD_TRFTYPE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_TRFTYPE.Width = Width
  gridPEKD_TRFTYPE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdPEKD_TRFTYPEEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub treePEKD_TRFGRP_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(Node.Key, 38))
  p.PEKD_TRFTYPE.Refresh
  p.PEKD_TRFTYPE.preparegrid gridPEKD_TRFTYPE
  LoadGridLayout gridPEKD_TRFTYPE
    Set fndPEKD_TRFTYPE = Nothing
    Set fndPEKD_TRFTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_TRFTYPE.Init gridPEKD_TRFTYPE
End Sub

Private Sub gridPEKD_TRFTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
  Dim p As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  p.PEKD_TRFTYPE.LoadRow gridPEKD_TRFTYPE, RowIndex, Bookmark, Values
  Set p = Nothing
End Sub
Private Sub gridPEKD_TRFTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRFTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRFTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub cmdPEKD_TRFTYPEEdit_Click()
    on error resume next
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
    if gridPEKD_TRFTYPE.Row=0 then exit sub
    if gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)=0 then exit sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)- 38), Left(bm2, 38))
    Set frmPEKD_TRFTYPE_main.Item = u
    again: frmPEKD_TRFTYPE_main.NotFirstTime = False
    frmPEKD_TRFTYPE_main.OnInit
    frmPEKD_TRFTYPE_main.Show vbModal
    If frmPEKD_TRFTYPE_main.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRFTYPE.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
  Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdPEKD_TRFTYPERef_Click()
  on error resume next
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
  gridPEKD_TRFTYPE.columns.clear
  gridPEKD_TRFTYPE.itemcount=0
   treePEKD_TRFGRP_NodeClick treePEKD_TRFGRP.selecteditem
End Sub
Private Sub cmdPEKD_TRFTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_TRFTYPEAdd_Click()
  on error resume next
   If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
   Dim gu As Object
   Set gu = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.selecteditem.Key, 38))
   Dim u As Object
   Set u = gu.PEKD_TRFTYPE.Add()

      Set frmPEKD_TRFTYPE_main.Item = u
      again: frmPEKD_TRFTYPE_main.NotFirstTime = False
      frmPEKD_TRFTYPE_main.OnInit
      frmPEKD_TRFTYPE_main.Show vbModal
      If frmPEKD_TRFTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRFTYPE.ItemCount = gu.PEKD_TRFTYPE.Count
        gridPEKD_TRFTYPE.Refresh
        gridPEKD_TRFTYPE.RefreshGroups
        gridPEKD_TRFTYPE.Refreshsort
        gridPEKD_TRFTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRFTYPE&quot;
      Else
        gu.PEKD_TRFTYPE.Delete u.ID
        gu.PEKD_TRFTYPE.Remove u.ID
      End If
Exit Sub
bye:
  MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridPEKD_TRFTYPE_DblClick()
    cmdPEKD_TRFTYPEEdit_click
End Sub
Private Sub gridPEKD_TRFTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
 If gridPEKD_TRFTYPE.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_TRFTYPE.Row And LastRow &gt; 0 Then
     gridPEKD_TRFTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_TRFTYPE.GetRowData(gridPEKD_TRFTYPE.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuPEKD_TRFTYPEPASTE_Click()
On Error Resume Next
   If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
   Dim gu As Object
   Set gu = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.selecteditem.Key, 38))
   Dim u As Object
   Set u = gu.PEKD_TRFTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRFTYPE.ItemCount = u.parent.Count
    ELSE
      GU.PEKD_TRFTYPE.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRFTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRFTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRFTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRFTYPE
End If
end sub
private sub mnuPEKD_TRFTYPEAdd_click()
   menuActionPEKD_TRFTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEEdit_click()
   menuActionPEKD_TRFTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEDelete_click()
   menuActionPEKD_TRFTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEOpen_click()
   menuActionPEKD_TRFTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPERef_click()
   menuActionPEKD_TRFTYPE =&quot;REF&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRFTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRFTYPE.Row &gt; 0 Then
     If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRFTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRFTYPE.Row &gt; 0 Then
     If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRFTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRFTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRFTYPE.Row &gt; 0 Then
   If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRFTYPE.ItemCount = u.parent.Count
      gridPEKD_TRFTYPE.RefreshRowIndex gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRFTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRFTYPEPrn_click()
   menuActionPEKD_TRFTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPECfg_click()
   menuActionPEKD_TRFTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEFind_click()
   menuActionPEKD_TRFTYPE =&quot;FND&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEAcc_click()
   menuActionPEKD_TRFTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRFTYPE_timer()
   menuTimerPEKD_TRFTYPE.enabled = false
   if menuActionPEKD_TRFTYPE =&quot;ADD&quot; then cmdPEKD_TRFTYPEADD_CLick
   if menuActionPEKD_TRFTYPE =&quot;EDIT&quot; then cmdPEKD_TRFTYPEEDIT_CLick
   if menuActionPEKD_TRFTYPE =&quot;DEL&quot; then cmdPEKD_TRFTYPEDEL_CLick
   if menuActionPEKD_TRFTYPE =&quot;RUN&quot; then cmdPEKD_TRFTYPERUN_CLick
   if menuActionPEKD_TRFTYPE =&quot;REF&quot; then cmdPEKD_TRFTYPEREF_CLick
   if menuActionPEKD_TRFTYPE =&quot;PRN&quot; then cmdPEKD_TRFTYPEPRN_CLick
   if menuActionPEKD_TRFTYPE =&quot;CFG&quot; then cmdPEKD_TRFTYPECFG_CLick
   if menuActionPEKD_TRFTYPE =&quot;FND&quot; then cmdPEKD_TRFTYPEFND_CLick
   if menuActionPEKD_TRFTYPE =&quot;ACC&quot; then cmdPEKD_TRFTYPEACC_CLick
   menuActionPEKD_TRFTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRFGRPAddRoot,cmdPEKD_TRFGRPAddRoot.tag
  LoadBtnPictures cmdPEKD_TRFGRPAdd,cmdPEKD_TRFGRPAdd.tag
  LoadBtnPictures cmdPEKD_TRFGRPEdit,cmdPEKD_TRFGRPEdit.tag
  LoadBtnPictures cmdPEKD_TRFGRPDel,cmdPEKD_TRFGRPDel.tag
  LoadBtnPictures cmdPEKD_TRFGRPRef,cmdPEKD_TRFGRPRef.tag
  LoadBtnPictures cmdPEKD_TRFGRPAcc,cmdPEKD_TRFGRPAcc.tag
Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
  LoadBtnPictures cmdPEKD_TRFTYPEAdd,cmdPEKD_TRFTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRFTYPEEdit,cmdPEKD_TRFTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRFTYPEDel,cmdPEKD_TRFTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRFTYPERef,cmdPEKD_TRFTYPERef.tag
  LoadBtnPictures cmdPEKD_TRFTYPEPrn,cmdPEKD_TRFTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRFTYPEFnd,cmdPEKD_TRFTYPEFnd.Tag
  LoadBtnPictures cmdPEKD_TRFTYPECfg,cmdPEKD_TRFTYPECfg.tag
  LoadBtnPictures cmdPEKD_TRFTYPERun,cmdPEKD_TRFTYPERun.Tag
  LoadBtnPictures cmdPEKD_TRFTYPEAcc,cmdPEKD_TRFTYPEAcc.Tag
  gridPEKD_TRFTYPE.Columns.Clear
  gridPEKD_TRFTYPE.ItemCount=0
  cmdPEKD_TRFTYPERef_Click
end sub
private sub OnTabClick()

pnlPEKD_TRFGRP.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRFGRP.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRFTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_DIRECTION_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_DIRECTION" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_DIRECTION"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_DIRECTION" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_DIRECTION"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridPEKD_DIRECTION" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_DIRECTION"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTPEKD_DIRECTIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_DIRECTION" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Направление перевозки"/><Properties Name="Name" PropValue="mnuPopupPEKD_DIRECTION"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_DIRECTIONAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONOpen"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONRef"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONS1"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_DIRECTIONCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCOPY"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCUT"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONPASTE"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCHANGE"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_DIRECTIONPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONPrn"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCfg"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONFind"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_DIRECTION" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_DIRECTION"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_DIRECTION as object
private menuActionPEKD_DIRECTION as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_DIRECTION_PositionChanged()
  pnlPEKD_DIRECTION.SavePosition
End Sub
Private Sub cmdPEKD_DIRECTIONPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_DIRECTION,&quot;Направление перевозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_DIRECTIONFnd_Click()
  on error resume next
  fndPEKD_DIRECTION.ShowForm
End Sub
Private Sub cmdPEKD_DIRECTIONRun_Click()
  on error resume next
  gridPEKD_DIRECTION_DblClick
End Sub
Private Sub pnlPEKD_DIRECTION_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_DIRECTION.Left = Left
  treePEKD_DIRECTION.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_DIRECTION.Width = Width
  treePEKD_DIRECTION.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlPEKD_DIRECTION_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_DIRECTION.Left = Left
  gridPEKD_DIRECTION.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_DIRECTION.Width = Width
  gridPEKD_DIRECTION.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_DIRECTIONAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdPEKD_DIRECTIONEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdPEKD_DIRECTIONDel_Click()
  on error resume next
  gridPEKD_DIRECTION.Delete
End Sub

Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdPEKD_DIRECTIONEdit_Click()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;main&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DIRECTION.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdPEKD_DIRECTIONAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DIRECTION.SelectedItem.key, 39, 38)
      struct = treePEKD_DIRECTION.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
      If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;main&quot;)



if TypeName(u)=&quot;PEKD_DIRSTATION&quot; then
u.VolSwitchWeight =150
u.VolSwitchWeightSup =150

end if
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridPEKD_DIRECTION.ItemCount = u.Parent.Count
        gridPEKD_DIRECTION.Refresh
        gridPEKD_DIRECTION.RefreshGroups
        gridPEKD_DIRECTION.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdPEKD_DIRECTIONCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treePEKD_DIRECTION.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_DIRECTION,&quot;gridPEKD_DIRECTION&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treePEKD_DIRECTION_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_DIRECTION.Nodes.Remove Node.Child.Index
 item.Expand treePEKD_DIRECTION, Node.Key, &quot;main&quot;
 parentform.mousepointer = vbNormal
End If
 set treePEKD_DIRECTION.SelectedItem = Node
 treePEKD_DIRECTION_NodeClick Node
End Sub

Private Sub treePEKD_DIRECTION_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_DIRECTION.SelectedItem = Node
 treePEKD_DIRECTION_NodeClick Node
End Sub

Private Sub treePEKD_DIRECTION_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridPEKD_DIRECTION
      LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.parent.tag
    Set fndPEKD_DIRECTION = Nothing
    Set fndPEKD_DIRECTION = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_DIRECTION.Init gridPEKD_DIRECTION
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridPEKD_DIRECTION
      LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DIRECTION
       LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DIRECTION
       LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTPEKD_DIRECTIONRef_Click()
  on error resume next
  treePEKD_DIRECTION.Nodes.Clear
  Item.FillTree treePEKD_DIRECTION, &quot;&quot;, &quot;&quot;, &quot;PEKD_DIRECTION&quot;
  gridPEKD_DIRECTION.columns.clear
  gridPEKD_DIRECTION.itemcount=0
End Sub
Private Sub cmdPEKD_DIRECTIONRef_Click()
  on error resume next
  treePEKD_DIRECTION_NodeClick   treePEKD_DIRECTION.SelectedItem 
End Sub
Private Sub cmdPEKD_DIRECTIONAcc_Click()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridPEKD_DIRECTION_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
  If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treePEKD_DIRECTION.SelectedItem.Key, 39, 38)
    struct = treePEKD_DIRECTION.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treePEKD_DIRECTION.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
      else
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.Key, 39, 38)
          struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
        End If
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridPEKD_DIRECTION_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_DIRECTION_DblClick()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;main&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DIRECTION.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridPEKD_DIRECTION_KeyPress(KeyAscii As Integer)
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_DIRECTION.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_DIRECTION_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
 If gridPEKD_DIRECTION.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_DIRECTION.Row And LastRow &gt; 0 Then
     gridPEKD_DIRECTION.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_DIRECTION.GetRowData(gridPEKD_DIRECTION.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridPEKD_DIRECTION_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_DIRECTION
End If
end sub
private sub mnuPEKD_DIRECTIONAdd_click()
   menuActionPEKD_DIRECTION =&quot;ADD&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONEdit_click()
   menuActionPEKD_DIRECTION =&quot;EDIT&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONDelete_click()
   menuActionPEKD_DIRECTION =&quot;DEL&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONOpen_click()
   menuActionPEKD_DIRECTION =&quot;RUN&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONRef_click()
   menuActionPEKD_DIRECTION =&quot;REF&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
  Private Sub mnuPEKD_DIRECTIONCOPY_Click()
    On Error Resume Next
    If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
    If gridPEKD_DIRECTION.Row &gt; 0 Then
     If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_DIRECTIONCUT_Click()
    On Error Resume Next
    If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
    If gridPEKD_DIRECTION.Row &gt; 0 Then
     If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_DIRECTION.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuPEKD_DIRECTIONPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DIRECTION.SelectedItem.key, 39, 38)
      struct = treePEKD_DIRECTION.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
      If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridPEKD_DIRECTION.ItemCount = u.Parent.Count
      gridPEKD_DIRECTION.Refresh
      gridPEKD_DIRECTION.RefreshGroups
      gridPEKD_DIRECTION.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuPEKD_DIRECTIONCHANGE_Click()
  On Error Resume Next
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  If gridPEKD_DIRECTION.Row &gt; 0 Then
   If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_DIRECTION.ItemCount = u.parent.Count
      gridPEKD_DIRECTION.RefreshRowIndex gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_DIRECTIONCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_DIRECTIONPrn_click()
   menuActionPEKD_DIRECTION =&quot;PRN&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONCfg_click()
   menuActionPEKD_DIRECTION =&quot;CFG&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONFind_click()
   menuActionPEKD_DIRECTION =&quot;FND&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONAcc_click()
   menuActionPEKD_DIRECTION =&quot;ACC&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub menuTimerPEKD_DIRECTION_timer()
   menuTimerPEKD_DIRECTION.enabled = false
   if menuActionPEKD_DIRECTION =&quot;ADD&quot; then cmdPEKD_DIRECTIONADD_CLick
   if menuActionPEKD_DIRECTION =&quot;EDIT&quot; then cmdPEKD_DIRECTIONEDIT_CLick
   if menuActionPEKD_DIRECTION =&quot;DEL&quot; then cmdPEKD_DIRECTIONDEL_CLick
   if menuActionPEKD_DIRECTION =&quot;RUN&quot; then cmdPEKD_DIRECTIONRUN_CLick
   if menuActionPEKD_DIRECTION =&quot;REF&quot; then cmdPEKD_DIRECTIONREF_CLick
   if menuActionPEKD_DIRECTION =&quot;PRN&quot; then cmdPEKD_DIRECTIONPRN_CLick
   if menuActionPEKD_DIRECTION =&quot;CFG&quot; then cmdPEKD_DIRECTIONCFG_CLick
   if menuActionPEKD_DIRECTION =&quot;FND&quot; then cmdPEKD_DIRECTIONFND_CLick
   if menuActionPEKD_DIRECTION =&quot;ACC&quot; then cmdPEKD_DIRECTIONACC_CLick
   menuActionPEKD_DIRECTION =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treePEKD_DIRECTION,&quot;&quot;,&quot;main&quot;,&quot;PEKD_DIRECTION&quot;
  LoadBtnPictures cmdTPEKD_DIRECTIONRef,cmdTPEKD_DIRECTIONRef.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONRef,cmdPEKD_DIRECTIONRef.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONAdd,cmdPEKD_DIRECTIONAdd.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONEdit,cmdPEKD_DIRECTIONEdit.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONDel,cmdPEKD_DIRECTIONDel.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONPrn,cmdPEKD_DIRECTIONPrn.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONFnd,cmdPEKD_DIRECTIONFnd.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONCfg,cmdPEKD_DIRECTIONCfg.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONRun,cmdPEKD_DIRECTIONRun.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONAcc,cmdPEKD_DIRECTIONAcc.Tag
  gridPEKD_DIRECTION.Columns.Clear
  gridPEKD_DIRECTION.ItemCount=0
end sub
private sub OnTabClick()

pnlPEKD_DIRECTION.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_DIRECTION.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_DIRECTION = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_DEPT_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_DEPT" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_DEPT"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_DEPT" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_DEPT"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridPEKD_DEPT" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_DEPT"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTPEKD_DEPTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTPEKD_DEPTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_DEPTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_DEPTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_DEPTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_DEPTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_DEPTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_DEPT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Филиал"/><Properties Name="Name" PropValue="mnuPopupPEKD_DEPT"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_DEPTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_DEPTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_DEPTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_DEPTOpen"/></ControlData><ControlData Name="mnuPEKD_DEPTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTRef"/></ControlData><ControlData Name="mnuPEKD_DEPTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_DEPTS1"/></ControlData><ControlData Name="mnuPEKD_DEPTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_DEPTBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_DEPTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCOPY"/></ControlData><ControlData Name="mnuPEKD_DEPTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCUT"/></ControlData><ControlData Name="mnuPEKD_DEPTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTPASTE"/></ControlData><ControlData Name="mnuPEKD_DEPTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCHANGE"/></ControlData><ControlData Name="mnuPEKD_DEPTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_DEPTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTPrn"/></ControlData><ControlData Name="mnuPEKD_DEPTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCfg"/></ControlData><ControlData Name="mnuPEKD_DEPTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_DEPTFind"/></ControlData><ControlData Name="mnuPEKD_DEPTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_DEPTAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_DEPT" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_DEPT"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_DEPT as object
private menuActionPEKD_DEPT as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_DEPT_PositionChanged()
  pnlPEKD_DEPT.SavePosition
End Sub
Private Sub cmdPEKD_DEPTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_DEPT,&quot;Филиал&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_DEPTFnd_Click()
  on error resume next
  fndPEKD_DEPT.ShowForm
End Sub
Private Sub cmdPEKD_DEPTRun_Click()
  on error resume next
  gridPEKD_DEPT_DblClick
End Sub
Private Sub pnlPEKD_DEPT_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_DEPT.Left = Left
  treePEKD_DEPT.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_DEPT.Width = Width
  treePEKD_DEPT.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlPEKD_DEPT_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_DEPT.Left = Left
  gridPEKD_DEPT.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_DEPT.Width = Width
  gridPEKD_DEPT.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_DEPTAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdPEKD_DEPTEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_DEPTDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_DEPTRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_DEPTPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_DEPTCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_DEPTFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_DEPTRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_DEPTAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdPEKD_DEPTDel_Click()
  on error resume next
  gridPEKD_DEPT.Delete
End Sub

Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdPEKD_DEPTEdit_Click()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;main&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DEPT.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdPEKD_DEPTAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DEPT.SelectedItem.key, 39, 38)
      struct = treePEKD_DEPT.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
      If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;main&quot;)




    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridPEKD_DEPT.ItemCount = u.Parent.Count
        gridPEKD_DEPT.Refresh
        gridPEKD_DEPT.RefreshGroups
        gridPEKD_DEPT.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdPEKD_DEPTCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treePEKD_DEPT.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_DEPT,&quot;gridPEKD_DEPT&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treePEKD_DEPT_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_DEPT.Nodes.Remove Node.Child.Index
 item.Expand treePEKD_DEPT, Node.Key, &quot;main&quot;
 parentform.mousepointer = vbNormal
End If
 set treePEKD_DEPT.SelectedItem = Node
 treePEKD_DEPT_NodeClick Node
End Sub

Private Sub treePEKD_DEPT_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_DEPT.SelectedItem = Node
 treePEKD_DEPT_NodeClick Node
End Sub

Private Sub treePEKD_DEPT_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridPEKD_DEPT
      LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.parent.tag
    Set fndPEKD_DEPT = Nothing
    Set fndPEKD_DEPT = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_DEPT.Init gridPEKD_DEPT
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridPEKD_DEPT
      LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DEPT
       LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DEPT
       LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTPEKD_DEPTRef_Click()
  on error resume next
  treePEKD_DEPT.Nodes.Clear
  Item.FillTree treePEKD_DEPT, &quot;&quot;, &quot;&quot;, &quot;PEKD_DEPT&quot;
  gridPEKD_DEPT.columns.clear
  gridPEKD_DEPT.itemcount=0
End Sub
Private Sub cmdPEKD_DEPTRef_Click()
  on error resume next
  treePEKD_DEPT_NodeClick   treePEKD_DEPT.SelectedItem 
End Sub
Private Sub cmdPEKD_DEPTAcc_Click()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridPEKD_DEPT_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
  If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treePEKD_DEPT.SelectedItem.Key, 39, 38)
    struct = treePEKD_DEPT.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treePEKD_DEPT.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
      else
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treePEKD_DEPT.SelectedItem.Parent.Key, 39, 38)
          struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
        End If
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treePEKD_DEPT.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridPEKD_DEPT_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_DEPT_DblClick()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;main&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DEPT.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridPEKD_DEPT_KeyPress(KeyAscii As Integer)
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_DEPT.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_DEPT_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
 If gridPEKD_DEPT.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_DEPT.Row And LastRow &gt; 0 Then
     gridPEKD_DEPT.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_DEPT.GetRowData(gridPEKD_DEPT.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridPEKD_DEPT_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_DEPT
End If
end sub
private sub mnuPEKD_DEPTAdd_click()
   menuActionPEKD_DEPT =&quot;ADD&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTEdit_click()
   menuActionPEKD_DEPT =&quot;EDIT&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTDelete_click()
   menuActionPEKD_DEPT =&quot;DEL&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTOpen_click()
   menuActionPEKD_DEPT =&quot;RUN&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTRef_click()
   menuActionPEKD_DEPT =&quot;REF&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
  Private Sub mnuPEKD_DEPTCOPY_Click()
    On Error Resume Next
    If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
    If gridPEKD_DEPT.Row &gt; 0 Then
     If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_DEPTCUT_Click()
    On Error Resume Next
    If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
    If gridPEKD_DEPT.Row &gt; 0 Then
     If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_DEPT.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuPEKD_DEPTPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DEPT.SelectedItem.key, 39, 38)
      struct = treePEKD_DEPT.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
      If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridPEKD_DEPT.ItemCount = u.Parent.Count
      gridPEKD_DEPT.Refresh
      gridPEKD_DEPT.RefreshGroups
      gridPEKD_DEPT.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuPEKD_DEPTCHANGE_Click()
  On Error Resume Next
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  If gridPEKD_DEPT.Row &gt; 0 Then
   If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_DEPT.ItemCount = u.parent.Count
      gridPEKD_DEPT.RefreshRowIndex gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_DEPTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_DEPTPrn_click()
   menuActionPEKD_DEPT =&quot;PRN&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTCfg_click()
   menuActionPEKD_DEPT =&quot;CFG&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTFind_click()
   menuActionPEKD_DEPT =&quot;FND&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTAcc_click()
   menuActionPEKD_DEPT =&quot;ACC&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub menuTimerPEKD_DEPT_timer()
   menuTimerPEKD_DEPT.enabled = false
   if menuActionPEKD_DEPT =&quot;ADD&quot; then cmdPEKD_DEPTADD_CLick
   if menuActionPEKD_DEPT =&quot;EDIT&quot; then cmdPEKD_DEPTEDIT_CLick
   if menuActionPEKD_DEPT =&quot;DEL&quot; then cmdPEKD_DEPTDEL_CLick
   if menuActionPEKD_DEPT =&quot;RUN&quot; then cmdPEKD_DEPTRUN_CLick
   if menuActionPEKD_DEPT =&quot;REF&quot; then cmdPEKD_DEPTREF_CLick
   if menuActionPEKD_DEPT =&quot;PRN&quot; then cmdPEKD_DEPTPRN_CLick
   if menuActionPEKD_DEPT =&quot;CFG&quot; then cmdPEKD_DEPTCFG_CLick
   if menuActionPEKD_DEPT =&quot;FND&quot; then cmdPEKD_DEPTFND_CLick
   if menuActionPEKD_DEPT =&quot;ACC&quot; then cmdPEKD_DEPTACC_CLick
   menuActionPEKD_DEPT =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treePEKD_DEPT,&quot;&quot;,&quot;main&quot;,&quot;PEKD_DEPT&quot;
  LoadBtnPictures cmdTPEKD_DEPTRef,cmdTPEKD_DEPTRef.Tag
  LoadBtnPictures cmdPEKD_DEPTRef,cmdPEKD_DEPTRef.Tag
  LoadBtnPictures cmdPEKD_DEPTAdd,cmdPEKD_DEPTAdd.Tag
  LoadBtnPictures cmdPEKD_DEPTEdit,cmdPEKD_DEPTEdit.Tag
  LoadBtnPictures cmdPEKD_DEPTDel,cmdPEKD_DEPTDel.Tag
  LoadBtnPictures cmdPEKD_DEPTPrn,cmdPEKD_DEPTPrn.Tag
  LoadBtnPictures cmdPEKD_DEPTFnd,cmdPEKD_DEPTFnd.Tag
  LoadBtnPictures cmdPEKD_DEPTCfg,cmdPEKD_DEPTCfg.Tag
  LoadBtnPictures cmdPEKD_DEPTRun,cmdPEKD_DEPTRun.Tag
  LoadBtnPictures cmdPEKD_DEPTAcc,cmdPEKD_DEPTAcc.Tag
  gridPEKD_DEPT.Columns.Clear
  gridPEKD_DEPT.ItemCount=0
end sub
private sub OnTabClick()

pnlPEKD_DEPT.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_DEPT.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_DEPT = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRAINTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_TRAINTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_TRAINTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRAINTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип поезда"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRAINTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRAINTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRAINTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRAINTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRAINTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_TRAINTYPE as object
private menuActionPEKD_TRAINTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_TRAINTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRAINTYPE,&quot;gridPEKD_TRAINTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRAINTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRAINTYPE,&quot;Тип поезда&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRAINTYPERef_Click()
  on error resume next
  item.PEKD_TRAINTYPE.Refresh
  gridPEKD_TRAINTYPE.itemCount = item.PEKD_TRAINTYPE.count
  gridPEKD_TRAINTYPE.Refetch
  gridPEKD_TRAINTYPE.Refresh
End Sub
Private Sub cmdPEKD_TRAINTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRAINTYPE.Row &gt; 0 Then
 If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRAINTYPEEdit_Click()
  on error resume next
If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRAINTYPE.Row &gt; 0 then
 If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_TRAINTYPE_main.Item = u
    again: frmPEKD_TRAINTYPE_main.NotFirstTime = False
    frmPEKD_TRAINTYPE_main.OnInit
    frmPEKD_TRAINTYPE_main.Show vbModal
    If frmPEKD_TRAINTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRAINTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_TRAINTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_TRAINTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_TRAINTYPE.Add()

      Set frmPEKD_TRAINTYPE_main.Item = u
      again: frmPEKD_TRAINTYPE_main.NotFirstTime = False
      frmPEKD_TRAINTYPE_main.OnInit
      frmPEKD_TRAINTYPE_main.Show vbModal
      If frmPEKD_TRAINTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRAINTYPE.ItemCount = Item.PEKD_TRAINTYPE.Count
        gridPEKD_TRAINTYPE.Refresh
        gridPEKD_TRAINTYPE.RefreshGroups
        gridPEKD_TRAINTYPE.Refreshsort
        gridPEKD_TRAINTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRAINTYPE&quot;
      Else
        Item.PEKD_TRAINTYPE.Delete u.ID
        Item.PEKD_TRAINTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_TRAINTYPEFnd_Click()
  on error resume next
  fndPEKD_TRAINTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRAINTYPERun_Click()
  on error resume next
  gridPEKD_TRAINTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_TRAINTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_TRAINTYPE.LoadRow gridPEKD_TRAINTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_TRAINTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_TRAINTYPE_DblClick()
  cmdPEKD_TRAINTYPEEdit_Click
End Sub
Private Sub gridPEKD_TRAINTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRAINTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRAINTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_TRAINTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_TRAINTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_TRAINTYPE.GetRowData(gridPEKD_TRAINTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_TRAINTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_TRAINTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRAINTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRAINTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRAINTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRAINTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRAINTYPE
End If
end sub
private sub mnuPEKD_TRAINTYPEAdd_click()
   menuActionPEKD_TRAINTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEEdit_click()
   menuActionPEKD_TRAINTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEDelete_click()
   menuActionPEKD_TRAINTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEOpen_click()
   menuActionPEKD_TRAINTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPERef_click()
   menuActionPEKD_TRAINTYPE =&quot;REF&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRAINTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRAINTYPE.Row &gt; 0 Then
     If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRAINTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRAINTYPE.Row &gt; 0 Then
     If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRAINTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRAINTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRAINTYPE.Row &gt; 0 Then
   If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRAINTYPE.ItemCount = u.parent.Count
      gridPEKD_TRAINTYPE.RefreshRowIndex gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRAINTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRAINTYPEPrn_click()
   menuActionPEKD_TRAINTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPECfg_click()
   menuActionPEKD_TRAINTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEFind_click()
   menuActionPEKD_TRAINTYPE =&quot;FND&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEAcc_click()
   menuActionPEKD_TRAINTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRAINTYPE_timer()
   menuTimerPEKD_TRAINTYPE.enabled = false
   if menuActionPEKD_TRAINTYPE =&quot;ADD&quot; then cmdPEKD_TRAINTYPEADD_CLick
   if menuActionPEKD_TRAINTYPE =&quot;EDIT&quot; then cmdPEKD_TRAINTYPEEDIT_CLick
   if menuActionPEKD_TRAINTYPE =&quot;DEL&quot; then cmdPEKD_TRAINTYPEDEL_CLick
   if menuActionPEKD_TRAINTYPE =&quot;RUN&quot; then cmdPEKD_TRAINTYPERUN_CLick
   if menuActionPEKD_TRAINTYPE =&quot;REF&quot; then cmdPEKD_TRAINTYPEREF_CLick
   if menuActionPEKD_TRAINTYPE =&quot;PRN&quot; then cmdPEKD_TRAINTYPEPRN_CLick
   if menuActionPEKD_TRAINTYPE =&quot;CFG&quot; then cmdPEKD_TRAINTYPECFG_CLick
   if menuActionPEKD_TRAINTYPE =&quot;FND&quot; then cmdPEKD_TRAINTYPEFND_CLick
   if menuActionPEKD_TRAINTYPE =&quot;ACC&quot; then cmdPEKD_TRAINTYPEACC_CLick
   menuActionPEKD_TRAINTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRAINTYPEAdd,cmdPEKD_TRAINTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEEdit,cmdPEKD_TRAINTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEDel,cmdPEKD_TRAINTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRAINTYPERef,cmdPEKD_TRAINTYPERef.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEPrn,cmdPEKD_TRAINTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEFnd,cmdPEKD_TRAINTYPEFnd.tag
  LoadBtnPictures cmdPEKD_TRAINTYPERun,cmdPEKD_TRAINTYPERun.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEAcc,cmdPEKD_TRAINTYPEAcc.tag
  LoadBtnPictures cmdPEKD_TRAINTYPECfg,cmdPEKD_TRAINTYPECfg.tag
  item.PEKD_TRAINTYPE.PrepareGrid gridPEKD_TRAINTYPE
  LoadGridLayout gridPEKD_TRAINTYPE
  Set fndPEKD_TRAINTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_TRAINTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_TRAINTYPE.Init gridPEKD_TRAINTYPE
end sub
private sub OnTabClick()

      gridPEKD_TRAINTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_TRAINTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRAINTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRAINTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_ADDS_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_ADDS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_ADDS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_ADDS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_ADDS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_ADDSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_ADDSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_ADDSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_ADDSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_ADDSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_ADDSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_ADDSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_ADDS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Надбавки"/><Properties Name="Name" PropValue="mnuPopupPEKD_ADDS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_ADDSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_ADDSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_ADDSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_ADDSOpen"/></ControlData><ControlData Name="mnuPEKD_ADDSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSRef"/></ControlData><ControlData Name="mnuPEKD_ADDSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_ADDSS1"/></ControlData><ControlData Name="mnuPEKD_ADDSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_ADDSBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_ADDSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCOPY"/></ControlData><ControlData Name="mnuPEKD_ADDSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCUT"/></ControlData><ControlData Name="mnuPEKD_ADDSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSPASTE"/></ControlData><ControlData Name="mnuPEKD_ADDSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCHANGE"/></ControlData><ControlData Name="mnuPEKD_ADDSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_ADDSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSPrn"/></ControlData><ControlData Name="mnuPEKD_ADDSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCfg"/></ControlData><ControlData Name="mnuPEKD_ADDSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_ADDSFind"/></ControlData><ControlData Name="mnuPEKD_ADDSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_ADDSAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_ADDS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_ADDS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_ADDS as object
private menuActionPEKD_ADDS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_ADDSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_ADDS,&quot;gridPEKD_ADDS&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_ADDSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_ADDS,&quot;Надбавки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_ADDSRef_Click()
  on error resume next
  item.PEKD_ADDS.Refresh
  gridPEKD_ADDS.itemCount = item.PEKD_ADDS.count
  gridPEKD_ADDS.Refetch
  gridPEKD_ADDS.Refresh
End Sub
Private Sub cmdPEKD_ADDSAcc_Click()
On Error Resume Next
If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKD_ADDS.Row &gt; 0 Then
 If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_ADDSEdit_Click()
  on error resume next
If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKD_ADDS.Row &gt; 0 then
 If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_ADDS_main.Item = u
    again: frmPEKD_ADDS_main.NotFirstTime = False
    frmPEKD_ADDS_main.OnInit
    frmPEKD_ADDS_main.Show vbModal
    If frmPEKD_ADDS_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_ADDS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_ADDSDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_ADDSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_ADDS.Add()

      Set frmPEKD_ADDS_main.Item = u
      again: frmPEKD_ADDS_main.NotFirstTime = False
      frmPEKD_ADDS_main.OnInit
      frmPEKD_ADDS_main.Show vbModal
      If frmPEKD_ADDS_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_ADDS.ItemCount = Item.PEKD_ADDS.Count
        gridPEKD_ADDS.Refresh
        gridPEKD_ADDS.RefreshGroups
        gridPEKD_ADDS.Refreshsort
        gridPEKD_ADDS.MoveToBookmark u.ID &amp; &quot;PEKD_ADDS&quot;
      Else
        Item.PEKD_ADDS.Delete u.ID
        Item.PEKD_ADDS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_ADDSFnd_Click()
  on error resume next
  fndPEKD_ADDS.ShowForm
End Sub
Private Sub cmdPEKD_ADDSRun_Click()
  on error resume next
  gridPEKD_ADDS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_ADDS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_ADDS.LoadRow gridPEKD_ADDS, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_ADDS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_ADDS_DblClick()
  cmdPEKD_ADDSEdit_Click
End Sub
Private Sub gridPEKD_ADDS_KeyPress(KeyAscii As Integer)
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_ADDS.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_ADDS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_ADDS.Row And LastRow &gt; 0 Then
  gridPEKD_ADDS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_ADDS.GetRowData(gridPEKD_ADDS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_ADDSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_ADDS.Add()
    If GetFromBuffer(u) Then
      gridPEKD_ADDS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_ADDS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_ADDSCfg_Click
        End If
    End If
end sub

private sub gridPEKD_ADDS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_ADDS
End If
end sub
private sub mnuPEKD_ADDSAdd_click()
   menuActionPEKD_ADDS =&quot;ADD&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSEdit_click()
   menuActionPEKD_ADDS =&quot;EDIT&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSDelete_click()
   menuActionPEKD_ADDS =&quot;DEL&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSOpen_click()
   menuActionPEKD_ADDS =&quot;RUN&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSRef_click()
   menuActionPEKD_ADDS =&quot;REF&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
  Private Sub mnuPEKD_ADDSCOPY_Click()
    On Error Resume Next
    If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKD_ADDS.Row &gt; 0 Then
     If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_ADDSCUT_Click()
    On Error Resume Next
    If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKD_ADDS.Row &gt; 0 Then
     If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_ADDS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_ADDSCHANGE_Click()
  On Error Resume Next
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  If gridPEKD_ADDS.Row &gt; 0 Then
   If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_ADDS.ItemCount = u.parent.Count
      gridPEKD_ADDS.RefreshRowIndex gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_ADDSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_ADDSPrn_click()
   menuActionPEKD_ADDS =&quot;PRN&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSCfg_click()
   menuActionPEKD_ADDS =&quot;CFG&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSFind_click()
   menuActionPEKD_ADDS =&quot;FND&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSAcc_click()
   menuActionPEKD_ADDS =&quot;ACC&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub menuTimerPEKD_ADDS_timer()
   menuTimerPEKD_ADDS.enabled = false
   if menuActionPEKD_ADDS =&quot;ADD&quot; then cmdPEKD_ADDSADD_CLick
   if menuActionPEKD_ADDS =&quot;EDIT&quot; then cmdPEKD_ADDSEDIT_CLick
   if menuActionPEKD_ADDS =&quot;DEL&quot; then cmdPEKD_ADDSDEL_CLick
   if menuActionPEKD_ADDS =&quot;RUN&quot; then cmdPEKD_ADDSRUN_CLick
   if menuActionPEKD_ADDS =&quot;REF&quot; then cmdPEKD_ADDSREF_CLick
   if menuActionPEKD_ADDS =&quot;PRN&quot; then cmdPEKD_ADDSPRN_CLick
   if menuActionPEKD_ADDS =&quot;CFG&quot; then cmdPEKD_ADDSCFG_CLick
   if menuActionPEKD_ADDS =&quot;FND&quot; then cmdPEKD_ADDSFND_CLick
   if menuActionPEKD_ADDS =&quot;ACC&quot; then cmdPEKD_ADDSACC_CLick
   menuActionPEKD_ADDS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_ADDSAdd,cmdPEKD_ADDSAdd.tag
  LoadBtnPictures cmdPEKD_ADDSEdit,cmdPEKD_ADDSEdit.tag
  LoadBtnPictures cmdPEKD_ADDSDel,cmdPEKD_ADDSDel.tag
  LoadBtnPictures cmdPEKD_ADDSRef,cmdPEKD_ADDSRef.tag
  LoadBtnPictures cmdPEKD_ADDSPrn,cmdPEKD_ADDSPrn.tag
  LoadBtnPictures cmdPEKD_ADDSFnd,cmdPEKD_ADDSFnd.tag
  LoadBtnPictures cmdPEKD_ADDSRun,cmdPEKD_ADDSRun.tag
  LoadBtnPictures cmdPEKD_ADDSAcc,cmdPEKD_ADDSAcc.tag
  LoadBtnPictures cmdPEKD_ADDSCfg,cmdPEKD_ADDSCfg.tag
  item.PEKD_ADDS.PrepareGrid gridPEKD_ADDS
  LoadGridLayout gridPEKD_ADDS
  Set fndPEKD_ADDS = Nothing
  On Error Resume Next
  Set fndPEKD_ADDS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_ADDS.Init gridPEKD_ADDS
end sub
private sub OnTabClick()

      gridPEKD_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_ADDS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_ADDS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_POSTTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_POSTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_POSTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_POSTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_POSTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_POSTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_POSTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Характер отправления"/><Properties Name="Name" PropValue="mnuPopupPEKD_POSTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_POSTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_POSTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPERef"/></ControlData><ControlData Name="mnuPEKD_POSTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPES1"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_POSTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECUT"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_POSTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECfg"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEFind"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_POSTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_POSTTYPE as object
private menuActionPEKD_POSTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_POSTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_POSTTYPE,&quot;gridPEKD_POSTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_POSTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_POSTTYPE,&quot;Характер отправления&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_POSTTYPERef_Click()
  on error resume next
  item.PEKD_POSTTYPE.Refresh
  gridPEKD_POSTTYPE.itemCount = item.PEKD_POSTTYPE.count
  gridPEKD_POSTTYPE.Refetch
  gridPEKD_POSTTYPE.Refresh
End Sub
Private Sub cmdPEKD_POSTTYPEAcc_Click()
On Error Resume Next
If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_POSTTYPE.Row &gt; 0 Then
 If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_POSTTYPEEdit_Click()
  on error resume next
If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_POSTTYPE.Row &gt; 0 then
 If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_POSTTYPE_main.Item = u
    again: frmPEKD_POSTTYPE_main.NotFirstTime = False
    frmPEKD_POSTTYPE_main.OnInit
    frmPEKD_POSTTYPE_main.Show vbModal
    If frmPEKD_POSTTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_POSTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_POSTTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_POSTTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_POSTTYPE.Add()

      Set frmPEKD_POSTTYPE_main.Item = u
      again: frmPEKD_POSTTYPE_main.NotFirstTime = False
      frmPEKD_POSTTYPE_main.OnInit
      frmPEKD_POSTTYPE_main.Show vbModal
      If frmPEKD_POSTTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_POSTTYPE.ItemCount = Item.PEKD_POSTTYPE.Count
        gridPEKD_POSTTYPE.Refresh
        gridPEKD_POSTTYPE.RefreshGroups
        gridPEKD_POSTTYPE.Refreshsort
        gridPEKD_POSTTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_POSTTYPE&quot;
      Else
        Item.PEKD_POSTTYPE.Delete u.ID
        Item.PEKD_POSTTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_POSTTYPEFnd_Click()
  on error resume next
  fndPEKD_POSTTYPE.ShowForm
End Sub
Private Sub cmdPEKD_POSTTYPERun_Click()
  on error resume next
  gridPEKD_POSTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_POSTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_POSTTYPE.LoadRow gridPEKD_POSTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_POSTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_POSTTYPE_DblClick()
  cmdPEKD_POSTTYPEEdit_Click
End Sub
Private Sub gridPEKD_POSTTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_POSTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_POSTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_POSTTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_POSTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_POSTTYPE.GetRowData(gridPEKD_POSTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_POSTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_POSTTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_POSTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_POSTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_POSTTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_POSTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_POSTTYPE
End If
end sub
private sub mnuPEKD_POSTTYPEAdd_click()
   menuActionPEKD_POSTTYPE =&quot;ADD&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEEdit_click()
   menuActionPEKD_POSTTYPE =&quot;EDIT&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEDelete_click()
   menuActionPEKD_POSTTYPE =&quot;DEL&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEOpen_click()
   menuActionPEKD_POSTTYPE =&quot;RUN&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPERef_click()
   menuActionPEKD_POSTTYPE =&quot;REF&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
  Private Sub mnuPEKD_POSTTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_POSTTYPE.Row &gt; 0 Then
     If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_POSTTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_POSTTYPE.Row &gt; 0 Then
     If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_POSTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_POSTTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_POSTTYPE.Row &gt; 0 Then
   If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_POSTTYPE.ItemCount = u.parent.Count
      gridPEKD_POSTTYPE.RefreshRowIndex gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_POSTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_POSTTYPEPrn_click()
   menuActionPEKD_POSTTYPE =&quot;PRN&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPECfg_click()
   menuActionPEKD_POSTTYPE =&quot;CFG&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEFind_click()
   menuActionPEKD_POSTTYPE =&quot;FND&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEAcc_click()
   menuActionPEKD_POSTTYPE =&quot;ACC&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub menuTimerPEKD_POSTTYPE_timer()
   menuTimerPEKD_POSTTYPE.enabled = false
   if menuActionPEKD_POSTTYPE =&quot;ADD&quot; then cmdPEKD_POSTTYPEADD_CLick
   if menuActionPEKD_POSTTYPE =&quot;EDIT&quot; then cmdPEKD_POSTTYPEEDIT_CLick
   if menuActionPEKD_POSTTYPE =&quot;DEL&quot; then cmdPEKD_POSTTYPEDEL_CLick
   if menuActionPEKD_POSTTYPE =&quot;RUN&quot; then cmdPEKD_POSTTYPERUN_CLick
   if menuActionPEKD_POSTTYPE =&quot;REF&quot; then cmdPEKD_POSTTYPEREF_CLick
   if menuActionPEKD_POSTTYPE =&quot;PRN&quot; then cmdPEKD_POSTTYPEPRN_CLick
   if menuActionPEKD_POSTTYPE =&quot;CFG&quot; then cmdPEKD_POSTTYPECFG_CLick
   if menuActionPEKD_POSTTYPE =&quot;FND&quot; then cmdPEKD_POSTTYPEFND_CLick
   if menuActionPEKD_POSTTYPE =&quot;ACC&quot; then cmdPEKD_POSTTYPEACC_CLick
   menuActionPEKD_POSTTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_POSTTYPEAdd,cmdPEKD_POSTTYPEAdd.tag
  LoadBtnPictures cmdPEKD_POSTTYPEEdit,cmdPEKD_POSTTYPEEdit.tag
  LoadBtnPictures cmdPEKD_POSTTYPEDel,cmdPEKD_POSTTYPEDel.tag
  LoadBtnPictures cmdPEKD_POSTTYPERef,cmdPEKD_POSTTYPERef.tag
  LoadBtnPictures cmdPEKD_POSTTYPEPrn,cmdPEKD_POSTTYPEPrn.tag
  LoadBtnPictures cmdPEKD_POSTTYPEFnd,cmdPEKD_POSTTYPEFnd.tag
  LoadBtnPictures cmdPEKD_POSTTYPERun,cmdPEKD_POSTTYPERun.tag
  LoadBtnPictures cmdPEKD_POSTTYPEAcc,cmdPEKD_POSTTYPEAcc.tag
  LoadBtnPictures cmdPEKD_POSTTYPECfg,cmdPEKD_POSTTYPECfg.tag
  item.PEKD_POSTTYPE.PrepareGrid gridPEKD_POSTTYPE
  LoadGridLayout gridPEKD_POSTTYPE
  Set fndPEKD_POSTTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_POSTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_POSTTYPE.Init gridPEKD_POSTTYPE
end sub
private sub OnTabClick()

      gridPEKD_POSTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_POSTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_POSTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_POSTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_INFOSENDTYPE_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_INFOSENDTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_INFOSENDTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Способ передачи информации"/><Properties Name="Name" PropValue="mnuPopupPEKD_INFOSENDTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_INFOSENDTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPERef"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPES1"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_INFOSENDTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECUT"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECfg"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEFind"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_INFOSENDTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_INFOSENDTYPE as object
private menuActionPEKD_INFOSENDTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_INFOSENDTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_INFOSENDTYPE,&quot;gridPEKD_INFOSENDTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_INFOSENDTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_INFOSENDTYPE,&quot;Способ передачи информации&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_INFOSENDTYPERef_Click()
  on error resume next
  item.PEKD_INFOSENDTYPE.Refresh
  gridPEKD_INFOSENDTYPE.itemCount = item.PEKD_INFOSENDTYPE.count
  gridPEKD_INFOSENDTYPE.Refetch
  gridPEKD_INFOSENDTYPE.Refresh
End Sub
Private Sub cmdPEKD_INFOSENDTYPEAcc_Click()
On Error Resume Next
If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
 If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_INFOSENDTYPEEdit_Click()
  on error resume next
If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_INFOSENDTYPE.Row &gt; 0 then
 If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_INFOSENDTYPE_main.Item = u
    again: frmPEKD_INFOSENDTYPE_main.NotFirstTime = False
    frmPEKD_INFOSENDTYPE_main.OnInit
    frmPEKD_INFOSENDTYPE_main.Show vbModal
    If frmPEKD_INFOSENDTYPE_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_INFOSENDTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_INFOSENDTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_INFOSENDTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_INFOSENDTYPE.Add()

      Set frmPEKD_INFOSENDTYPE_main.Item = u
      again: frmPEKD_INFOSENDTYPE_main.NotFirstTime = False
      frmPEKD_INFOSENDTYPE_main.OnInit
      frmPEKD_INFOSENDTYPE_main.Show vbModal
      If frmPEKD_INFOSENDTYPE_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_INFOSENDTYPE.ItemCount = Item.PEKD_INFOSENDTYPE.Count
        gridPEKD_INFOSENDTYPE.Refresh
        gridPEKD_INFOSENDTYPE.RefreshGroups
        gridPEKD_INFOSENDTYPE.Refreshsort
        gridPEKD_INFOSENDTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_INFOSENDTYPE&quot;
      Else
        Item.PEKD_INFOSENDTYPE.Delete u.ID
        Item.PEKD_INFOSENDTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_INFOSENDTYPEFnd_Click()
  on error resume next
  fndPEKD_INFOSENDTYPE.ShowForm
End Sub
Private Sub cmdPEKD_INFOSENDTYPERun_Click()
  on error resume next
  gridPEKD_INFOSENDTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_INFOSENDTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_INFOSENDTYPE.LoadRow gridPEKD_INFOSENDTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_INFOSENDTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_INFOSENDTYPE_DblClick()
  cmdPEKD_INFOSENDTYPEEdit_Click
End Sub
Private Sub gridPEKD_INFOSENDTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_INFOSENDTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_INFOSENDTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_INFOSENDTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_INFOSENDTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_INFOSENDTYPE.GetRowData(gridPEKD_INFOSENDTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_INFOSENDTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_INFOSENDTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_INFOSENDTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_INFOSENDTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_INFOSENDTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_INFOSENDTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_INFOSENDTYPE
End If
end sub
private sub mnuPEKD_INFOSENDTYPEAdd_click()
   menuActionPEKD_INFOSENDTYPE =&quot;ADD&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEEdit_click()
   menuActionPEKD_INFOSENDTYPE =&quot;EDIT&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEDelete_click()
   menuActionPEKD_INFOSENDTYPE =&quot;DEL&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEOpen_click()
   menuActionPEKD_INFOSENDTYPE =&quot;RUN&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPERef_click()
   menuActionPEKD_INFOSENDTYPE =&quot;REF&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
  Private Sub mnuPEKD_INFOSENDTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
     If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_INFOSENDTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
     If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_INFOSENDTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_INFOSENDTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
   If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_INFOSENDTYPE.ItemCount = u.parent.Count
      gridPEKD_INFOSENDTYPE.RefreshRowIndex gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_INFOSENDTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_INFOSENDTYPEPrn_click()
   menuActionPEKD_INFOSENDTYPE =&quot;PRN&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPECfg_click()
   menuActionPEKD_INFOSENDTYPE =&quot;CFG&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEFind_click()
   menuActionPEKD_INFOSENDTYPE =&quot;FND&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEAcc_click()
   menuActionPEKD_INFOSENDTYPE =&quot;ACC&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub menuTimerPEKD_INFOSENDTYPE_timer()
   menuTimerPEKD_INFOSENDTYPE.enabled = false
   if menuActionPEKD_INFOSENDTYPE =&quot;ADD&quot; then cmdPEKD_INFOSENDTYPEADD_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;EDIT&quot; then cmdPEKD_INFOSENDTYPEEDIT_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;DEL&quot; then cmdPEKD_INFOSENDTYPEDEL_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;RUN&quot; then cmdPEKD_INFOSENDTYPERUN_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;REF&quot; then cmdPEKD_INFOSENDTYPEREF_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;PRN&quot; then cmdPEKD_INFOSENDTYPEPRN_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;CFG&quot; then cmdPEKD_INFOSENDTYPECFG_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;FND&quot; then cmdPEKD_INFOSENDTYPEFND_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;ACC&quot; then cmdPEKD_INFOSENDTYPEACC_CLick
   menuActionPEKD_INFOSENDTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_INFOSENDTYPEAdd,cmdPEKD_INFOSENDTYPEAdd.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEEdit,cmdPEKD_INFOSENDTYPEEdit.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEDel,cmdPEKD_INFOSENDTYPEDel.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPERef,cmdPEKD_INFOSENDTYPERef.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEPrn,cmdPEKD_INFOSENDTYPEPrn.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEFnd,cmdPEKD_INFOSENDTYPEFnd.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPERun,cmdPEKD_INFOSENDTYPERun.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEAcc,cmdPEKD_INFOSENDTYPEAcc.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPECfg,cmdPEKD_INFOSENDTYPECfg.tag
  item.PEKD_INFOSENDTYPE.PrepareGrid gridPEKD_INFOSENDTYPE
  LoadGridLayout gridPEKD_INFOSENDTYPE
  Set fndPEKD_INFOSENDTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_INFOSENDTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_INFOSENDTYPE.Init gridPEKD_INFOSENDTYPE
end sub
private sub OnTabClick()

      gridPEKD_INFOSENDTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_INFOSENDTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_INFOSENDTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_INFOSENDTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_AUTO_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_AUTO" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_AUTO"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_AUTO" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_AUTO"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_AUTOAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTOEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTODel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTODel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_AUTORef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTORef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_AUTOPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_AUTOCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_AUTOFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_AUTORun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_AUTORun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_AUTOAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_AUTO" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип автотранспорта"/><Properties Name="Name" PropValue="mnuPopupPEKD_AUTO"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_AUTOAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTOEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_AUTOEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTODelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_AUTODelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_AUTOOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_AUTOOpen"/></ControlData><ControlData Name="mnuPEKD_AUTORef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_AUTORef"/></ControlData><ControlData Name="mnuPEKD_AUTOS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_AUTOS1"/></ControlData><ControlData Name="mnuPEKD_AUTOBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_AUTOBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_AUTOCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCOPY"/></ControlData><ControlData Name="mnuPEKD_AUTOCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCUT"/></ControlData><ControlData Name="mnuPEKD_AUTOPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOPASTE"/></ControlData><ControlData Name="mnuPEKD_AUTOCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCHANGE"/></ControlData><ControlData Name="mnuPEKD_AUTOCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_AUTOPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOPrn"/></ControlData><ControlData Name="mnuPEKD_AUTOCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCfg"/></ControlData><ControlData Name="mnuPEKD_AUTOFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_AUTOFind"/></ControlData><ControlData Name="mnuPEKD_AUTOAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_AUTOAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_AUTO" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_AUTO"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_AUTO as object
private menuActionPEKD_AUTO as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_AUTOCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_AUTO,&quot;gridPEKD_AUTO&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_AUTOPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_AUTO,&quot;Тип автотранспорта&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_AUTORef_Click()
  on error resume next
  item.PEKD_AUTO.Refresh
  gridPEKD_AUTO.itemCount = item.PEKD_AUTO.count
  gridPEKD_AUTO.Refetch
  gridPEKD_AUTO.Refresh
End Sub
Private Sub cmdPEKD_AUTOAcc_Click()
On Error Resume Next
If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKD_AUTO.Row &gt; 0 Then
 If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_AUTOEdit_Click()
  on error resume next
If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKD_AUTO.Row &gt; 0 then
 If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_AUTO_main.Item = u
    again: frmPEKD_AUTO_main.NotFirstTime = False
    frmPEKD_AUTO_main.OnInit
    frmPEKD_AUTO_main.Show vbModal
    If frmPEKD_AUTO_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_AUTO.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_AUTODel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_AUTOAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_AUTO.Add()

      Set frmPEKD_AUTO_main.Item = u
      again: frmPEKD_AUTO_main.NotFirstTime = False
      frmPEKD_AUTO_main.OnInit
      frmPEKD_AUTO_main.Show vbModal
      If frmPEKD_AUTO_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_AUTO.ItemCount = Item.PEKD_AUTO.Count
        gridPEKD_AUTO.Refresh
        gridPEKD_AUTO.RefreshGroups
        gridPEKD_AUTO.Refreshsort
        gridPEKD_AUTO.MoveToBookmark u.ID &amp; &quot;PEKD_AUTO&quot;
      Else
        Item.PEKD_AUTO.Delete u.ID
        Item.PEKD_AUTO.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_AUTOFnd_Click()
  on error resume next
  fndPEKD_AUTO.ShowForm
End Sub
Private Sub cmdPEKD_AUTORun_Click()
  on error resume next
  gridPEKD_AUTO_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_AUTO_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_AUTO.LoadRow gridPEKD_AUTO, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_AUTO_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_AUTO_DblClick()
  cmdPEKD_AUTOEdit_Click
End Sub
Private Sub gridPEKD_AUTO_KeyPress(KeyAscii As Integer)
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_AUTO.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_AUTO_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_AUTO.Row And LastRow &gt; 0 Then
  gridPEKD_AUTO.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_AUTO.GetRowData(gridPEKD_AUTO.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_AUTOPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_AUTO.Add()
    If GetFromBuffer(u) Then
      gridPEKD_AUTO.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_AUTO_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_AUTOCfg_Click
        End If
    End If
end sub

private sub gridPEKD_AUTO_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_AUTO
End If
end sub
private sub mnuPEKD_AUTOAdd_click()
   menuActionPEKD_AUTO =&quot;ADD&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOEdit_click()
   menuActionPEKD_AUTO =&quot;EDIT&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTODelete_click()
   menuActionPEKD_AUTO =&quot;DEL&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOOpen_click()
   menuActionPEKD_AUTO =&quot;RUN&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTORef_click()
   menuActionPEKD_AUTO =&quot;REF&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
  Private Sub mnuPEKD_AUTOCOPY_Click()
    On Error Resume Next
    If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKD_AUTO.Row &gt; 0 Then
     If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_AUTOCUT_Click()
    On Error Resume Next
    If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKD_AUTO.Row &gt; 0 Then
     If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_AUTO.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_AUTOCHANGE_Click()
  On Error Resume Next
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  If gridPEKD_AUTO.Row &gt; 0 Then
   If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_AUTO.ItemCount = u.parent.Count
      gridPEKD_AUTO.RefreshRowIndex gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_AUTOCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_AUTOPrn_click()
   menuActionPEKD_AUTO =&quot;PRN&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOCfg_click()
   menuActionPEKD_AUTO =&quot;CFG&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOFind_click()
   menuActionPEKD_AUTO =&quot;FND&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOAcc_click()
   menuActionPEKD_AUTO =&quot;ACC&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub menuTimerPEKD_AUTO_timer()
   menuTimerPEKD_AUTO.enabled = false
   if menuActionPEKD_AUTO =&quot;ADD&quot; then cmdPEKD_AUTOADD_CLick
   if menuActionPEKD_AUTO =&quot;EDIT&quot; then cmdPEKD_AUTOEDIT_CLick
   if menuActionPEKD_AUTO =&quot;DEL&quot; then cmdPEKD_AUTODEL_CLick
   if menuActionPEKD_AUTO =&quot;RUN&quot; then cmdPEKD_AUTORUN_CLick
   if menuActionPEKD_AUTO =&quot;REF&quot; then cmdPEKD_AUTOREF_CLick
   if menuActionPEKD_AUTO =&quot;PRN&quot; then cmdPEKD_AUTOPRN_CLick
   if menuActionPEKD_AUTO =&quot;CFG&quot; then cmdPEKD_AUTOCFG_CLick
   if menuActionPEKD_AUTO =&quot;FND&quot; then cmdPEKD_AUTOFND_CLick
   if menuActionPEKD_AUTO =&quot;ACC&quot; then cmdPEKD_AUTOACC_CLick
   menuActionPEKD_AUTO =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_AUTOAdd,cmdPEKD_AUTOAdd.tag
  LoadBtnPictures cmdPEKD_AUTOEdit,cmdPEKD_AUTOEdit.tag
  LoadBtnPictures cmdPEKD_AUTODel,cmdPEKD_AUTODel.tag
  LoadBtnPictures cmdPEKD_AUTORef,cmdPEKD_AUTORef.tag
  LoadBtnPictures cmdPEKD_AUTOPrn,cmdPEKD_AUTOPrn.tag
  LoadBtnPictures cmdPEKD_AUTOFnd,cmdPEKD_AUTOFnd.tag
  LoadBtnPictures cmdPEKD_AUTORun,cmdPEKD_AUTORun.tag
  LoadBtnPictures cmdPEKD_AUTOAcc,cmdPEKD_AUTOAcc.tag
  LoadBtnPictures cmdPEKD_AUTOCfg,cmdPEKD_AUTOCfg.tag
  item.PEKD_AUTO.PrepareGrid gridPEKD_AUTO
  LoadGridLayout gridPEKD_AUTO
  Set fndPEKD_AUTO = Nothing
  On Error Resume Next
  Set fndPEKD_AUTO = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_AUTO.Init gridPEKD_AUTO
end sub
private sub OnTabClick()

      gridPEKD_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_AUTO.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_AUTO = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_GRPDpUSL_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_GRPDpUSL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_GRPDpUSL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_GRPDpUSL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Группы ДопУслуг"/><Properties Name="Name" PropValue="mnuPopupPEKD_GRPDpUSL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_GRPDpUSLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLOpen"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLRef"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLS1"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_GRPDpUSLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCOPY"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCUT"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLPASTE"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCHANGE"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_GRPDpUSLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLPrn"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCfg"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLFind"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_GRPDpUSL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_GRPDpUSL as object
private menuActionPEKD_GRPDpUSL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_GRPDpUSLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_GRPDpUSL,&quot;gridPEKD_GRPDpUSL&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GRPDpUSLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_GRPDpUSL,&quot;Группы ДопУслуг&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GRPDpUSLRef_Click()
  on error resume next
  item.PEKD_GRPDpUSL.Refresh
  gridPEKD_GRPDpUSL.itemCount = item.PEKD_GRPDpUSL.count
  gridPEKD_GRPDpUSL.Refetch
  gridPEKD_GRPDpUSL.Refresh
End Sub
Private Sub cmdPEKD_GRPDpUSLAcc_Click()
On Error Resume Next
If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
If gridPEKD_GRPDpUSL.Row &gt; 0 Then
 If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_GRPDpUSLEdit_Click()
  on error resume next
If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
If gridPEKD_GRPDpUSL.Row &gt; 0 then
 If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_GRPDpUSL_main.Item = u
    again: frmPEKD_GRPDpUSL_main.NotFirstTime = False
    frmPEKD_GRPDpUSL_main.OnInit
    frmPEKD_GRPDpUSL_main.Show vbModal
    If frmPEKD_GRPDpUSL_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_GRPDpUSL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_GRPDpUSLDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_GRPDpUSLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_GRPDpUSL.Add()

      Set frmPEKD_GRPDpUSL_main.Item = u
      again: frmPEKD_GRPDpUSL_main.NotFirstTime = False
      frmPEKD_GRPDpUSL_main.OnInit
      frmPEKD_GRPDpUSL_main.Show vbModal
      If frmPEKD_GRPDpUSL_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_GRPDpUSL.ItemCount = Item.PEKD_GRPDpUSL.Count
        gridPEKD_GRPDpUSL.Refresh
        gridPEKD_GRPDpUSL.RefreshGroups
        gridPEKD_GRPDpUSL.Refreshsort
        gridPEKD_GRPDpUSL.MoveToBookmark u.ID &amp; &quot;PEKD_GRPDpUSL&quot;
      Else
        Item.PEKD_GRPDpUSL.Delete u.ID
        Item.PEKD_GRPDpUSL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_GRPDpUSLFnd_Click()
  on error resume next
  fndPEKD_GRPDpUSL.ShowForm
End Sub
Private Sub cmdPEKD_GRPDpUSLRun_Click()
  on error resume next
  gridPEKD_GRPDpUSL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_GRPDpUSL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_GRPDpUSL.LoadRow gridPEKD_GRPDpUSL, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_GRPDpUSL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_GRPDpUSL_DblClick()
  cmdPEKD_GRPDpUSLEdit_Click
End Sub
Private Sub gridPEKD_GRPDpUSL_KeyPress(KeyAscii As Integer)
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_GRPDpUSL.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_GRPDpUSL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_GRPDpUSL.Row And LastRow &gt; 0 Then
  gridPEKD_GRPDpUSL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_GRPDpUSL.GetRowData(gridPEKD_GRPDpUSL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_GRPDpUSLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_GRPDpUSL.Add()
    If GetFromBuffer(u) Then
      gridPEKD_GRPDpUSL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_GRPDpUSL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_GRPDpUSLCfg_Click
        End If
    End If
end sub

private sub gridPEKD_GRPDpUSL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_GRPDpUSL
End If
end sub
private sub mnuPEKD_GRPDpUSLAdd_click()
   menuActionPEKD_GRPDpUSL =&quot;ADD&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLEdit_click()
   menuActionPEKD_GRPDpUSL =&quot;EDIT&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLDelete_click()
   menuActionPEKD_GRPDpUSL =&quot;DEL&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLOpen_click()
   menuActionPEKD_GRPDpUSL =&quot;RUN&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLRef_click()
   menuActionPEKD_GRPDpUSL =&quot;REF&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
  Private Sub mnuPEKD_GRPDpUSLCOPY_Click()
    On Error Resume Next
    If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
    If gridPEKD_GRPDpUSL.Row &gt; 0 Then
     If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_GRPDpUSLCUT_Click()
    On Error Resume Next
    If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
    If gridPEKD_GRPDpUSL.Row &gt; 0 Then
     If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_GRPDpUSL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_GRPDpUSLCHANGE_Click()
  On Error Resume Next
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  If gridPEKD_GRPDpUSL.Row &gt; 0 Then
   If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_GRPDpUSL.ItemCount = u.parent.Count
      gridPEKD_GRPDpUSL.RefreshRowIndex gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_GRPDpUSLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_GRPDpUSLPrn_click()
   menuActionPEKD_GRPDpUSL =&quot;PRN&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLCfg_click()
   menuActionPEKD_GRPDpUSL =&quot;CFG&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLFind_click()
   menuActionPEKD_GRPDpUSL =&quot;FND&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLAcc_click()
   menuActionPEKD_GRPDpUSL =&quot;ACC&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub menuTimerPEKD_GRPDpUSL_timer()
   menuTimerPEKD_GRPDpUSL.enabled = false
   if menuActionPEKD_GRPDpUSL =&quot;ADD&quot; then cmdPEKD_GRPDpUSLADD_CLick
   if menuActionPEKD_GRPDpUSL =&quot;EDIT&quot; then cmdPEKD_GRPDpUSLEDIT_CLick
   if menuActionPEKD_GRPDpUSL =&quot;DEL&quot; then cmdPEKD_GRPDpUSLDEL_CLick
   if menuActionPEKD_GRPDpUSL =&quot;RUN&quot; then cmdPEKD_GRPDpUSLRUN_CLick
   if menuActionPEKD_GRPDpUSL =&quot;REF&quot; then cmdPEKD_GRPDpUSLREF_CLick
   if menuActionPEKD_GRPDpUSL =&quot;PRN&quot; then cmdPEKD_GRPDpUSLPRN_CLick
   if menuActionPEKD_GRPDpUSL =&quot;CFG&quot; then cmdPEKD_GRPDpUSLCFG_CLick
   if menuActionPEKD_GRPDpUSL =&quot;FND&quot; then cmdPEKD_GRPDpUSLFND_CLick
   if menuActionPEKD_GRPDpUSL =&quot;ACC&quot; then cmdPEKD_GRPDpUSLACC_CLick
   menuActionPEKD_GRPDpUSL =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_GRPDpUSLAdd,cmdPEKD_GRPDpUSLAdd.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLEdit,cmdPEKD_GRPDpUSLEdit.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLDel,cmdPEKD_GRPDpUSLDel.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLRef,cmdPEKD_GRPDpUSLRef.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLPrn,cmdPEKD_GRPDpUSLPrn.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLFnd,cmdPEKD_GRPDpUSLFnd.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLRun,cmdPEKD_GRPDpUSLRun.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLAcc,cmdPEKD_GRPDpUSLAcc.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLCfg,cmdPEKD_GRPDpUSLCfg.tag
  item.PEKD_GRPDpUSL.PrepareGrid gridPEKD_GRPDpUSL
  LoadGridLayout gridPEKD_GRPDpUSL
  Set fndPEKD_GRPDpUSL = Nothing
  On Error Resume Next
  Set fndPEKD_GRPDpUSL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_GRPDpUSL.Init gridPEKD_GRPDpUSL
end sub
private sub OnTabClick()

      gridPEKD_GRPDpUSL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_GRPDpUSL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_GRPDpUSL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_GRPDpUSL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_1CTR_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_1CTR" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_1CTR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_1CTR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_1CTR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_1CTRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_1CTRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_1CTRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_1CTRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_1CTRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_1CTRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_1CTRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_1CTR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Коды основных услуг"/><Properties Name="Name" PropValue="mnuPopupPEKD_1CTR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_1CTRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_1CTREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_1CTROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_1CTROpen"/></ControlData><ControlData Name="mnuPEKD_1CTRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRRef"/></ControlData><ControlData Name="mnuPEKD_1CTRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_1CTRS1"/></ControlData><ControlData Name="mnuPEKD_1CTRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_1CTRBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_1CTRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCOPY"/></ControlData><ControlData Name="mnuPEKD_1CTRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCUT"/></ControlData><ControlData Name="mnuPEKD_1CTRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRPASTE"/></ControlData><ControlData Name="mnuPEKD_1CTRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCHANGE"/></ControlData><ControlData Name="mnuPEKD_1CTRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_1CTRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRPrn"/></ControlData><ControlData Name="mnuPEKD_1CTRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCfg"/></ControlData><ControlData Name="mnuPEKD_1CTRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_1CTRFind"/></ControlData><ControlData Name="mnuPEKD_1CTRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_1CTRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_1CTR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_1CTR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_1CTR as object
private menuActionPEKD_1CTR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_1CTRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_1CTR,&quot;gridPEKD_1CTR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_1CTRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_1CTR,&quot;Коды основных услуг&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_1CTRRef_Click()
  on error resume next
  item.PEKD_1CTR.Refresh
  gridPEKD_1CTR.itemCount = item.PEKD_1CTR.count
  gridPEKD_1CTR.Refetch
  gridPEKD_1CTR.Refresh
End Sub
Private Sub cmdPEKD_1CTRAcc_Click()
On Error Resume Next
If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
If gridPEKD_1CTR.Row &gt; 0 Then
 If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_1CTREdit_Click()
  on error resume next
If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
If gridPEKD_1CTR.Row &gt; 0 then
 If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_1CTR_main.Item = u
    again: frmPEKD_1CTR_main.NotFirstTime = False
    frmPEKD_1CTR_main.OnInit
    frmPEKD_1CTR_main.Show vbModal
    If frmPEKD_1CTR_main.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_1CTR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_1CTRDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_1CTRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_1CTR.Add()

      Set frmPEKD_1CTR_main.Item = u
      again: frmPEKD_1CTR_main.NotFirstTime = False
      frmPEKD_1CTR_main.OnInit
      frmPEKD_1CTR_main.Show vbModal
      If frmPEKD_1CTR_main.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_1CTR.ItemCount = Item.PEKD_1CTR.Count
        gridPEKD_1CTR.Refresh
        gridPEKD_1CTR.RefreshGroups
        gridPEKD_1CTR.Refreshsort
        gridPEKD_1CTR.MoveToBookmark u.ID &amp; &quot;PEKD_1CTR&quot;
      Else
        Item.PEKD_1CTR.Delete u.ID
        Item.PEKD_1CTR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_1CTRFnd_Click()
  on error resume next
  fndPEKD_1CTR.ShowForm
End Sub
Private Sub cmdPEKD_1CTRRun_Click()
  on error resume next
  gridPEKD_1CTR_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_1CTR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_1CTR.LoadRow gridPEKD_1CTR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_1CTR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_1CTR_DblClick()
  cmdPEKD_1CTREdit_Click
End Sub
Private Sub gridPEKD_1CTR_KeyPress(KeyAscii As Integer)
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_1CTR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_1CTR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_1CTR.Row And LastRow &gt; 0 Then
  gridPEKD_1CTR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_1CTR.GetRowData(gridPEKD_1CTR.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_1CTRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_1CTR.Add()
    If GetFromBuffer(u) Then
      gridPEKD_1CTR.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_1CTR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_1CTRCfg_Click
        End If
    End If
end sub

private sub gridPEKD_1CTR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_1CTR
End If
end sub
private sub mnuPEKD_1CTRAdd_click()
   menuActionPEKD_1CTR =&quot;ADD&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTREdit_click()
   menuActionPEKD_1CTR =&quot;EDIT&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRDelete_click()
   menuActionPEKD_1CTR =&quot;DEL&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTROpen_click()
   menuActionPEKD_1CTR =&quot;RUN&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRRef_click()
   menuActionPEKD_1CTR =&quot;REF&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
  Private Sub mnuPEKD_1CTRCOPY_Click()
    On Error Resume Next
    If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
    If gridPEKD_1CTR.Row &gt; 0 Then
     If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_1CTRCUT_Click()
    On Error Resume Next
    If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
    If gridPEKD_1CTR.Row &gt; 0 Then
     If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_1CTR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_1CTRCHANGE_Click()
  On Error Resume Next
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  If gridPEKD_1CTR.Row &gt; 0 Then
   If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_1CTR.ItemCount = u.parent.Count
      gridPEKD_1CTR.RefreshRowIndex gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_1CTRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_1CTRPrn_click()
   menuActionPEKD_1CTR =&quot;PRN&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRCfg_click()
   menuActionPEKD_1CTR =&quot;CFG&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRFind_click()
   menuActionPEKD_1CTR =&quot;FND&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRAcc_click()
   menuActionPEKD_1CTR =&quot;ACC&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub menuTimerPEKD_1CTR_timer()
   menuTimerPEKD_1CTR.enabled = false
   if menuActionPEKD_1CTR =&quot;ADD&quot; then cmdPEKD_1CTRADD_CLick
   if menuActionPEKD_1CTR =&quot;EDIT&quot; then cmdPEKD_1CTREDIT_CLick
   if menuActionPEKD_1CTR =&quot;DEL&quot; then cmdPEKD_1CTRDEL_CLick
   if menuActionPEKD_1CTR =&quot;RUN&quot; then cmdPEKD_1CTRRUN_CLick
   if menuActionPEKD_1CTR =&quot;REF&quot; then cmdPEKD_1CTRREF_CLick
   if menuActionPEKD_1CTR =&quot;PRN&quot; then cmdPEKD_1CTRPRN_CLick
   if menuActionPEKD_1CTR =&quot;CFG&quot; then cmdPEKD_1CTRCFG_CLick
   if menuActionPEKD_1CTR =&quot;FND&quot; then cmdPEKD_1CTRFND_CLick
   if menuActionPEKD_1CTR =&quot;ACC&quot; then cmdPEKD_1CTRACC_CLick
   menuActionPEKD_1CTR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_1CTRAdd,cmdPEKD_1CTRAdd.tag
  LoadBtnPictures cmdPEKD_1CTREdit,cmdPEKD_1CTREdit.tag
  LoadBtnPictures cmdPEKD_1CTRDel,cmdPEKD_1CTRDel.tag
  LoadBtnPictures cmdPEKD_1CTRRef,cmdPEKD_1CTRRef.tag
  LoadBtnPictures cmdPEKD_1CTRPrn,cmdPEKD_1CTRPrn.tag
  LoadBtnPictures cmdPEKD_1CTRFnd,cmdPEKD_1CTRFnd.tag
  LoadBtnPictures cmdPEKD_1CTRRun,cmdPEKD_1CTRRun.tag
  LoadBtnPictures cmdPEKD_1CTRAcc,cmdPEKD_1CTRAcc.tag
  LoadBtnPictures cmdPEKD_1CTRCfg,cmdPEKD_1CTRCfg.tag
  item.PEKD_1CTR.PrepareGrid gridPEKD_1CTR
  LoadGridLayout gridPEKD_1CTR
  Set fndPEKD_1CTR = Nothing
  On Error Resume Next
  Set fndPEKD_1CTR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_1CTR.Init gridPEKD_1CTR
end sub
private sub OnTabClick()

      gridPEKD_1CTR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_1CTR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_1CTR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_1CTR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctlmain_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_SRV" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_SRV_main"><Properties Name="Name" PropValue="pnlPEKD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRTYPE_main"><Properties Name="Name" PropValue="pnlPEKD_TRTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_GOTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_GOTYPE_main"><Properties Name="Name" PropValue="pnlPEKD_GOTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRFGRP" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRFGRP_main"><Properties Name="Name" PropValue="pnlPEKD_TRFGRP"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_DIRECTION" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_DIRECTION_main"><Properties Name="Name" PropValue="pnlPEKD_DIRECTION"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_DEPT" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_DEPT_main"><Properties Name="Name" PropValue="pnlPEKD_DEPT"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRAINTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRAINTYPE_main"><Properties Name="Name" PropValue="pnlPEKD_TRAINTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_ADDS" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_ADDS_main"><Properties Name="Name" PropValue="pnlPEKD_ADDS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_POSTTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_POSTTYPE_main"><Properties Name="Name" PropValue="pnlPEKD_POSTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_INFOSENDTYPE_main"><Properties Name="Name" PropValue="pnlPEKD_INFOSENDTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_AUTO" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_AUTO_main"><Properties Name="Name" PropValue="pnlPEKD_AUTO"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_GRPDpUSL" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_GRPDpUSL_main"><Properties Name="Name" PropValue="pnlPEKD_GRPDpUSL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_1CTR" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_1CTR_main"><Properties Name="Name" PropValue="pnlPEKD_1CTR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочники: Экспедиция"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlPEKD_SRV.IsOK
if IsItOk then IsItOk = pnlPEKD_TRTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_GOTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_TRFGRP.IsOK
if IsItOk then IsItOk = pnlPEKD_DIRECTION.IsOK
if IsItOk then IsItOk = pnlPEKD_DEPT.IsOK
if IsItOk then IsItOk = pnlPEKD_TRAINTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_ADDS.IsOK
if IsItOk then IsItOk = pnlPEKD_POSTTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_INFOSENDTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_AUTO.IsOK
if IsItOk then IsItOk = pnlPEKD_GRPDpUSL.IsOK
if IsItOk then IsItOk = pnlPEKD_1CTR.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlPEKD_1CTR.Visible = False
  pnlPEKD_GRPDpUSL.Visible = False
  pnlPEKD_AUTO.Visible = False
  pnlPEKD_INFOSENDTYPE.Visible = False
  pnlPEKD_POSTTYPE.Visible = False
  pnlPEKD_ADDS.Visible = False
  pnlPEKD_TRAINTYPE.Visible = False
  pnlPEKD_DEPT.Visible = False
  pnlPEKD_DIRECTION.Visible = False
  pnlPEKD_TRFGRP.Visible = False
  pnlPEKD_GOTYPE.Visible = False
  pnlPEKD_TRTYPE.Visible = False
  pnlPEKD_SRV.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;PEKD_SRV&quot;
     With pnlPEKD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_SRV.OnClick item,parentform
     End With
   Case &quot;PEKD_TRTYPE&quot;
     With pnlPEKD_TRTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_GOTYPE&quot;
     With pnlPEKD_GOTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_GOTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_TRFGRP&quot;
     With pnlPEKD_TRFGRP
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRFGRP.OnClick item,parentform
     End With
   Case &quot;PEKD_DIRECTION&quot;
     With pnlPEKD_DIRECTION
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_DIRECTION.OnClick item,parentform
     End With
   Case &quot;PEKD_DEPT&quot;
     With pnlPEKD_DEPT
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_DEPT.OnClick item,parentform
     End With
   Case &quot;PEKD_TRAINTYPE&quot;
     With pnlPEKD_TRAINTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRAINTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_ADDS&quot;
     With pnlPEKD_ADDS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_ADDS.OnClick item,parentform
     End With
   Case &quot;PEKD_POSTTYPE&quot;
     With pnlPEKD_POSTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_POSTTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_INFOSENDTYPE&quot;
     With pnlPEKD_INFOSENDTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_INFOSENDTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_AUTO&quot;
     With pnlPEKD_AUTO
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_AUTO.OnClick item,parentform
     End With
   Case &quot;PEKD_GRPDpUSL&quot;
     With pnlPEKD_GRPDpUSL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_GRPDpUSL.OnClick item,parentform
     End With
   Case &quot;PEKD_1CTR&quot;
     With pnlPEKD_1CTR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_1CTR.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Дополнительные услуги&quot;
ts.Tabs.Item(1).key = &quot;PEKD_SRV&quot;
pnlPEKD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRTYPE&quot;, &quot;Система отправки&quot;)
pnlPEKD_TRTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_GOTYPE&quot;, &quot;Типы СГО&quot;)
pnlPEKD_GOTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRFGRP&quot;, &quot;Группы тарифов&quot;)
pnlPEKD_TRFGRP.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_DIRECTION&quot;, &quot;Направление перевозки&quot;)
pnlPEKD_DIRECTION.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_DEPT&quot;, &quot;Филиал&quot;)
pnlPEKD_DEPT.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRAINTYPE&quot;, &quot;Тип поезда&quot;)
pnlPEKD_TRAINTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_ADDS&quot;, &quot;Надбавки&quot;)
pnlPEKD_ADDS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_POSTTYPE&quot;, &quot;Характер отправления&quot;)
pnlPEKD_POSTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_INFOSENDTYPE&quot;, &quot;Способ передачи информации&quot;)
pnlPEKD_INFOSENDTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_AUTO&quot;, &quot;Тип автотранспорта&quot;)
pnlPEKD_AUTO.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_GRPDpUSL&quot;, &quot;Группы ДопУслуг&quot;)
pnlPEKD_GRPDpUSL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_1CTR&quot;, &quot;Коды основных услуг&quot;)
pnlPEKD_1CTR.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;PEK2D&quot;, &quot;ctlmain_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlPEKD_SRV.CloseClass
 pnlPEKD_TRTYPE.CloseClass
 pnlPEKD_GOTYPE.CloseClass
 pnlPEKD_TRFGRP.CloseClass
 pnlPEKD_DIRECTION.CloseClass
 pnlPEKD_DEPT.CloseClass
 pnlPEKD_TRAINTYPE.CloseClass
 pnlPEKD_ADDS.CloseClass
 pnlPEKD_POSTTYPE.CloseClass
 pnlPEKD_INFOSENDTYPE.CloseClass
 pnlPEKD_AUTO.CloseClass
 pnlPEKD_GRPDpUSL.CloseClass
 pnlPEKD_1CTR.CloseClass
End Sub
public sub OnSave()
 pnlPEKD_SRV.OnSave
 pnlPEKD_TRTYPE.OnSave
 pnlPEKD_GOTYPE.OnSave
 pnlPEKD_TRFGRP.OnSave
 pnlPEKD_DIRECTION.OnSave
 pnlPEKD_DEPT.OnSave
 pnlPEKD_TRAINTYPE.OnSave
 pnlPEKD_ADDS.OnSave
 pnlPEKD_POSTTYPE.OnSave
 pnlPEKD_INFOSENDTYPE.OnSave
 pnlPEKD_AUTO.OnSave
 pnlPEKD_GRPDpUSL.OnSave
 pnlPEKD_1CTR.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlPEKD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_GOTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRFGRP.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_DIRECTION.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_DEPT.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRAINTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_ADDS.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_POSTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_INFOSENDTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_AUTO.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_GRPDpUSL.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_1CTR.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmmain_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="PEK2DGUI.ctlmain_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочники: Экспедиция"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;main&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;main&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_SRV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_SRV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Дополнительные услуги"/><Properties Name="Name" PropValue="mnuPopupPEKD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_SRVDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_SRVOpen"/></ControlData><ControlData Name="mnuPEKD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_SRVRef"/></ControlData><ControlData Name="mnuPEKD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_SRVS1"/></ControlData><ControlData Name="mnuPEKD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_SRVBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_SRVCOPY"/></ControlData><ControlData Name="mnuPEKD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_SRVCUT"/></ControlData><ControlData Name="mnuPEKD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_SRVPASTE"/></ControlData><ControlData Name="mnuPEKD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCHANGE"/></ControlData><ControlData Name="mnuPEKD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_SRVPrn"/></ControlData><ControlData Name="mnuPEKD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_SRVCfg"/></ControlData><ControlData Name="mnuPEKD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_SRVFind"/></ControlData><ControlData Name="mnuPEKD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_SRV as object
private menuActionPEKD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_SRVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_SRV,&quot;gridPEKD_SRV&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_SRV,&quot;Дополнительные услуги&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_SRVRef_Click()
  on error resume next
  item.PEKD_SRV.Refresh
  gridPEKD_SRV.itemCount = item.PEKD_SRV.count
  gridPEKD_SRV.Refetch
  gridPEKD_SRV.Refresh
End Sub
Private Sub cmdPEKD_SRVAcc_Click()
On Error Resume Next
If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
If gridPEKD_SRV.Row &gt; 0 Then
 If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_SRVEdit_Click()
  on error resume next
If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
If gridPEKD_SRV.Row &gt; 0 then
 If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_SRV_.Item = u
    again: frmPEKD_SRV_.NotFirstTime = False
    frmPEKD_SRV_.OnInit
    frmPEKD_SRV_.Show vbModal
    If frmPEKD_SRV_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_SRV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_SRVDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_SRVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_SRV.Add()

      Set frmPEKD_SRV_.Item = u
      again: frmPEKD_SRV_.NotFirstTime = False
      frmPEKD_SRV_.OnInit
      frmPEKD_SRV_.Show vbModal
      If frmPEKD_SRV_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_SRV.ItemCount = Item.PEKD_SRV.Count
        gridPEKD_SRV.Refresh
        gridPEKD_SRV.RefreshGroups
        gridPEKD_SRV.Refreshsort
        gridPEKD_SRV.MoveToBookmark u.ID &amp; &quot;PEKD_SRV&quot;
      Else
        Item.PEKD_SRV.Delete u.ID
        Item.PEKD_SRV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_SRVFnd_Click()
  on error resume next
  fndPEKD_SRV.ShowForm
End Sub
Private Sub cmdPEKD_SRVRun_Click()
  on error resume next
  gridPEKD_SRV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_SRV.LoadRow gridPEKD_SRV, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_SRV_DblClick()
  cmdPEKD_SRVEdit_Click
End Sub
Private Sub gridPEKD_SRV_KeyPress(KeyAscii As Integer)
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_SRV.Row And LastRow &gt; 0 Then
  gridPEKD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_SRV.GetRowData(gridPEKD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_SRVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_SRV.Add()
    If GetFromBuffer(u) Then
      gridPEKD_SRV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_SRV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_SRVCfg_Click
        End If
    End If
end sub

private sub gridPEKD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_SRV
End If
end sub
private sub mnuPEKD_SRVAdd_click()
   menuActionPEKD_SRV =&quot;ADD&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVEdit_click()
   menuActionPEKD_SRV =&quot;EDIT&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVDelete_click()
   menuActionPEKD_SRV =&quot;DEL&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVOpen_click()
   menuActionPEKD_SRV =&quot;RUN&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVRef_click()
   menuActionPEKD_SRV =&quot;REF&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
  Private Sub mnuPEKD_SRVCOPY_Click()
    On Error Resume Next
    If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKD_SRV.Row &gt; 0 Then
     If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_SRVCUT_Click()
    On Error Resume Next
    If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
    If gridPEKD_SRV.Row &gt; 0 Then
     If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_SRVCHANGE_Click()
  On Error Resume Next
  If gridPEKD_SRV.ItemCount = 0 Then Exit Sub
  If gridPEKD_SRV.Row &gt; 0 Then
   If gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_SRV.RowBookmark(gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_SRV.ItemCount = u.parent.Count
      gridPEKD_SRV.RefreshRowIndex gridPEKD_SRV.RowIndex(gridPEKD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_SRVPrn_click()
   menuActionPEKD_SRV =&quot;PRN&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVCfg_click()
   menuActionPEKD_SRV =&quot;CFG&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVFind_click()
   menuActionPEKD_SRV =&quot;FND&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub mnuPEKD_SRVAcc_click()
   menuActionPEKD_SRV =&quot;ACC&quot;
   menuTimerPEKD_SRV.enabled = true
end sub
private sub menuTimerPEKD_SRV_timer()
   menuTimerPEKD_SRV.enabled = false
   if menuActionPEKD_SRV =&quot;ADD&quot; then cmdPEKD_SRVADD_CLick
   if menuActionPEKD_SRV =&quot;EDIT&quot; then cmdPEKD_SRVEDIT_CLick
   if menuActionPEKD_SRV =&quot;DEL&quot; then cmdPEKD_SRVDEL_CLick
   if menuActionPEKD_SRV =&quot;RUN&quot; then cmdPEKD_SRVRUN_CLick
   if menuActionPEKD_SRV =&quot;REF&quot; then cmdPEKD_SRVREF_CLick
   if menuActionPEKD_SRV =&quot;PRN&quot; then cmdPEKD_SRVPRN_CLick
   if menuActionPEKD_SRV =&quot;CFG&quot; then cmdPEKD_SRVCFG_CLick
   if menuActionPEKD_SRV =&quot;FND&quot; then cmdPEKD_SRVFND_CLick
   if menuActionPEKD_SRV =&quot;ACC&quot; then cmdPEKD_SRVACC_CLick
   menuActionPEKD_SRV =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_SRVAdd,cmdPEKD_SRVAdd.tag
  LoadBtnPictures cmdPEKD_SRVEdit,cmdPEKD_SRVEdit.tag
  LoadBtnPictures cmdPEKD_SRVDel,cmdPEKD_SRVDel.tag
  LoadBtnPictures cmdPEKD_SRVRef,cmdPEKD_SRVRef.tag
  LoadBtnPictures cmdPEKD_SRVPrn,cmdPEKD_SRVPrn.tag
  LoadBtnPictures cmdPEKD_SRVFnd,cmdPEKD_SRVFnd.tag
  LoadBtnPictures cmdPEKD_SRVRun,cmdPEKD_SRVRun.tag
  LoadBtnPictures cmdPEKD_SRVAcc,cmdPEKD_SRVAcc.tag
  LoadBtnPictures cmdPEKD_SRVCfg,cmdPEKD_SRVCfg.tag
  item.PEKD_SRV.PrepareGrid gridPEKD_SRV
  LoadGridLayout gridPEKD_SRV
  Set fndPEKD_SRV = Nothing
  On Error Resume Next
  Set fndPEKD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_SRV.Init gridPEKD_SRV
end sub
private sub OnTabClick()

      gridPEKD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_SRV.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_SRV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_TRTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_TRTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Система отправки"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_TRTYPE as object
private menuActionPEKD_TRTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_TRTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRTYPE,&quot;gridPEKD_TRTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRTYPE,&quot;Система отправки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRTYPERef_Click()
  on error resume next
  item.PEKD_TRTYPE.Refresh
  gridPEKD_TRTYPE.itemCount = item.PEKD_TRTYPE.count
  gridPEKD_TRTYPE.Refetch
  gridPEKD_TRTYPE.Refresh
End Sub
Private Sub cmdPEKD_TRTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRTYPE.Row &gt; 0 Then
 If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRTYPEEdit_Click()
  on error resume next
If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRTYPE.Row &gt; 0 then
 If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_TRTYPE_.Item = u
    again: frmPEKD_TRTYPE_.NotFirstTime = False
    frmPEKD_TRTYPE_.OnInit
    frmPEKD_TRTYPE_.Show vbModal
    If frmPEKD_TRTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_TRTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_TRTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_TRTYPE.Add()

      Set frmPEKD_TRTYPE_.Item = u
      again: frmPEKD_TRTYPE_.NotFirstTime = False
      frmPEKD_TRTYPE_.OnInit
      frmPEKD_TRTYPE_.Show vbModal
      If frmPEKD_TRTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRTYPE.ItemCount = Item.PEKD_TRTYPE.Count
        gridPEKD_TRTYPE.Refresh
        gridPEKD_TRTYPE.RefreshGroups
        gridPEKD_TRTYPE.Refreshsort
        gridPEKD_TRTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRTYPE&quot;
      Else
        Item.PEKD_TRTYPE.Delete u.ID
        Item.PEKD_TRTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_TRTYPEFnd_Click()
  on error resume next
  fndPEKD_TRTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRTYPERun_Click()
  on error resume next
  gridPEKD_TRTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_TRTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_TRTYPE.LoadRow gridPEKD_TRTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_TRTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_TRTYPE_DblClick()
  cmdPEKD_TRTYPEEdit_Click
End Sub
Private Sub gridPEKD_TRTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_TRTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_TRTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_TRTYPE.GetRowData(gridPEKD_TRTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_TRTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_TRTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRTYPE
End If
end sub
private sub mnuPEKD_TRTYPEAdd_click()
   menuActionPEKD_TRTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEEdit_click()
   menuActionPEKD_TRTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEDelete_click()
   menuActionPEKD_TRTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEOpen_click()
   menuActionPEKD_TRTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPERef_click()
   menuActionPEKD_TRTYPE =&quot;REF&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRTYPE.Row &gt; 0 Then
     If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRTYPE.Row &gt; 0 Then
     If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRTYPE.Row &gt; 0 Then
   If gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRTYPE.RowBookmark(gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRTYPE.ItemCount = u.parent.Count
      gridPEKD_TRTYPE.RefreshRowIndex gridPEKD_TRTYPE.RowIndex(gridPEKD_TRTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRTYPEPrn_click()
   menuActionPEKD_TRTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPECfg_click()
   menuActionPEKD_TRTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEFind_click()
   menuActionPEKD_TRTYPE =&quot;FND&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub mnuPEKD_TRTYPEAcc_click()
   menuActionPEKD_TRTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRTYPE_timer()
   menuTimerPEKD_TRTYPE.enabled = false
   if menuActionPEKD_TRTYPE =&quot;ADD&quot; then cmdPEKD_TRTYPEADD_CLick
   if menuActionPEKD_TRTYPE =&quot;EDIT&quot; then cmdPEKD_TRTYPEEDIT_CLick
   if menuActionPEKD_TRTYPE =&quot;DEL&quot; then cmdPEKD_TRTYPEDEL_CLick
   if menuActionPEKD_TRTYPE =&quot;RUN&quot; then cmdPEKD_TRTYPERUN_CLick
   if menuActionPEKD_TRTYPE =&quot;REF&quot; then cmdPEKD_TRTYPEREF_CLick
   if menuActionPEKD_TRTYPE =&quot;PRN&quot; then cmdPEKD_TRTYPEPRN_CLick
   if menuActionPEKD_TRTYPE =&quot;CFG&quot; then cmdPEKD_TRTYPECFG_CLick
   if menuActionPEKD_TRTYPE =&quot;FND&quot; then cmdPEKD_TRTYPEFND_CLick
   if menuActionPEKD_TRTYPE =&quot;ACC&quot; then cmdPEKD_TRTYPEACC_CLick
   menuActionPEKD_TRTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRTYPEAdd,cmdPEKD_TRTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRTYPEEdit,cmdPEKD_TRTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRTYPEDel,cmdPEKD_TRTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRTYPERef,cmdPEKD_TRTYPERef.tag
  LoadBtnPictures cmdPEKD_TRTYPEPrn,cmdPEKD_TRTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRTYPEFnd,cmdPEKD_TRTYPEFnd.tag
  LoadBtnPictures cmdPEKD_TRTYPERun,cmdPEKD_TRTYPERun.tag
  LoadBtnPictures cmdPEKD_TRTYPEAcc,cmdPEKD_TRTYPEAcc.tag
  LoadBtnPictures cmdPEKD_TRTYPECfg,cmdPEKD_TRTYPECfg.tag
  item.PEKD_TRTYPE.PrepareGrid gridPEKD_TRTYPE
  LoadGridLayout gridPEKD_TRTYPE
  Set fndPEKD_TRTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_TRTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_TRTYPE.Init gridPEKD_TRTYPE
end sub
private sub OnTabClick()

      gridPEKD_TRTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_TRTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_GOTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_GOTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_GOTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_GOTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_GOTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GOTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_GOTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_GOTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_GOTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_GOTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_GOTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_GOTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GOTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы СГО"/><Properties Name="Name" PropValue="mnuPopupPEKD_GOTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_GOTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GOTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_GOTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_GOTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPERef"/></ControlData><ControlData Name="mnuPEKD_GOTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPES1"/></ControlData><ControlData Name="mnuPEKD_GOTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_GOTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_GOTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECUT"/></ControlData><ControlData Name="mnuPEKD_GOTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_GOTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_GOTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_GOTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_GOTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPECfg"/></ControlData><ControlData Name="mnuPEKD_GOTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEFind"/></ControlData><ControlData Name="mnuPEKD_GOTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_GOTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_GOTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_GOTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_GOTYPE as object
private menuActionPEKD_GOTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_GOTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_GOTYPE,&quot;gridPEKD_GOTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GOTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_GOTYPE,&quot;Типы СГО&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GOTYPERef_Click()
  on error resume next
  item.PEKD_GOTYPE.Refresh
  gridPEKD_GOTYPE.itemCount = item.PEKD_GOTYPE.count
  gridPEKD_GOTYPE.Refetch
  gridPEKD_GOTYPE.Refresh
End Sub
Private Sub cmdPEKD_GOTYPEAcc_Click()
On Error Resume Next
If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_GOTYPE.Row &gt; 0 Then
 If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_GOTYPEEdit_Click()
  on error resume next
If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_GOTYPE.Row &gt; 0 then
 If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_GOTYPE_.Item = u
    again: frmPEKD_GOTYPE_.NotFirstTime = False
    frmPEKD_GOTYPE_.OnInit
    frmPEKD_GOTYPE_.Show vbModal
    If frmPEKD_GOTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_GOTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_GOTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_GOTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_GOTYPE.Add()

      Set frmPEKD_GOTYPE_.Item = u
      again: frmPEKD_GOTYPE_.NotFirstTime = False
      frmPEKD_GOTYPE_.OnInit
      frmPEKD_GOTYPE_.Show vbModal
      If frmPEKD_GOTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_GOTYPE.ItemCount = Item.PEKD_GOTYPE.Count
        gridPEKD_GOTYPE.Refresh
        gridPEKD_GOTYPE.RefreshGroups
        gridPEKD_GOTYPE.Refreshsort
        gridPEKD_GOTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_GOTYPE&quot;
      Else
        Item.PEKD_GOTYPE.Delete u.ID
        Item.PEKD_GOTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_GOTYPEFnd_Click()
  on error resume next
  fndPEKD_GOTYPE.ShowForm
End Sub
Private Sub cmdPEKD_GOTYPERun_Click()
  on error resume next
  gridPEKD_GOTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_GOTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_GOTYPE.LoadRow gridPEKD_GOTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_GOTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_GOTYPE_DblClick()
  cmdPEKD_GOTYPEEdit_Click
End Sub
Private Sub gridPEKD_GOTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_GOTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_GOTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_GOTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_GOTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_GOTYPE.GetRowData(gridPEKD_GOTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_GOTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_GOTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_GOTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_GOTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_GOTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_GOTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_GOTYPE
End If
end sub
private sub mnuPEKD_GOTYPEAdd_click()
   menuActionPEKD_GOTYPE =&quot;ADD&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEEdit_click()
   menuActionPEKD_GOTYPE =&quot;EDIT&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEDelete_click()
   menuActionPEKD_GOTYPE =&quot;DEL&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEOpen_click()
   menuActionPEKD_GOTYPE =&quot;RUN&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPERef_click()
   menuActionPEKD_GOTYPE =&quot;REF&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
  Private Sub mnuPEKD_GOTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_GOTYPE.Row &gt; 0 Then
     If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_GOTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_GOTYPE.Row &gt; 0 Then
     If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_GOTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_GOTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_GOTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_GOTYPE.Row &gt; 0 Then
   If gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GOTYPE.RowBookmark(gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_GOTYPE.ItemCount = u.parent.Count
      gridPEKD_GOTYPE.RefreshRowIndex gridPEKD_GOTYPE.RowIndex(gridPEKD_GOTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_GOTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_GOTYPEPrn_click()
   menuActionPEKD_GOTYPE =&quot;PRN&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPECfg_click()
   menuActionPEKD_GOTYPE =&quot;CFG&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEFind_click()
   menuActionPEKD_GOTYPE =&quot;FND&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub mnuPEKD_GOTYPEAcc_click()
   menuActionPEKD_GOTYPE =&quot;ACC&quot;
   menuTimerPEKD_GOTYPE.enabled = true
end sub
private sub menuTimerPEKD_GOTYPE_timer()
   menuTimerPEKD_GOTYPE.enabled = false
   if menuActionPEKD_GOTYPE =&quot;ADD&quot; then cmdPEKD_GOTYPEADD_CLick
   if menuActionPEKD_GOTYPE =&quot;EDIT&quot; then cmdPEKD_GOTYPEEDIT_CLick
   if menuActionPEKD_GOTYPE =&quot;DEL&quot; then cmdPEKD_GOTYPEDEL_CLick
   if menuActionPEKD_GOTYPE =&quot;RUN&quot; then cmdPEKD_GOTYPERUN_CLick
   if menuActionPEKD_GOTYPE =&quot;REF&quot; then cmdPEKD_GOTYPEREF_CLick
   if menuActionPEKD_GOTYPE =&quot;PRN&quot; then cmdPEKD_GOTYPEPRN_CLick
   if menuActionPEKD_GOTYPE =&quot;CFG&quot; then cmdPEKD_GOTYPECFG_CLick
   if menuActionPEKD_GOTYPE =&quot;FND&quot; then cmdPEKD_GOTYPEFND_CLick
   if menuActionPEKD_GOTYPE =&quot;ACC&quot; then cmdPEKD_GOTYPEACC_CLick
   menuActionPEKD_GOTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_GOTYPEAdd,cmdPEKD_GOTYPEAdd.tag
  LoadBtnPictures cmdPEKD_GOTYPEEdit,cmdPEKD_GOTYPEEdit.tag
  LoadBtnPictures cmdPEKD_GOTYPEDel,cmdPEKD_GOTYPEDel.tag
  LoadBtnPictures cmdPEKD_GOTYPERef,cmdPEKD_GOTYPERef.tag
  LoadBtnPictures cmdPEKD_GOTYPEPrn,cmdPEKD_GOTYPEPrn.tag
  LoadBtnPictures cmdPEKD_GOTYPEFnd,cmdPEKD_GOTYPEFnd.tag
  LoadBtnPictures cmdPEKD_GOTYPERun,cmdPEKD_GOTYPERun.tag
  LoadBtnPictures cmdPEKD_GOTYPEAcc,cmdPEKD_GOTYPEAcc.tag
  LoadBtnPictures cmdPEKD_GOTYPECfg,cmdPEKD_GOTYPECfg.tag
  item.PEKD_GOTYPE.PrepareGrid gridPEKD_GOTYPE
  LoadGridLayout gridPEKD_GOTYPE
  Set fndPEKD_GOTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_GOTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_GOTYPE.Init gridPEKD_GOTYPE
end sub
private sub OnTabClick()

      gridPEKD_GOTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_GOTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GOTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_GOTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_GOTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRFGRP_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRFGRP" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_TRFGRP"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_TRFGRP" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_TRFGRP"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Indentation" PropValue="75"/><Properties Name="Sorted" PropValue="True"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAddRoot" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAddRoot"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEWROOT.ico"/><Properties Name="ToolTipText" PropValue="Добавить ветку"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFGRPDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFGRPRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRFGRPAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFGRPAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="gridPEKD_TRFTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRFTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRFTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRFTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRFTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRFTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRFTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRFGRP" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Группы тарифов"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRFGRP"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRFGRPAddRoot" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать ветку"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAddRoot"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFGRPDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRFGRPS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPS1"/></ControlData><ControlData Name="mnuPEKD_TRFGRPBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRFGRPCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCOPY"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCUT"/></ControlData><ControlData Name="mnuPEKD_TRFGRPPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPPASTE"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCHANGE"/></ControlData><ControlData Name="mnuPEKD_TRFGRPCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRFGRPRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPRef"/></ControlData><ControlData Name="mnuPEKD_TRFGRPAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRFGRPAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRFGRP" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRFGRP"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupPEKD_TRFTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Типы тарифов"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRFTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRFTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRFTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRFTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRFTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRFTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRFTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRFTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRFTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRFTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRFTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private menuActionPEKD_TRFGRP as string
private fndPEKD_TRFTYPE as object
private menuActionPEKD_TRFTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_TRFGRP_PositionChanged()
  pnlPEKD_TRFGRP.SavePosition
End Sub
private sub treePEKD_TRFGRP_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_TRFGRP
End If
end sub
private sub mnuPEKD_TRFGRPAddRoot_click()
   menuActionPEKD_TRFGRP =&quot;ADDROOT&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPAdd_click()
   menuActionPEKD_TRFGRP =&quot;ADD&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPEdit_click()
   menuActionPEKD_TRFGRP =&quot;EDIT&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPDelete_click()
   menuActionPEKD_TRFGRP =&quot;DEL&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
  Private Sub mnuPEKD_TRFGRPCOPY_Click()
    On Error Resume Next
    If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
        Dim u As Object
        Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
        SaveToBuffer u
  End Sub
  Private Sub mnuPEKD_TRFGRPCUT_Click()
    On Error Resume Next
    If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
    Dim u As Object,BM
    Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
    SaveToBuffer u
    SET BM = u.parent
    u.parent.Delete u.ID
    TREEPEKD_TRFGRP.nodes.remove TREEPEKD_TRFGRP.selecteditem.key
  End Sub
Private Sub mnuPEKD_TRFGRPPASTE_Click()
On Error Resume Next
If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Dim u As Object, f as object
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set u = f.PEKD_TRFGRP.Add()
  If GetFromBuffer(u) Then
    If treePEKD_TRFGRP.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
      u.LoadToTree treePEKD_TRFGRP, treePEKD_TRFGRP.SelectedItem.Key
    end if
  Else
   f.PEKD_TRFGRP.refresh
  End If
End Sub
Private Sub mnuPEKD_TRFGRPCHANGE_Click()
  On Error Resume Next
  If TREEPEKD_TRFGRP.SELECTEDItem is nothing Then Exit Sub
  Dim u As Object,BM
  Set u = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  If GetFromBuffer(u) Then
    TREEPEKD_TRFGRP.SELECTEDItem.text = u.brief
      treePEKD_TRFGRP.SelectedItem.Expanded = False
      While treePEKD_TRFGRP.SelectedItem.Children &gt; 0
        treePEKD_TRFGRP.Nodes.Remove treePEKD_TRFGRP.SelectedItem.Child.Key
      Wend
      treePEKD_TRFGRP.Nodes.Add(treePEKD_TRFGRP.SelectedItem.Key, 4, &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_TRFGRP_Expand treePEKD_TRFGRP.SelectedItem
  End If
End Sub
  Private Sub mnuPEKD_TRFGRPCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRFGRPRef_click()
   menuActionPEKD_TRFGRP =&quot;REF&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub mnuPEKD_TRFGRPAcc_click()
   menuActionPEKD_TRFGRP =&quot;ACC&quot;
   menuTimerPEKD_TRFGRP.enabled = true
end sub
private sub menuTimerPEKD_TRFGRP_timer()
   menuTimerPEKD_TRFGRP.enabled = false
   if menuActionPEKD_TRFGRP =&quot;ADDROOT&quot; then cmdPEKD_TRFGRPADDROOT_CLick
   if menuActionPEKD_TRFGRP =&quot;ADD&quot; then cmdPEKD_TRFGRPADD_CLick
   if menuActionPEKD_TRFGRP =&quot;EDIT&quot; then cmdPEKD_TRFGRPEDIT_CLick
   if menuActionPEKD_TRFGRP =&quot;DEL&quot; then cmdPEKD_TRFGRPDEL_CLick
   if menuActionPEKD_TRFGRP =&quot;REF&quot; then cmdPEKD_TRFGRPREF_CLick
   if menuActionPEKD_TRFGRP =&quot;ACC&quot; then cmdPEKD_TRFGRPACC_CLick
   menuActionPEKD_TRFGRP =&quot;&quot;
end sub
Private Sub cmdPEKD_TRFGRPAdd_Click()
  on error resume next
  on error resume next
  Dim f As Object, p As Object
If (treePEKD_TRFGRP.SelectedItem is Nothing) Then  exit sub
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set f = p.PEKD_TRFGRP.Add()

      Set frmPEKD_TRFGRP_.Item = f
      again: frmPEKD_TRFGRP_.NotFirstTime = False
      frmPEKD_TRFGRP_.OnInit
      frmPEKD_TRFGRP_.Show vbModal
      If frmPEKD_TRFGRP_.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
          If treePEKD_TRFGRP.SelectedItem.child.tag &lt;&gt; &quot;ToDelete&quot; Then  
            f.LoadToTree treePEKD_TRFGRP, treePEKD_TRFGRP.SelectedItem.Key
          end if
          set treePEKD_TRFGRP.SelectedItem = treePEKD_TRFGRP.nodes.item(  f.ID &amp; &quot;PEKD_TRFGRP&quot;)
      Else
        Item.PEKD_TRFGRP.Delete f.ID
        Item.PEKD_TRFGRP.Remove f.ID
      End If
End Sub

Private Sub cmdPEKD_TRFGRPAddRoot_Click()
  on error resume next
Dim f As Object, p As Object
  Set f = Item.PEKD_TRFGRP.Add()

      Set frmPEKD_TRFGRP_.Item = f
      again: frmPEKD_TRFGRP_.NotFirstTime = False
      frmPEKD_TRFGRP_.OnInit
      frmPEKD_TRFGRP_.Show vbModal
      If frmPEKD_TRFGRP_.OK Then
        err.clear
        f.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
    Item.PEKD_TRFGRP.refresh
    treePEKD_TRFGRP.nodes.clear
    Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
          set treePEKD_TRFGRP.SelectedItem = treePEKD_TRFGRP.nodes.item(  f.ID &amp; &quot;PEKD_TRFGRP&quot;)
      Else
        Item.PEKD_TRFGRP.Remove f.ID
      End If
End Sub

Private Sub cmdPEKD_TRFGRPEdit_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  Set frmPEKD_TRFGRP_.Item = f
  again: frmPEKD_TRFGRP_.NotFirstTime = False
  frmPEKD_TRFGRP_.OnInit
  frmPEKD_TRFGRP_.Show vbModal
  If frmPEKD_TRFGRP_.OK Then
    err.clear
    f.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
  End If
End Sub

Private Sub cmdPEKD_TRFGRPDel_Click()
  on error resume next
End Sub

Private Sub cmdPEKD_TRFGRPAcc_Click()
  on error resume next
  Dim f As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  item.application.manager.ShowSecurityDialog f
End Sub

Private Sub cmdPEKD_TRFGRPREf_Click()
  on error resume next
  Item.PEKD_TRFGRP.refresh
  treePEKD_TRFGRP.nodes.clear
  Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
End Sub

Private Sub treePEKD_TRFGRP_DblClick()
If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  cmdPEKD_TRFGRPEdit_Click
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function

Private Sub treePEKD_TRFGRP_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_TRFGRP.Nodes.Remove Node.Child.Index
 Dim f As Object
 Set f = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(Node.Key, 38))
 f.expandpart treePEKD_TRFGRP, Node.Key
 parentform.mousepointer = vbNormal
End If
 set treePEKD_TRFGRP.SelectedItem = Node
 treePEKD_TRFGRP_NodeClick Node
End Sub

Private Sub treePEKD_TRFGRP_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_TRFGRP.SelectedItem = Node
 treePEKD_TRFGRP_NodeClick Node
End Sub

Private Sub pnlPEKD_TRFGRP_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_TRFGRP.Left = Left
  treePEKD_TRFGRP.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_TRFGRP.Width = Width
  treePEKD_TRFGRP.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAddRoot.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFGRPAddRoot.Left = Left +5 * Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPAdd.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPEdit.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPDel.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPRef.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_TRFGRPAcc.Left = Left+130* Screen.TwipsPerPixelX
End Sub
Private Sub cmdPEKD_TRFTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRFTYPE,&quot;gridPEKD_TRFTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRFTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRFTYPE,&quot;Типы тарифов&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRFTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRFTYPE.Row &gt; 0 Then
 If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRFTYPEFnd_Click()
  on error resume next
  fndPEKD_TRFTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRFTYPERun_Click()
  on error resume next
  gridPEKD_TRFTYPE_DblClick
End Sub
Private Sub pnlPEKD_TRFGRP_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_TRFTYPE.Left = Left
  gridPEKD_TRFTYPE.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_TRFTYPE.Width = Width
  gridPEKD_TRFTYPE.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPERef.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPECfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPERun.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdPEKD_TRFTYPEAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdPEKD_TRFTYPEEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPERef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPECfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPERun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_TRFTYPEAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub treePEKD_TRFGRP_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(Node.Key, 38))
  p.PEKD_TRFTYPE.Refresh
  p.PEKD_TRFTYPE.preparegrid gridPEKD_TRFTYPE
  LoadGridLayout gridPEKD_TRFTYPE
    Set fndPEKD_TRFTYPE = Nothing
    Set fndPEKD_TRFTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_TRFTYPE.Init gridPEKD_TRFTYPE
End Sub

Private Sub gridPEKD_TRFTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
  Dim p As Object
  If treePEKD_TRFGRP.SelectedItem Is Nothing Then Exit Sub
  Set p = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.SelectedItem.Key, 38))
  p.PEKD_TRFTYPE.LoadRow gridPEKD_TRFTYPE, RowIndex, Bookmark, Values
  Set p = Nothing
End Sub
Private Sub gridPEKD_TRFTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRFTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRFTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub
Private Sub cmdPEKD_TRFTYPEEdit_Click()
    on error resume next
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
    if gridPEKD_TRFTYPE.Row=0 then exit sub
    if gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)=0 then exit sub
    Dim u As Object
    Dim  bm2
    bm2 = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)- 38), Left(bm2, 38))
    Set frmPEKD_TRFTYPE_.Item = u
    again: frmPEKD_TRFTYPE_.NotFirstTime = False
    frmPEKD_TRFTYPE_.OnInit
    frmPEKD_TRFTYPE_.Show vbModal
    If frmPEKD_TRFTYPE_.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRFTYPE.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
  Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdPEKD_TRFTYPERef_Click()
  on error resume next
    If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
  gridPEKD_TRFTYPE.columns.clear
  gridPEKD_TRFTYPE.itemcount=0
   treePEKD_TRFGRP_NodeClick treePEKD_TRFGRP.selecteditem
End Sub
Private Sub cmdPEKD_TRFTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_TRFTYPEAdd_Click()
  on error resume next
   If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
   Dim gu As Object
   Set gu = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.selecteditem.Key, 38))
   Dim u As Object
   Set u = gu.PEKD_TRFTYPE.Add()

      Set frmPEKD_TRFTYPE_.Item = u
      again: frmPEKD_TRFTYPE_.NotFirstTime = False
      frmPEKD_TRFTYPE_.OnInit
      frmPEKD_TRFTYPE_.Show vbModal
      If frmPEKD_TRFTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRFTYPE.ItemCount = gu.PEKD_TRFTYPE.Count
        gridPEKD_TRFTYPE.Refresh
        gridPEKD_TRFTYPE.RefreshGroups
        gridPEKD_TRFTYPE.Refreshsort
        gridPEKD_TRFTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRFTYPE&quot;
      Else
        gu.PEKD_TRFTYPE.Delete u.ID
        gu.PEKD_TRFTYPE.Remove u.ID
      End If
Exit Sub
bye:
  MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridPEKD_TRFTYPE_DblClick()
    cmdPEKD_TRFTYPEEdit_click
End Sub
Private Sub gridPEKD_TRFTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
 If gridPEKD_TRFTYPE.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_TRFTYPE.Row And LastRow &gt; 0 Then
     gridPEKD_TRFTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_TRFTYPE.GetRowData(gridPEKD_TRFTYPE.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuPEKD_TRFTYPEPASTE_Click()
On Error Resume Next
   If treePEKD_TRFGRP.selecteditem is nothing Then Exit Sub
   Dim gu As Object
   Set gu = Item.FindRowObject(&quot;PEKD_TRFGRP&quot;, Left(treePEKD_TRFGRP.selecteditem.Key, 38))
   Dim u As Object
   Set u = gu.PEKD_TRFTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRFTYPE.ItemCount = u.parent.Count
    ELSE
      GU.PEKD_TRFTYPE.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRFTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRFTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRFTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRFTYPE
End If
end sub
private sub mnuPEKD_TRFTYPEAdd_click()
   menuActionPEKD_TRFTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEEdit_click()
   menuActionPEKD_TRFTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEDelete_click()
   menuActionPEKD_TRFTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEOpen_click()
   menuActionPEKD_TRFTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPERef_click()
   menuActionPEKD_TRFTYPE =&quot;REF&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRFTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRFTYPE.Row &gt; 0 Then
     If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRFTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRFTYPE.Row &gt; 0 Then
     If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRFTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRFTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRFTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRFTYPE.Row &gt; 0 Then
   If gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRFTYPE.RowBookmark(gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRFTYPE.ItemCount = u.parent.Count
      gridPEKD_TRFTYPE.RefreshRowIndex gridPEKD_TRFTYPE.RowIndex(gridPEKD_TRFTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRFTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRFTYPEPrn_click()
   menuActionPEKD_TRFTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPECfg_click()
   menuActionPEKD_TRFTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEFind_click()
   menuActionPEKD_TRFTYPE =&quot;FND&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub mnuPEKD_TRFTYPEAcc_click()
   menuActionPEKD_TRFTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRFTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRFTYPE_timer()
   menuTimerPEKD_TRFTYPE.enabled = false
   if menuActionPEKD_TRFTYPE =&quot;ADD&quot; then cmdPEKD_TRFTYPEADD_CLick
   if menuActionPEKD_TRFTYPE =&quot;EDIT&quot; then cmdPEKD_TRFTYPEEDIT_CLick
   if menuActionPEKD_TRFTYPE =&quot;DEL&quot; then cmdPEKD_TRFTYPEDEL_CLick
   if menuActionPEKD_TRFTYPE =&quot;RUN&quot; then cmdPEKD_TRFTYPERUN_CLick
   if menuActionPEKD_TRFTYPE =&quot;REF&quot; then cmdPEKD_TRFTYPEREF_CLick
   if menuActionPEKD_TRFTYPE =&quot;PRN&quot; then cmdPEKD_TRFTYPEPRN_CLick
   if menuActionPEKD_TRFTYPE =&quot;CFG&quot; then cmdPEKD_TRFTYPECFG_CLick
   if menuActionPEKD_TRFTYPE =&quot;FND&quot; then cmdPEKD_TRFTYPEFND_CLick
   if menuActionPEKD_TRFTYPE =&quot;ACC&quot; then cmdPEKD_TRFTYPEACC_CLick
   menuActionPEKD_TRFTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRFGRPAddRoot,cmdPEKD_TRFGRPAddRoot.tag
  LoadBtnPictures cmdPEKD_TRFGRPAdd,cmdPEKD_TRFGRPAdd.tag
  LoadBtnPictures cmdPEKD_TRFGRPEdit,cmdPEKD_TRFGRPEdit.tag
  LoadBtnPictures cmdPEKD_TRFGRPDel,cmdPEKD_TRFGRPDel.tag
  LoadBtnPictures cmdPEKD_TRFGRPRef,cmdPEKD_TRFGRPRef.tag
  LoadBtnPictures cmdPEKD_TRFGRPAcc,cmdPEKD_TRFGRPAcc.tag
Item.PEKD_TRFGRP.filltree treePEKD_TRFGRP
  LoadBtnPictures cmdPEKD_TRFTYPEAdd,cmdPEKD_TRFTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRFTYPEEdit,cmdPEKD_TRFTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRFTYPEDel,cmdPEKD_TRFTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRFTYPERef,cmdPEKD_TRFTYPERef.tag
  LoadBtnPictures cmdPEKD_TRFTYPEPrn,cmdPEKD_TRFTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRFTYPEFnd,cmdPEKD_TRFTYPEFnd.Tag
  LoadBtnPictures cmdPEKD_TRFTYPECfg,cmdPEKD_TRFTYPECfg.tag
  LoadBtnPictures cmdPEKD_TRFTYPERun,cmdPEKD_TRFTYPERun.Tag
  LoadBtnPictures cmdPEKD_TRFTYPEAcc,cmdPEKD_TRFTYPEAcc.Tag
  gridPEKD_TRFTYPE.Columns.Clear
  gridPEKD_TRFTYPE.ItemCount=0
  cmdPEKD_TRFTYPERef_Click
end sub
private sub OnTabClick()

pnlPEKD_TRFGRP.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRFGRP.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRFTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_DIRECTION_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_DIRECTION" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_DIRECTION"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_DIRECTION" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_DIRECTION"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridPEKD_DIRECTION" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_DIRECTION"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTPEKD_DIRECTIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_DIRECTIONAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DIRECTIONAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_DIRECTION" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Направление перевозки"/><Properties Name="Name" PropValue="mnuPopupPEKD_DIRECTION"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_DIRECTIONAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONOpen"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONRef"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONS1"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_DIRECTIONCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCOPY"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCUT"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONPASTE"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCHANGE"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_DIRECTIONPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONPrn"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONCfg"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONFind"/></ControlData><ControlData Name="mnuPEKD_DIRECTIONAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_DIRECTIONAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_DIRECTION" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_DIRECTION"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_DIRECTION as object
private menuActionPEKD_DIRECTION as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_DIRECTION_PositionChanged()
  pnlPEKD_DIRECTION.SavePosition
End Sub
Private Sub cmdPEKD_DIRECTIONPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_DIRECTION,&quot;Направление перевозки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_DIRECTIONFnd_Click()
  on error resume next
  fndPEKD_DIRECTION.ShowForm
End Sub
Private Sub cmdPEKD_DIRECTIONRun_Click()
  on error resume next
  gridPEKD_DIRECTION_DblClick
End Sub
Private Sub pnlPEKD_DIRECTION_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_DIRECTION.Left = Left
  treePEKD_DIRECTION.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_DIRECTION.Width = Width
  treePEKD_DIRECTION.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlPEKD_DIRECTION_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_DIRECTION.Left = Left
  gridPEKD_DIRECTION.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_DIRECTION.Width = Width
  gridPEKD_DIRECTION.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_DIRECTIONAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdPEKD_DIRECTIONEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_DIRECTIONAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdPEKD_DIRECTIONDel_Click()
  on error resume next
  gridPEKD_DIRECTION.Delete
End Sub

Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdPEKD_DIRECTIONEdit_Click()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DIRECTION.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdPEKD_DIRECTIONAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DIRECTION.SelectedItem.key, 39, 38)
      struct = treePEKD_DIRECTION.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
      If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)



if TypeName(u)=&quot;PEKD_DIRSTATION&quot; then
u.VolSwitchWeight =150
u.VolSwitchWeightSup =150

end if
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridPEKD_DIRECTION.ItemCount = u.Parent.Count
        gridPEKD_DIRECTION.Refresh
        gridPEKD_DIRECTION.RefreshGroups
        gridPEKD_DIRECTION.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdPEKD_DIRECTIONCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treePEKD_DIRECTION.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_DIRECTION,&quot;gridPEKD_DIRECTION&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treePEKD_DIRECTION_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_DIRECTION.Nodes.Remove Node.Child.Index
 item.Expand treePEKD_DIRECTION, Node.Key, &quot;&quot;
 parentform.mousepointer = vbNormal
End If
 set treePEKD_DIRECTION.SelectedItem = Node
 treePEKD_DIRECTION_NodeClick Node
End Sub

Private Sub treePEKD_DIRECTION_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_DIRECTION.SelectedItem = Node
 treePEKD_DIRECTION_NodeClick Node
End Sub

Private Sub treePEKD_DIRECTION_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridPEKD_DIRECTION
      LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.parent.tag
    Set fndPEKD_DIRECTION = Nothing
    Set fndPEKD_DIRECTION = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_DIRECTION.Init gridPEKD_DIRECTION
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridPEKD_DIRECTION
      LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DIRECTION
       LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DIRECTION
       LoadGridLayout gridPEKD_DIRECTION,gridPEKD_DIRECTION.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTPEKD_DIRECTIONRef_Click()
  on error resume next
  treePEKD_DIRECTION.Nodes.Clear
  Item.FillTree treePEKD_DIRECTION, &quot;&quot;, &quot;&quot;, &quot;PEKD_DIRECTION&quot;
  gridPEKD_DIRECTION.columns.clear
  gridPEKD_DIRECTION.itemcount=0
End Sub
Private Sub cmdPEKD_DIRECTIONRef_Click()
  on error resume next
  treePEKD_DIRECTION_NodeClick   treePEKD_DIRECTION.SelectedItem 
End Sub
Private Sub cmdPEKD_DIRECTIONAcc_Click()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridPEKD_DIRECTION_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
  If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treePEKD_DIRECTION.SelectedItem.Key, 39, 38)
    struct = treePEKD_DIRECTION.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treePEKD_DIRECTION.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
      else
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.Key, 39, 38)
          struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
        End If
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).LoadRow gridPEKD_DIRECTION, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridPEKD_DIRECTION_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_DIRECTION_DblClick()
on error resume next
If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
If gridPEKD_DIRECTION.Row &gt; 0 Then
 If gridPEKD_DIRECTION.RowIndex ( gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DIRECTION.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridPEKD_DIRECTION_KeyPress(KeyAscii As Integer)
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_DIRECTION.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_DIRECTION_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
 If gridPEKD_DIRECTION.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_DIRECTION.Row And LastRow &gt; 0 Then
     gridPEKD_DIRECTION.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_DIRECTION.GetRowData(gridPEKD_DIRECTION.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridPEKD_DIRECTION_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_DIRECTION
End If
end sub
private sub mnuPEKD_DIRECTIONAdd_click()
   menuActionPEKD_DIRECTION =&quot;ADD&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONEdit_click()
   menuActionPEKD_DIRECTION =&quot;EDIT&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONDelete_click()
   menuActionPEKD_DIRECTION =&quot;DEL&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONOpen_click()
   menuActionPEKD_DIRECTION =&quot;RUN&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONRef_click()
   menuActionPEKD_DIRECTION =&quot;REF&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
  Private Sub mnuPEKD_DIRECTIONCOPY_Click()
    On Error Resume Next
    If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
    If gridPEKD_DIRECTION.Row &gt; 0 Then
     If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_DIRECTIONCUT_Click()
    On Error Resume Next
    If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
    If gridPEKD_DIRECTION.Row &gt; 0 Then
     If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_DIRECTION.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuPEKD_DIRECTIONPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DIRECTION.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DIRECTION.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DIRECTION.SelectedItem.key, 39, 38)
      struct = treePEKD_DIRECTION.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DIRECTION.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DIRECTION.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
      If treePEKD_DIRECTION.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DIRECTION.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DIRECTION.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridPEKD_DIRECTION.ItemCount = u.Parent.Count
      gridPEKD_DIRECTION.Refresh
      gridPEKD_DIRECTION.RefreshGroups
      gridPEKD_DIRECTION.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DIRECTION.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DIRECTION.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DIRECTION.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DIRECTION_Expand treePEKD_DIRECTION.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuPEKD_DIRECTIONCHANGE_Click()
  On Error Resume Next
  If gridPEKD_DIRECTION.ItemCount = 0 Then Exit Sub
  If gridPEKD_DIRECTION.Row &gt; 0 Then
   If gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DIRECTION.RowBookmark(gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_DIRECTION.ItemCount = u.parent.Count
      gridPEKD_DIRECTION.RefreshRowIndex gridPEKD_DIRECTION.RowIndex(gridPEKD_DIRECTION.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_DIRECTIONCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_DIRECTIONPrn_click()
   menuActionPEKD_DIRECTION =&quot;PRN&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONCfg_click()
   menuActionPEKD_DIRECTION =&quot;CFG&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONFind_click()
   menuActionPEKD_DIRECTION =&quot;FND&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub mnuPEKD_DIRECTIONAcc_click()
   menuActionPEKD_DIRECTION =&quot;ACC&quot;
   menuTimerPEKD_DIRECTION.enabled = true
end sub
private sub menuTimerPEKD_DIRECTION_timer()
   menuTimerPEKD_DIRECTION.enabled = false
   if menuActionPEKD_DIRECTION =&quot;ADD&quot; then cmdPEKD_DIRECTIONADD_CLick
   if menuActionPEKD_DIRECTION =&quot;EDIT&quot; then cmdPEKD_DIRECTIONEDIT_CLick
   if menuActionPEKD_DIRECTION =&quot;DEL&quot; then cmdPEKD_DIRECTIONDEL_CLick
   if menuActionPEKD_DIRECTION =&quot;RUN&quot; then cmdPEKD_DIRECTIONRUN_CLick
   if menuActionPEKD_DIRECTION =&quot;REF&quot; then cmdPEKD_DIRECTIONREF_CLick
   if menuActionPEKD_DIRECTION =&quot;PRN&quot; then cmdPEKD_DIRECTIONPRN_CLick
   if menuActionPEKD_DIRECTION =&quot;CFG&quot; then cmdPEKD_DIRECTIONCFG_CLick
   if menuActionPEKD_DIRECTION =&quot;FND&quot; then cmdPEKD_DIRECTIONFND_CLick
   if menuActionPEKD_DIRECTION =&quot;ACC&quot; then cmdPEKD_DIRECTIONACC_CLick
   menuActionPEKD_DIRECTION =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treePEKD_DIRECTION,&quot;&quot;,&quot;&quot;,&quot;PEKD_DIRECTION&quot;
  LoadBtnPictures cmdTPEKD_DIRECTIONRef,cmdTPEKD_DIRECTIONRef.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONRef,cmdPEKD_DIRECTIONRef.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONAdd,cmdPEKD_DIRECTIONAdd.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONEdit,cmdPEKD_DIRECTIONEdit.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONDel,cmdPEKD_DIRECTIONDel.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONPrn,cmdPEKD_DIRECTIONPrn.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONFnd,cmdPEKD_DIRECTIONFnd.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONCfg,cmdPEKD_DIRECTIONCfg.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONRun,cmdPEKD_DIRECTIONRun.Tag
  LoadBtnPictures cmdPEKD_DIRECTIONAcc,cmdPEKD_DIRECTIONAcc.Tag
  gridPEKD_DIRECTION.Columns.Clear
  gridPEKD_DIRECTION.ItemCount=0
end sub
private sub OnTabClick()

pnlPEKD_DIRECTION.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_DIRECTION.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_DIRECTION = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_DEPT_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_DEPT" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlPEKD_DEPT"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treePEKD_DEPT" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treePEKD_DEPT"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridPEKD_DEPT" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_DEPT"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTPEKD_DEPTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTPEKD_DEPTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_DEPTRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_DEPTPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_DEPTCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_DEPTFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_DEPTRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_DEPTAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_DEPTAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_DEPT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Филиал"/><Properties Name="Name" PropValue="mnuPopupPEKD_DEPT"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_DEPTAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_DEPTEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_DEPTDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_DEPTOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_DEPTOpen"/></ControlData><ControlData Name="mnuPEKD_DEPTRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTRef"/></ControlData><ControlData Name="mnuPEKD_DEPTS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_DEPTS1"/></ControlData><ControlData Name="mnuPEKD_DEPTBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_DEPTBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_DEPTCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCOPY"/></ControlData><ControlData Name="mnuPEKD_DEPTCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCUT"/></ControlData><ControlData Name="mnuPEKD_DEPTPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTPASTE"/></ControlData><ControlData Name="mnuPEKD_DEPTCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCHANGE"/></ControlData><ControlData Name="mnuPEKD_DEPTCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_DEPTPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_DEPTPrn"/></ControlData><ControlData Name="mnuPEKD_DEPTCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_DEPTCfg"/></ControlData><ControlData Name="mnuPEKD_DEPTFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_DEPTFind"/></ControlData><ControlData Name="mnuPEKD_DEPTAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_DEPTAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_DEPT" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_DEPT"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_DEPT as object
private menuActionPEKD_DEPT as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlPEKD_DEPT_PositionChanged()
  pnlPEKD_DEPT.SavePosition
End Sub
Private Sub cmdPEKD_DEPTPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_DEPT,&quot;Филиал&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_DEPTFnd_Click()
  on error resume next
  fndPEKD_DEPT.ShowForm
End Sub
Private Sub cmdPEKD_DEPTRun_Click()
  on error resume next
  gridPEKD_DEPT_DblClick
End Sub
Private Sub pnlPEKD_DEPT_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treePEKD_DEPT.Left = Left
  treePEKD_DEPT.Top = Top + 25 * Screen.TwipsPerPixelY
  treePEKD_DEPT.Width = Width
  treePEKD_DEPT.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlPEKD_DEPT_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridPEKD_DEPT.Left = Left
  gridPEKD_DEPT.Top = Top + 25 * Screen.TwipsPerPixelY
  gridPEKD_DEPT.Width = Width
  gridPEKD_DEPT.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdPEKD_DEPTAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdPEKD_DEPTEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdPEKD_DEPTDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdPEKD_DEPTRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdPEKD_DEPTPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdPEKD_DEPTCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdPEKD_DEPTFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdPEKD_DEPTRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdPEKD_DEPTAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdPEKD_DEPTDel_Click()
  on error resume next
  gridPEKD_DEPT.Delete
End Sub

Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdPEKD_DEPTEdit_Click()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DEPT.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdPEKD_DEPTAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DEPT.SelectedItem.key, 39, 38)
      struct = treePEKD_DEPT.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
      If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)




    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridPEKD_DEPT.ItemCount = u.Parent.Count
        gridPEKD_DEPT.Refresh
        gridPEKD_DEPT.RefreshGroups
        gridPEKD_DEPT.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdPEKD_DEPTCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treePEKD_DEPT.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_DEPT,&quot;gridPEKD_DEPT&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treePEKD_DEPT_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treePEKD_DEPT.Nodes.Remove Node.Child.Index
 item.Expand treePEKD_DEPT, Node.Key, &quot;&quot;
 parentform.mousepointer = vbNormal
End If
 set treePEKD_DEPT.SelectedItem = Node
 treePEKD_DEPT_NodeClick Node
End Sub

Private Sub treePEKD_DEPT_Collapse(ByVal Node As MSComctlLib.Node)
 set treePEKD_DEPT.SelectedItem = Node
 treePEKD_DEPT_NodeClick Node
End Sub

Private Sub treePEKD_DEPT_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridPEKD_DEPT
      LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.parent.tag
    Set fndPEKD_DEPT = Nothing
    Set fndPEKD_DEPT = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndPEKD_DEPT.Init gridPEKD_DEPT
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridPEKD_DEPT
      LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DEPT
       LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridPEKD_DEPT
       LoadGridLayout gridPEKD_DEPT,gridPEKD_DEPT.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTPEKD_DEPTRef_Click()
  on error resume next
  treePEKD_DEPT.Nodes.Clear
  Item.FillTree treePEKD_DEPT, &quot;&quot;, &quot;&quot;, &quot;PEKD_DEPT&quot;
  gridPEKD_DEPT.columns.clear
  gridPEKD_DEPT.itemcount=0
End Sub
Private Sub cmdPEKD_DEPTRef_Click()
  on error resume next
  treePEKD_DEPT_NodeClick   treePEKD_DEPT.SelectedItem 
End Sub
Private Sub cmdPEKD_DEPTAcc_Click()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridPEKD_DEPT_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
  If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treePEKD_DEPT.SelectedItem.Key, 39, 38)
    struct = treePEKD_DEPT.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treePEKD_DEPT.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
      else
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treePEKD_DEPT.SelectedItem.Parent.Key, 39, 38)
          struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
        End If
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treePEKD_DEPT.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).LoadRow gridPEKD_DEPT, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridPEKD_DEPT_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridPEKD_DEPT_DblClick()
on error resume next
If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
If gridPEKD_DEPT.Row &gt; 0 Then
 If gridPEKD_DEPT.RowIndex ( gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridPEKD_DEPT.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridPEKD_DEPT_KeyPress(KeyAscii As Integer)
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_DEPT.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_DEPT_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
 If gridPEKD_DEPT.Row &gt; 0 Then
   If LastRow &lt;&gt; gridPEKD_DEPT.Row And LastRow &gt; 0 Then
     gridPEKD_DEPT.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridPEKD_DEPT.GetRowData(gridPEKD_DEPT.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridPEKD_DEPT_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupPEKD_DEPT
End If
end sub
private sub mnuPEKD_DEPTAdd_click()
   menuActionPEKD_DEPT =&quot;ADD&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTEdit_click()
   menuActionPEKD_DEPT =&quot;EDIT&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTDelete_click()
   menuActionPEKD_DEPT =&quot;DEL&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTOpen_click()
   menuActionPEKD_DEPT =&quot;RUN&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTRef_click()
   menuActionPEKD_DEPT =&quot;REF&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
  Private Sub mnuPEKD_DEPTCOPY_Click()
    On Error Resume Next
    If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
    If gridPEKD_DEPT.Row &gt; 0 Then
     If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_DEPTCUT_Click()
    On Error Resume Next
    If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
    If gridPEKD_DEPT.Row &gt; 0 Then
     If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_DEPT.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuPEKD_DEPTPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treePEKD_DEPT.SelectedItem Is Nothing Then Exit Sub
    If treePEKD_DEPT.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treePEKD_DEPT.SelectedItem.key, 39, 38)
      struct = treePEKD_DEPT.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treePEKD_DEPT.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        struct = treePEKD_DEPT.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
      If treePEKD_DEPT.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treePEKD_DEPT.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treePEKD_DEPT.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridPEKD_DEPT.ItemCount = u.Parent.Count
      gridPEKD_DEPT.Refresh
      gridPEKD_DEPT.RefreshGroups
      gridPEKD_DEPT.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treePEKD_DEPT.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treePEKD_DEPT.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treePEKD_DEPT.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treePEKD_DEPT_Expand treePEKD_DEPT.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuPEKD_DEPTCHANGE_Click()
  On Error Resume Next
  If gridPEKD_DEPT.ItemCount = 0 Then Exit Sub
  If gridPEKD_DEPT.Row &gt; 0 Then
   If gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_DEPT.RowBookmark(gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_DEPT.ItemCount = u.parent.Count
      gridPEKD_DEPT.RefreshRowIndex gridPEKD_DEPT.RowIndex(gridPEKD_DEPT.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_DEPTCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_DEPTPrn_click()
   menuActionPEKD_DEPT =&quot;PRN&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTCfg_click()
   menuActionPEKD_DEPT =&quot;CFG&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTFind_click()
   menuActionPEKD_DEPT =&quot;FND&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub mnuPEKD_DEPTAcc_click()
   menuActionPEKD_DEPT =&quot;ACC&quot;
   menuTimerPEKD_DEPT.enabled = true
end sub
private sub menuTimerPEKD_DEPT_timer()
   menuTimerPEKD_DEPT.enabled = false
   if menuActionPEKD_DEPT =&quot;ADD&quot; then cmdPEKD_DEPTADD_CLick
   if menuActionPEKD_DEPT =&quot;EDIT&quot; then cmdPEKD_DEPTEDIT_CLick
   if menuActionPEKD_DEPT =&quot;DEL&quot; then cmdPEKD_DEPTDEL_CLick
   if menuActionPEKD_DEPT =&quot;RUN&quot; then cmdPEKD_DEPTRUN_CLick
   if menuActionPEKD_DEPT =&quot;REF&quot; then cmdPEKD_DEPTREF_CLick
   if menuActionPEKD_DEPT =&quot;PRN&quot; then cmdPEKD_DEPTPRN_CLick
   if menuActionPEKD_DEPT =&quot;CFG&quot; then cmdPEKD_DEPTCFG_CLick
   if menuActionPEKD_DEPT =&quot;FND&quot; then cmdPEKD_DEPTFND_CLick
   if menuActionPEKD_DEPT =&quot;ACC&quot; then cmdPEKD_DEPTACC_CLick
   menuActionPEKD_DEPT =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treePEKD_DEPT,&quot;&quot;,&quot;&quot;,&quot;PEKD_DEPT&quot;
  LoadBtnPictures cmdTPEKD_DEPTRef,cmdTPEKD_DEPTRef.Tag
  LoadBtnPictures cmdPEKD_DEPTRef,cmdPEKD_DEPTRef.Tag
  LoadBtnPictures cmdPEKD_DEPTAdd,cmdPEKD_DEPTAdd.Tag
  LoadBtnPictures cmdPEKD_DEPTEdit,cmdPEKD_DEPTEdit.Tag
  LoadBtnPictures cmdPEKD_DEPTDel,cmdPEKD_DEPTDel.Tag
  LoadBtnPictures cmdPEKD_DEPTPrn,cmdPEKD_DEPTPrn.Tag
  LoadBtnPictures cmdPEKD_DEPTFnd,cmdPEKD_DEPTFnd.Tag
  LoadBtnPictures cmdPEKD_DEPTCfg,cmdPEKD_DEPTCfg.Tag
  LoadBtnPictures cmdPEKD_DEPTRun,cmdPEKD_DEPTRun.Tag
  LoadBtnPictures cmdPEKD_DEPTAcc,cmdPEKD_DEPTAcc.Tag
  gridPEKD_DEPT.Columns.Clear
  gridPEKD_DEPT.ItemCount=0
end sub
private sub OnTabClick()

pnlPEKD_DEPT.RestorePosition
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_DEPT.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_DEPT = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_TRAINTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_TRAINTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_TRAINTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_TRAINTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_TRAINTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_TRAINTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип поезда"/><Properties Name="Name" PropValue="mnuPopupPEKD_TRAINTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_TRAINTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPERef"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPES1"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_TRAINTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECUT"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_TRAINTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPECfg"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEFind"/></ControlData><ControlData Name="mnuPEKD_TRAINTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_TRAINTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_TRAINTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_TRAINTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_TRAINTYPE as object
private menuActionPEKD_TRAINTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_TRAINTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_TRAINTYPE,&quot;gridPEKD_TRAINTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRAINTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_TRAINTYPE,&quot;Тип поезда&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_TRAINTYPERef_Click()
  on error resume next
  item.PEKD_TRAINTYPE.Refresh
  gridPEKD_TRAINTYPE.itemCount = item.PEKD_TRAINTYPE.count
  gridPEKD_TRAINTYPE.Refetch
  gridPEKD_TRAINTYPE.Refresh
End Sub
Private Sub cmdPEKD_TRAINTYPEAcc_Click()
On Error Resume Next
If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRAINTYPE.Row &gt; 0 Then
 If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_TRAINTYPEEdit_Click()
  on error resume next
If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_TRAINTYPE.Row &gt; 0 then
 If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_TRAINTYPE_.Item = u
    again: frmPEKD_TRAINTYPE_.NotFirstTime = False
    frmPEKD_TRAINTYPE_.OnInit
    frmPEKD_TRAINTYPE_.Show vbModal
    If frmPEKD_TRAINTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_TRAINTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_TRAINTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_TRAINTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_TRAINTYPE.Add()

      Set frmPEKD_TRAINTYPE_.Item = u
      again: frmPEKD_TRAINTYPE_.NotFirstTime = False
      frmPEKD_TRAINTYPE_.OnInit
      frmPEKD_TRAINTYPE_.Show vbModal
      If frmPEKD_TRAINTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_TRAINTYPE.ItemCount = Item.PEKD_TRAINTYPE.Count
        gridPEKD_TRAINTYPE.Refresh
        gridPEKD_TRAINTYPE.RefreshGroups
        gridPEKD_TRAINTYPE.Refreshsort
        gridPEKD_TRAINTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_TRAINTYPE&quot;
      Else
        Item.PEKD_TRAINTYPE.Delete u.ID
        Item.PEKD_TRAINTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_TRAINTYPEFnd_Click()
  on error resume next
  fndPEKD_TRAINTYPE.ShowForm
End Sub
Private Sub cmdPEKD_TRAINTYPERun_Click()
  on error resume next
  gridPEKD_TRAINTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_TRAINTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_TRAINTYPE.LoadRow gridPEKD_TRAINTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_TRAINTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_TRAINTYPE_DblClick()
  cmdPEKD_TRAINTYPEEdit_Click
End Sub
Private Sub gridPEKD_TRAINTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_TRAINTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_TRAINTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_TRAINTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_TRAINTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_TRAINTYPE.GetRowData(gridPEKD_TRAINTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_TRAINTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_TRAINTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_TRAINTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_TRAINTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_TRAINTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_TRAINTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_TRAINTYPE
End If
end sub
private sub mnuPEKD_TRAINTYPEAdd_click()
   menuActionPEKD_TRAINTYPE =&quot;ADD&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEEdit_click()
   menuActionPEKD_TRAINTYPE =&quot;EDIT&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEDelete_click()
   menuActionPEKD_TRAINTYPE =&quot;DEL&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEOpen_click()
   menuActionPEKD_TRAINTYPE =&quot;RUN&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPERef_click()
   menuActionPEKD_TRAINTYPE =&quot;REF&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
  Private Sub mnuPEKD_TRAINTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRAINTYPE.Row &gt; 0 Then
     If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_TRAINTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_TRAINTYPE.Row &gt; 0 Then
     If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_TRAINTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_TRAINTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_TRAINTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_TRAINTYPE.Row &gt; 0 Then
   If gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_TRAINTYPE.RowBookmark(gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_TRAINTYPE.ItemCount = u.parent.Count
      gridPEKD_TRAINTYPE.RefreshRowIndex gridPEKD_TRAINTYPE.RowIndex(gridPEKD_TRAINTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_TRAINTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_TRAINTYPEPrn_click()
   menuActionPEKD_TRAINTYPE =&quot;PRN&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPECfg_click()
   menuActionPEKD_TRAINTYPE =&quot;CFG&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEFind_click()
   menuActionPEKD_TRAINTYPE =&quot;FND&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub mnuPEKD_TRAINTYPEAcc_click()
   menuActionPEKD_TRAINTYPE =&quot;ACC&quot;
   menuTimerPEKD_TRAINTYPE.enabled = true
end sub
private sub menuTimerPEKD_TRAINTYPE_timer()
   menuTimerPEKD_TRAINTYPE.enabled = false
   if menuActionPEKD_TRAINTYPE =&quot;ADD&quot; then cmdPEKD_TRAINTYPEADD_CLick
   if menuActionPEKD_TRAINTYPE =&quot;EDIT&quot; then cmdPEKD_TRAINTYPEEDIT_CLick
   if menuActionPEKD_TRAINTYPE =&quot;DEL&quot; then cmdPEKD_TRAINTYPEDEL_CLick
   if menuActionPEKD_TRAINTYPE =&quot;RUN&quot; then cmdPEKD_TRAINTYPERUN_CLick
   if menuActionPEKD_TRAINTYPE =&quot;REF&quot; then cmdPEKD_TRAINTYPEREF_CLick
   if menuActionPEKD_TRAINTYPE =&quot;PRN&quot; then cmdPEKD_TRAINTYPEPRN_CLick
   if menuActionPEKD_TRAINTYPE =&quot;CFG&quot; then cmdPEKD_TRAINTYPECFG_CLick
   if menuActionPEKD_TRAINTYPE =&quot;FND&quot; then cmdPEKD_TRAINTYPEFND_CLick
   if menuActionPEKD_TRAINTYPE =&quot;ACC&quot; then cmdPEKD_TRAINTYPEACC_CLick
   menuActionPEKD_TRAINTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_TRAINTYPEAdd,cmdPEKD_TRAINTYPEAdd.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEEdit,cmdPEKD_TRAINTYPEEdit.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEDel,cmdPEKD_TRAINTYPEDel.tag
  LoadBtnPictures cmdPEKD_TRAINTYPERef,cmdPEKD_TRAINTYPERef.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEPrn,cmdPEKD_TRAINTYPEPrn.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEFnd,cmdPEKD_TRAINTYPEFnd.tag
  LoadBtnPictures cmdPEKD_TRAINTYPERun,cmdPEKD_TRAINTYPERun.tag
  LoadBtnPictures cmdPEKD_TRAINTYPEAcc,cmdPEKD_TRAINTYPEAcc.tag
  LoadBtnPictures cmdPEKD_TRAINTYPECfg,cmdPEKD_TRAINTYPECfg.tag
  item.PEKD_TRAINTYPE.PrepareGrid gridPEKD_TRAINTYPE
  LoadGridLayout gridPEKD_TRAINTYPE
  Set fndPEKD_TRAINTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_TRAINTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_TRAINTYPE.Init gridPEKD_TRAINTYPE
end sub
private sub OnTabClick()

      gridPEKD_TRAINTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_TRAINTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_TRAINTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_TRAINTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_TRAINTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_ADDS_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_ADDS" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_ADDS"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_ADDS" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_ADDS"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_ADDSAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_ADDSDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_ADDSRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_ADDSPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_ADDSCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_ADDSFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_ADDSRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_ADDSAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_ADDSAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_ADDS" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Надбавки"/><Properties Name="Name" PropValue="mnuPopupPEKD_ADDS"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_ADDSAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_ADDSEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_ADDSDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_ADDSOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_ADDSOpen"/></ControlData><ControlData Name="mnuPEKD_ADDSRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSRef"/></ControlData><ControlData Name="mnuPEKD_ADDSS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_ADDSS1"/></ControlData><ControlData Name="mnuPEKD_ADDSBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_ADDSBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_ADDSCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCOPY"/></ControlData><ControlData Name="mnuPEKD_ADDSCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCUT"/></ControlData><ControlData Name="mnuPEKD_ADDSPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSPASTE"/></ControlData><ControlData Name="mnuPEKD_ADDSCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCHANGE"/></ControlData><ControlData Name="mnuPEKD_ADDSCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_ADDSPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_ADDSPrn"/></ControlData><ControlData Name="mnuPEKD_ADDSCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_ADDSCfg"/></ControlData><ControlData Name="mnuPEKD_ADDSFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_ADDSFind"/></ControlData><ControlData Name="mnuPEKD_ADDSAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_ADDSAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_ADDS" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_ADDS"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_ADDS as object
private menuActionPEKD_ADDS as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_ADDSCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_ADDS,&quot;gridPEKD_ADDS&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_ADDSPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_ADDS,&quot;Надбавки&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_ADDSRef_Click()
  on error resume next
  item.PEKD_ADDS.Refresh
  gridPEKD_ADDS.itemCount = item.PEKD_ADDS.count
  gridPEKD_ADDS.Refetch
  gridPEKD_ADDS.Refresh
End Sub
Private Sub cmdPEKD_ADDSAcc_Click()
On Error Resume Next
If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKD_ADDS.Row &gt; 0 Then
 If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_ADDSEdit_Click()
  on error resume next
If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
If gridPEKD_ADDS.Row &gt; 0 then
 If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_ADDS_.Item = u
    again: frmPEKD_ADDS_.NotFirstTime = False
    frmPEKD_ADDS_.OnInit
    frmPEKD_ADDS_.Show vbModal
    If frmPEKD_ADDS_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_ADDS.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_ADDSDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_ADDSAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_ADDS.Add()

      Set frmPEKD_ADDS_.Item = u
      again: frmPEKD_ADDS_.NotFirstTime = False
      frmPEKD_ADDS_.OnInit
      frmPEKD_ADDS_.Show vbModal
      If frmPEKD_ADDS_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_ADDS.ItemCount = Item.PEKD_ADDS.Count
        gridPEKD_ADDS.Refresh
        gridPEKD_ADDS.RefreshGroups
        gridPEKD_ADDS.Refreshsort
        gridPEKD_ADDS.MoveToBookmark u.ID &amp; &quot;PEKD_ADDS&quot;
      Else
        Item.PEKD_ADDS.Delete u.ID
        Item.PEKD_ADDS.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_ADDSFnd_Click()
  on error resume next
  fndPEKD_ADDS.ShowForm
End Sub
Private Sub cmdPEKD_ADDSRun_Click()
  on error resume next
  gridPEKD_ADDS_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_ADDS_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_ADDS.LoadRow gridPEKD_ADDS, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_ADDS_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_ADDS_DblClick()
  cmdPEKD_ADDSEdit_Click
End Sub
Private Sub gridPEKD_ADDS_KeyPress(KeyAscii As Integer)
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_ADDS.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_ADDS_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_ADDS.Row And LastRow &gt; 0 Then
  gridPEKD_ADDS.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_ADDS.GetRowData(gridPEKD_ADDS.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_ADDSPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_ADDS.Add()
    If GetFromBuffer(u) Then
      gridPEKD_ADDS.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_ADDS_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_ADDSCfg_Click
        End If
    End If
end sub

private sub gridPEKD_ADDS_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_ADDS
End If
end sub
private sub mnuPEKD_ADDSAdd_click()
   menuActionPEKD_ADDS =&quot;ADD&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSEdit_click()
   menuActionPEKD_ADDS =&quot;EDIT&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSDelete_click()
   menuActionPEKD_ADDS =&quot;DEL&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSOpen_click()
   menuActionPEKD_ADDS =&quot;RUN&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSRef_click()
   menuActionPEKD_ADDS =&quot;REF&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
  Private Sub mnuPEKD_ADDSCOPY_Click()
    On Error Resume Next
    If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKD_ADDS.Row &gt; 0 Then
     If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_ADDSCUT_Click()
    On Error Resume Next
    If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
    If gridPEKD_ADDS.Row &gt; 0 Then
     If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_ADDS.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_ADDSCHANGE_Click()
  On Error Resume Next
  If gridPEKD_ADDS.ItemCount = 0 Then Exit Sub
  If gridPEKD_ADDS.Row &gt; 0 Then
   If gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_ADDS.RowBookmark(gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_ADDS.ItemCount = u.parent.Count
      gridPEKD_ADDS.RefreshRowIndex gridPEKD_ADDS.RowIndex(gridPEKD_ADDS.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_ADDSCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_ADDSPrn_click()
   menuActionPEKD_ADDS =&quot;PRN&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSCfg_click()
   menuActionPEKD_ADDS =&quot;CFG&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSFind_click()
   menuActionPEKD_ADDS =&quot;FND&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub mnuPEKD_ADDSAcc_click()
   menuActionPEKD_ADDS =&quot;ACC&quot;
   menuTimerPEKD_ADDS.enabled = true
end sub
private sub menuTimerPEKD_ADDS_timer()
   menuTimerPEKD_ADDS.enabled = false
   if menuActionPEKD_ADDS =&quot;ADD&quot; then cmdPEKD_ADDSADD_CLick
   if menuActionPEKD_ADDS =&quot;EDIT&quot; then cmdPEKD_ADDSEDIT_CLick
   if menuActionPEKD_ADDS =&quot;DEL&quot; then cmdPEKD_ADDSDEL_CLick
   if menuActionPEKD_ADDS =&quot;RUN&quot; then cmdPEKD_ADDSRUN_CLick
   if menuActionPEKD_ADDS =&quot;REF&quot; then cmdPEKD_ADDSREF_CLick
   if menuActionPEKD_ADDS =&quot;PRN&quot; then cmdPEKD_ADDSPRN_CLick
   if menuActionPEKD_ADDS =&quot;CFG&quot; then cmdPEKD_ADDSCFG_CLick
   if menuActionPEKD_ADDS =&quot;FND&quot; then cmdPEKD_ADDSFND_CLick
   if menuActionPEKD_ADDS =&quot;ACC&quot; then cmdPEKD_ADDSACC_CLick
   menuActionPEKD_ADDS =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_ADDSAdd,cmdPEKD_ADDSAdd.tag
  LoadBtnPictures cmdPEKD_ADDSEdit,cmdPEKD_ADDSEdit.tag
  LoadBtnPictures cmdPEKD_ADDSDel,cmdPEKD_ADDSDel.tag
  LoadBtnPictures cmdPEKD_ADDSRef,cmdPEKD_ADDSRef.tag
  LoadBtnPictures cmdPEKD_ADDSPrn,cmdPEKD_ADDSPrn.tag
  LoadBtnPictures cmdPEKD_ADDSFnd,cmdPEKD_ADDSFnd.tag
  LoadBtnPictures cmdPEKD_ADDSRun,cmdPEKD_ADDSRun.tag
  LoadBtnPictures cmdPEKD_ADDSAcc,cmdPEKD_ADDSAcc.tag
  LoadBtnPictures cmdPEKD_ADDSCfg,cmdPEKD_ADDSCfg.tag
  item.PEKD_ADDS.PrepareGrid gridPEKD_ADDS
  LoadGridLayout gridPEKD_ADDS
  Set fndPEKD_ADDS = Nothing
  On Error Resume Next
  Set fndPEKD_ADDS = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_ADDS.Init gridPEKD_ADDS
end sub
private sub OnTabClick()

      gridPEKD_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_ADDS.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_ADDS.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_ADDS.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_ADDS = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_POSTTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_POSTTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_POSTTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_POSTTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_POSTTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_POSTTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_POSTTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_POSTTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_POSTTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Характер отправления"/><Properties Name="Name" PropValue="mnuPopupPEKD_POSTTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_POSTTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_POSTTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPERef"/></ControlData><ControlData Name="mnuPEKD_POSTTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPES1"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_POSTTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECUT"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_POSTTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_POSTTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPECfg"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEFind"/></ControlData><ControlData Name="mnuPEKD_POSTTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_POSTTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_POSTTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_POSTTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_POSTTYPE as object
private menuActionPEKD_POSTTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_POSTTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_POSTTYPE,&quot;gridPEKD_POSTTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_POSTTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_POSTTYPE,&quot;Характер отправления&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_POSTTYPERef_Click()
  on error resume next
  item.PEKD_POSTTYPE.Refresh
  gridPEKD_POSTTYPE.itemCount = item.PEKD_POSTTYPE.count
  gridPEKD_POSTTYPE.Refetch
  gridPEKD_POSTTYPE.Refresh
End Sub
Private Sub cmdPEKD_POSTTYPEAcc_Click()
On Error Resume Next
If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_POSTTYPE.Row &gt; 0 Then
 If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_POSTTYPEEdit_Click()
  on error resume next
If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_POSTTYPE.Row &gt; 0 then
 If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_POSTTYPE_.Item = u
    again: frmPEKD_POSTTYPE_.NotFirstTime = False
    frmPEKD_POSTTYPE_.OnInit
    frmPEKD_POSTTYPE_.Show vbModal
    If frmPEKD_POSTTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_POSTTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_POSTTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_POSTTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_POSTTYPE.Add()

      Set frmPEKD_POSTTYPE_.Item = u
      again: frmPEKD_POSTTYPE_.NotFirstTime = False
      frmPEKD_POSTTYPE_.OnInit
      frmPEKD_POSTTYPE_.Show vbModal
      If frmPEKD_POSTTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_POSTTYPE.ItemCount = Item.PEKD_POSTTYPE.Count
        gridPEKD_POSTTYPE.Refresh
        gridPEKD_POSTTYPE.RefreshGroups
        gridPEKD_POSTTYPE.Refreshsort
        gridPEKD_POSTTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_POSTTYPE&quot;
      Else
        Item.PEKD_POSTTYPE.Delete u.ID
        Item.PEKD_POSTTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_POSTTYPEFnd_Click()
  on error resume next
  fndPEKD_POSTTYPE.ShowForm
End Sub
Private Sub cmdPEKD_POSTTYPERun_Click()
  on error resume next
  gridPEKD_POSTTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_POSTTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_POSTTYPE.LoadRow gridPEKD_POSTTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_POSTTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_POSTTYPE_DblClick()
  cmdPEKD_POSTTYPEEdit_Click
End Sub
Private Sub gridPEKD_POSTTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_POSTTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_POSTTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_POSTTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_POSTTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_POSTTYPE.GetRowData(gridPEKD_POSTTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_POSTTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_POSTTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_POSTTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_POSTTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_POSTTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_POSTTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_POSTTYPE
End If
end sub
private sub mnuPEKD_POSTTYPEAdd_click()
   menuActionPEKD_POSTTYPE =&quot;ADD&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEEdit_click()
   menuActionPEKD_POSTTYPE =&quot;EDIT&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEDelete_click()
   menuActionPEKD_POSTTYPE =&quot;DEL&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEOpen_click()
   menuActionPEKD_POSTTYPE =&quot;RUN&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPERef_click()
   menuActionPEKD_POSTTYPE =&quot;REF&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
  Private Sub mnuPEKD_POSTTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_POSTTYPE.Row &gt; 0 Then
     If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_POSTTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_POSTTYPE.Row &gt; 0 Then
     If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_POSTTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_POSTTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_POSTTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_POSTTYPE.Row &gt; 0 Then
   If gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_POSTTYPE.RowBookmark(gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_POSTTYPE.ItemCount = u.parent.Count
      gridPEKD_POSTTYPE.RefreshRowIndex gridPEKD_POSTTYPE.RowIndex(gridPEKD_POSTTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_POSTTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_POSTTYPEPrn_click()
   menuActionPEKD_POSTTYPE =&quot;PRN&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPECfg_click()
   menuActionPEKD_POSTTYPE =&quot;CFG&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEFind_click()
   menuActionPEKD_POSTTYPE =&quot;FND&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub mnuPEKD_POSTTYPEAcc_click()
   menuActionPEKD_POSTTYPE =&quot;ACC&quot;
   menuTimerPEKD_POSTTYPE.enabled = true
end sub
private sub menuTimerPEKD_POSTTYPE_timer()
   menuTimerPEKD_POSTTYPE.enabled = false
   if menuActionPEKD_POSTTYPE =&quot;ADD&quot; then cmdPEKD_POSTTYPEADD_CLick
   if menuActionPEKD_POSTTYPE =&quot;EDIT&quot; then cmdPEKD_POSTTYPEEDIT_CLick
   if menuActionPEKD_POSTTYPE =&quot;DEL&quot; then cmdPEKD_POSTTYPEDEL_CLick
   if menuActionPEKD_POSTTYPE =&quot;RUN&quot; then cmdPEKD_POSTTYPERUN_CLick
   if menuActionPEKD_POSTTYPE =&quot;REF&quot; then cmdPEKD_POSTTYPEREF_CLick
   if menuActionPEKD_POSTTYPE =&quot;PRN&quot; then cmdPEKD_POSTTYPEPRN_CLick
   if menuActionPEKD_POSTTYPE =&quot;CFG&quot; then cmdPEKD_POSTTYPECFG_CLick
   if menuActionPEKD_POSTTYPE =&quot;FND&quot; then cmdPEKD_POSTTYPEFND_CLick
   if menuActionPEKD_POSTTYPE =&quot;ACC&quot; then cmdPEKD_POSTTYPEACC_CLick
   menuActionPEKD_POSTTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_POSTTYPEAdd,cmdPEKD_POSTTYPEAdd.tag
  LoadBtnPictures cmdPEKD_POSTTYPEEdit,cmdPEKD_POSTTYPEEdit.tag
  LoadBtnPictures cmdPEKD_POSTTYPEDel,cmdPEKD_POSTTYPEDel.tag
  LoadBtnPictures cmdPEKD_POSTTYPERef,cmdPEKD_POSTTYPERef.tag
  LoadBtnPictures cmdPEKD_POSTTYPEPrn,cmdPEKD_POSTTYPEPrn.tag
  LoadBtnPictures cmdPEKD_POSTTYPEFnd,cmdPEKD_POSTTYPEFnd.tag
  LoadBtnPictures cmdPEKD_POSTTYPERun,cmdPEKD_POSTTYPERun.tag
  LoadBtnPictures cmdPEKD_POSTTYPEAcc,cmdPEKD_POSTTYPEAcc.tag
  LoadBtnPictures cmdPEKD_POSTTYPECfg,cmdPEKD_POSTTYPECfg.tag
  item.PEKD_POSTTYPE.PrepareGrid gridPEKD_POSTTYPE
  LoadGridLayout gridPEKD_POSTTYPE
  Set fndPEKD_POSTTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_POSTTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_POSTTYPE.Init gridPEKD_POSTTYPE
end sub
private sub OnTabClick()

      gridPEKD_POSTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_POSTTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_POSTTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_POSTTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_POSTTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_INFOSENDTYPE_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_INFOSENDTYPE"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_INFOSENDTYPE"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPERef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPERef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPECfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPECfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPERun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPERun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_INFOSENDTYPEAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_INFOSENDTYPEAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Способ передачи информации"/><Properties Name="Name" PropValue="mnuPopupPEKD_INFOSENDTYPE"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_INFOSENDTYPEAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEOpen"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPERef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPERef"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPES1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPES1"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_INFOSENDTYPECOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECOPY"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECUT"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEPASTE"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECHANGE"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEPrn"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPECfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPECfg"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEFind"/></ControlData><ControlData Name="mnuPEKD_INFOSENDTYPEAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_INFOSENDTYPEAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_INFOSENDTYPE"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_INFOSENDTYPE as object
private menuActionPEKD_INFOSENDTYPE as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_INFOSENDTYPECfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_INFOSENDTYPE,&quot;gridPEKD_INFOSENDTYPE&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_INFOSENDTYPEPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_INFOSENDTYPE,&quot;Способ передачи информации&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_INFOSENDTYPERef_Click()
  on error resume next
  item.PEKD_INFOSENDTYPE.Refresh
  gridPEKD_INFOSENDTYPE.itemCount = item.PEKD_INFOSENDTYPE.count
  gridPEKD_INFOSENDTYPE.Refetch
  gridPEKD_INFOSENDTYPE.Refresh
End Sub
Private Sub cmdPEKD_INFOSENDTYPEAcc_Click()
On Error Resume Next
If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
 If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_INFOSENDTYPEEdit_Click()
  on error resume next
If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
If gridPEKD_INFOSENDTYPE.Row &gt; 0 then
 If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_INFOSENDTYPE_.Item = u
    again: frmPEKD_INFOSENDTYPE_.NotFirstTime = False
    frmPEKD_INFOSENDTYPE_.OnInit
    frmPEKD_INFOSENDTYPE_.Show vbModal
    If frmPEKD_INFOSENDTYPE_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_INFOSENDTYPE.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_INFOSENDTYPEDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_INFOSENDTYPEAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_INFOSENDTYPE.Add()

      Set frmPEKD_INFOSENDTYPE_.Item = u
      again: frmPEKD_INFOSENDTYPE_.NotFirstTime = False
      frmPEKD_INFOSENDTYPE_.OnInit
      frmPEKD_INFOSENDTYPE_.Show vbModal
      If frmPEKD_INFOSENDTYPE_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_INFOSENDTYPE.ItemCount = Item.PEKD_INFOSENDTYPE.Count
        gridPEKD_INFOSENDTYPE.Refresh
        gridPEKD_INFOSENDTYPE.RefreshGroups
        gridPEKD_INFOSENDTYPE.Refreshsort
        gridPEKD_INFOSENDTYPE.MoveToBookmark u.ID &amp; &quot;PEKD_INFOSENDTYPE&quot;
      Else
        Item.PEKD_INFOSENDTYPE.Delete u.ID
        Item.PEKD_INFOSENDTYPE.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_INFOSENDTYPEFnd_Click()
  on error resume next
  fndPEKD_INFOSENDTYPE.ShowForm
End Sub
Private Sub cmdPEKD_INFOSENDTYPERun_Click()
  on error resume next
  gridPEKD_INFOSENDTYPE_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_INFOSENDTYPE_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_INFOSENDTYPE.LoadRow gridPEKD_INFOSENDTYPE, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_INFOSENDTYPE_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_INFOSENDTYPE_DblClick()
  cmdPEKD_INFOSENDTYPEEdit_Click
End Sub
Private Sub gridPEKD_INFOSENDTYPE_KeyPress(KeyAscii As Integer)
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_INFOSENDTYPE.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_INFOSENDTYPE_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_INFOSENDTYPE.Row And LastRow &gt; 0 Then
  gridPEKD_INFOSENDTYPE.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_INFOSENDTYPE.GetRowData(gridPEKD_INFOSENDTYPE.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_INFOSENDTYPEPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_INFOSENDTYPE.Add()
    If GetFromBuffer(u) Then
      gridPEKD_INFOSENDTYPE.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_INFOSENDTYPE_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_INFOSENDTYPECfg_Click
        End If
    End If
end sub

private sub gridPEKD_INFOSENDTYPE_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_INFOSENDTYPE
End If
end sub
private sub mnuPEKD_INFOSENDTYPEAdd_click()
   menuActionPEKD_INFOSENDTYPE =&quot;ADD&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEEdit_click()
   menuActionPEKD_INFOSENDTYPE =&quot;EDIT&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEDelete_click()
   menuActionPEKD_INFOSENDTYPE =&quot;DEL&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEOpen_click()
   menuActionPEKD_INFOSENDTYPE =&quot;RUN&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPERef_click()
   menuActionPEKD_INFOSENDTYPE =&quot;REF&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
  Private Sub mnuPEKD_INFOSENDTYPECOPY_Click()
    On Error Resume Next
    If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
     If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_INFOSENDTYPECUT_Click()
    On Error Resume Next
    If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
    If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
     If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_INFOSENDTYPE.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_INFOSENDTYPECHANGE_Click()
  On Error Resume Next
  If gridPEKD_INFOSENDTYPE.ItemCount = 0 Then Exit Sub
  If gridPEKD_INFOSENDTYPE.Row &gt; 0 Then
   If gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_INFOSENDTYPE.RowBookmark(gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_INFOSENDTYPE.ItemCount = u.parent.Count
      gridPEKD_INFOSENDTYPE.RefreshRowIndex gridPEKD_INFOSENDTYPE.RowIndex(gridPEKD_INFOSENDTYPE.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_INFOSENDTYPECLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_INFOSENDTYPEPrn_click()
   menuActionPEKD_INFOSENDTYPE =&quot;PRN&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPECfg_click()
   menuActionPEKD_INFOSENDTYPE =&quot;CFG&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEFind_click()
   menuActionPEKD_INFOSENDTYPE =&quot;FND&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub mnuPEKD_INFOSENDTYPEAcc_click()
   menuActionPEKD_INFOSENDTYPE =&quot;ACC&quot;
   menuTimerPEKD_INFOSENDTYPE.enabled = true
end sub
private sub menuTimerPEKD_INFOSENDTYPE_timer()
   menuTimerPEKD_INFOSENDTYPE.enabled = false
   if menuActionPEKD_INFOSENDTYPE =&quot;ADD&quot; then cmdPEKD_INFOSENDTYPEADD_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;EDIT&quot; then cmdPEKD_INFOSENDTYPEEDIT_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;DEL&quot; then cmdPEKD_INFOSENDTYPEDEL_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;RUN&quot; then cmdPEKD_INFOSENDTYPERUN_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;REF&quot; then cmdPEKD_INFOSENDTYPEREF_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;PRN&quot; then cmdPEKD_INFOSENDTYPEPRN_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;CFG&quot; then cmdPEKD_INFOSENDTYPECFG_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;FND&quot; then cmdPEKD_INFOSENDTYPEFND_CLick
   if menuActionPEKD_INFOSENDTYPE =&quot;ACC&quot; then cmdPEKD_INFOSENDTYPEACC_CLick
   menuActionPEKD_INFOSENDTYPE =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_INFOSENDTYPEAdd,cmdPEKD_INFOSENDTYPEAdd.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEEdit,cmdPEKD_INFOSENDTYPEEdit.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEDel,cmdPEKD_INFOSENDTYPEDel.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPERef,cmdPEKD_INFOSENDTYPERef.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEPrn,cmdPEKD_INFOSENDTYPEPrn.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEFnd,cmdPEKD_INFOSENDTYPEFnd.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPERun,cmdPEKD_INFOSENDTYPERun.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPEAcc,cmdPEKD_INFOSENDTYPEAcc.tag
  LoadBtnPictures cmdPEKD_INFOSENDTYPECfg,cmdPEKD_INFOSENDTYPECfg.tag
  item.PEKD_INFOSENDTYPE.PrepareGrid gridPEKD_INFOSENDTYPE
  LoadGridLayout gridPEKD_INFOSENDTYPE
  Set fndPEKD_INFOSENDTYPE = Nothing
  On Error Resume Next
  Set fndPEKD_INFOSENDTYPE = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_INFOSENDTYPE.Init gridPEKD_INFOSENDTYPE
end sub
private sub OnTabClick()

      gridPEKD_INFOSENDTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_INFOSENDTYPE.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_INFOSENDTYPE.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_INFOSENDTYPE.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_INFOSENDTYPE = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_AUTO_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_AUTO" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_AUTO"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_AUTO" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_AUTO"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_AUTOAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTOEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_AUTODel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTODel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_AUTORef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTORef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_AUTOPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_AUTOCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_AUTOFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_AUTORun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_AUTORun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_AUTOAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_AUTOAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_AUTO" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Тип автотранспорта"/><Properties Name="Name" PropValue="mnuPopupPEKD_AUTO"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_AUTOAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTOEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_AUTOEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_AUTODelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_AUTODelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_AUTOOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_AUTOOpen"/></ControlData><ControlData Name="mnuPEKD_AUTORef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_AUTORef"/></ControlData><ControlData Name="mnuPEKD_AUTOS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_AUTOS1"/></ControlData><ControlData Name="mnuPEKD_AUTOBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_AUTOBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_AUTOCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCOPY"/></ControlData><ControlData Name="mnuPEKD_AUTOCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCUT"/></ControlData><ControlData Name="mnuPEKD_AUTOPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOPASTE"/></ControlData><ControlData Name="mnuPEKD_AUTOCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCHANGE"/></ControlData><ControlData Name="mnuPEKD_AUTOCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_AUTOPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_AUTOPrn"/></ControlData><ControlData Name="mnuPEKD_AUTOCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_AUTOCfg"/></ControlData><ControlData Name="mnuPEKD_AUTOFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_AUTOFind"/></ControlData><ControlData Name="mnuPEKD_AUTOAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_AUTOAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_AUTO" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_AUTO"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_AUTO as object
private menuActionPEKD_AUTO as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_AUTOCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_AUTO,&quot;gridPEKD_AUTO&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_AUTOPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_AUTO,&quot;Тип автотранспорта&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_AUTORef_Click()
  on error resume next
  item.PEKD_AUTO.Refresh
  gridPEKD_AUTO.itemCount = item.PEKD_AUTO.count
  gridPEKD_AUTO.Refetch
  gridPEKD_AUTO.Refresh
End Sub
Private Sub cmdPEKD_AUTOAcc_Click()
On Error Resume Next
If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKD_AUTO.Row &gt; 0 Then
 If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_AUTOEdit_Click()
  on error resume next
If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
If gridPEKD_AUTO.Row &gt; 0 then
 If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_AUTO_.Item = u
    again: frmPEKD_AUTO_.NotFirstTime = False
    frmPEKD_AUTO_.OnInit
    frmPEKD_AUTO_.Show vbModal
    If frmPEKD_AUTO_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_AUTO.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_AUTODel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_AUTOAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_AUTO.Add()

      Set frmPEKD_AUTO_.Item = u
      again: frmPEKD_AUTO_.NotFirstTime = False
      frmPEKD_AUTO_.OnInit
      frmPEKD_AUTO_.Show vbModal
      If frmPEKD_AUTO_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_AUTO.ItemCount = Item.PEKD_AUTO.Count
        gridPEKD_AUTO.Refresh
        gridPEKD_AUTO.RefreshGroups
        gridPEKD_AUTO.Refreshsort
        gridPEKD_AUTO.MoveToBookmark u.ID &amp; &quot;PEKD_AUTO&quot;
      Else
        Item.PEKD_AUTO.Delete u.ID
        Item.PEKD_AUTO.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_AUTOFnd_Click()
  on error resume next
  fndPEKD_AUTO.ShowForm
End Sub
Private Sub cmdPEKD_AUTORun_Click()
  on error resume next
  gridPEKD_AUTO_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_AUTO_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_AUTO.LoadRow gridPEKD_AUTO, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_AUTO_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_AUTO_DblClick()
  cmdPEKD_AUTOEdit_Click
End Sub
Private Sub gridPEKD_AUTO_KeyPress(KeyAscii As Integer)
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_AUTO.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_AUTO_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_AUTO.Row And LastRow &gt; 0 Then
  gridPEKD_AUTO.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_AUTO.GetRowData(gridPEKD_AUTO.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_AUTOPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_AUTO.Add()
    If GetFromBuffer(u) Then
      gridPEKD_AUTO.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_AUTO_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_AUTOCfg_Click
        End If
    End If
end sub

private sub gridPEKD_AUTO_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_AUTO
End If
end sub
private sub mnuPEKD_AUTOAdd_click()
   menuActionPEKD_AUTO =&quot;ADD&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOEdit_click()
   menuActionPEKD_AUTO =&quot;EDIT&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTODelete_click()
   menuActionPEKD_AUTO =&quot;DEL&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOOpen_click()
   menuActionPEKD_AUTO =&quot;RUN&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTORef_click()
   menuActionPEKD_AUTO =&quot;REF&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
  Private Sub mnuPEKD_AUTOCOPY_Click()
    On Error Resume Next
    If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKD_AUTO.Row &gt; 0 Then
     If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_AUTOCUT_Click()
    On Error Resume Next
    If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
    If gridPEKD_AUTO.Row &gt; 0 Then
     If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_AUTO.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_AUTOCHANGE_Click()
  On Error Resume Next
  If gridPEKD_AUTO.ItemCount = 0 Then Exit Sub
  If gridPEKD_AUTO.Row &gt; 0 Then
   If gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_AUTO.RowBookmark(gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_AUTO.ItemCount = u.parent.Count
      gridPEKD_AUTO.RefreshRowIndex gridPEKD_AUTO.RowIndex(gridPEKD_AUTO.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_AUTOCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_AUTOPrn_click()
   menuActionPEKD_AUTO =&quot;PRN&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOCfg_click()
   menuActionPEKD_AUTO =&quot;CFG&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOFind_click()
   menuActionPEKD_AUTO =&quot;FND&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub mnuPEKD_AUTOAcc_click()
   menuActionPEKD_AUTO =&quot;ACC&quot;
   menuTimerPEKD_AUTO.enabled = true
end sub
private sub menuTimerPEKD_AUTO_timer()
   menuTimerPEKD_AUTO.enabled = false
   if menuActionPEKD_AUTO =&quot;ADD&quot; then cmdPEKD_AUTOADD_CLick
   if menuActionPEKD_AUTO =&quot;EDIT&quot; then cmdPEKD_AUTOEDIT_CLick
   if menuActionPEKD_AUTO =&quot;DEL&quot; then cmdPEKD_AUTODEL_CLick
   if menuActionPEKD_AUTO =&quot;RUN&quot; then cmdPEKD_AUTORUN_CLick
   if menuActionPEKD_AUTO =&quot;REF&quot; then cmdPEKD_AUTOREF_CLick
   if menuActionPEKD_AUTO =&quot;PRN&quot; then cmdPEKD_AUTOPRN_CLick
   if menuActionPEKD_AUTO =&quot;CFG&quot; then cmdPEKD_AUTOCFG_CLick
   if menuActionPEKD_AUTO =&quot;FND&quot; then cmdPEKD_AUTOFND_CLick
   if menuActionPEKD_AUTO =&quot;ACC&quot; then cmdPEKD_AUTOACC_CLick
   menuActionPEKD_AUTO =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_AUTOAdd,cmdPEKD_AUTOAdd.tag
  LoadBtnPictures cmdPEKD_AUTOEdit,cmdPEKD_AUTOEdit.tag
  LoadBtnPictures cmdPEKD_AUTODel,cmdPEKD_AUTODel.tag
  LoadBtnPictures cmdPEKD_AUTORef,cmdPEKD_AUTORef.tag
  LoadBtnPictures cmdPEKD_AUTOPrn,cmdPEKD_AUTOPrn.tag
  LoadBtnPictures cmdPEKD_AUTOFnd,cmdPEKD_AUTOFnd.tag
  LoadBtnPictures cmdPEKD_AUTORun,cmdPEKD_AUTORun.tag
  LoadBtnPictures cmdPEKD_AUTOAcc,cmdPEKD_AUTOAcc.tag
  LoadBtnPictures cmdPEKD_AUTOCfg,cmdPEKD_AUTOCfg.tag
  item.PEKD_AUTO.PrepareGrid gridPEKD_AUTO
  LoadGridLayout gridPEKD_AUTO
  Set fndPEKD_AUTO = Nothing
  On Error Resume Next
  Set fndPEKD_AUTO = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_AUTO.Init gridPEKD_AUTO
end sub
private sub OnTabClick()

      gridPEKD_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_AUTO.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_AUTO.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_AUTO.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_AUTO = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_GRPDpUSL_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_GRPDpUSL"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_GRPDpUSL" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_GRPDpUSL"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_GRPDpUSLAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_GRPDpUSLAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Группы ДопУслуг"/><Properties Name="Name" PropValue="mnuPopupPEKD_GRPDpUSL"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_GRPDpUSLAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLOpen"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLRef"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLS1"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_GRPDpUSLCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCOPY"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCUT"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLPASTE"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCHANGE"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_GRPDpUSLPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLPrn"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLCfg"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLFind"/></ControlData><ControlData Name="mnuPEKD_GRPDpUSLAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_GRPDpUSLAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_GRPDpUSL" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_GRPDpUSL"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_GRPDpUSL as object
private menuActionPEKD_GRPDpUSL as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_GRPDpUSLCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_GRPDpUSL,&quot;gridPEKD_GRPDpUSL&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GRPDpUSLPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_GRPDpUSL,&quot;Группы ДопУслуг&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_GRPDpUSLRef_Click()
  on error resume next
  item.PEKD_GRPDpUSL.Refresh
  gridPEKD_GRPDpUSL.itemCount = item.PEKD_GRPDpUSL.count
  gridPEKD_GRPDpUSL.Refetch
  gridPEKD_GRPDpUSL.Refresh
End Sub
Private Sub cmdPEKD_GRPDpUSLAcc_Click()
On Error Resume Next
If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
If gridPEKD_GRPDpUSL.Row &gt; 0 Then
 If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_GRPDpUSLEdit_Click()
  on error resume next
If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
If gridPEKD_GRPDpUSL.Row &gt; 0 then
 If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_GRPDpUSL_.Item = u
    again: frmPEKD_GRPDpUSL_.NotFirstTime = False
    frmPEKD_GRPDpUSL_.OnInit
    frmPEKD_GRPDpUSL_.Show vbModal
    If frmPEKD_GRPDpUSL_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_GRPDpUSL.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_GRPDpUSLDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_GRPDpUSLAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_GRPDpUSL.Add()

      Set frmPEKD_GRPDpUSL_.Item = u
      again: frmPEKD_GRPDpUSL_.NotFirstTime = False
      frmPEKD_GRPDpUSL_.OnInit
      frmPEKD_GRPDpUSL_.Show vbModal
      If frmPEKD_GRPDpUSL_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_GRPDpUSL.ItemCount = Item.PEKD_GRPDpUSL.Count
        gridPEKD_GRPDpUSL.Refresh
        gridPEKD_GRPDpUSL.RefreshGroups
        gridPEKD_GRPDpUSL.Refreshsort
        gridPEKD_GRPDpUSL.MoveToBookmark u.ID &amp; &quot;PEKD_GRPDpUSL&quot;
      Else
        Item.PEKD_GRPDpUSL.Delete u.ID
        Item.PEKD_GRPDpUSL.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_GRPDpUSLFnd_Click()
  on error resume next
  fndPEKD_GRPDpUSL.ShowForm
End Sub
Private Sub cmdPEKD_GRPDpUSLRun_Click()
  on error resume next
  gridPEKD_GRPDpUSL_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_GRPDpUSL_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_GRPDpUSL.LoadRow gridPEKD_GRPDpUSL, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_GRPDpUSL_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_GRPDpUSL_DblClick()
  cmdPEKD_GRPDpUSLEdit_Click
End Sub
Private Sub gridPEKD_GRPDpUSL_KeyPress(KeyAscii As Integer)
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_GRPDpUSL.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_GRPDpUSL_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_GRPDpUSL.Row And LastRow &gt; 0 Then
  gridPEKD_GRPDpUSL.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_GRPDpUSL.GetRowData(gridPEKD_GRPDpUSL.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_GRPDpUSLPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_GRPDpUSL.Add()
    If GetFromBuffer(u) Then
      gridPEKD_GRPDpUSL.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_GRPDpUSL_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_GRPDpUSLCfg_Click
        End If
    End If
end sub

private sub gridPEKD_GRPDpUSL_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_GRPDpUSL
End If
end sub
private sub mnuPEKD_GRPDpUSLAdd_click()
   menuActionPEKD_GRPDpUSL =&quot;ADD&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLEdit_click()
   menuActionPEKD_GRPDpUSL =&quot;EDIT&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLDelete_click()
   menuActionPEKD_GRPDpUSL =&quot;DEL&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLOpen_click()
   menuActionPEKD_GRPDpUSL =&quot;RUN&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLRef_click()
   menuActionPEKD_GRPDpUSL =&quot;REF&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
  Private Sub mnuPEKD_GRPDpUSLCOPY_Click()
    On Error Resume Next
    If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
    If gridPEKD_GRPDpUSL.Row &gt; 0 Then
     If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_GRPDpUSLCUT_Click()
    On Error Resume Next
    If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
    If gridPEKD_GRPDpUSL.Row &gt; 0 Then
     If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_GRPDpUSL.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_GRPDpUSLCHANGE_Click()
  On Error Resume Next
  If gridPEKD_GRPDpUSL.ItemCount = 0 Then Exit Sub
  If gridPEKD_GRPDpUSL.Row &gt; 0 Then
   If gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_GRPDpUSL.RowBookmark(gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_GRPDpUSL.ItemCount = u.parent.Count
      gridPEKD_GRPDpUSL.RefreshRowIndex gridPEKD_GRPDpUSL.RowIndex(gridPEKD_GRPDpUSL.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_GRPDpUSLCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_GRPDpUSLPrn_click()
   menuActionPEKD_GRPDpUSL =&quot;PRN&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLCfg_click()
   menuActionPEKD_GRPDpUSL =&quot;CFG&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLFind_click()
   menuActionPEKD_GRPDpUSL =&quot;FND&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub mnuPEKD_GRPDpUSLAcc_click()
   menuActionPEKD_GRPDpUSL =&quot;ACC&quot;
   menuTimerPEKD_GRPDpUSL.enabled = true
end sub
private sub menuTimerPEKD_GRPDpUSL_timer()
   menuTimerPEKD_GRPDpUSL.enabled = false
   if menuActionPEKD_GRPDpUSL =&quot;ADD&quot; then cmdPEKD_GRPDpUSLADD_CLick
   if menuActionPEKD_GRPDpUSL =&quot;EDIT&quot; then cmdPEKD_GRPDpUSLEDIT_CLick
   if menuActionPEKD_GRPDpUSL =&quot;DEL&quot; then cmdPEKD_GRPDpUSLDEL_CLick
   if menuActionPEKD_GRPDpUSL =&quot;RUN&quot; then cmdPEKD_GRPDpUSLRUN_CLick
   if menuActionPEKD_GRPDpUSL =&quot;REF&quot; then cmdPEKD_GRPDpUSLREF_CLick
   if menuActionPEKD_GRPDpUSL =&quot;PRN&quot; then cmdPEKD_GRPDpUSLPRN_CLick
   if menuActionPEKD_GRPDpUSL =&quot;CFG&quot; then cmdPEKD_GRPDpUSLCFG_CLick
   if menuActionPEKD_GRPDpUSL =&quot;FND&quot; then cmdPEKD_GRPDpUSLFND_CLick
   if menuActionPEKD_GRPDpUSL =&quot;ACC&quot; then cmdPEKD_GRPDpUSLACC_CLick
   menuActionPEKD_GRPDpUSL =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_GRPDpUSLAdd,cmdPEKD_GRPDpUSLAdd.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLEdit,cmdPEKD_GRPDpUSLEdit.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLDel,cmdPEKD_GRPDpUSLDel.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLRef,cmdPEKD_GRPDpUSLRef.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLPrn,cmdPEKD_GRPDpUSLPrn.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLFnd,cmdPEKD_GRPDpUSLFnd.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLRun,cmdPEKD_GRPDpUSLRun.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLAcc,cmdPEKD_GRPDpUSLAcc.tag
  LoadBtnPictures cmdPEKD_GRPDpUSLCfg,cmdPEKD_GRPDpUSLCfg.tag
  item.PEKD_GRPDpUSL.PrepareGrid gridPEKD_GRPDpUSL
  LoadGridLayout gridPEKD_GRPDpUSL
  Set fndPEKD_GRPDpUSL = Nothing
  On Error Resume Next
  Set fndPEKD_GRPDpUSL = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_GRPDpUSL.Init gridPEKD_GRPDpUSL
end sub
private sub OnTabClick()

      gridPEKD_GRPDpUSL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_GRPDpUSL.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_GRPDpUSL.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_GRPDpUSL.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_GRPDpUSL = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnPEKD_1CTR_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlPEKD_1CTR" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlPEKD_1CTR"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridPEKD_1CTR" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridPEKD_1CTR"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdPEKD_1CTRAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTREdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTREdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdPEKD_1CTRDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="cmdPEKD_1CTRRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdPEKD_1CTRPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdPEKD_1CTRCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdPEKD_1CTRFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdPEKD_1CTRRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdPEKD_1CTRAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdPEKD_1CTRAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupPEKD_1CTR" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Коды основных услуг"/><Properties Name="Name" PropValue="mnuPopupPEKD_1CTR"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuPEKD_1CTRAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTREdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuPEKD_1CTREdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuPEKD_1CTRDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRDelete"/><Properties Name="Enabled" PropValue="False"/></ControlData><ControlData Name="mnuPEKD_1CTROpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuPEKD_1CTROpen"/></ControlData><ControlData Name="mnuPEKD_1CTRRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRRef"/></ControlData><ControlData Name="mnuPEKD_1CTRS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuPEKD_1CTRS1"/></ControlData><ControlData Name="mnuPEKD_1CTRBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuPEKD_1CTRBuffer"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuPEKD_1CTRCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCOPY"/></ControlData><ControlData Name="mnuPEKD_1CTRCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCUT"/></ControlData><ControlData Name="mnuPEKD_1CTRPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRPASTE"/></ControlData><ControlData Name="mnuPEKD_1CTRCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCHANGE"/></ControlData><ControlData Name="mnuPEKD_1CTRCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCLEAN"/></ControlData></ControlData><ControlData Name="mnuPEKD_1CTRPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuPEKD_1CTRPrn"/></ControlData><ControlData Name="mnuPEKD_1CTRCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuPEKD_1CTRCfg"/></ControlData><ControlData Name="mnuPEKD_1CTRFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuPEKD_1CTRFind"/></ControlData><ControlData Name="mnuPEKD_1CTRAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuPEKD_1CTRAcc"/></ControlData></ControlData><ControlData Name="menuTimerPEKD_1CTR" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerPEKD_1CTR"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndPEKD_1CTR as object
private menuActionPEKD_1CTR as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdPEKD_1CTRCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridPEKD_1CTR,&quot;gridPEKD_1CTR&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_1CTRPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridPEKD_1CTR,&quot;Коды основных услуг&quot;
Set jset = Nothing
End Sub

Private Sub cmdPEKD_1CTRRef_Click()
  on error resume next
  item.PEKD_1CTR.Refresh
  gridPEKD_1CTR.itemCount = item.PEKD_1CTR.count
  gridPEKD_1CTR.Refetch
  gridPEKD_1CTR.Refresh
End Sub
Private Sub cmdPEKD_1CTRAcc_Click()
On Error Resume Next
If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
If gridPEKD_1CTR.Row &gt; 0 Then
 If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdPEKD_1CTREdit_Click()
  on error resume next
If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
If gridPEKD_1CTR.Row &gt; 0 then
 If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmPEKD_1CTR_.Item = u
    again: frmPEKD_1CTR_.NotFirstTime = False
    frmPEKD_1CTR_.OnInit
    frmPEKD_1CTR_.Show vbModal
    If frmPEKD_1CTR_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridPEKD_1CTR.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdPEKD_1CTRDel_Click()
  on error resume next
End Sub
Private Sub cmdPEKD_1CTRAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.PEKD_1CTR.Add()

      Set frmPEKD_1CTR_.Item = u
      again: frmPEKD_1CTR_.NotFirstTime = False
      frmPEKD_1CTR_.OnInit
      frmPEKD_1CTR_.Show vbModal
      If frmPEKD_1CTR_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridPEKD_1CTR.ItemCount = Item.PEKD_1CTR.Count
        gridPEKD_1CTR.Refresh
        gridPEKD_1CTR.RefreshGroups
        gridPEKD_1CTR.Refreshsort
        gridPEKD_1CTR.MoveToBookmark u.ID &amp; &quot;PEKD_1CTR&quot;
      Else
        Item.PEKD_1CTR.Delete u.ID
        Item.PEKD_1CTR.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdPEKD_1CTRFnd_Click()
  on error resume next
  fndPEKD_1CTR.ShowForm
End Sub
Private Sub cmdPEKD_1CTRRun_Click()
  on error resume next
  gridPEKD_1CTR_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridPEKD_1CTR_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.PEKD_1CTR.LoadRow gridPEKD_1CTR, RowIndex, Bookmark, Values
End Sub
Private Sub gridPEKD_1CTR_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
   Cancel = True
End Sub

Private Sub gridPEKD_1CTR_DblClick()
  cmdPEKD_1CTREdit_Click
End Sub
Private Sub gridPEKD_1CTR_KeyPress(KeyAscii As Integer)
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndPEKD_1CTR.FindOnPress KeyAscii
End Sub

Private Sub gridPEKD_1CTR_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridPEKD_1CTR.Row And LastRow &gt; 0 Then
  gridPEKD_1CTR.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridPEKD_1CTR.GetRowData(gridPEKD_1CTR.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuPEKD_1CTRPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.PEKD_1CTR.Add()
    If GetFromBuffer(u) Then
      gridPEKD_1CTR.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridPEKD_1CTR_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdPEKD_1CTRCfg_Click
        End If
    End If
end sub

private sub gridPEKD_1CTR_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupPEKD_1CTR
End If
end sub
private sub mnuPEKD_1CTRAdd_click()
   menuActionPEKD_1CTR =&quot;ADD&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTREdit_click()
   menuActionPEKD_1CTR =&quot;EDIT&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRDelete_click()
   menuActionPEKD_1CTR =&quot;DEL&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTROpen_click()
   menuActionPEKD_1CTR =&quot;RUN&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRRef_click()
   menuActionPEKD_1CTR =&quot;REF&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
  Private Sub mnuPEKD_1CTRCOPY_Click()
    On Error Resume Next
    If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
    If gridPEKD_1CTR.Row &gt; 0 Then
     If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuPEKD_1CTRCUT_Click()
    On Error Resume Next
    If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
    If gridPEKD_1CTR.Row &gt; 0 Then
     If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridPEKD_1CTR.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuPEKD_1CTRCHANGE_Click()
  On Error Resume Next
  If gridPEKD_1CTR.ItemCount = 0 Then Exit Sub
  If gridPEKD_1CTR.Row &gt; 0 Then
   If gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridPEKD_1CTR.RowBookmark(gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridPEKD_1CTR.ItemCount = u.parent.Count
      gridPEKD_1CTR.RefreshRowIndex gridPEKD_1CTR.RowIndex(gridPEKD_1CTR.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuPEKD_1CTRCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuPEKD_1CTRPrn_click()
   menuActionPEKD_1CTR =&quot;PRN&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRCfg_click()
   menuActionPEKD_1CTR =&quot;CFG&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRFind_click()
   menuActionPEKD_1CTR =&quot;FND&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub mnuPEKD_1CTRAcc_click()
   menuActionPEKD_1CTR =&quot;ACC&quot;
   menuTimerPEKD_1CTR.enabled = true
end sub
private sub menuTimerPEKD_1CTR_timer()
   menuTimerPEKD_1CTR.enabled = false
   if menuActionPEKD_1CTR =&quot;ADD&quot; then cmdPEKD_1CTRADD_CLick
   if menuActionPEKD_1CTR =&quot;EDIT&quot; then cmdPEKD_1CTREDIT_CLick
   if menuActionPEKD_1CTR =&quot;DEL&quot; then cmdPEKD_1CTRDEL_CLick
   if menuActionPEKD_1CTR =&quot;RUN&quot; then cmdPEKD_1CTRRUN_CLick
   if menuActionPEKD_1CTR =&quot;REF&quot; then cmdPEKD_1CTRREF_CLick
   if menuActionPEKD_1CTR =&quot;PRN&quot; then cmdPEKD_1CTRPRN_CLick
   if menuActionPEKD_1CTR =&quot;CFG&quot; then cmdPEKD_1CTRCFG_CLick
   if menuActionPEKD_1CTR =&quot;FND&quot; then cmdPEKD_1CTRFND_CLick
   if menuActionPEKD_1CTR =&quot;ACC&quot; then cmdPEKD_1CTRACC_CLick
   menuActionPEKD_1CTR =&quot;&quot;
end sub
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdPEKD_1CTRAdd,cmdPEKD_1CTRAdd.tag
  LoadBtnPictures cmdPEKD_1CTREdit,cmdPEKD_1CTREdit.tag
  LoadBtnPictures cmdPEKD_1CTRDel,cmdPEKD_1CTRDel.tag
  LoadBtnPictures cmdPEKD_1CTRRef,cmdPEKD_1CTRRef.tag
  LoadBtnPictures cmdPEKD_1CTRPrn,cmdPEKD_1CTRPrn.tag
  LoadBtnPictures cmdPEKD_1CTRFnd,cmdPEKD_1CTRFnd.tag
  LoadBtnPictures cmdPEKD_1CTRRun,cmdPEKD_1CTRRun.tag
  LoadBtnPictures cmdPEKD_1CTRAcc,cmdPEKD_1CTRAcc.tag
  LoadBtnPictures cmdPEKD_1CTRCfg,cmdPEKD_1CTRCfg.tag
  item.PEKD_1CTR.PrepareGrid gridPEKD_1CTR
  LoadGridLayout gridPEKD_1CTR
  Set fndPEKD_1CTR = Nothing
  On Error Resume Next
  Set fndPEKD_1CTR = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndPEKD_1CTR.Init gridPEKD_1CTR
end sub
private sub OnTabClick()

      gridPEKD_1CTR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridPEKD_1CTR.Top = 40 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Left = 5 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridPEKD_1CTR.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub
public sub OnSave()
  
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlPEKD_1CTR.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndPEKD_1CTR = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_SRV" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_SRV_"><Properties Name="Name" PropValue="pnlPEKD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRTYPE_"><Properties Name="Name" PropValue="pnlPEKD_TRTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_GOTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_GOTYPE_"><Properties Name="Name" PropValue="pnlPEKD_GOTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRFGRP" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRFGRP_"><Properties Name="Name" PropValue="pnlPEKD_TRFGRP"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_DIRECTION" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_DIRECTION_"><Properties Name="Name" PropValue="pnlPEKD_DIRECTION"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_DEPT" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_DEPT_"><Properties Name="Name" PropValue="pnlPEKD_DEPT"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_TRAINTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_TRAINTYPE_"><Properties Name="Name" PropValue="pnlPEKD_TRAINTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_ADDS" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_ADDS_"><Properties Name="Name" PropValue="pnlPEKD_ADDS"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_POSTTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_POSTTYPE_"><Properties Name="Name" PropValue="pnlPEKD_POSTTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_INFOSENDTYPE" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_INFOSENDTYPE_"><Properties Name="Name" PropValue="pnlPEKD_INFOSENDTYPE"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_AUTO" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_AUTO_"><Properties Name="Name" PropValue="pnlPEKD_AUTO"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_GRPDpUSL" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_GRPDpUSL_"><Properties Name="Name" PropValue="pnlPEKD_GRPDpUSL"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlPEKD_1CTR" ControlIndex="0" PROGID="PEK2DGUI.vpnPEKD_1CTR_"><Properties Name="Name" PropValue="pnlPEKD_1CTR"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="3000"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочники: Экспедиция"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property

Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlPEKD_SRV.IsOK
if IsItOk then IsItOk = pnlPEKD_TRTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_GOTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_TRFGRP.IsOK
if IsItOk then IsItOk = pnlPEKD_DIRECTION.IsOK
if IsItOk then IsItOk = pnlPEKD_DEPT.IsOK
if IsItOk then IsItOk = pnlPEKD_TRAINTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_ADDS.IsOK
if IsItOk then IsItOk = pnlPEKD_POSTTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_INFOSENDTYPE.IsOK
if IsItOk then IsItOk = pnlPEKD_AUTO.IsOK
if IsItOk then IsItOk = pnlPEKD_GRPDpUSL.IsOK
if IsItOk then IsItOk = pnlPEKD_1CTR.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlPEKD_1CTR.Visible = False
  pnlPEKD_GRPDpUSL.Visible = False
  pnlPEKD_AUTO.Visible = False
  pnlPEKD_INFOSENDTYPE.Visible = False
  pnlPEKD_POSTTYPE.Visible = False
  pnlPEKD_ADDS.Visible = False
  pnlPEKD_TRAINTYPE.Visible = False
  pnlPEKD_DEPT.Visible = False
  pnlPEKD_DIRECTION.Visible = False
  pnlPEKD_TRFGRP.Visible = False
  pnlPEKD_GOTYPE.Visible = False
  pnlPEKD_TRTYPE.Visible = False
  pnlPEKD_SRV.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;PEKD_SRV&quot;
     With pnlPEKD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_SRV.OnClick item,parentform
     End With
   Case &quot;PEKD_TRTYPE&quot;
     With pnlPEKD_TRTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_GOTYPE&quot;
     With pnlPEKD_GOTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_GOTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_TRFGRP&quot;
     With pnlPEKD_TRFGRP
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRFGRP.OnClick item,parentform
     End With
   Case &quot;PEKD_DIRECTION&quot;
     With pnlPEKD_DIRECTION
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_DIRECTION.OnClick item,parentform
     End With
   Case &quot;PEKD_DEPT&quot;
     With pnlPEKD_DEPT
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_DEPT.OnClick item,parentform
     End With
   Case &quot;PEKD_TRAINTYPE&quot;
     With pnlPEKD_TRAINTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_TRAINTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_ADDS&quot;
     With pnlPEKD_ADDS
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_ADDS.OnClick item,parentform
     End With
   Case &quot;PEKD_POSTTYPE&quot;
     With pnlPEKD_POSTTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_POSTTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_INFOSENDTYPE&quot;
     With pnlPEKD_INFOSENDTYPE
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_INFOSENDTYPE.OnClick item,parentform
     End With
   Case &quot;PEKD_AUTO&quot;
     With pnlPEKD_AUTO
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_AUTO.OnClick item,parentform
     End With
   Case &quot;PEKD_GRPDpUSL&quot;
     With pnlPEKD_GRPDpUSL
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_GRPDpUSL.OnClick item,parentform
     End With
   Case &quot;PEKD_1CTR&quot;
     With pnlPEKD_1CTR
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlPEKD_1CTR.OnClick item,parentform
     End With
     End select
end sub
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Дополнительные услуги&quot;
ts.Tabs.Item(1).key = &quot;PEKD_SRV&quot;
pnlPEKD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRTYPE&quot;, &quot;Система отправки&quot;)
pnlPEKD_TRTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_GOTYPE&quot;, &quot;Типы СГО&quot;)
pnlPEKD_GOTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRFGRP&quot;, &quot;Группы тарифов&quot;)
pnlPEKD_TRFGRP.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_DIRECTION&quot;, &quot;Направление перевозки&quot;)
pnlPEKD_DIRECTION.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_DEPT&quot;, &quot;Филиал&quot;)
pnlPEKD_DEPT.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_TRAINTYPE&quot;, &quot;Тип поезда&quot;)
pnlPEKD_TRAINTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_ADDS&quot;, &quot;Надбавки&quot;)
pnlPEKD_ADDS.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_POSTTYPE&quot;, &quot;Характер отправления&quot;)
pnlPEKD_POSTTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_INFOSENDTYPE&quot;, &quot;Способ передачи информации&quot;)
pnlPEKD_INFOSENDTYPE.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_AUTO&quot;, &quot;Тип автотранспорта&quot;)
pnlPEKD_AUTO.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_GRPDpUSL&quot;, &quot;Группы ДопУслуг&quot;)
pnlPEKD_GRPDpUSL.OnInit item, parentForm
call ts.Tabs.Add(, &quot;PEKD_1CTR&quot;, &quot;Коды основных услуг&quot;)
pnlPEKD_1CTR.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;PEK2D&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlPEKD_SRV.CloseClass
 pnlPEKD_TRTYPE.CloseClass
 pnlPEKD_GOTYPE.CloseClass
 pnlPEKD_TRFGRP.CloseClass
 pnlPEKD_DIRECTION.CloseClass
 pnlPEKD_DEPT.CloseClass
 pnlPEKD_TRAINTYPE.CloseClass
 pnlPEKD_ADDS.CloseClass
 pnlPEKD_POSTTYPE.CloseClass
 pnlPEKD_INFOSENDTYPE.CloseClass
 pnlPEKD_AUTO.CloseClass
 pnlPEKD_GRPDpUSL.CloseClass
 pnlPEKD_1CTR.CloseClass
End Sub
public sub OnSave()
 pnlPEKD_SRV.OnSave
 pnlPEKD_TRTYPE.OnSave
 pnlPEKD_GOTYPE.OnSave
 pnlPEKD_TRFGRP.OnSave
 pnlPEKD_DIRECTION.OnSave
 pnlPEKD_DEPT.OnSave
 pnlPEKD_TRAINTYPE.OnSave
 pnlPEKD_ADDS.OnSave
 pnlPEKD_POSTTYPE.OnSave
 pnlPEKD_INFOSENDTYPE.OnSave
 pnlPEKD_AUTO.OnSave
 pnlPEKD_GRPDpUSL.OnSave
 pnlPEKD_1CTR.OnSave
end sub
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlPEKD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_GOTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRFGRP.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_DIRECTION.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_DEPT.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_TRAINTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_ADDS.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_POSTTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_INFOSENDTYPE.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_AUTO.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_GRPDpUSL.IsChanged
m_IsChanged = m_IsChanged or pnlPEKD_1CTR.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Установка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
'  ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT2&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2P&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2O&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEK2Z&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub


Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="PEK2DGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Справочники: Экспедиция"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function


Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;PEK2D&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;admi&quot; then

if Name=&quot;PEKD_SRV&quot; then 
 set FormByName = new frmPEKD_SRV_admi
 exit function
end if

if Name=&quot;PEKD_TRTYPE&quot; then 
 set FormByName = new frmPEKD_TRTYPE_admi
 exit function
end if

if Name=&quot;PEKD_GOTYPE&quot; then 
 set FormByName = new frmPEKD_GOTYPE_admi
 exit function
end if

if Name=&quot;PEKD_TRFGRP&quot; then 
 set FormByName = new frmPEKD_TRFGRP_admi
 exit function
end if

if Name=&quot;PEKD_TRFTYPE&quot; then 
 set FormByName = new frmPEKD_TRFTYPE_admi
 exit function
end if

if Name=&quot;PEKD_DIRECTION&quot; then 
 set FormByName = new frmPEKD_DIRECTION_admi
 exit function
end if

if Name=&quot;PEKD_TRAINS&quot; then 
 set FormByName = new frmPEKD_TRAINS_admi
 exit function
end if

if Name=&quot;PEKD_DIRSTATION&quot; then 
 set FormByName = new frmPEKD_DIRSTATION_admi
 exit function
end if

if Name=&quot;PEKD_DEPT&quot; then 
 set FormByName = new frmPEKD_DEPT_admi
 exit function
end if

if Name=&quot;PEKD_DEPLIMITS&quot; then 
 set FormByName = new frmPEKD_DEPLIMITS_admi
 exit function
end if

if Name=&quot;PEKD_DEPDOG&quot; then 
 set FormByName = new frmPEKD_DEPDOG_admi
 exit function
end if

if Name=&quot;PEKD_TRAINTYPE&quot; then 
 set FormByName = new frmPEKD_TRAINTYPE_admi
 exit function
end if

if Name=&quot;PEKD_ADDS&quot; then 
 set FormByName = new frmPEKD_ADDS_admi
 exit function
end if

if Name=&quot;PEKD_POSTTYPE&quot; then 
 set FormByName = new frmPEKD_POSTTYPE_admi
 exit function
end if

if Name=&quot;PEKD_INFOSENDTYPE&quot; then 
 set FormByName = new frmPEKD_INFOSENDTYPE_admi
 exit function
end if

if Name=&quot;PEKD_AUTO&quot; then 
 set FormByName = new frmPEKD_AUTO_admi
 exit function
end if

if Name=&quot;PEKD_GRPDpUSL&quot; then 
 set FormByName = new frmPEKD_GRPDpUSL_admi
 exit function
end if

if Name=&quot;PEKD_1CTR&quot; then 
 set FormByName = new frmPEKD_1CTR_admi
 exit function
end if

end if
if Mode=&quot;main&quot; then

if Name=&quot;PEKD_SRV&quot; then 
 set FormByName = new frmPEKD_SRV_main
 exit function
end if

if Name=&quot;PEKD_TRTYPE&quot; then 
 set FormByName = new frmPEKD_TRTYPE_main
 exit function
end if

if Name=&quot;PEKD_GOTYPE&quot; then 
 set FormByName = new frmPEKD_GOTYPE_main
 exit function
end if

if Name=&quot;PEKD_TRFGRP&quot; then 
 set FormByName = new frmPEKD_TRFGRP_main
 exit function
end if

if Name=&quot;PEKD_TRFTYPE&quot; then 
 set FormByName = new frmPEKD_TRFTYPE_main
 exit function
end if

if Name=&quot;PEKD_DIRECTION&quot; then 
 set FormByName = new frmPEKD_DIRECTION_main
 exit function
end if

if Name=&quot;PEKD_TRAINS&quot; then 
 set FormByName = new frmPEKD_TRAINS_main
 exit function
end if

if Name=&quot;PEKD_DIRSTATION&quot; then 
 set FormByName = new frmPEKD_DIRSTATION_main
 exit function
end if

if Name=&quot;PEKD_DEPT&quot; then 
 set FormByName = new frmPEKD_DEPT_main
 exit function
end if

if Name=&quot;PEKD_DEPLIMITS&quot; then 
 set FormByName = new frmPEKD_DEPLIMITS_main
 exit function
end if

if Name=&quot;PEKD_DEPDOG&quot; then 
 set FormByName = new frmPEKD_DEPDOG_main
 exit function
end if

if Name=&quot;PEKD_TRAINTYPE&quot; then 
 set FormByName = new frmPEKD_TRAINTYPE_main
 exit function
end if

if Name=&quot;PEKD_ADDS&quot; then 
 set FormByName = new frmPEKD_ADDS_main
 exit function
end if

if Name=&quot;PEKD_POSTTYPE&quot; then 
 set FormByName = new frmPEKD_POSTTYPE_main
 exit function
end if

if Name=&quot;PEKD_INFOSENDTYPE&quot; then 
 set FormByName = new frmPEKD_INFOSENDTYPE_main
 exit function
end if

if Name=&quot;PEKD_AUTO&quot; then 
 set FormByName = new frmPEKD_AUTO_main
 exit function
end if

if Name=&quot;PEKD_GRPDpUSL&quot; then 
 set FormByName = new frmPEKD_GRPDpUSL_main
 exit function
end if

if Name=&quot;PEKD_1CTR&quot; then 
 set FormByName = new frmPEKD_1CTR_main
 exit function
end if

end if
if Mode=&quot;&quot; then

if Name=&quot;PEKD_SRV&quot; then 
 set FormByName = new frmPEKD_SRV_
 exit function
end if

if Name=&quot;PEKD_TRTYPE&quot; then 
 set FormByName = new frmPEKD_TRTYPE_
 exit function
end if

if Name=&quot;PEKD_GOTYPE&quot; then 
 set FormByName = new frmPEKD_GOTYPE_
 exit function
end if

if Name=&quot;PEKD_TRFGRP&quot; then 
 set FormByName = new frmPEKD_TRFGRP_
 exit function
end if

if Name=&quot;PEKD_TRFTYPE&quot; then 
 set FormByName = new frmPEKD_TRFTYPE_
 exit function
end if

if Name=&quot;PEKD_DIRECTION&quot; then 
 set FormByName = new frmPEKD_DIRECTION_
 exit function
end if

if Name=&quot;PEKD_TRAINS&quot; then 
 set FormByName = new frmPEKD_TRAINS_
 exit function
end if

if Name=&quot;PEKD_DIRSTATION&quot; then 
 set FormByName = new frmPEKD_DIRSTATION_
 exit function
end if

if Name=&quot;PEKD_DEPT&quot; then 
 set FormByName = new frmPEKD_DEPT_
 exit function
end if

if Name=&quot;PEKD_DEPLIMITS&quot; then 
 set FormByName = new frmPEKD_DEPLIMITS_
 exit function
end if

if Name=&quot;PEKD_DEPDOG&quot; then 
 set FormByName = new frmPEKD_DEPDOG_
 exit function
end if

if Name=&quot;PEKD_TRAINTYPE&quot; then 
 set FormByName = new frmPEKD_TRAINTYPE_
 exit function
end if

if Name=&quot;PEKD_ADDS&quot; then 
 set FormByName = new frmPEKD_ADDS_
 exit function
end if

if Name=&quot;PEKD_POSTTYPE&quot; then 
 set FormByName = new frmPEKD_POSTTYPE_
 exit function
end if

if Name=&quot;PEKD_INFOSENDTYPE&quot; then 
 set FormByName = new frmPEKD_INFOSENDTYPE_
 exit function
end if

if Name=&quot;PEKD_AUTO&quot; then 
 set FormByName = new frmPEKD_AUTO_
 exit function
end if

if Name=&quot;PEKD_GRPDpUSL&quot; then 
 set FormByName = new frmPEKD_GRPDpUSL_
 exit function
end if

if Name=&quot;PEKD_1CTR&quot; then 
 set FormByName = new frmPEKD_1CTR_
 exit function
end if

end if
end function
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub

Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
