<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="dll"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221}"/><AttributeHolder Name="Name" Value="TP_Zay"/><AttributeHolder Name="Description" Value="Заявки"/><ModuleHolder ModuleName="Application" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="multiuse"/><BlockHolder BlockName="'description" BlockCode="'корневой интерфейс документа (Заявки)
private m_Logger as MTZUtil.Logger
private m_MTZSession as MTZSession.Session
private m_Manager as MTZManager.Main
Private findCash As Collection
private m_ID as string
private m_SecureStyleID as string
private m_StatusID as string
private m_Name as string
private const m_TypeName as string=&quot;TP_Zay&quot;
private m_WorkOffline as boolean
private m_AutoLoadPart as boolean


enum enumHACCPStep'Тип шага в ХАССП процессе
  HACCPStep_Operaciy=3'Операция
  HACCPStep_Zaversenie_processa=1'Завершение процесса
  HACCPStep_Kontrol_nay_tocka=4'Контрольная точка
  HACCPStep_Korrektiruusee_deystvie=5'Корректирующее действие
  HACCPStep_Ostanov_processa=2'Останов процесса
  HACCPStep_Process=6'Процесс
  HACCPStep_Nacalo_processa=0'Начало процесса
end enum 
enum enumPCB_FileType'Тип файла
  PCB_FileType_Proekt_PP=0'Проект ПП
  PCB_FileType_HZ=1'ХЗ
end enum 
enum enumHaccpIdent'Идентификация
  HaccpIdent_Kacestvo_poverhnosti=6'Качество поверхности
  HaccpIdent_Zapah=2'Запах
  HaccpIdent_Forma=3'Форма
  HaccpIdent_Cvet=1'Цвет
  HaccpIdent_Vkus=4'Вкус
  HaccpIdent_Procee=100'Прочее
  HaccpIdent_Zvuk=5'Звук
  HaccpIdent_Vnesniy_vid=0'Внешний вид
end enum 
enum enumtypeFace'Физическое лицо \ Юрифическое лицо
  typeFace_FizLico=0'ФизЛицо
  typeFace_UrLico=1'ЮрЛицо
end enum 
enum enumWFStepClass'Тип шага процесса
  WFStepClass_SimpleFunction=0'SimpleFunction
  WFStepClass_StartFunction=1'StartFunction
  WFStepClass_StopFunction=2'StopFunction
  WFStepClass_PeriodicFunction=3'PeriodicFunction
end enum 
enum enumMonths'Месяцы
  Months_Noybr_=11'Ноябрь
  Months_Fevral_=2'Февраль
  Months_Dekabr_=12'Декабрь
  Months_Mart=3'Март
  Months_Ynvar_=1'Январь
  Months_Sentybr_=9'Сентябрь
  Months_Iun_=6'Июнь
  Months_Oktybr_=10'Октябрь
  Months_May=5'Май
  Months_Avgust=8'Август
  Months_Iul_=7'Июль
  Months_Aprel_=4'Апрель
end enum 
enum enumTypeStyle'Вариант трактовки типа поля
  TypeStyle_Interval=3'Интервал
  TypeStyle_Element_oformleniy=5'Элемент оформления
  TypeStyle_Skalyrniy_tip=0'Скалярный тип
  TypeStyle_Ssilka=4'Ссылка
  TypeStyle_Perecislenie=2'Перечисление
  TypeStyle_Viragenie=1'Выражение
end enum 
enum enumAggregationType'Вариант агрегации по полю
  AggregationType_MAX=5'MAX
  AggregationType_AVG=1'AVG
  AggregationType_SUM=3'SUM
  AggregationType_COUNT=2'COUNT
  AggregationType_MIN=4'MIN
  AggregationType_CUSTOM=6'CUSTOM
  AggregationType_none=0'none
end enum 
enum enumVHAlignment'Выравнивание
  VHAlignment_Center_Center=4'Center Center
  VHAlignment_Center_Top=3'Center Top
  VHAlignment_Right_Top=6'Right Top
  VHAlignment_Right_Bottom=8'Right Bottom
  VHAlignment_Left_Bottom=2'Left Bottom
  VHAlignment_Right_Center=7'Right Center
  VHAlignment_Center_Bottom=5'Center Bottom
  VHAlignment_Left_Center=1'Left Center
  VHAlignment_Left_Top=0'Left Top
end enum 
enum enumtypePackage'Тип отправления
  typePackage_Vse=-1'Все
  typePackage_Tovar=1'Товар
  typePackage_Dokumenti=0'Документы
end enum 
enum enumPCB_HoleType'Тип отверстия
  PCB_HoleType_Gluhoe=2'Глухое
  PCB_HoleType_Metalizirovannoe=0'Метализированное
  PCB_HoleType_Nemetallizirovannoe=1'Неметаллизированное
end enum 
enum enumWFProcessState'Состояния процесса
  WFProcessState_Active=2'Active
  WFProcessState_Pause=3'Pause
  WFProcessState_Processed=5'Processed
  WFProcessState_Done=4'Done
  WFProcessState_Prepare=1'Prepare
  WFProcessState_Initial=0'Initial
end enum 
enum enumNumerationRule'Правило нумерации
  NumerationRule_Edinay_zona=0'Единая зона
  NumerationRule_Po_godu=1'По году
  NumerationRule_Po_dnu=4'По дню
  NumerationRule_Po_kvartalu=2'По кварталу
  NumerationRule_Po_mesycu=3'По месяцу
  NumerationRule_Proizvol_nie_zoni=10'Произвольные зоны
end enum 
enum enumMenuActionType'Вариант действия при выборе пункта меню
  MenuActionType_Otkrit__otcet=5'Открыть отчет
  MenuActionType_Nicego_ne_delat_=0'Ничего не делать
  MenuActionType_Vipolnit__metod=2'Выполнить метод
  MenuActionType_Otkrit__dokument=1'Открыть документ
  MenuActionType_Zapustit__ARM=4'Запустить АРМ
  MenuActionType_Otkrit__gurnal=3'Открыть журнал
end enum 
enum enumColumnSortType'Вариант сортиовки данных колонки
  ColumnSortType_As_String=0'As String
  ColumnSortType_As_Numeric=1'As Numeric
  ColumnSortType_As_Date=2'As Date
end enum 
enum enumAdditionType'Тип надбавки
  AdditionType_Ob_em=1'Объем
  AdditionType_Plotnost_=2'Плотность
  AdditionType_Procee=3'Прочее
  AdditionType_Ves=0'Вес
end enum 
enum enumTypeSempling'Тип выборки
  TypeSempling_Klienti=-1'Клиенты
  TypeSempling_Adresati_operatorov=0'Адресаты операторов
  TypeSempling_Spisok_adresov_SPb=2'Список адресов СПб
  TypeSempling_Spisok_adresatov=1'Список адресатов
end enum 
enum enumStructType'Тип раздела
  StructType_Derevo=2'Дерево
  StructType_Kollekciy=1'Коллекция
  StructType_Stroka_atributov=0'Строка атрибутов
end enum 
enum enumTargetType'Вариант уровня приложения, куда может генерироваться код
  TargetType_SUBD=0'СУБД
  TargetType_ARM=4'АРМ
  TargetType_Dokumentaciy=3'Документация
  TargetType_MODEL_=1'МОДЕЛЬ
  TargetType_Prilogenie=2'Приложение
end enum 
enum enumDeliveryOn'
  DeliveryOn_Gorod=4'Город
  DeliveryOn_Strana=1'Страна
  DeliveryOn_Megdunarodnay=0'Международная
  DeliveryOn_Strana2=2'Страна2
  DeliveryOn_Sub_ekt=3'Субъект
end enum 
enum enumtypeOperatorSystem'
  typeOperatorSystem_Menedger=2'Менеджер
  typeOperatorSystem_Procee=0'Прочее
  typeOperatorSystem_Operator=1'Оператор
end enum 
enum enumstateNomen'
  stateNomen_Pereadresaciy=6'Переадресация
  stateNomen_Oformlyetsy=0'Оформляется
  stateNomen_Dostavleno=4'Доставлено
  stateNomen_V_processe=3'В процессе
  stateNomen_Vozvrat=5'Возврат
  stateNomen_Prinyto=2'Принято
end enum 
enum enumPartAddBehaivor'Поведение при добавлении строки раздела
  PartAddBehaivor_AddForm=0'AddForm
  PartAddBehaivor_RunAction=2'RunAction
  PartAddBehaivor_RefreshOnly=1'RefreshOnly
end enum 
enum enumFolderType'Тип папки
  FolderType_Ishodysie=2'Исходящие
  FolderType_Zaversennie=10'Завершенные
  FolderType_cls__=0'cls__
  FolderType_Kalendar_=5'Календарь
  FolderType_Vhodysie=1'Входящие
  FolderType_Otlogennie=9'Отложенные
  FolderType_Gurnal=4'Журнал
  FolderType_V_rabote=8'В работе
  FolderType_Cernoviki=7'Черновики
  FolderType_Otpravlennie=6'Отправленные
  FolderType_Udalennie=3'Удаленные
end enum 
enum enummsgState'Состояние заявки
  msgState_Sostoynie_zayvki=0'Состояние заявки
  msgState_Soobseno_abonentu=1'Сообщено абоненту
  msgState_Abonent_ne_otvetil=2'Абонент не ответил
  msgState_Promegutocniy_otvet=3'Промежуточный ответ
end enum 
enum enumWFShortcutType'Варианты ярлыков, которые может размещать процесс
  WFShortcutType_Function=1'Function
  WFShortcutType_Process=2'Process
  WFShortcutType_Document=0'Document
end enum 
enum enumReferenceType'ReferenceType
  ReferenceType_Na_stroku_razdela=2'На строку раздела
  ReferenceType_Na_istocnik_dannih=3'На источник данных
  ReferenceType_Skalyrnoe_pole_OPN_ne_ssilkaCLS=0'Скалярное поле ( не ссылка)
  ReferenceType_Na_ob_ekt_=1'На объект 
end enum 
enum enumSex'Мужской / Женский
  Sex_Mugskoy=1'Мужской
  Sex_Ne_susestvenno=0'Не существенно
  Sex_Genskiy=-1'Женский
end enum 
enum enumMesureFormat'Формат индикатора
  MesureFormat_Data=1'Дата
  MesureFormat_Tekst=5'Текст
  MesureFormat_Ob_ekt=4'Объект
  MesureFormat_Spravocnik=2'Справочник
  MesureFormat_Cislo=0'Число
end enum 
enum enumWFFuncParam'Вариант расшифровки параметра функции
  WFFuncParam_Dokument=5'Документ
  WFFuncParam_Znacenie=0'Значение
  WFFuncParam_Dokument_processa=4'Документ процесса
  WFFuncParam_Viragenie=2'Выражение
  WFFuncParam_Rol_=8'Роль
  WFFuncParam_Papka=3'Папка
  WFFuncParam_Pole=7'Поле
  WFFuncParam_Znacenie_iz_parametra=1'Значение из параметра
  WFFuncParam_Razdel=6'Раздел
  WFFuncParam_Tip_dokumenta=9'Тип документа
end enum 
enum enumYesNo'Да / Нет (0 или 1)
  YesNo_Da=1'Да
  YesNo_Net=0'Нет
end enum 
enum enumtypeOrder'
  typeOrder_Bezadresniy_zakaz=0'Безадресный заказ
  typeOrder_Adresniy_zakaz=1'Адресный заказ
end enum 
enum enummsgResult'Результат
  msgResult_Vipolneno=2'Выполнено
  msgResult_V_rabote=1'В работе
  msgResult_Rezul_tat=0'Результат
end enum 
enum enumGeneratorStyle'GeneratorStyle
  GeneratorStyle_Odin_tip=0'Один тип
  GeneratorStyle_Vse_tipi_srazu=1'Все типы сразу
end enum 
enum enumReportType'Вариант отчета
  ReportType_Dvumernay_matrica=1'Двумерная матрица
  ReportType_Tablica=0'Таблица
  ReportType_Eksport_po_WORD_sablonu=3'Экспорт по WORD шаблону
  ReportType_Tol_ko_rascet=2'Только расчет
  ReportType_Eksport_po_Excel_sablonu=4'Экспорт по Excel шаблону
end enum 
enum enumHACCPPStep'Тип шага в ХАССП процессе
  HACCPPStep_Sir_e=5'Сырье
  HACCPPStep_Transportirovka=7'Транспортировка
  HACCPPStep_Operaciy=3'Операция
  HACCPPStep_Zaversenie_processa=1'Завершение процесса
  HACCPPStep_Nacalo_processa=0'Начало процесса
  HACCPPStep_Ostanov_processa=2'Останов процесса
  HACCPPStep_Vhod_iz=9'Вход из
  HACCPPStep_Vihod_v=8'Выход в
  HACCPPStep_Hranenie=6'Хранение
  HACCPPStep_Resenie=4'Решение
end enum 
enum enumtypeDocOrder'Тип документов для печати заказчику
  typeDocOrder_Nalicniy_OPNPKO_PLS_kasDOTcekCLS=1'Наличный (ПКО + кас.чек)
  typeDocOrder_Nalicniy_OPNtovarniy_cek_PLS_kasDOTcekCLS=0'Наличный (товарный чек + кас.чек)
  typeDocOrder_Beznalicniy_rascet=3'Безналичный расчет
end enum 
enum enumPCB_LayerP'Представление поля
  PCB_LayerP_Negativ=2'Негатив
  PCB_LayerP_Ne_imeet_znaceniy=0'Не имеет значения
  PCB_LayerP_Pozitiv=1'Позитив
end enum 
enum enumDayInWeek'День недели
  DayInWeek_Ponedel_nik=1'Понедельник
  DayInWeek_Sreda=3'Среда
  DayInWeek_Vtornik=2'Вторник
  DayInWeek_Pytnica=5'Пятница
  DayInWeek_Subbota=6'Суббота
  DayInWeek_Cetverg=4'Четверг
  DayInWeek_Voskresen_e=7'Воскресенье
end enum 
enum enumPlatType'Тип плательщика
  PlatType_Otpravitel_=0'Отправитель
  PlatType_Polucatel_=1'Получатель
  PlatType_Drugoy=2'Другой
end enum 
enum enumPartType'PartType
  PartType_Rassirenie=3'Расширение
  PartType_Kollekciy=1'Коллекция
  PartType_Stroka=0'Строка
  PartType_Derevo=2'Дерево
  PartType_Rassirenie_s_dannimi=4'Расширение с данными
end enum 
enum enumEmployment'Занятость
  Employment_Polnay=0'Полная
  Employment_Casticnay=1'Частичная
  Employment_Ne_vagno=-1'Не важно
end enum 
enum enumtypeClient'Тип заказчика
  typeClient_Razoviy=0'Разовый
end enum 
enum enumtypeNomen'Тип номенкатуры
  typeNomen_Listovki=2'Листовки
  typeNomen_Tovar=1'Товар
  typeNomen_GazetiCOMA_gurnaliCOMA_brosuri=4'Газеты, журналы, брошюры
  typeNomen_Pis_mo=3'Письмо
  typeNomen_Dokument=0'Документ
end enum 
enum enumKONTR_TYPE'Тип контрагента
  KONTR_TYPE_Procee=5'Прочее
  KONTR_TYPE_Perevozcik=4'Перевозчик
  KONTR_TYPE_Partner=2'Партнер
  KONTR_TYPE_Pokupatel_=0'Покупатель
  KONTR_TYPE_Ucreditel_=3'Учредитель
  KONTR_TYPE_Postavsik=1'Поставщик
end enum 
enum enumtypePersonPay'
  typePersonPay_Otpravitel_=0'Отправитель
  typePersonPay_Polucatel_=1'Получатель
end enum 
enum enumJournalLinkType'Для связи журналов друг с другом
  JournalLinkType_Ssilka_na_stroku=2'Ссылка на строку
  JournalLinkType_Ssilka_na_ob_ekt=1'Ссылка на объект
  JournalLinkType_Svyzka_InstanceID_OPNv_peredlah_ob_ektaCLS=3'Связка InstanceID (в передлах объекта)
  JournalLinkType_Svyzka_ParentStructRowID__OPNv_peredlah_ob_ektaCLS=4'Связка ParentStructRowID  (в передлах объекта)
  JournalLinkType_Net=0'Нет
end enum 
enum enumConditionType'Варианты условий
  ConditionType_LSGT=2'&lt;&gt;
  ConditionType_GT=3'&gt;
  ConditionType_EQ=1'=
  ConditionType_GTEQ=4'&gt;=
  ConditionType_LSEQ=7'&lt;=
  ConditionType_like=8'like
  ConditionType_LS=6'&lt;
  ConditionType_none=0'none
end enum 
enum enumtypePay'Сдельная \ Ставка
  typePay_Stavka=1'Ставка
  typePay_Sdel_nay=0'Сдельная
end enum 
enum enumPCB_TaskType'Тип задачи
  PCB_TaskType_Dostavka=4'Доставка
  PCB_TaskType_Izgotovlenie_PP=1'Изготовление ПП
  PCB_TaskType_Postavka_komplektuusih=2'Поставка комплектующих
  PCB_TaskType_Montag_PP=0'Монтаж ПП
  PCB_TaskType_Proektirovanie_PP=3'Проектирование ПП
end enum 
enum enumVRTaskType'Тип задачи
  VRTaskType_V_opredelenniy_moment=0'В определенный момент
  VRTaskType_Fonovay=2'Фоновая
  VRTaskType_K_opredelennomu_vremeni=1'К определенному времени
end enum 
enum enumtypeReceiv'
  typeReceiv_PTS=1'ПТС
  typeReceiv_SVS=0'СВС
end enum 
enum enumPCB_CustomerType'Статус заказчика
  PCB_CustomerType_Real_niy=1'Реальный
  PCB_CustomerType_Potencial_niy=0'Потенциальный
end enum 
enum enumOnJournalRowClick'действие при открытии строки журнала
  OnJournalRowClick_Otkrit__dokument=2'Открыть документ
  OnJournalRowClick_Otkrit__stroku=1'Открыть строку
  OnJournalRowClick_Nicego_ne_delat_=0'Ничего не делать
end enum 
enum enumtypeRowCheque'Тип строки чека
  typeRowCheque_PO=1'ПО
  typeRowCheque_Procee=0'Прочее
  typeRowCheque_Prostoe_PO=4'Простое ПО
  typeRowCheque_dopDOTusluga_PO=2'доп.услуга ПО
  typeRowCheque_dopDOTusluga_zakaza=3'доп.услуга заказа
  typeRowCheque_Tovar=5'Товар
end enum 
enum enumPCB_clear'Тип задачи
  PCB_clear_Zadaca_1=1'Задача 1
  PCB_clear_Zadaca_2=0'Задача 2
end enum 
enum enumtypeTariff'
  typeTariff_Usluga=1'Услуга
  typeTariff_Dostavka=0'Доставка
end enum 
enum enumEducation'Образование
  Education_Srednee_special_noe=2'Среднее специальное
  Education_Srednee=1'Среднее
  Education_Ne_vagno=-1'Не важно
  Education_Vissee=4'Высшее
  Education_Nepolnoe_srednee=0'Неполное среднее
  Education_Nepolnoe_vissee=3'Неполное высшее
  Education_Neskol_ko_vissih=5'Несколько высших
end enum 
enum enumDCType'Остатки/Дебит/Кредит
  DCType_Ostatki=-1'Остатки
  DCType_Debit=0'Дебит
  DCType_Kredit=1'Кредит
end enum 
enum enumDevelopmentBase'Платформа разработки
  DevelopmentBase_JAVA=2'JAVA
  DevelopmentBase_OTHER=3'OTHER
  DevelopmentBase_DOTNET=1'DOTNET
  DevelopmentBase_VB6=0'VB6
end enum 
enum enumBoolean'Да / Нет
  Boolean_Da=-1'Да
  Boolean_Net=0'Нет
end enum 
enum enumTriState'Да / Нет / Не определено
  TriState_Net=0'Нет
  TriState_Ne_susestvenno=-1'Не существенно
  TriState_Da=1'Да
end enum 
enum enumtypeTRF'Тип тарифа СС
  typeTRF_Tarif_podrydcika=0'Тариф подрядчика
  typeTRF_Tarif_klienta=1'Тариф клиента
  typeTRF_Obsiy_tarif=-1'Общий тариф
end enum 
enum enumCurrencyType'Валюта платежа
  CurrencyType_Rubl_=0'Рубль
  CurrencyType_Evro=2'Евро
  CurrencyType_Dollar=1'Доллар
end enum 
enum enumWFFuncState'Состояние функции в бизнес процессе
  WFFuncState_Processed=8'Processed
  WFFuncState_InWork=3'InWork
  WFFuncState_Pause=4'Pause
  WFFuncState_Ready=5'Ready
  WFFuncState_InControl=6'InControl
  WFFuncState_Prepare=1'Prepare
  WFFuncState_Active=2'Active
  WFFuncState_Done=7'Done
  WFFuncState_Initial=0'Initial
end enum 
enum enumtypeCourier'Договор \ ТрудКнижка
  typeCourier_Trudovay_knigka=1'Трудовая книжка
  typeCourier_Dogovor_podryda=0'Договор подряда
end enum 
enum enumEmployment_'осталось для совместимости
  Employment__Polnay=0'Полная
  Employment__Casticnay=1'Частичная
  Employment__Ne_vagno=-1'Не важно
end enum 
enum enumKONTR_STATUS'Состояние партнера
  KONTR_STATUS_Blokirovan=2'Блокирован
  KONTR_STATUS_Aktiveniy=0'Активеный
  KONTR_STATUS_Pssivniy=1'Пссивный
  KONTR_STATUS_Operacii_zapreseni=3'Операции запрещены
end enum 
enum enumExtentionType'Тип расширения
  ExtentionType_OnFormExt=1'OnFormExt
  ExtentionType_CodeGenerator=7'CodeGenerator
  ExtentionType_JrnlAddExt=3'JrnlAddExt
  ExtentionType_VerifyRowExt=6'VerifyRowExt
  ExtentionType_StatusExt=0'StatusExt
  ExtentionType_ARMGenerator=8'ARMGenerator
  ExtentionType_DefaultExt=5'DefaultExt
  ExtentionType_CustomExt=2'CustomExt
  ExtentionType_JrnlRunExt=4'JrnlRunExt
end enum 
enum enumReplicationType'Вариант репликации докуента
  ReplicationType_Ves__dokument=0'Весь документ
  ReplicationType_Lokal_niy=2'Локальный
  ReplicationType_Postrocno=1'Построчно
end enum 
enum enumInfoStoreType'Тип каталога
  InfoStoreType_Gruppovoy=2'Групповой
  InfoStoreType_Personal_niy=1'Персональный
  InfoStoreType_cls__Obsiy=0' Общий
end enum 
private m_TP_Zay_Zay as TP_Zay_Zay_col
private m_TP_Zayav_Ist as TP_Zayav_Ist_col
private m_TP_ZAY_MSG as TP_ZAY_MSG_col
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="


'Название типа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. TypeName
public property get TypeName() as string
  TypeName = m_TypeName
end property


'Отладочный компонент
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZUtil.Logger
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZUtil.Logger
' Set variable = me. Logger
public property get Logger() as MTZUtil.Logger
  if m_Logger is nothing then
    set m_Logger = new MTZUtil.Logger
    m_Logger.CreateLog TypeName &amp; &quot;_&quot; &amp; ID ,TypeName
  end if
  set Logger = m_Logger
end property


'Получить Название документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Name
public property get Name() as string
  Name = m_Name
end property


'Задать название документа
'Parameters:
'[IN][OUT]  n , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Name = value
public property Let Name(n as string)
  m_Name = n
end property


'Получить корневой объект системы - менеджер документов
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZManager.Main
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZManager.Main
' Set variable = me. Manager
public property get Manager() as MTZManager.Main
  set Manager = m_Manager
end property


'Задать менеджер документов
'Parameters:
'[IN][OUT]  m , тип параметра: MTZManager.Main  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Manager = value
public property Set Manager(m as MTZManager.Main)
  if not m_Manager is nothing then exit property
  set m_Manager = m
  Logger.Message &quot;Manager defined&quot;
end property


'Получить текущую сессию пользователя
'Parameters:
' параметров нет
'Returns:
'  объект класса MTZSession.Session
'  ,или Nothing
'See Also:
'Example:
' dim variable as MTZSession.Session
' Set variable = me. MTZSession
public property get MTZSession() as MTZSession.Session
  set MTZSession = m_MTZSession
end property


'Задть текущую сессию пользователя
'Parameters:
'[IN][OUT]  m , тип параметра: MTZSession.Session  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. MTZSession = value
public property Set MTZSession(m as MTZSession.Session)
  if not m_MTZSession is nothing then exit property
  set m_MTZSession = m
  Logger.Message &quot;Session defined&quot;
  m_AutoLoadPart=true
end property


'Признак - работа без соединения с базой
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. WorkOffline
public property Get WorkOffline() as boolean
    WorkOffline = m_WorkOffline
end property


'Получить значение признака работы без соединения
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. WorkOffline = value
public property Let WorkOffline(v as boolean)
  if MTZSession is nothing then 
    m_WorkOffline = false
  else 
    m_WorkOffline = v
  end if 
end property


'Получить признак автоматической загрузки всеех полей
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. AutoLoadPart
public property Get AutoLoadPart() as boolean
    AutoLoadPart = m_AutoLoadPart
end property


'Признак загрузки всех полей (не только идентификатора)
'Parameters:
'[IN][OUT]  v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AutoLoadPart = value
public property Let AutoLoadPart(v as boolean)
    m_AutoLoadPart = v
end property


'Идентификатор документа
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  ID = m_ID
end property


'Задать идентификатор документа
'Parameters:
'[IN][OUT]  v , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
public property Let ID(v as string)
  m_ID=v
end property


'Родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = nothing
end property


'Корневой объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = me
end property


'Добавить в оптимизтор поиска строку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string, 
'[IN]   Item , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.AddToCash({параметры})
public Sub AddToCash( byval Key as string, byval Item as Object)
  on error resume next
  findCash.Add Item,Key
end sub


'Исключить из оптимизатора сторку раздела документа
'Parameters:
'[IN]   Key , тип параметра: string  - ...
'See Also:
'Example:
'  call me.RemoveFromCash({параметры})
public Sub RemoveFromCash( byval Key as string)
  on error resume next
  findCash.Remove Key
end sub

'Задать идентификатор стиля защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
public property let SecureStyleID(byval newID as string)
  Secure newID
  GetStatus
end property

'Получить идентификатор стиля защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  GetStatus
  SecureStyleID = m_SecureStyleID
end property

'Задать идентификатор сосотяния документа
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. StatusID = value
public property let StatusID(byval newID as string)
    SetStatus newID
    GetStatus
end property

'Получить идентификатор состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusID
public property Get StatusID() as string
  GetStatus
  StatusID = m_StatusID
end property

'Получить название состояния
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. StatusName
public property Get StatusName() as string
  GetStatus
  StatusName=&quot;&quot;
if statusid =&quot;{13EE5E14-75B0-46D3-BAB7-2E5F7C58597D}&quot; then StatusName = &quot;У инженера&quot; : exit property
if statusid =&quot;{52241C16-0404-450D-B94E-46A169226076}&quot; then StatusName = &quot;Получена&quot; : exit property
if statusid =&quot;{AD516926-E2F7-4412-8DC1-4C7484B322AE}&quot; then StatusName = &quot;Выполнена&quot; : exit property
if statusid =&quot;{338FCEE8-7170-48FD-B156-99C42C5E0385}&quot; then StatusName = &quot;Проблемная&quot; : exit property
if statusid =&quot;{671F9B19-6917-4CDC-B3F2-D0CF0BC24976}&quot; then StatusName = &quot;На исполнении&quot; : exit property
if statusid =&quot;{81A45913-9900-4034-B78D-E083B0285DEC}&quot; then StatusName = &quot;Передана в СЗТ&quot; : exit property
end property

'Даные раздела Заявка
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса TP_Zay_Zay_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay_col
' Set variable = me. TP_Zay_Zay (...параметры...)
public property Get TP_Zay_Zay (optional byval Refresh as boolean = true) as TP_Zay_Zay_col
 if m_TP_Zay_Zay is nothing then
   set  m_TP_Zay_Zay = new TP_Zay_Zay_col
   set m_TP_Zay_Zay.Parent = me
   set m_TP_Zay_Zay.Application = me.Application
   if Refresh then m_TP_Zay_Zay.Refresh
 end if
 set  TP_Zay_Zay = m_TP_Zay_Zay
end property

'Даные раздела История
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса TP_Zayav_Ist_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist_col
' Set variable = me. TP_Zayav_Ist (...параметры...)
public property Get TP_Zayav_Ist (optional byval Refresh as boolean = true) as TP_Zayav_Ist_col
 if m_TP_Zayav_Ist is nothing then
   set  m_TP_Zayav_Ist = new TP_Zayav_Ist_col
   set m_TP_Zayav_Ist.Parent = me
   set m_TP_Zayav_Ist.Application = me.Application
   if Refresh then m_TP_Zayav_Ist.Refresh
 end if
 set  TP_Zayav_Ist = m_TP_Zayav_Ist
end property

'Даные раздела Сообщения
'Parameters:
'[IN]   Refresh , тип параметра: boolean = true  - ...
'Returns:
'  объект класса TP_ZAY_MSG_col
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG_col
' Set variable = me. TP_ZAY_MSG (...параметры...)
public property Get TP_ZAY_MSG (optional byval Refresh as boolean = true) as TP_ZAY_MSG_col
 if m_TP_ZAY_MSG is nothing then
   set  m_TP_ZAY_MSG = new TP_ZAY_MSG_col
   set m_TP_ZAY_MSG.Parent = me
   set m_TP_ZAY_MSG.Application = me.Application
   if Refresh then m_TP_ZAY_MSG.Refresh
 end if
 set  TP_ZAY_MSG = m_TP_ZAY_MSG
end property

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public sub CloseClass()
 on error resume next
 Set findCash = Nothing

  if not m_TP_Zay_Zay is nothing then 
    m_TP_Zay_Zay.CloseClass 
    set m_TP_Zay_Zay = nothing 
  end if
  if not m_TP_Zayav_Ist is nothing then 
    m_TP_Zayav_Ist.CloseClass 
    set m_TP_Zayav_Ist = nothing 
  end if
  if not m_TP_ZAY_MSG is nothing then 
    m_TP_ZAY_MSG.CloseClass 
    set m_TP_ZAY_MSG = nothing 
  end if
  if not m_manager is nothing then
    set m_manager = nothing
  end if
  if not m_MTZSession is nothing then
    set m_MTZSession = nothing
  end if
  if not m_Logger is nothing then
    m_Logger.Message &quot;Application.CloseClass&quot; 
    set m_Logger = nothing
  end if
end sub

'Поиск  строки раздела по ключу и названию раздела во всех документах
'Parameters:
'[IN]   StrID , тип параметра: String, 
'[IN]   RowID , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as Object
' Set variable = me.FindRowObject(...параметры...)
Public Function FindRowObject(ByVal StrID As String, ByVal RowID As String) As Object
  Dim obj As Object
  Dim Rowobj As Object
  Dim i As Long
Dim m_FindObject As Object

If StrID = &quot;&quot; Then Exit Function
If RowID = &quot;&quot; Then Exit Function
If findCash Is Nothing Then
 Set findCash = New Collection
End If
On Error Resume Next
Set m_FindObject = findCash.Item(StrID &amp; RowID)
If Not m_FindObject Is Nothing Then
  If m_FindObject.Application Is Nothing Then
    Set m_FindObject = Nothing
    findCash.Remove StrID &amp; RowID
  Else
   Set FindRowObject = m_FindObject
   Exit Function
  End If
End If

  Dim rpl As RowParentList
  Set rpl = MTZSession.TheFinder.RowParents(StrID, RowID)
  If rpl.Count &gt; 0 Then

 If rpl.Item(1).RowID = ID Then
    Set Rowobj = Me
    For i = 2 To rpl.Count
     Set Rowobj = Rowobj.FindObject(rpl.Item(i).PartName, rpl.Item(i).RowID)
    Next

' reference from another object
 Else
   Set obj = Manager.GetInstanceObject(rpl.Item(1).RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindRowObject(StrID, RowID)
 End If

  Else
' use old search style
 Set Rowobj = FindObject(StrID, RowID)
 If Rowobj Is Nothing Then
   Set obj = Manager.FindInstanceByRow(StrID, RowID)
   If obj Is Nothing Then Exit Function
   Set Rowobj = obj.FindObject(StrID, RowID)
 End If
  End If
  If Rowobj Is Nothing Then Exit Function
  Set FindRowObject = Rowobj
  Set Rowobj = Nothing
  Set obj = Nothing
End Function


'Поиск строки только в текщем документе
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
  If findCash Is Nothing Then
  Set findCash = New Collection
 End If
 On Error Resume Next
 Set m_FindObject = findCash.item(StrID &amp; InstID)
 if  not m_FindObject is nothing then
   if  m_FindObject.application is nothing then
     set m_FindObject = nothing
     findCash.remove StrID &amp; InstID
   end if
 end if

 if m_FindObject is nothing then
   set m_FindObject =  TP_Zay_Zay.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  TP_Zayav_Ist.FindObject(StrID,InstID)
 end if
 if m_FindObject is nothing then
   set m_FindObject =  TP_ZAY_MSG.FindObject(StrID,InstID)
 end if
 If findCash.item(StrID &amp; InstID) Is Nothing Then
   findCash.Add m_FindObject, StrID &amp; InstID
 End If
 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function


'Оптимизировать объем занятой памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()

TP_Zay_Zay.Compact
TP_Zayav_Ist.Compact
TP_ZAY_MSG.Compact
end sub

'Задать стиль защиты документа
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;INSTANCE&quot; ,ID,SecurityStyleID)
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Secure&quot;,err.description
end sub

'Распространить стиль защиты на все строки документа
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.Propagate &quot;INSTANCE&quot;, ID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Propagate&quot;,err.description
end sub

'Сохранить изменения (новое имя)
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save()
public sub Save()
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.NewInstance ID, TypeName, Name
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.Save&quot;,err.description
end sub

'Задать состояние
'Parameters:
'[IN]   StatusID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.SetStatus({параметры})
private sub SetStatus(byval StatusID as string)
  if application.WorkOffline then exit sub
  On Error goto bye
  Application.MTZSession.SetStatus id,StatusID
  exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub

'Получтиь актуальное состояние
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.GetStatus()
private sub GetStatus() 
if application.WorkOffline then exit sub
Dim rs as adodb.recordset
On Error goto bye
set rs =application.MTZSession.GetRow( &quot;INSTANCE&quot;, ID)
m_statusid=rs!status &amp; &quot;&quot; 
m_SecureStyleID = rs!SecurityStyleID &amp; &quot;&quot; 
exit sub
bye:
  err.raise err.number,&quot;APPLICATION.SetStatus&quot;,err.description
end sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
 on error resume next
  Dim anode As IXMLDOMElement
  Dim e_list As IXMLDOMNodeList
 on error resume next
  set anode = node.firstchild  
  if m_typename &lt;&gt; anode.Attributes.getNamedItem(&quot;TYPENAME&quot;).nodeValue then exit sub
  m_IsLocked=anode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  if LoadMode &lt;&gt;2 then 
    m_ID=anode.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    SetStatus anode.Attributes.getNamedItem(&quot;STATUSID&quot;).nodeValue
    Secure anode.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
    WorkOffline =anode.Attributes.getNamedItem(&quot;WorkOffline&quot;).nodevalue
    if workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  end if 
  m_Name=anode.Attributes.getNamedItem(&quot;NAME&quot;).nodeValue
Set e_list = anode.selectNodes(&quot;TP_ZAY_ZAY_COL&quot;)
  TP_Zay_Zay.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;TP_ZAYAV_IST_COL&quot;)
  TP_Zayav_Ist.XMLLoad e_list, LoadMode
Set e_list = anode.selectNodes(&quot;TP_ZAY_MSG_COL&quot;)
  TP_ZAY_MSG.XMLLoad e_list, LoadMode
end sub



'Сохранить данные в XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
  dim anode as IXMLDOMElement
  set anode = xdom.CreateElement(&quot;APPLICATION&quot;)
  anode.setAttribute &quot;ID&quot;, m_ID
  anode.setAttribute &quot;TYPENAME&quot;, m_TypeName
  anode.setAttribute &quot;NAME&quot;, m_Name
  anode.setAttribute &quot;STATUSID&quot;, m_StatusID
  anode.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  anode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  anode.setAttribute &quot;WorkOffline&quot;, WorkOffline
  node.appendChild anode
  TP_Zay_Zay.XMLSave anode,xdom
  TP_Zayav_Ist.XMLSave anode,xdom
  TP_ZAY_MSG.XMLSave anode,xdom
end sub


'Краткое название
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.Brief() 
public function Brief() as string
 Brief= Name 
end function

'Загрузка корня объекта в дерево
'Parameters:
'[IN][OUT]   tree , тип параметра: object, 
'[IN]   pkey , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;, 
'[IN][OUT]   optional CollectionName , тип параметра: string=&quot;&quot;   - ...
'See Also:
'Example:
'  call me.FillTree({параметры})
public sub FillTree( tree as object, byval pkey as string, byval mode as string, optional Mask as string =&quot;&quot;, optional CollectionName as string=&quot;&quot; )
 dim node as object,key as string
If CollectionName = &quot;&quot; Then
 key = createguid2() &amp; ID
 if pkey =&quot;&quot; then
   set node=tree.nodes.add(,0,key,Brief)
 else
   set node=tree.nodes.add(pkey,4,key,Brief)
 end if
 node.tag=&quot;object&quot;
else
 key=&quot;&quot; 
end if
  if mode = &quot;NO&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zayav_Ist&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zayav_Ist&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       end if
       node.tag=&quot;TP_Zayav_Ist&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
    node.tag=&quot;TP_Zayav_Ist&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;READ&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zayav_Ist&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zayav_Ist&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       end if
       node.tag=&quot;TP_Zayav_Ist&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
    node.tag=&quot;TP_Zayav_Ist&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;VIP&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zayav_Ist&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zayav_Ist&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       end if
       node.tag=&quot;TP_Zayav_Ist&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
    node.tag=&quot;TP_Zayav_Ist&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;POL&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zayav_Ist&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zayav_Ist&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       end if
       node.tag=&quot;TP_Zayav_Ist&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
    node.tag=&quot;TP_Zayav_Ist&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;YING&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;NISP&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;ALL&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zayav_Ist&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zayav_Ist&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
       end if
       node.tag=&quot;TP_Zayav_Ist&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
    node.tag=&quot;TP_Zayav_Ist&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;VSZT&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;PROB&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
       end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
       if key=&quot;&quot; then
         set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       else
         set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
       end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
      set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
      set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if
  if mode = &quot;&quot; then 
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zay_Zay&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zay_Zay&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
       node.tag=&quot;TP_Zay_Zay&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;TP_Zay_Zay&quot;,&quot;Заявка&quot;)
    end if
    node.tag=&quot;TP_Zay_Zay&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_Zayav_Ist&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_Zayav_Ist&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
       node.tag=&quot;TP_Zayav_Ist&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;TP_Zayav_Ist&quot;,&quot;История&quot;)
    end if
    node.tag=&quot;TP_Zayav_Ist&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
If CollectionName = &quot;&quot;  or CollectionName=&quot;TP_ZAY_MSG&quot; Then
  if Mask&lt;&gt;&quot;&quot; then
    if application.MTZSession.IsDescendant(mask,&quot;TP_ZAY_MSG&quot;) then
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID  &amp; &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
       node.tag=&quot;TP_ZAY_MSG&quot;
       ' node for &lt;+&gt; item
       tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
    end if
  else
    if key=&quot;&quot; then
       set node=tree.nodes.add(,0,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    else
       set node=tree.nodes.add(key,4,createguid2() &amp; ID &amp;  &quot;TP_ZAY_MSG&quot;,&quot;Сообщения&quot;)
    end if
    node.tag=&quot;TP_ZAY_MSG&quot;
    ' node for &lt;+&gt; item
    tree.Nodes.Add(node.key, 4, CreateGUID2(), &quot;Expanding ...&quot;).Tag = &quot;ToDelete&quot;
  end if
end if
  end if

end sub


'Раскрытие объекта при выборе узла в дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string =&quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string =&quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 id = mid(key,39,38)
 on error resume next
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if trim(struct)=&quot;&quot;  then 
   set item =manager.GetInstanceObject(id)
   if  item is nothing then exit sub
   If Not item Is Me Then
     item.Expand tree, Key, mode,mask
     Exit Sub
   End If
 else
    set item =FindRowObject(struct,id)
    if  item is nothing then exit sub
    call item.Expand(tree,key,mode,mask)
    exit sub
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;NO&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_Zayav_Ist&quot; 
    item.TP_Zayav_Ist.refresh
    for i=1 to item.TP_Zayav_Ist.count
    nid =createguid2() &amp;  item.TP_Zayav_Ist.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zayav_Ist.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;NO&quot;
if mode=&quot;READ&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_Zayav_Ist&quot; 
    item.TP_Zayav_Ist.refresh
    for i=1 to item.TP_Zayav_Ist.count
    nid =createguid2() &amp;  item.TP_Zayav_Ist.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zayav_Ist.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;READ&quot;
if mode=&quot;VIP&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_Zayav_Ist&quot; 
    item.TP_Zayav_Ist.refresh
    for i=1 to item.TP_Zayav_Ist.count
    nid =createguid2() &amp;  item.TP_Zayav_Ist.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zayav_Ist.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;VIP&quot;
if mode=&quot;POL&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_Zayav_Ist&quot; 
    item.TP_Zayav_Ist.refresh
    for i=1 to item.TP_Zayav_Ist.count
    nid =createguid2() &amp;  item.TP_Zayav_Ist.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zayav_Ist.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;POL&quot;
if mode=&quot;YING&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;YING&quot;
if mode=&quot;NISP&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;NISP&quot;
if mode=&quot;ALL&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_Zayav_Ist&quot; 
    item.TP_Zayav_Ist.refresh
    for i=1 to item.TP_Zayav_Ist.count
    nid =createguid2() &amp;  item.TP_Zayav_Ist.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zayav_Ist.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;ALL&quot;
if mode=&quot;VSZT&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;VSZT&quot;
if mode=&quot;PROB&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
end select
end if ' mode=&quot;PROB&quot;
if mode=&quot;&quot; then
 select case child
 case &quot;TP_Zay_Zay&quot; 
    item.TP_Zay_Zay.refresh
    for i=1 to item.TP_Zay_Zay.count
    nid =createguid2() &amp;  item.TP_Zay_Zay.item(i).id  
    tree.nodes.add( key,4,nid,  item.TP_Zay_Zay.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_Zayav_Ist&quot; 
    item.TP_Zayav_Ist.refresh
    for i=1 to item.TP_Zayav_Ist.count
    nid =createguid2() &amp;  item.TP_Zayav_Ist.item(i).id  
    tree.nodes.add( key,4,nid,  item.TP_Zayav_Ist.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 case &quot;TP_ZAY_MSG&quot; 
    item.TP_ZAY_MSG.refresh
    for i=1 to item.TP_ZAY_MSG.count
    nid =createguid2() &amp;  item.TP_ZAY_MSG.item(i).id  
    tree.nodes.add( key,4,nid,  item.TP_ZAY_MSG.item(i).brief(true)).tag=&quot;Row&quot; 
    next
 end select
end if ' mode=&quot;&quot;
end sub

'Получить дочерний раздел по имени
'Parameters:
'[IN][OUT]   Item , тип параметра: object, 
'[IN]   CollectionName , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ItemCollection(...параметры...)
public property Get ItemCollection( Item as object, byval CollectionName as string) as object
  set ItemCollection = CallByName(Item,CollectionName,vbGet)
end property

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
 ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, ID)
end function

'Массовое обновление строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
public sub BatchUpdate()
If not Application.WorkOffline Then
    TP_Zay_Zay.BatchUpdate
    TP_Zayav_Ist.BatchUpdate
    TP_ZAY_MSG.BatchUpdate
End If
End sub

'Загрузка всех данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
public sub LoadAll()
dim prevAutoLoad as boolean
If not Application.WorkOffline Then
prevAutoLoad= Application.autoloadpart
Application.autoloadpart = true
    TP_Zay_Zay.LoadAll
    TP_Zayav_Ist.LoadAll
    TP_ZAY_MSG.LoadAll
Application.autoloadpart = prevAutoLoad
End If
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="TP_Zay_Zay" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_Num as long
private m_DataPriem as DATE
private m_ZType as object
Dim m_ZType_ID as string
Dim m_ZType_ID_BRIEF as string
private m_FIO as String
private m_TheOperator as object
Dim m_TheOperator_ID as string
Dim m_TheOperator_ID_BRIEF as string
private m_Adres as String
private m_Rayon as object
Dim m_Rayon_ID as string
Dim m_Rayon_ID_BRIEF as string
private m_Metro as object
Dim m_Metro_ID as string
Dim m_Metro_ID_BRIEF as string
private m_KonrLizo as String
private m_KontTelefon as String
private m_KontEMAIL as String
private m_VremjaDljaSvjazi as String
private m_GelData as DATE
private m_GelVremja as object
Dim m_GelVremja_ID as string
Dim m_GelVremja_ID_BRIEF as string
private m_Portref as object
Dim m_Portref_ID as string
Dim m_Portref_ID_BRIEF as string
private m_ABNumber as String
private m_SN_STB as String
private m_MAC_STB as String
private m_DopInfo as STRING
private m_Koordin as object
Dim m_Koordin_ID as string
Dim m_Koordin_ID_BRIEF as string
private m_Ingener as object
Dim m_Ingener_ID as string
Dim m_Ingener_ID_BRIEF as string
private m_DeviceType as object
Dim m_DeviceType_ID as string
Dim m_DeviceType_ID_BRIEF as string
private m_VidanModemSer as String
private m_Tarif as object
Dim m_Tarif_ID as string
Dim m_Tarif_ID_BRIEF as string
private m_FIOdogovor as String
private m_DataInstall as DATE
private m_SrochDogovor as object
Dim m_SrochDogovor_ID as string
Dim m_SrochDogovor_ID_BRIEF as string
private m_DocPolych as enumBoolean
private m_DataSZT as DATE
private m_VklVReestr as enumBoolean
private m_Otkaz as enumBoolean
private m_OpisProblem as STRING
private m_OtprVKEY as enumBoolean
private m_DataOtpravVKEY as DATE
private m_DopSogl as enumBoolean
private m_NumDogovor as String
private m_Komment as STRING
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;TP_Zay_Zay&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;TP_Zay_Zay.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Номер заявки 

'Номер заявки
'Parameters:
'[IN]   newValue , тип параметра: long  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Num(byval newValue as long)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Num&quot;,Num,newvalue

   m_Num= newValue
end if
end property

'Номер заявки
'Parameters:
' параметров нет
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me. Num
public property Get Num() as long
 LoadFromDatabase
 AccessTime=Now

   Num = m_Num
end property
' let 
'Дата приема

'Дата приема
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DataPriem(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DataPriem&quot;,DataPriem,newvalue

   m_DataPriem= newValue
end if
end property

'Дата приема
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DataPriem
public property Get DataPriem() as DATE
 LoadFromDatabase
 AccessTime=Now

   DataPriem = m_DataPriem
end property
' let 
'Тип заявки

'Тип заявки
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set ZType(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ZType&quot;,ZType,newvalue
on error resume next
m_ZType_ID=&quot;&quot;
m_ZType_ID=newValue.id
'  set   m_ZType= newValue
end if
end property

'Тип заявки
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. ZType
public property Get ZType() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_ZType as object
if  m_ZType_ID&lt;&gt;&quot;&quot; then 
  set tmp_ZType=Application.FindRowObject(&quot;TP_SPR_ZTYPE&quot;,m_ZType_ID)
  if tmp_ZType is nothing then
    m_ZType_ID_BRIEF = &quot;&quot; 
  else
    m_ZType_ID_BRIEF = tmp_ZType.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_SPR_ZTYPE&quot; &amp; m_ZType_ID, tmp_ZType
  set ZType=tmp_ZType
  exit property
end if
  '  set ZType = m_ZType
end property
' let 
'ФИО

'ФИО
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FIO(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FIO&quot;,FIO,newvalue

   m_FIO= newValue
end if
end property

'ФИО
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FIO
public property Get FIO() as String
 LoadFromDatabase
 AccessTime=Now

   FIO = m_FIO
end property
' let 
'Оператор

'Оператор
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheOperator(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheOperator&quot;,TheOperator,newvalue
on error resume next
m_TheOperator_ID=&quot;&quot;
m_TheOperator_ID=newValue.id
'  set   m_TheOperator= newValue
end if
end property

'Оператор
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheOperator
public property Get TheOperator() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheOperator as object
if  m_TheOperator_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheOperator=Application.FindRowObject(&quot;TP_Spr_Oper&quot;,m_TheOperator_ID)
  if tmp_TheOperator is nothing then
    m_TheOperator_ID_BRIEF = &quot;&quot; 
  else
    m_TheOperator_ID_BRIEF = tmp_TheOperator.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_Oper&quot; &amp; m_TheOperator_ID, tmp_TheOperator
  set TheOperator=tmp_TheOperator
  exit property
end if
  '  set TheOperator = m_TheOperator
end property
' let 
'Адрес

'Адрес
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Adres(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Adres&quot;,Adres,newvalue

   m_Adres= newValue
end if
end property

'Адрес
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. Adres
public property Get Adres() as String
 LoadFromDatabase
 AccessTime=Now

   Adres = m_Adres
end property
' let 
'Район

'Район
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Rayon(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Rayon&quot;,Rayon,newvalue
on error resume next
m_Rayon_ID=&quot;&quot;
m_Rayon_ID=newValue.id
'  set   m_Rayon= newValue
end if
end property

'Район
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Rayon
public property Get Rayon() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Rayon as object
if  m_Rayon_ID&lt;&gt;&quot;&quot; then 
  set tmp_Rayon=Application.FindRowObject(&quot;Rayon&quot;,m_Rayon_ID)
  if tmp_Rayon is nothing then
    m_Rayon_ID_BRIEF = &quot;&quot; 
  else
    m_Rayon_ID_BRIEF = tmp_Rayon.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;Rayon&quot; &amp; m_Rayon_ID, tmp_Rayon
  set Rayon=tmp_Rayon
  exit property
end if
  '  set Rayon = m_Rayon
end property
' let 
'Метро

'Метро
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Metro(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Metro&quot;,Metro,newvalue
on error resume next
m_Metro_ID=&quot;&quot;
m_Metro_ID=newValue.id
'  set   m_Metro= newValue
end if
end property

'Метро
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Metro
public property Get Metro() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Metro as object
if  m_Metro_ID&lt;&gt;&quot;&quot; then 
  set tmp_Metro=Application.FindRowObject(&quot;TP_Spr_Metro&quot;,m_Metro_ID)
  if tmp_Metro is nothing then
    m_Metro_ID_BRIEF = &quot;&quot; 
  else
    m_Metro_ID_BRIEF = tmp_Metro.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_Metro&quot; &amp; m_Metro_ID, tmp_Metro
  set Metro=tmp_Metro
  exit property
end if
  '  set Metro = m_Metro
end property
' let 
'Контактное лицо

'Контактное лицо
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KonrLizo(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KonrLizo&quot;,KonrLizo,newvalue

   m_KonrLizo= newValue
end if
end property

'Контактное лицо
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. KonrLizo
public property Get KonrLizo() as String
 LoadFromDatabase
 AccessTime=Now

   KonrLizo = m_KonrLizo
end property
' let 
'Контактный телефон

'Контактный телефон
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KontTelefon(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KontTelefon&quot;,KontTelefon,newvalue

   m_KontTelefon= newValue
end if
end property

'Контактный телефон
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. KontTelefon
public property Get KontTelefon() as String
 LoadFromDatabase
 AccessTime=Now

   KontTelefon = m_KontTelefon
end property
' let 
'Контактный e-mail

'Контактный e-mail
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let KontEMAIL(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;KontEMAIL&quot;,KontEMAIL,newvalue

   m_KontEMAIL= newValue
end if
end property

'Контактный e-mail
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. KontEMAIL
public property Get KontEMAIL() as String
 LoadFromDatabase
 AccessTime=Now

   KontEMAIL = m_KontEMAIL
end property
' let 
'Время для связи

'Время для связи
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VremjaDljaSvjazi(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VremjaDljaSvjazi&quot;,VremjaDljaSvjazi,newvalue

   m_VremjaDljaSvjazi= newValue
end if
end property

'Время для связи
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. VremjaDljaSvjazi
public property Get VremjaDljaSvjazi() as String
 LoadFromDatabase
 AccessTime=Now

   VremjaDljaSvjazi = m_VremjaDljaSvjazi
end property
' let 
'Желаемая дата визита инсталятора

'Желаемая дата визита инсталятора
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let GelData(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;GelData&quot;,GelData,newvalue

   m_GelData= newValue
end if
end property

'Желаемая дата визита инсталятора
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. GelData
public property Get GelData() as DATE
 LoadFromDatabase
 AccessTime=Now

   GelData = m_GelData
end property
' let 
'Желаемое время визита инсталятора

'Желаемое время визита инсталятора
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set GelVremja(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;GelVremja&quot;,GelVremja,newvalue
on error resume next
m_GelVremja_ID=&quot;&quot;
m_GelVremja_ID=newValue.id
'  set   m_GelVremja= newValue
end if
end property

'Желаемое время визита инсталятора
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. GelVremja
public property Get GelVremja() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_GelVremja as object
if  m_GelVremja_ID&lt;&gt;&quot;&quot; then 
  set tmp_GelVremja=Application.FindRowObject(&quot;TP_Spr_VrVisInst&quot;,m_GelVremja_ID)
  if tmp_GelVremja is nothing then
    m_GelVremja_ID_BRIEF = &quot;&quot; 
  else
    m_GelVremja_ID_BRIEF = tmp_GelVremja.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_VrVisInst&quot; &amp; m_GelVremja_ID, tmp_GelVremja
  set GelVremja=tmp_GelVremja
  exit property
end if
  '  set GelVremja = m_GelVremja
end property
' let 
'Порт

'Порт
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Portref(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Portref&quot;,Portref,newvalue
on error resume next
m_Portref_ID=&quot;&quot;
m_Portref_ID=newValue.id
'  set   m_Portref= newValue
end if
end property

'Порт
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Portref
public property Get Portref() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Portref as object
if  m_Portref_ID&lt;&gt;&quot;&quot; then 
  set tmp_Portref=Application.FindRowObject(&quot;TP_SPR_Port&quot;,m_Portref_ID)
  if tmp_Portref is nothing then
    m_Portref_ID_BRIEF = &quot;&quot; 
  else
    m_Portref_ID_BRIEF = tmp_Portref.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_SPR_Port&quot; &amp; m_Portref_ID, tmp_Portref
  set Portref=tmp_Portref
  exit property
end if
  '  set Portref = m_Portref
end property
' let 
'Абонентский номер

'Абонентский номер
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ABNumber(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ABNumber&quot;,ABNumber,newvalue

   m_ABNumber= newValue
end if
end property

'Абонентский номер
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. ABNumber
public property Get ABNumber() as String
 LoadFromDatabase
 AccessTime=Now

   ABNumber = m_ABNumber
end property
' let 
'Сер. Номер STB

'Сер. Номер STB
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let SN_STB(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SN_STB&quot;,SN_STB,newvalue

   m_SN_STB= newValue
end if
end property

'Сер. Номер STB
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. SN_STB
public property Get SN_STB() as String
 LoadFromDatabase
 AccessTime=Now

   SN_STB = m_SN_STB
end property
' let 
'MAC STB

'MAC STB
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let MAC_STB(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;MAC_STB&quot;,MAC_STB,newvalue

   m_MAC_STB= newValue
end if
end property

'MAC STB
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. MAC_STB
public property Get MAC_STB() as String
 LoadFromDatabase
 AccessTime=Now

   MAC_STB = m_MAC_STB
end property
' let 
'Доп. информация

'Доп. информация
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DopInfo(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DopInfo&quot;,DopInfo,newvalue

   m_DopInfo= newValue
end if
end property

'Доп. информация
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. DopInfo
public property Get DopInfo() as STRING
 LoadFromDatabase
 AccessTime=Now

   DopInfo = m_DopInfo
end property
' let 
'Координатор

'Координатор
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Koordin(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Koordin&quot;,Koordin,newvalue
on error resume next
m_Koordin_ID=&quot;&quot;
m_Koordin_ID=newValue.id
'  set   m_Koordin= newValue
end if
end property

'Координатор
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Koordin
public property Get Koordin() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Koordin as object
if  m_Koordin_ID&lt;&gt;&quot;&quot; then 
  set tmp_Koordin=Application.FindRowObject(&quot;TP_Spr_Koor&quot;,m_Koordin_ID)
  if tmp_Koordin is nothing then
    m_Koordin_ID_BRIEF = &quot;&quot; 
  else
    m_Koordin_ID_BRIEF = tmp_Koordin.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_Koor&quot; &amp; m_Koordin_ID, tmp_Koordin
  set Koordin=tmp_Koordin
  exit property
end if
  '  set Koordin = m_Koordin
end property
' let 
'Инженер

'Инженер
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Ingener(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Ingener&quot;,Ingener,newvalue
on error resume next
m_Ingener_ID=&quot;&quot;
m_Ingener_ID=newValue.id
'  set   m_Ingener= newValue
end if
end property

'Инженер
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Ingener
public property Get Ingener() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Ingener as object
if  m_Ingener_ID&lt;&gt;&quot;&quot; then 
  set tmp_Ingener=Application.FindRowObject(&quot;TP_Spr_Ing&quot;,m_Ingener_ID)
  if tmp_Ingener is nothing then
    m_Ingener_ID_BRIEF = &quot;&quot; 
  else
    m_Ingener_ID_BRIEF = tmp_Ingener.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_Ing&quot; &amp; m_Ingener_ID, tmp_Ingener
  set Ingener=tmp_Ingener
  exit property
end if
  '  set Ingener = m_Ingener
end property
' let 
'Тип оборудования

'Тип оборудования
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set DeviceType(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DeviceType&quot;,DeviceType,newvalue
on error resume next
m_DeviceType_ID=&quot;&quot;
m_DeviceType_ID=newValue.id
'  set   m_DeviceType= newValue
end if
end property

'Тип оборудования
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. DeviceType
public property Get DeviceType() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_DeviceType as object
if  m_DeviceType_ID&lt;&gt;&quot;&quot; then 
  set tmp_DeviceType=Application.FindRowObject(&quot;TP_SPR_MT&quot;,m_DeviceType_ID)
  if tmp_DeviceType is nothing then
    m_DeviceType_ID_BRIEF = &quot;&quot; 
  else
    m_DeviceType_ID_BRIEF = tmp_DeviceType.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_SPR_MT&quot; &amp; m_DeviceType_ID, tmp_DeviceType
  set DeviceType=tmp_DeviceType
  exit property
end if
  '  set DeviceType = m_DeviceType
end property
' let 
'Выданный модем серийник

'Выданный модем серийник
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VidanModemSer(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VidanModemSer&quot;,VidanModemSer,newvalue

   m_VidanModemSer= newValue
end if
end property

'Выданный модем серийник
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. VidanModemSer
public property Get VidanModemSer() as String
 LoadFromDatabase
 AccessTime=Now

   VidanModemSer = m_VidanModemSer
end property
' let 
'Тариф

'Тариф
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set Tarif(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Tarif&quot;,Tarif,newvalue
on error resume next
m_Tarif_ID=&quot;&quot;
m_Tarif_ID=newValue.id
'  set   m_Tarif= newValue
end if
end property

'Тариф
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Tarif
public property Get Tarif() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_Tarif as object
if  m_Tarif_ID&lt;&gt;&quot;&quot; then 
  set tmp_Tarif=Application.FindRowObject(&quot;TP_Spr_Tar&quot;,m_Tarif_ID)
  if tmp_Tarif is nothing then
    m_Tarif_ID_BRIEF = &quot;&quot; 
  else
    m_Tarif_ID_BRIEF = tmp_Tarif.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_Tar&quot; &amp; m_Tarif_ID, tmp_Tarif
  set Tarif=tmp_Tarif
  exit property
end if
  '  set Tarif = m_Tarif
end property
' let 
'ФИО в договоре

'ФИО в договоре
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FIOdogovor(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FIOdogovor&quot;,FIOdogovor,newvalue

   m_FIOdogovor= newValue
end if
end property

'ФИО в договоре
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FIOdogovor
public property Get FIOdogovor() as String
 LoadFromDatabase
 AccessTime=Now

   FIOdogovor = m_FIOdogovor
end property
' let 
'Дата инсталяции

'Дата инсталяции
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DataInstall(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DataInstall&quot;,DataInstall,newvalue

   m_DataInstall= newValue
end if
end property

'Дата инсталяции
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DataInstall
public property Get DataInstall() as DATE
 LoadFromDatabase
 AccessTime=Now

   DataInstall = m_DataInstall
end property
' let 
'Срок договора

'Срок договора
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set SrochDogovor(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;SrochDogovor&quot;,SrochDogovor,newvalue
on error resume next
m_SrochDogovor_ID=&quot;&quot;
m_SrochDogovor_ID=newValue.id
'  set   m_SrochDogovor= newValue
end if
end property

'Срок договора
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. SrochDogovor
public property Get SrochDogovor() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_SrochDogovor as object
if  m_SrochDogovor_ID&lt;&gt;&quot;&quot; then 
  set tmp_SrochDogovor=Application.FindRowObject(&quot;TP_Spr_SrochDog&quot;,m_SrochDogovor_ID)
  if tmp_SrochDogovor is nothing then
    m_SrochDogovor_ID_BRIEF = &quot;&quot; 
  else
    m_SrochDogovor_ID_BRIEF = tmp_SrochDogovor.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;TP_Spr_SrochDog&quot; &amp; m_SrochDogovor_ID, tmp_SrochDogovor
  set SrochDogovor=tmp_SrochDogovor
  exit property
end if
  '  set SrochDogovor = m_SrochDogovor
end property
' let 
'Документы получены

'Документы получены
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DocPolych(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DocPolych&quot;,DocPolych,newvalue

   m_DocPolych= newValue
end if
end property

'Документы получены
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. DocPolych
public property Get DocPolych() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   DocPolych = m_DocPolych
end property
' let 
'Дата передачи в СЗТ

'Дата передачи в СЗТ
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DataSZT(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DataSZT&quot;,DataSZT,newvalue

   m_DataSZT= newValue
end if
end property

'Дата передачи в СЗТ
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DataSZT
public property Get DataSZT() as DATE
 LoadFromDatabase
 AccessTime=Now

   DataSZT = m_DataSZT
end property
' let 
'Включена в реестр для оплаты

'Включена в реестр для оплаты
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let VklVReestr(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;VklVReestr&quot;,VklVReestr,newvalue

   m_VklVReestr= newValue
end if
end property

'Включена в реестр для оплаты
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. VklVReestr
public property Get VklVReestr() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   VklVReestr = m_VklVReestr
end property
' let 
'Отказ

'Отказ
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Otkaz(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Otkaz&quot;,Otkaz,newvalue

   m_Otkaz= newValue
end if
end property

'Отказ
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. Otkaz
public property Get Otkaz() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   Otkaz = m_Otkaz
end property
' let 
'Описание проблемы

'Описание проблемы
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OpisProblem(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OpisProblem&quot;,OpisProblem,newvalue

   m_OpisProblem= newValue
end if
end property

'Описание проблемы
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. OpisProblem
public property Get OpisProblem() as STRING
 LoadFromDatabase
 AccessTime=Now

   OpisProblem = m_OpisProblem
end property
' let 
'Отправлено в КЭУ

'Отправлено в КЭУ
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let OtprVKEY(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;OtprVKEY&quot;,OtprVKEY,newvalue

   m_OtprVKEY= newValue
end if
end property

'Отправлено в КЭУ
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. OtprVKEY
public property Get OtprVKEY() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   OtprVKEY = m_OtprVKEY
end property
' let 
'Дата отправки в КЭУ

'Дата отправки в КЭУ
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DataOtpravVKEY(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DataOtpravVKEY&quot;,DataOtpravVKEY,newvalue

   m_DataOtpravVKEY= newValue
end if
end property

'Дата отправки в КЭУ
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. DataOtpravVKEY
public property Get DataOtpravVKEY() as DATE
 LoadFromDatabase
 AccessTime=Now

   DataOtpravVKEY = m_DataOtpravVKEY
end property
' let 
'Дополнительное соглашение

'Дополнительное соглашение
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let DopSogl(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;DopSogl&quot;,DopSogl,newvalue

   m_DopSogl= newValue
end if
end property

'Дополнительное соглашение
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. DopSogl
public property Get DopSogl() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   DopSogl = m_DopSogl
end property
' let 
'Номер договора

'Номер договора
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let NumDogovor(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;NumDogovor&quot;,NumDogovor,newvalue

   m_NumDogovor= newValue
end if
end property

'Номер договора
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. NumDogovor
public property Get NumDogovor() as String
 LoadFromDatabase
 AccessTime=Now

   NumDogovor = m_NumDogovor
end property
' let 
'Комментарий

'Комментарий
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Komment(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Komment&quot;,Komment,newvalue

   m_Komment= newValue
end if
end property

'Комментарий
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. Komment
public property Get Komment() as STRING
 LoadFromDatabase
 AccessTime=Now

   Komment = m_Komment
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;Num&quot;,m_Num)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;DataPriem&quot;,m_DataPriem)
nvi.ValueType = adDate 
 ' Reference to TP_SPR_ZTYPE
    if m_ZType_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;ZType&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;ZType&quot;,m_ZType_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;FIO&quot;,m_FIO)
nvi.ValueSize = 255
 ' Reference to TP_Spr_Oper
    if m_TheOperator_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheOperator&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheOperator&quot;,m_TheOperator_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;Adres&quot;,m_Adres)
nvi.ValueSize = 255
 ' Reference to Rayon
    if m_Rayon_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Rayon&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Rayon&quot;,m_Rayon_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to TP_Spr_Metro
    if m_Metro_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Metro&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Metro&quot;,m_Metro_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;KonrLizo&quot;,m_KonrLizo)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;KontTelefon&quot;,m_KontTelefon)
nvi.ValueSize = 100
  set nvi=nv.Add( &quot;KontEMAIL&quot;,m_KontEMAIL)
nvi.ValueSize = 100
  set nvi=nv.Add( &quot;VremjaDljaSvjazi&quot;,m_VremjaDljaSvjazi)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;GelData&quot;,m_GelData)
nvi.ValueType = adDate 
 ' Reference to TP_Spr_VrVisInst
    if m_GelVremja_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;GelVremja&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;GelVremja&quot;,m_GelVremja_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to TP_SPR_Port
    if m_Portref_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Portref&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Portref&quot;,m_Portref_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;ABNumber&quot;,m_ABNumber)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;SN_STB&quot;,m_SN_STB)
nvi.ValueSize = 20
  set nvi=nv.Add( &quot;MAC_STB&quot;,m_MAC_STB)
nvi.ValueSize = 30
  set nvi=nv.Add( &quot;DopInfo&quot;,m_DopInfo)
 ' Reference to TP_Spr_Koor
    if m_Koordin_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Koordin&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Koordin&quot;,m_Koordin_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to TP_Spr_Ing
    if m_Ingener_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Ingener&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Ingener&quot;,m_Ingener_ID)
    end if 
    nvi.ORACLE_GUID 
 ' Reference to TP_SPR_MT
    if m_DeviceType_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;DeviceType&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;DeviceType&quot;,m_DeviceType_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;VidanModemSer&quot;,m_VidanModemSer)
nvi.ValueSize = 255
 ' Reference to TP_Spr_Tar
    if m_Tarif_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;Tarif&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;Tarif&quot;,m_Tarif_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;FIOdogovor&quot;,m_FIOdogovor)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;DataInstall&quot;,m_DataInstall)
nvi.ValueType = adDate 
 ' Reference to TP_Spr_SrochDog
    if m_SrochDogovor_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;SrochDogovor&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;SrochDogovor&quot;,m_SrochDogovor_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;DocPolych&quot;,m_DocPolych)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;DataSZT&quot;,m_DataSZT)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;VklVReestr&quot;,m_VklVReestr)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;Otkaz&quot;,m_Otkaz)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;OpisProblem&quot;,m_OpisProblem)
  set nvi=nv.Add( &quot;OtprVKEY&quot;,m_OtprVKEY)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;DataOtpravVKEY&quot;,m_DataOtpravVKEY)
nvi.ValueType = adDate 
  set nvi=nv.Add( &quot;DopSogl&quot;,m_DopSogl)
nvi.ValueType = adInteger 
  set nvi=nv.Add( &quot;NumDogovor&quot;,m_NumDogovor)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Komment&quot;,m_Komment)
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; Num &amp; &quot;; &quot;
 m_BRIEF= m_BRIEF &amp; DataPriem &amp; &quot;; &quot;
 m_BRIEF= m_BRIEF &amp; FIO &amp; &quot;; &quot;
 m_BRIEF= m_BRIEF &amp; NumDogovor &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_Num=nv.item( &quot;Num&quot;).Value
m_DataPriem=nv.item( &quot;DataPriem&quot;).Value
  m_ZType_ID=nv.item( &quot;ZType&quot;).Value
m_FIO=nv.item( &quot;FIO&quot;).Value
  m_TheOperator_ID=nv.item( &quot;TheOperator&quot;).Value
m_Adres=nv.item( &quot;Adres&quot;).Value
  m_Rayon_ID=nv.item( &quot;Rayon&quot;).Value
  m_Metro_ID=nv.item( &quot;Metro&quot;).Value
m_KonrLizo=nv.item( &quot;KonrLizo&quot;).Value
m_KontTelefon=nv.item( &quot;KontTelefon&quot;).Value
m_KontEMAIL=nv.item( &quot;KontEMAIL&quot;).Value
m_VremjaDljaSvjazi=nv.item( &quot;VremjaDljaSvjazi&quot;).Value
m_GelData=nv.item( &quot;GelData&quot;).Value
  m_GelVremja_ID=nv.item( &quot;GelVremja&quot;).Value
  m_Portref_ID=nv.item( &quot;Portref&quot;).Value
m_ABNumber=nv.item( &quot;ABNumber&quot;).Value
m_SN_STB=nv.item( &quot;SN_STB&quot;).Value
m_MAC_STB=nv.item( &quot;MAC_STB&quot;).Value
m_DopInfo=nv.item( &quot;DopInfo&quot;).Value
  m_Koordin_ID=nv.item( &quot;Koordin&quot;).Value
  m_Ingener_ID=nv.item( &quot;Ingener&quot;).Value
  m_DeviceType_ID=nv.item( &quot;DeviceType&quot;).Value
m_VidanModemSer=nv.item( &quot;VidanModemSer&quot;).Value
  m_Tarif_ID=nv.item( &quot;Tarif&quot;).Value
m_FIOdogovor=nv.item( &quot;FIOdogovor&quot;).Value
m_DataInstall=nv.item( &quot;DataInstall&quot;).Value
  m_SrochDogovor_ID=nv.item( &quot;SrochDogovor&quot;).Value
m_DocPolych=nv.item( &quot;DocPolych&quot;).Value
m_DataSZT=nv.item( &quot;DataSZT&quot;).Value
m_VklVReestr=nv.item( &quot;VklVReestr&quot;).Value
m_Otkaz=nv.item( &quot;Otkaz&quot;).Value
m_OpisProblem=nv.item( &quot;OpisProblem&quot;).Value
m_OtprVKEY=nv.item( &quot;OtprVKEY&quot;).Value
m_DataOtpravVKEY=nv.item( &quot;DataOtpravVKEY&quot;).Value
m_DopSogl=nv.item( &quot;DopSogl&quot;).Value
m_NumDogovor=nv.item( &quot;NumDogovor&quot;).Value
m_Komment=nv.item( &quot;Komment&quot;).Value
else

m_Num=nv.fields( &quot;Num&quot;).Value
m_DataPriem=nv.fields( &quot;DataPriem&quot;).Value
  m_ZType_ID=nv.fields( &quot;ZType&quot;).Value
m_FIO=nv.fields( &quot;FIO&quot;).Value
  m_TheOperator_ID=nv.fields( &quot;TheOperator&quot;).Value
m_Adres=nv.fields( &quot;Adres&quot;).Value
  m_Rayon_ID=nv.fields( &quot;Rayon&quot;).Value
  m_Metro_ID=nv.fields( &quot;Metro&quot;).Value
m_KonrLizo=nv.fields( &quot;KonrLizo&quot;).Value
m_KontTelefon=nv.fields( &quot;KontTelefon&quot;).Value
m_KontEMAIL=nv.fields( &quot;KontEMAIL&quot;).Value
m_VremjaDljaSvjazi=nv.fields( &quot;VremjaDljaSvjazi&quot;).Value
m_GelData=nv.fields( &quot;GelData&quot;).Value
  m_GelVremja_ID=nv.fields( &quot;GelVremja&quot;).Value
  m_Portref_ID=nv.fields( &quot;Portref&quot;).Value
m_ABNumber=nv.fields( &quot;ABNumber&quot;).Value
m_SN_STB=nv.fields( &quot;SN_STB&quot;).Value
m_MAC_STB=nv.fields( &quot;MAC_STB&quot;).Value
m_DopInfo=nv.fields( &quot;DopInfo&quot;).Value
  m_Koordin_ID=nv.fields( &quot;Koordin&quot;).Value
  m_Ingener_ID=nv.fields( &quot;Ingener&quot;).Value
  m_DeviceType_ID=nv.fields( &quot;DeviceType&quot;).Value
m_VidanModemSer=nv.fields( &quot;VidanModemSer&quot;).Value
  m_Tarif_ID=nv.fields( &quot;Tarif&quot;).Value
m_FIOdogovor=nv.fields( &quot;FIOdogovor&quot;).Value
m_DataInstall=nv.fields( &quot;DataInstall&quot;).Value
  m_SrochDogovor_ID=nv.fields( &quot;SrochDogovor&quot;).Value
m_DocPolych=nv.fields( &quot;DocPolych&quot;).Value
m_DataSZT=nv.fields( &quot;DataSZT&quot;).Value
m_VklVReestr=nv.fields( &quot;VklVReestr&quot;).Value
m_Otkaz=nv.fields( &quot;Otkaz&quot;).Value
m_OpisProblem=nv.fields( &quot;OpisProblem&quot;).Value
m_OtprVKEY=nv.fields( &quot;OtprVKEY&quot;).Value
m_DataOtpravVKEY=nv.fields( &quot;DataOtpravVKEY&quot;).Value
m_DopSogl=nv.fields( &quot;DopSogl&quot;).Value
m_NumDogovor=nv.fields( &quot;NumDogovor&quot;).Value
m_Komment=nv.fields( &quot;Komment&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as TP_Zay_Zay
   set o = new TP_Zay_Zay
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;TP_Zay_Zay.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;TP_Zay_Zay.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;TP_Zay_Zay&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;TP_Zay_Zay.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;TP_Zay_Zay&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;TP_Zay_Zay.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_ZType_ID=&quot;&quot;
 set m_ZType= nothing
 m_TheOperator_ID=&quot;&quot;
 set m_TheOperator= nothing
 m_Rayon_ID=&quot;&quot;
 set m_Rayon= nothing
 m_Metro_ID=&quot;&quot;
 set m_Metro= nothing
 m_GelVremja_ID=&quot;&quot;
 set m_GelVremja= nothing
 m_Portref_ID=&quot;&quot;
 set m_Portref= nothing
 m_Koordin_ID=&quot;&quot;
 set m_Koordin= nothing
 m_Ingener_ID=&quot;&quot;
 set m_Ingener= nothing
 m_DeviceType_ID=&quot;&quot;
 set m_DeviceType= nothing
 m_Tarif_ID=&quot;&quot;
 set m_Tarif= nothing
 m_SrochDogovor_ID=&quot;&quot;
 set m_SrochDogovor= nothing
 if not Application is nothing then Application.Logger.Message &quot;TP_Zay_Zay.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  Num=node.Attributes.getNamedItem(&quot;NUM&quot;).nodeValue
  DataPriem=node.Attributes.getNamedItem(&quot;DATAPRIEM&quot;).nodeValue
  set ZType=nothing
  m_ZType_ID=node.Attributes.getNamedItem(&quot;ZTYPE&quot;).nodeValue
  m_ZType_ID_BRIEF=node.Attributes.getNamedItem(&quot;ZTYPE_BRIEF&quot;).nodeValue
  FIO=Replace(node.Attributes.getNamedItem(&quot;FIO&quot;).nodeValue,vbLf,vbcrlf)
  set TheOperator=nothing
  m_TheOperator_ID=node.Attributes.getNamedItem(&quot;THEOPERATOR&quot;).nodeValue
  m_TheOperator_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEOPERATOR_BRIEF&quot;).nodeValue
  Adres=Replace(node.Attributes.getNamedItem(&quot;ADRES&quot;).nodeValue,vbLf,vbcrlf)
  set Rayon=nothing
  m_Rayon_ID=node.Attributes.getNamedItem(&quot;RAYON&quot;).nodeValue
  m_Rayon_ID_BRIEF=node.Attributes.getNamedItem(&quot;RAYON_BRIEF&quot;).nodeValue
  set Metro=nothing
  m_Metro_ID=node.Attributes.getNamedItem(&quot;METRO&quot;).nodeValue
  m_Metro_ID_BRIEF=node.Attributes.getNamedItem(&quot;METRO_BRIEF&quot;).nodeValue
  KonrLizo=Replace(node.Attributes.getNamedItem(&quot;KONRLIZO&quot;).nodeValue,vbLf,vbcrlf)
  KontTelefon=Replace(node.Attributes.getNamedItem(&quot;KONTTELEFON&quot;).nodeValue,vbLf,vbcrlf)
  KontEMAIL=Replace(node.Attributes.getNamedItem(&quot;KONTEMAIL&quot;).nodeValue,vbLf,vbcrlf)
  VremjaDljaSvjazi=Replace(node.Attributes.getNamedItem(&quot;VREMJADLJASVJAZI&quot;).nodeValue,vbLf,vbcrlf)
  GelData=node.Attributes.getNamedItem(&quot;GELDATA&quot;).nodeValue
  set GelVremja=nothing
  m_GelVremja_ID=node.Attributes.getNamedItem(&quot;GELVREMJA&quot;).nodeValue
  m_GelVremja_ID_BRIEF=node.Attributes.getNamedItem(&quot;GELVREMJA_BRIEF&quot;).nodeValue
  set Portref=nothing
  m_Portref_ID=node.Attributes.getNamedItem(&quot;PORTREF&quot;).nodeValue
  m_Portref_ID_BRIEF=node.Attributes.getNamedItem(&quot;PORTREF_BRIEF&quot;).nodeValue
  ABNumber=Replace(node.Attributes.getNamedItem(&quot;ABNUMBER&quot;).nodeValue,vbLf,vbcrlf)
  SN_STB=Replace(node.Attributes.getNamedItem(&quot;SN_STB&quot;).nodeValue,vbLf,vbcrlf)
  MAC_STB=Replace(node.Attributes.getNamedItem(&quot;MAC_STB&quot;).nodeValue,vbLf,vbcrlf)
  DopInfo=Replace(node.Attributes.getNamedItem(&quot;DOPINFO&quot;).nodeValue,vbLf,vbcrlf)
  set Koordin=nothing
  m_Koordin_ID=node.Attributes.getNamedItem(&quot;KOORDIN&quot;).nodeValue
  m_Koordin_ID_BRIEF=node.Attributes.getNamedItem(&quot;KOORDIN_BRIEF&quot;).nodeValue
  set Ingener=nothing
  m_Ingener_ID=node.Attributes.getNamedItem(&quot;INGENER&quot;).nodeValue
  m_Ingener_ID_BRIEF=node.Attributes.getNamedItem(&quot;INGENER_BRIEF&quot;).nodeValue
  set DeviceType=nothing
  m_DeviceType_ID=node.Attributes.getNamedItem(&quot;DEVICETYPE&quot;).nodeValue
  m_DeviceType_ID_BRIEF=node.Attributes.getNamedItem(&quot;DEVICETYPE_BRIEF&quot;).nodeValue
  VidanModemSer=Replace(node.Attributes.getNamedItem(&quot;VIDANMODEMSER&quot;).nodeValue,vbLf,vbcrlf)
  set Tarif=nothing
  m_Tarif_ID=node.Attributes.getNamedItem(&quot;TARIF&quot;).nodeValue
  m_Tarif_ID_BRIEF=node.Attributes.getNamedItem(&quot;TARIF_BRIEF&quot;).nodeValue
  FIOdogovor=Replace(node.Attributes.getNamedItem(&quot;FIODOGOVOR&quot;).nodeValue,vbLf,vbcrlf)
  DataInstall=node.Attributes.getNamedItem(&quot;DATAINSTALL&quot;).nodeValue
  set SrochDogovor=nothing
  m_SrochDogovor_ID=node.Attributes.getNamedItem(&quot;SROCHDOGOVOR&quot;).nodeValue
  m_SrochDogovor_ID_BRIEF=node.Attributes.getNamedItem(&quot;SROCHDOGOVOR_BRIEF&quot;).nodeValue
  DocPolych=node.Attributes.getNamedItem(&quot;DOCPOLYCH&quot;).nodeValue
  DataSZT=node.Attributes.getNamedItem(&quot;DATASZT&quot;).nodeValue
  VklVReestr=node.Attributes.getNamedItem(&quot;VKLVREESTR&quot;).nodeValue
  Otkaz=node.Attributes.getNamedItem(&quot;OTKAZ&quot;).nodeValue
  OpisProblem=Replace(node.Attributes.getNamedItem(&quot;OPISPROBLEM&quot;).nodeValue,vbLf,vbcrlf)
  OtprVKEY=node.Attributes.getNamedItem(&quot;OTPRVKEY&quot;).nodeValue
  DataOtpravVKEY=node.Attributes.getNamedItem(&quot;DATAOTPRAVVKEY&quot;).nodeValue
  DopSogl=node.Attributes.getNamedItem(&quot;DOPSOGL&quot;).nodeValue
  NumDogovor=Replace(node.Attributes.getNamedItem(&quot;NUMDOGOVOR&quot;).nodeValue,vbLf,vbcrlf)
  Komment=Replace(node.Attributes.getNamedItem(&quot;KOMMENT&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;NUM&quot;, Num
  node.setAttribute &quot;DATAPRIEM&quot;, Cdbl(DataPriem)
  node.setAttribute &quot;ZTYPE&quot;, m_ZType_ID
  if not (ZType is nothing) then 
    node.setAttribute &quot;ZTYPE_BRIEF&quot;, ZType.BRIEF
  else
    node.setAttribute &quot;ZTYPE_BRIEF&quot;, m_ZType_ID_BRIEF
  end if
  node.setAttribute &quot;FIO&quot;, FIO
  node.setAttribute &quot;THEOPERATOR&quot;, m_TheOperator_ID
  if not (TheOperator is nothing) then 
    node.setAttribute &quot;THEOPERATOR_BRIEF&quot;, TheOperator.BRIEF
  else
    node.setAttribute &quot;THEOPERATOR_BRIEF&quot;, m_TheOperator_ID_BRIEF
  end if
  node.setAttribute &quot;ADRES&quot;, Adres
  node.setAttribute &quot;RAYON&quot;, m_Rayon_ID
  if not (Rayon is nothing) then 
    node.setAttribute &quot;RAYON_BRIEF&quot;, Rayon.BRIEF
  else
    node.setAttribute &quot;RAYON_BRIEF&quot;, m_Rayon_ID_BRIEF
  end if
  node.setAttribute &quot;METRO&quot;, m_Metro_ID
  if not (Metro is nothing) then 
    node.setAttribute &quot;METRO_BRIEF&quot;, Metro.BRIEF
  else
    node.setAttribute &quot;METRO_BRIEF&quot;, m_Metro_ID_BRIEF
  end if
  node.setAttribute &quot;KONRLIZO&quot;, KonrLizo
  node.setAttribute &quot;KONTTELEFON&quot;, KontTelefon
  node.setAttribute &quot;KONTEMAIL&quot;, KontEMAIL
  node.setAttribute &quot;VREMJADLJASVJAZI&quot;, VremjaDljaSvjazi
  node.setAttribute &quot;GELDATA&quot;, Cdbl(GelData)
  node.setAttribute &quot;GELVREMJA&quot;, m_GelVremja_ID
  if not (GelVremja is nothing) then 
    node.setAttribute &quot;GELVREMJA_BRIEF&quot;, GelVremja.BRIEF
  else
    node.setAttribute &quot;GELVREMJA_BRIEF&quot;, m_GelVremja_ID_BRIEF
  end if
  node.setAttribute &quot;PORTREF&quot;, m_Portref_ID
  if not (Portref is nothing) then 
    node.setAttribute &quot;PORTREF_BRIEF&quot;, Portref.BRIEF
  else
    node.setAttribute &quot;PORTREF_BRIEF&quot;, m_Portref_ID_BRIEF
  end if
  node.setAttribute &quot;ABNUMBER&quot;, ABNumber
  node.setAttribute &quot;SN_STB&quot;, SN_STB
  node.setAttribute &quot;MAC_STB&quot;, MAC_STB
  node.setAttribute &quot;DOPINFO&quot;, DopInfo
  node.setAttribute &quot;KOORDIN&quot;, m_Koordin_ID
  if not (Koordin is nothing) then 
    node.setAttribute &quot;KOORDIN_BRIEF&quot;, Koordin.BRIEF
  else
    node.setAttribute &quot;KOORDIN_BRIEF&quot;, m_Koordin_ID_BRIEF
  end if
  node.setAttribute &quot;INGENER&quot;, m_Ingener_ID
  if not (Ingener is nothing) then 
    node.setAttribute &quot;INGENER_BRIEF&quot;, Ingener.BRIEF
  else
    node.setAttribute &quot;INGENER_BRIEF&quot;, m_Ingener_ID_BRIEF
  end if
  node.setAttribute &quot;DEVICETYPE&quot;, m_DeviceType_ID
  if not (DeviceType is nothing) then 
    node.setAttribute &quot;DEVICETYPE_BRIEF&quot;, DeviceType.BRIEF
  else
    node.setAttribute &quot;DEVICETYPE_BRIEF&quot;, m_DeviceType_ID_BRIEF
  end if
  node.setAttribute &quot;VIDANMODEMSER&quot;, VidanModemSer
  node.setAttribute &quot;TARIF&quot;, m_Tarif_ID
  if not (Tarif is nothing) then 
    node.setAttribute &quot;TARIF_BRIEF&quot;, Tarif.BRIEF
  else
    node.setAttribute &quot;TARIF_BRIEF&quot;, m_Tarif_ID_BRIEF
  end if
  node.setAttribute &quot;FIODOGOVOR&quot;, FIOdogovor
  node.setAttribute &quot;DATAINSTALL&quot;, Cdbl(DataInstall)
  node.setAttribute &quot;SROCHDOGOVOR&quot;, m_SrochDogovor_ID
  if not (SrochDogovor is nothing) then 
    node.setAttribute &quot;SROCHDOGOVOR_BRIEF&quot;, SrochDogovor.BRIEF
  else
    node.setAttribute &quot;SROCHDOGOVOR_BRIEF&quot;, m_SrochDogovor_ID_BRIEF
  end if
  node.setAttribute &quot;DOCPOLYCH&quot;, DocPolych
  node.setAttribute &quot;DATASZT&quot;, Cdbl(DataSZT)
  node.setAttribute &quot;VKLVREESTR&quot;, VklVReestr
  node.setAttribute &quot;OTKAZ&quot;, Otkaz
  node.setAttribute &quot;OPISPROBLEM&quot;, OpisProblem
  node.setAttribute &quot;OTPRVKEY&quot;, OtprVKEY
  node.setAttribute &quot;DATAOTPRAVVKEY&quot;, Cdbl(DataOtpravVKEY)
  node.setAttribute &quot;DOPSOGL&quot;, DopSogl
  node.setAttribute &quot;NUMDOGOVOR&quot;, NumDogovor
  node.setAttribute &quot;KOMMENT&quot;, Komment
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;TP_Zay_Zay&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;TP_Zay_Zay&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;TP_Zay_Zay&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;TP_Zay_Zay&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;NO&quot; then
 select case child
end select
end if ' mode=&quot;NO&quot;
if mode=&quot;READ&quot; then
 select case child
end select
end if ' mode=&quot;READ&quot;
if mode=&quot;VIP&quot; then
 select case child
end select
end if ' mode=&quot;VIP&quot;
if mode=&quot;POL&quot; then
 select case child
end select
end if ' mode=&quot;POL&quot;
if mode=&quot;YING&quot; then
 select case child
end select
end if ' mode=&quot;YING&quot;
if mode=&quot;NISP&quot; then
 select case child
end select
end if ' mode=&quot;NISP&quot;
if mode=&quot;ALL&quot; then
 select case child
end select
end if ' mode=&quot;ALL&quot;
if mode=&quot;VSZT&quot; then
 select case child
end select
end if ' mode=&quot;VSZT&quot;
if mode=&quot;PROB&quot; then
 select case child
end select
end if ' mode=&quot;PROB&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="TP_Zay_Zay_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;TP_Zay_Zay&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;TP_Zay_Zay.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as  TP_Zay_Zay
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  TP_Zay_Zay
   if mcol.count&gt;0 then exit function
 dim LID as  string
 dim o as  TP_Zay_Zay
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  TP_Zay_Zay
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as TP_Zay_Zay
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as TP_Zay_Zay
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as TP_Zay_Zay
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as TP_Zay_Zay
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as TP_Zay_Zay
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as TP_Zay_Zay
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zay_Zay
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zay_Zay
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as TP_Zay_Zay
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  TP_Zay_Zay
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;TP_Zay_Zay.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As TP_Zay_Zay
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As TP_Zay_Zay
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!TP_Zay_ZayID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as TP_Zay_Zay
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;TP_ZAY_ZAY_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;TP_ZAY_ZAY&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as TP_Zay_Zay
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;TP_ZAY_ZAY&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Номер заявки &quot;, 0, 0, &quot;Num&quot;).SortType =2
  YGrid.Columns.Add(&quot;Дата приема&quot;, 0, 0, &quot;DataPriem&quot;).SortType =4
  YGrid.Columns.Add(&quot;Тип заявки&quot;, 0, 0, &quot;ZType&quot;).SortType =1
  YGrid.Columns.Add(&quot;ФИО&quot;, 0, 0, &quot;FIO&quot;).SortType =1
  YGrid.Columns.Add(&quot;Оператор&quot;, 0, 0, &quot;TheOperator&quot;).SortType =1
  YGrid.Columns.Add(&quot;Адрес&quot;, 0, 0, &quot;Adres&quot;).SortType =1
  YGrid.Columns.Add(&quot;Район&quot;, 0, 0, &quot;Rayon&quot;).SortType =1
  YGrid.Columns.Add(&quot;Метро&quot;, 0, 0, &quot;Metro&quot;).SortType =1
  YGrid.Columns.Add(&quot;Контактное лицо&quot;, 0, 0, &quot;KonrLizo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Контактный телефон&quot;, 0, 0, &quot;KontTelefon&quot;).SortType =1
  YGrid.Columns.Add(&quot;Контактный e-mail&quot;, 0, 0, &quot;KontEMAIL&quot;).SortType =1
  YGrid.Columns.Add(&quot;Время для связи&quot;, 0, 0, &quot;VremjaDljaSvjazi&quot;).SortType =1
  YGrid.Columns.Add(&quot;Желаемая дата визита инсталятора&quot;, 0, 0, &quot;GelData&quot;).SortType =4
  YGrid.Columns.Add(&quot;Желаемое время визита инсталятора&quot;, 0, 0, &quot;GelVremja&quot;).SortType =1
  YGrid.Columns.Add(&quot;Порт&quot;, 0, 0, &quot;Portref&quot;).SortType =1
  YGrid.Columns.Add(&quot;Абонентский номер&quot;, 0, 0, &quot;ABNumber&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сер. Номер STB&quot;, 0, 0, &quot;SN_STB&quot;).SortType =1
  YGrid.Columns.Add(&quot;MAC STB&quot;, 0, 0, &quot;MAC_STB&quot;).SortType =1
  YGrid.Columns.Add(&quot;Доп. информация&quot;, 0, 0, &quot;DopInfo&quot;).SortType =1
  YGrid.Columns.Add(&quot;Координатор&quot;, 0, 0, &quot;Koordin&quot;).SortType =1
  YGrid.Columns.Add(&quot;Инженер&quot;, 0, 0, &quot;Ingener&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тип оборудования&quot;, 0, 0, &quot;DeviceType&quot;).SortType =1
  YGrid.Columns.Add(&quot;Выданный модем серийник&quot;, 0, 0, &quot;VidanModemSer&quot;).SortType =1
  YGrid.Columns.Add(&quot;Тариф&quot;, 0, 0, &quot;Tarif&quot;).SortType =1
  YGrid.Columns.Add(&quot;ФИО в договоре&quot;, 0, 0, &quot;FIOdogovor&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата инсталяции&quot;, 0, 0, &quot;DataInstall&quot;).SortType =4
  YGrid.Columns.Add(&quot;Срок договора&quot;, 0, 0, &quot;SrochDogovor&quot;).SortType =1
  YGrid.Columns.Add(&quot;Документы получены&quot;, 0, 0, &quot;DocPolych&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата передачи в СЗТ&quot;, 0, 0, &quot;DataSZT&quot;).SortType =4
  YGrid.Columns.Add(&quot;Включена в реестр для оплаты&quot;, 0, 0, &quot;VklVReestr&quot;).SortType =1
  YGrid.Columns.Add(&quot;Отказ&quot;, 0, 0, &quot;Otkaz&quot;).SortType =1
  YGrid.Columns.Add(&quot;Описание проблемы&quot;, 0, 0, &quot;OpisProblem&quot;).SortType =1
  YGrid.Columns.Add(&quot;Отправлено в КЭУ&quot;, 0, 0, &quot;OtprVKEY&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата отправки в КЭУ&quot;, 0, 0, &quot;DataOtpravVKEY&quot;).SortType =4
  YGrid.Columns.Add(&quot;Дополнительное соглашение&quot;, 0, 0, &quot;DopSogl&quot;).SortType =1
  YGrid.Columns.Add(&quot;Номер договора&quot;, 0, 0, &quot;NumDogovor&quot;).SortType =1
  YGrid.Columns.Add(&quot;Комментарий&quot;, 0, 0, &quot;Komment&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as TP_Zay_Zay
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.Num, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.DataPriem, vbCrLf, &quot; &quot;), 255)
   if obj.ZType is nothing then
    Values.Value(3) = &quot;Не задано&quot;
   else 
    Values.Value(3) = Left(Replace(obj.ZType.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(4) = Left(Replace(obj.FIO, vbCrLf, &quot; &quot;), 255)
   if obj.TheOperator is nothing then
    Values.Value(5) = &quot;Не задано&quot;
   else 
    Values.Value(5) = Left(Replace(obj.TheOperator.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(6) = Left(Replace(obj.Adres, vbCrLf, &quot; &quot;), 255)
   if obj.Rayon is nothing then
    Values.Value(7) = &quot;Не задано&quot;
   else 
    Values.Value(7) = Left(Replace(obj.Rayon.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.Metro is nothing then
    Values.Value(8) = &quot;Не задано&quot;
   else 
    Values.Value(8) = Left(Replace(obj.Metro.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(9) = Left(Replace(obj.KonrLizo, vbCrLf, &quot; &quot;), 255)
    Values.Value(10) = Left(Replace(obj.KontTelefon, vbCrLf, &quot; &quot;), 255)
    Values.Value(11) = Left(Replace(obj.KontEMAIL, vbCrLf, &quot; &quot;), 255)
    Values.Value(12) = Left(Replace(obj.VremjaDljaSvjazi, vbCrLf, &quot; &quot;), 255)
    Values.Value(13) = Left(Replace(obj.GelData, vbCrLf, &quot; &quot;), 255)
   if obj.GelVremja is nothing then
    Values.Value(14) = &quot;Не задано&quot;
   else 
    Values.Value(14) = Left(Replace(obj.GelVremja.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.Portref is nothing then
    Values.Value(15) = &quot;Не задано&quot;
   else 
    Values.Value(15) = Left(Replace(obj.Portref.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(16) = Left(Replace(obj.ABNumber, vbCrLf, &quot; &quot;), 255)
    Values.Value(17) = Left(Replace(obj.SN_STB, vbCrLf, &quot; &quot;), 255)
    Values.Value(18) = Left(Replace(obj.MAC_STB, vbCrLf, &quot; &quot;), 255)
    Values.Value(19) = Left(Replace(obj.DopInfo, vbCrLf, &quot; &quot;), 255)
   if obj.Koordin is nothing then
    Values.Value(20) = &quot;Не задано&quot;
   else 
    Values.Value(20) = Left(Replace(obj.Koordin.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.Ingener is nothing then
    Values.Value(21) = &quot;Не задано&quot;
   else 
    Values.Value(21) = Left(Replace(obj.Ingener.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.DeviceType is nothing then
    Values.Value(22) = &quot;Не задано&quot;
   else 
    Values.Value(22) = Left(Replace(obj.DeviceType.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(23) = Left(Replace(obj.VidanModemSer, vbCrLf, &quot; &quot;), 255)
   if obj.Tarif is nothing then
    Values.Value(24) = &quot;Не задано&quot;
   else 
    Values.Value(24) = Left(Replace(obj.Tarif.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(25) = Left(Replace(obj.FIOdogovor, vbCrLf, &quot; &quot;), 255)
    Values.Value(26) = Left(Replace(obj.DataInstall, vbCrLf, &quot; &quot;), 255)
   if obj.SrochDogovor is nothing then
    Values.Value(27) = &quot;Не задано&quot;
   else 
    Values.Value(27) = Left(Replace(obj.SrochDogovor.brief, vbCrLf, &quot; &quot;), 255)
   end if 
   if obj.DocPolych =-1 then
     Values.Value(28) = &quot;Да&quot;
   end if
   if obj.DocPolych =0 then
     Values.Value(28) = &quot;Нет&quot;
   end if
    Values.Value(29) = Left(Replace(obj.DataSZT, vbCrLf, &quot; &quot;), 255)
   if obj.VklVReestr =-1 then
     Values.Value(30) = &quot;Да&quot;
   end if
   if obj.VklVReestr =0 then
     Values.Value(30) = &quot;Нет&quot;
   end if
   if obj.Otkaz =-1 then
     Values.Value(31) = &quot;Да&quot;
   end if
   if obj.Otkaz =0 then
     Values.Value(31) = &quot;Нет&quot;
   end if
    Values.Value(32) = Left(Replace(obj.OpisProblem, vbCrLf, &quot; &quot;), 255)
   if obj.OtprVKEY =-1 then
     Values.Value(33) = &quot;Да&quot;
   end if
   if obj.OtprVKEY =0 then
     Values.Value(33) = &quot;Нет&quot;
   end if
    Values.Value(34) = Left(Replace(obj.DataOtpravVKEY, vbCrLf, &quot; &quot;), 255)
   if obj.DopSogl =-1 then
     Values.Value(35) = &quot;Да&quot;
   end if
   if obj.DopSogl =0 then
     Values.Value(35) = &quot;Нет&quot;
   end if
    Values.Value(36) = Left(Replace(obj.NumDogovor, vbCrLf, &quot; &quot;), 255)
    Values.Value(37) = Left(Replace(obj.Komment, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;TP_Zay_Zay&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="TP_Zayav_Ist" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела 
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_ImenStatys as String
private m_Data as DATE
private m_FIO as String
private m_Komment as STRING
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;TP_Zayav_Ist&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;TP_Zayav_Ist.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Изменён статус

'Изменён статус
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let ImenStatys(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;ImenStatys&quot;,ImenStatys,newvalue

   m_ImenStatys= newValue
end if
end property

'Изменён статус
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. ImenStatys
public property Get ImenStatys() as String
 LoadFromDatabase
 AccessTime=Now

   ImenStatys = m_ImenStatys
end property
' let 
'Дата и время изменения

'Дата и время изменения
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Data(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Data&quot;,Data,newvalue

   m_Data= newValue
end if
end property

'Дата и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. Data
public property Get Data() as DATE
 LoadFromDatabase
 AccessTime=Now

   Data = m_Data
end property
' let 
'Изменил(ФИО)

'Изменил(ФИО)
'Parameters:
'[IN]   newValue , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let FIO(byval newValue as String)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;FIO&quot;,FIO,newvalue

   m_FIO= newValue
end if
end property

'Изменил(ФИО)
'Parameters:
' параметров нет
'Returns:
'  значение типа String
'See Also:
'Example:
' dim variable as String
' variable = me. FIO
public property Get FIO() as String
 LoadFromDatabase
 AccessTime=Now

   FIO = m_FIO
end property
' let 
'Комментарий

'Комментарий
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let Komment(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;Komment&quot;,Komment,newvalue

   m_Komment= newValue
end if
end property

'Комментарий
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. Komment
public property Get Komment() as STRING
 LoadFromDatabase
 AccessTime=Now

   Komment = m_Komment
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;ImenStatys&quot;,m_ImenStatys)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Data&quot;,m_Data)
nvi.ValueType = adDBTimeStamp 
  set nvi=nv.Add( &quot;FIO&quot;,m_FIO)
nvi.ValueSize = 255
  set nvi=nv.Add( &quot;Komment&quot;,m_Komment)
nvi.ValueSize = 255
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; ImenStatys &amp; &quot;; &quot;
 m_BRIEF= m_BRIEF &amp; FIO &amp; &quot;; &quot;
 m_BRIEF= m_BRIEF &amp; Komment &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_ImenStatys=nv.item( &quot;ImenStatys&quot;).Value
m_Data=nv.item( &quot;Data&quot;).Value
m_FIO=nv.item( &quot;FIO&quot;).Value
m_Komment=nv.item( &quot;Komment&quot;).Value
else

m_ImenStatys=nv.fields( &quot;ImenStatys&quot;).Value
m_Data=nv.fields( &quot;Data&quot;).Value
m_FIO=nv.fields( &quot;FIO&quot;).Value
m_Komment=nv.fields( &quot;Komment&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as TP_Zayav_Ist
   set o = new TP_Zayav_Ist
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;TP_Zayav_Ist.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;TP_Zayav_Ist.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;TP_Zayav_Ist&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;TP_Zayav_Ist.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;TP_Zayav_Ist&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;TP_Zayav_Ist.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 if not Application is nothing then Application.Logger.Message &quot;TP_Zayav_Ist.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  ImenStatys=Replace(node.Attributes.getNamedItem(&quot;IMENSTATYS&quot;).nodeValue,vbLf,vbcrlf)
  Data=node.Attributes.getNamedItem(&quot;DATA&quot;).nodeValue
  FIO=Replace(node.Attributes.getNamedItem(&quot;FIO&quot;).nodeValue,vbLf,vbcrlf)
  Komment=Replace(node.Attributes.getNamedItem(&quot;KOMMENT&quot;).nodeValue,vbLf,vbcrlf)
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;IMENSTATYS&quot;, ImenStatys
  node.setAttribute &quot;DATA&quot;, Cdbl(Data)
  node.setAttribute &quot;FIO&quot;, FIO
  node.setAttribute &quot;KOMMENT&quot;, Komment
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;TP_Zayav_Ist&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;TP_Zayav_Ist&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;TP_Zayav_Ist&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;TP_Zayav_Ist&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;NO&quot; then
 select case child
end select
end if ' mode=&quot;NO&quot;
if mode=&quot;READ&quot; then
 select case child
end select
end if ' mode=&quot;READ&quot;
if mode=&quot;VIP&quot; then
 select case child
end select
end if ' mode=&quot;VIP&quot;
if mode=&quot;POL&quot; then
 select case child
end select
end if ' mode=&quot;POL&quot;
if mode=&quot;YING&quot; then
 select case child
end select
end if ' mode=&quot;YING&quot;
if mode=&quot;NISP&quot; then
 select case child
end select
end if ' mode=&quot;NISP&quot;
if mode=&quot;ALL&quot; then
 select case child
end select
end if ' mode=&quot;ALL&quot;
if mode=&quot;VSZT&quot; then
 select case child
end select
end if ' mode=&quot;VSZT&quot;
if mode=&quot;PROB&quot; then
 select case child
end select
end if ' mode=&quot;PROB&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="TP_Zayav_Ist_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел 
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;TP_Zayav_Ist&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;TP_Zayav_Ist.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as  TP_Zayav_Ist
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  TP_Zayav_Ist
 dim LID as  string
 dim o as  TP_Zayav_Ist
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  TP_Zayav_Ist
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as TP_Zayav_Ist
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as TP_Zayav_Ist
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as TP_Zayav_Ist
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as TP_Zayav_Ist
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as TP_Zayav_Ist
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as TP_Zayav_Ist
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_Zayav_Ist
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_Zayav_Ist
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as TP_Zayav_Ist
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  TP_Zayav_Ist
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;TP_Zayav_Ist.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As TP_Zayav_Ist
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As TP_Zayav_Ist
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!TP_Zayav_IstID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as TP_Zayav_Ist
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;TP_ZAYAV_IST_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;TP_ZAYAV_IST&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as TP_Zayav_Ist
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;TP_ZAYAV_IST&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Изменён статус&quot;, 0, 0, &quot;ImenStatys&quot;).SortType =1
  YGrid.Columns.Add(&quot;Дата и время изменения&quot;, 0, 0, &quot;Data&quot;).SortType =4
  YGrid.Columns.Add(&quot;Изменил(ФИО)&quot;, 0, 0, &quot;FIO&quot;).SortType =1
  YGrid.Columns.Add(&quot;Комментарий&quot;, 0, 0, &quot;Komment&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as TP_Zayav_Ist
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.ImenStatys, vbCrLf, &quot; &quot;), 255)
    Values.Value(2) = Left(Replace(obj.Data, vbCrLf, &quot; &quot;), 255)
    Values.Value(3) = Left(Replace(obj.FIO, vbCrLf, &quot; &quot;), 255)
    Values.Value(4) = Left(Replace(obj.Komment, vbCrLf, &quot; &quot;), 255)
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;TP_Zayav_Ist&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="TP_ZAY_MSG" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'строка раздела Сообщения
private m_ID as string
private m_SecureStyleID as string
private m_RowRetrived as boolean
private m_Changed as boolean
private m_Deleted as boolean
private m_RetriveTime as date
private m_ChangeTime as date
private m_AccessTime as date
private m_Parent as Object
private m_Application as Application
private m_TheDate as DATE
private m_TheUser as object
Dim m_TheUser_ID as string
Dim m_TheUser_ID_BRIEF as string
private m_TheMessage as STRING
private m_IsUrgent as enumBoolean
private m_Brief as string

'Сообщение об изменении строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public Event Change( byval fieldName as string, byval OldValue, byref NewValue)
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="

'Признак удаления
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Deleted
public property Get Deleted() as boolean
  Deleted = m_Deleted
end property

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Changed
public property Get Changed() as boolean
  Changed = m_Changed
end property

'Установить признак изменения
'Parameters:
'[IN][OUT]  newChanged , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Changed = value
friend property Let Changed(newChanged as boolean)
  m_Changed = newChanged
end property

'Задать идентификатор строки
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ID = value
friend property let ID(byval newID as string)
  if m_ID = &quot;&quot; then
    m_ID = newID
  end if
end property

'Идентификатор строки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ID
public property Get ID() as string
  if  m_ID=&quot;&quot; then m_ID= createguid2
  ID = m_ID
end property

'Задать стиль защиты
'Parameters:
'[IN]   newID , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. SecureStyleID = value
friend property let SecureStyleID(byval newID as string)
    m_SecureStyleID = newID
end property

'Стиль защиты
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. SecureStyleID
public property Get SecureStyleID() as string
  SecureStyleID = m_SecureStyleID
end property

'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PartName
public property Get PartName() as string
  PartName = &quot;TP_ZAY_MSG&quot;
end property

'Задать родительский объект
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property

'Получить родительский объект
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property

'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: Application  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as Application)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;TP_ZAY_MSG.Init&quot;
end property

'Корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
  set Application = m_Application
end property

'Разрушить иерархическую зависимость объектов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub

'Установить признак - считано из базы
'Parameters:
'[IN][OUT]  newRetrived , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RowRetrived = value
friend property Let RowRetrived(newRetrived as boolean)
  m_RowRetrived = newRetrived
end property

'получить признак - считано из базы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. RowRetrived
public property Get RowRetrived() as boolean
  RowRetrived = m_RowRetrived
end property

'Задать Дату и время считывания из базы
'Parameters:
'[IN][OUT]  newRetriveTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. RetriveTime = value
friend property Let RetriveTime(newRetriveTime as date)
  m_RetriveTime = newRetriveTime
end property

'Дата и время считывания из базы
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. RetriveTime
public property Get RetriveTime() as date
  RetriveTime = m_RetriveTime
end property

'Задать Дату и время изменения
'Parameters:
'[IN][OUT]  newChangeTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. ChangeTime = value
friend property Let ChangeTime(newChangeTime as date)
  m_ChangeTime = newChangeTime
end property

'Получить Дату и время изменения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. ChangeTime
public property Get ChangeTime() as date
 ChangeTime = m_ChangeTime
end property

'Задать время обращения
'Parameters:
'[IN][OUT]  newAccessTime , тип параметра: date  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. AccessTime = value
friend property Let AccessTime(newAccessTime as date)
  m_AccessTime = newAccessTime
  if m_AccessTime &lt;= m_RetriveTime then m_AccessTime = m_RetriveTime +0.001
end property

'Получить время обращения
'Parameters:
' параметров нет
'Returns:
'  значение типа date
'See Also:
'Example:
' dim variable as date
' variable = me. AccessTime
public property Get AccessTime() as date
  AccessTime = m_AccessTime
end property
private function  GetFromXML(ByVal XML as string, ByVal TagName as string) as string
  Dim res As String
  On Error GoTo err
  Dim XMLDoc As New DOMDocument
  Call XMLDoc.loadXML(XML)
  Dim Node As MSXML2.IXMLDOMNode
  For Each Node In XMLDoc.childNodes.item(0).childNodes
    If (UCase(Node.baseName) = &quot;BRIEF&quot;) Then
      res = Node.Text
      Exit For
    End If
  Next
err:
  GetFromXML = res
End function 
' let 
'Дата сообщения

'Дата сообщения
'Parameters:
'[IN]   newValue , тип параметра: DATE  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheDate(byval newValue as DATE)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheDate&quot;,TheDate,newvalue

   m_TheDate= newValue
end if
end property

'Дата сообщения
'Parameters:
' параметров нет
'Returns:
'  значение типа DATE
'See Also:
'Example:
' dim variable as DATE
' variable = me. TheDate
public property Get TheDate() as DATE
 LoadFromDatabase
 AccessTime=Now

   TheDate = m_TheDate
end property
' let 
'Пользователь

'Пользователь
'Parameters:
'[IN]   newValue , тип параметра: object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  set TheUser(byval newValue as object)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheUser&quot;,TheUser,newvalue
on error resume next
m_TheUser_ID=&quot;&quot;
m_TheUser_ID=newValue.id
'  set   m_TheUser= newValue
end if
end property

'Пользователь
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. TheUser
public property Get TheUser() as object
 LoadFromDatabase
 AccessTime=Now
dim tmp_TheUser as object
if  m_TheUser_ID&lt;&gt;&quot;&quot; then 
  set tmp_TheUser=Application.FindRowObject(&quot;Users&quot;,m_TheUser_ID)
  if tmp_TheUser is nothing then
    m_TheUser_ID_BRIEF = &quot;&quot; 
  else
    m_TheUser_ID_BRIEF = tmp_TheUser.Brief
  end if
  '''''' Speed optimization ONLY '''''''''
  Application.AddToCash &quot;Users&quot; &amp; m_TheUser_ID, tmp_TheUser
  set TheUser=tmp_TheUser
  exit property
end if
  '  set TheUser = m_TheUser
end property
' let 
'Сообщение

'Сообщение
'Parameters:
'[IN]   newValue , тип параметра: STRING  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let TheMessage(byval newValue as STRING)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;TheMessage&quot;,TheMessage,newvalue

   m_TheMessage= newValue
end if
end property

'Сообщение
'Parameters:
' параметров нет
'Returns:
'  значение типа STRING
'See Also:
'Example:
' dim variable as STRING
' variable = me. TheMessage
public property Get TheMessage() as STRING
 LoadFromDatabase
 AccessTime=Now

   TheMessage = m_TheMessage
end property
' let 
'Важное

'Важное
'Parameters:
'[IN]   newValue , тип параметра: enumBoolean  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
Public property  let IsUrgent(byval newValue as enumBoolean)
 LoadFromDatabase
if CanChange then
 ChangeTime=Now 
 Changed=true
 OnChange &quot;IsUrgent&quot;,IsUrgent,newvalue

   m_IsUrgent= newValue
end if
end property

'Важное
'Parameters:
' параметров нет
'Returns:
'  объект класса enumBoolean
'  ,или Nothing
'See Also:
'Example:
' dim variable as enumBoolean
' Set variable = me. IsUrgent
public property Get IsUrgent() as enumBoolean
 LoadFromDatabase
 AccessTime=Now

   IsUrgent = m_IsUrgent
end property

'Упаковать поля в именованную коллекцию
'Parameters:
'[IN][OUT]   nv , тип параметра: NamedValues  - ...
'See Also:
'Example:
'  call me.Pack({параметры})
public sub Pack(byref nv as NamedValues)
  dim nvi as NamedValue
  set nv = Nothing
  set nv = new NamedValues

  set nvi=nv.Add( &quot;TheDate&quot;,m_TheDate)
nvi.ValueType = adDBTimeStamp 
 ' Reference to Users
    if m_TheUser_ID=&quot;&quot;  then 
       set nvi=nv.Add (&quot;TheUser&quot;,&quot;&quot;)
    else 
       set nvi=nv.Add (&quot;TheUser&quot;,m_TheUser_ID)
    end if 
    nvi.ORACLE_GUID 
  set nvi=nv.Add( &quot;TheMessage&quot;,m_TheMessage)
  set nvi=nv.Add( &quot;IsUrgent&quot;,m_IsUrgent)
nvi.ValueType = adInteger 
end sub

'Краткое название строки
'Parameters:
'[IN]   UseServer , тип параметра: boolean = false  - ...
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Brief(...параметры...) 
public function  Brief( optional byval UseServer as boolean = false) as string
 dim s as string
 if Application.WorkOffline then

  m_BRIEF=&quot;&quot;
 m_BRIEF= m_BRIEF &amp; TheDate &amp; &quot;; &quot;
 BRIEF= m_BRIEF
 else
  on error goto bye
   if UseServer or m_Brief=&quot;&quot; then
     application.MTZSession.GetBrief PartName, ID, s
     if len(s) &gt; 255 then
       Brief  =  left(s,255) &amp; &quot;...&quot;
     else
       Brief  =  s
     end if
       m_Brief  =  Brief
   else
     Brief = m_Brief
   end if
 end if
exit function
bye:
    Brief = &quot;! доступ запрещен ! (&quot; &amp; err.description  &amp; &quot;)&quot; 
end function

'Распаковать значения полей из именованной коллекции
'Parameters:
'[IN][OUT]   nv , тип параметра: object  - ...
'See Also:
'Example:
'  call me.UnPack({параметры})
public sub UnPack(byref nv as object)
 on error resume next
if typename(nv) = &quot;NamedValues&quot; then

m_TheDate=nv.item( &quot;TheDate&quot;).Value
  m_TheUser_ID=nv.item( &quot;TheUser&quot;).Value
m_TheMessage=nv.item( &quot;TheMessage&quot;).Value
m_IsUrgent=nv.item( &quot;IsUrgent&quot;).Value
else

m_TheDate=nv.fields( &quot;TheDate&quot;).Value
  m_TheUser_ID=nv.fields( &quot;TheUser&quot;).Value
m_TheMessage=nv.fields( &quot;TheMessage&quot;).Value
m_IsUrgent=nv.fields( &quot;IsUrgent&quot;).Value
end if
end sub

'Очистить поля
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CleanFields()
Public Sub CleanFields()
   dim nv as namedvalues
   dim o as TP_ZAY_MSG
   set o = new TP_ZAY_MSG
   set o.Application = me.Application
   set o.parent = me.parent
   o.pack nv
   unpack nv
   set o = nothing
end sub

'Сохранить изменение
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Save() 
Public Function Save() as boolean
   LoadFromDatabase
   if Application.WorkOffline then exit function
   If Not CanChangeONLine Then Exit Function
   dim nv as namedvalues
   pack nv
   on error goto bye
     application.MTZSession.SaveRow2 PartName,  id,  me.Parent.Parent.id ,nv,application.id
   Changed = false
   Save = true
exit function
bye:
  err.raise err.number,&quot;TP_ZAY_MSG.Save&quot;,err.description
End Function

'Удалить строку
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.Delete() 
Public Function Delete() as boolean
   Dim i As Long, ok as boolean
if Application.WorkOffline then 
  If Not CanChangeOffLine Then Exit Function
   on error goto bye
  m_Deleted = True
  Delete = True
else
  If Not CanChangeONLine Then Exit Function
   Delete=application.MTZSession.DeleteRow2( PartName, id, Application.ID) 
   Changed = false
   'Compact
   Closeclass
end if
exit function
bye:
  err.raise err.number,&quot;TP_ZAY_MSG.Delete&quot;,err.description
End Function

'Задать стиль защиты
'Parameters:
'[IN]   SecurityStyleID , тип параметра: string  - ...
'See Also:
'Example:
'  call me.Secure({параметры})
public sub Secure(byval SecurityStyleID as string)
if application.WorkOffline then exit sub
On Error goto bye
  M_SecureStyleID =Application.MTZSession.Secure(&quot;TP_ZAY_MSG&quot; ,ID,SecurityStyleID)
exit sub
bye:
  err.raise err.number,&quot;TP_ZAY_MSG.Secure&quot;,err.description
end sub

'Распространить права на дочерние строки и разделы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Propagate()
public sub Propagate()
if application.WorkOffline then exit sub
  Application.MTZSession.Propagate &quot;TP_ZAY_MSG&quot;, ID
exit sub
bye:
  err.raise err.number,&quot;TP_ZAY_MSG.Propagate&quot;,err.description
end sub

'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next

 m_TheUser_ID=&quot;&quot;
 set m_TheUser= nothing
 if not Application is nothing then Application.Logger.Message &quot;TP_ZAY_MSG.CloseClass&quot;
 CloseParents
end sub

'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public sub Refresh()
    on error resume next
    RowRetrived = false 
    m_Brief =&quot;&quot;
End sub

'Загрузить из базы данных
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadFromDatabase ()
Public sub LoadFromDatabase () 
    on error resume next
   If ID=&quot;&quot; then exit sub
   If Application.WorkOffline then 
     RowRetrived = true
     RetriveTime = now
     exit sub
   end if
   dim rs as adodb.recordset
   If not RowRetrived then
     CleanFields
     set rs =application.MTZSession.GetRow( PartName, id)
     Unpack rs
     m_SecureStyleID = rs!SecurityStyleID
     RowRetrived = true
     RetriveTime = now
   end if
end sub

'Найти строку раздела в дочерних объектах
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object
 static inFindObject as boolean
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 if inFindObject then exit function
 inFindObject = true
 if StrID = PartName then 
   if InstID = ID then
     set m_FindObject=me
   end if
 end if

 set FindObject = m_findobject
 set m_FindObject = nothing
 inFindObject = false
end function

'Оптимизировать занятую объектом память
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 if not Changed then
   CleanFields
   RowRetrived = false
 end if

end sub

'Регистрация изменения значения строки
'Parameters:
'[IN]   fieldName , тип параметра: string, 
'[IN]   OldValue,, тип параметра: Variant 
'[IN][OUT]   NewValue, тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.OnChange({параметры})
friend sub OnChange(byval fieldName as string, byval OldValue, byref NewValue)
RaiseEvent Change(fieldname,OldValue,NewValue)
end sub



'Загрузить из формата XML
'Parameters:
'[IN][OUT]   node , тип параметра: IXMLDOMNode, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
public sub XMLLoad( node as IXMLDOMNode, optional byval LoadMode as integer=0)
  on error resume next
  Dim e_list As IXMLDOMNodeList
  Dim e_ As IXMLDOMNode
  if LoadMode &lt;&gt;2 then m_ID=node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
  m_Deleted=node.Attributes.getNamedItem(&quot;Deleted&quot;).nodeValue
  m_IsLocked=node.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  if m_IsLocked &gt;2 then m_IsLocked =0
  m_RetriveTime=node.Attributes.getNamedItem(&quot;RetriveTime&quot;).nodeValue
  m_ChangeTime=node.Attributes.getNamedItem(&quot;ChangeTime&quot;).nodeValue
  m_AccessTime=node.Attributes.getNamedItem(&quot;AccessTime&quot;).nodeValue
  if Application.workoffline and m_IsLocked = LockSession then m_IsLocked = NoLock
  Secure node.Attributes.getNamedItem(&quot;SECURITYSTYLEID&quot;).nodeValue
  TheDate=node.Attributes.getNamedItem(&quot;THEDATE&quot;).nodeValue
  set TheUser=nothing
  m_TheUser_ID=node.Attributes.getNamedItem(&quot;THEUSER&quot;).nodeValue
  m_TheUser_ID_BRIEF=node.Attributes.getNamedItem(&quot;THEUSER_BRIEF&quot;).nodeValue
  TheMessage=Replace(node.Attributes.getNamedItem(&quot;THEMESSAGE&quot;).nodeValue,vbLf,vbcrlf)
  IsUrgent=node.Attributes.getNamedItem(&quot;ISURGENT&quot;).nodeValue
  on error goto bye
  'if m_ChangeTime &gt;= m_RetriveTime then m_Changed = true
  m_Changed = true
  m_RowRetrived = true
  m_Brief = &quot;&quot;
  on error resume next
  exit sub
bye:
  debugoutput err.description
end sub


'Сохранить в формате XML
'Parameters:
'[IN][OUT]  node , тип параметра: IXMLDOMElement, 
'[IN][OUT]   xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
public sub XMLSave(node as IXMLDOMElement, xdom as DomDocument)
on error resume next
  Dim e_ As IXMLDOMElement
  LoadFromDatabase
  node.setAttribute &quot;ID&quot;, m_ID
  node.setAttribute &quot;Deleted&quot;, m_Deleted
  node.setAttribute &quot;IsLocked&quot;, m_IsLocked
  node.setAttribute &quot;RetriveTime&quot;, cdbl(m_RetriveTime)
  node.setAttribute &quot;ChangeTime&quot;, cdbl(m_ChangeTime)
  node.setAttribute &quot;SECURITYSTYLEID&quot;, m_SecureStyleID
  node.setAttribute &quot;THEDATE&quot;, Cdbl(TheDate)
  node.setAttribute &quot;THEUSER&quot;, m_TheUser_ID
  if not (TheUser is nothing) then 
    node.setAttribute &quot;THEUSER_BRIEF&quot;, TheUser.BRIEF
  else
    node.setAttribute &quot;THEUSER_BRIEF&quot;, m_TheUser_ID_BRIEF
  end if
  node.setAttribute &quot;THEMESSAGE&quot;, TheMessage
  node.setAttribute &quot;ISURGENT&quot;, IsUrgent
  node.setAttribute &quot;AccessTime&quot;, cdbl(m_AccessTime)
end sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;TP_ZAY_MSG&quot;, ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;TP_ZAY_MSG&quot;, ID, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;TP_ZAY_MSG&quot;, ID
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;TP_ZAY_MSG&quot;,ID)
end function

'Массовое обновление измененных строк
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
PUBLIC sub BatchUpdate()
If not Application.WorkOffline Then
  If Deleted Then
    Delete
    Exit Sub
  End If
  If Changed Then Save
End If
End sub

'Загрузить все данные документа из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
If not Application.WorkOffline Then
  LoadFromDatabase
End If
End sub


'Раскрытие раздела при выборе узла в глобальном дереве
'Parameters:
'[IN][OUT]  tree , тип параметра: object, 
'[IN]   key , тип параметра: string, 
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   optional Mask , тип параметра: string = &quot;&quot;  - ...
'See Also:
'Example:
'  call me.Expand({параметры})
public sub Expand(tree as object,byval key as string, byval mode as string, optional Mask as string = &quot;&quot;)
 dim id as string , struct as string, child as string
 dim item as object, i as long, nid as string, tmpid as string
 dim tidx as long, tid as string 'only for tree styled structure
 on error resume next
 id = mid(key,39,38)
 struct = right(tree.nodes.item(key).parent.parent.key,len(tree.nodes.item(key).parent.parent.key)-76)
 child = right(key,len(key)-76)
 if id&lt;&gt;m_id  then 
   exit sub
 else
    set item =me
 end if
 tree.nodes.item(key).sorted=true
if mode=&quot;NO&quot; then
 select case child
end select
end if ' mode=&quot;NO&quot;
if mode=&quot;READ&quot; then
 select case child
end select
end if ' mode=&quot;READ&quot;
if mode=&quot;VIP&quot; then
 select case child
end select
end if ' mode=&quot;VIP&quot;
if mode=&quot;POL&quot; then
 select case child
end select
end if ' mode=&quot;POL&quot;
if mode=&quot;YING&quot; then
 select case child
end select
end if ' mode=&quot;YING&quot;
if mode=&quot;NISP&quot; then
 select case child
end select
end if ' mode=&quot;NISP&quot;
if mode=&quot;ALL&quot; then
 select case child
end select
end if ' mode=&quot;ALL&quot;
if mode=&quot;VSZT&quot; then
 select case child
end select
end if ' mode=&quot;VSZT&quot;
if mode=&quot;PROB&quot; then
 select case child
end select
end if ' mode=&quot;PROB&quot;
if mode=&quot;&quot; then
 select case child
 end select
end if ' mode=&quot;&quot; (Default)
end sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="TP_ZAY_MSG_COL" File=""><AttributeHolder Name="Type" Value="class"/><AttributeHolder Name="Instancing" Value="publicnotcreatable"/><BlockHolder BlockName="declaration" BlockCode="'раздел Сообщения
dim mcol as SortableCollection
dim m_Parent as object
dim m_Application as Application
dim m_Filter as string
private m_IsLocked as  LockStyle

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="codebody" BlockCode="


'Название таблицы раздела
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. ChildPartName
Friend property Get ChildPartName() as string
  ChildPartName = &quot;TP_ZAY_MSG&quot;
end property


'Задать родительский объект в иерархии документа
'Parameters:
'[IN][OUT]  newParent , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Parent = value
friend property Set Parent(newParent as object)
  set m_Parent = newParent
end property


'Получить родительский объект в иерархии документа
'Parameters:
' параметров нет
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me. Parent
public property Get Parent() as object
  set Parent = m_Parent
end property


'Задать корневой объект
'Parameters:
'[IN][OUT]  newApplication , тип параметра: object  - ...
'See Also:
'Example:
' dim value as Variant
' set value = new Variant
' set me. Application = value
friend property Set Application(newApplication as object)
  set m_Application = newApplication
  m_Application.Logger.Message  &quot;TP_ZAY_MSG.Init&quot;
end property


'Получить корневой объект
'Parameters:
' параметров нет
'Returns:
'  объект класса Application
'  ,или Nothing
'See Also:
'Example:
' dim variable as Application
' Set variable = me. Application
public property Get Application() as Application
 if m_Parent is nothing then
    set Application = me
  else
    set Application = m_Application
  end if
end property


'Задать дополнительный фильтр коллекции
'Parameters:
'[IN]   newFilter , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Filter = value
public property Let Filter(byval newFilter as string)
  m_Filter = newFilter
  Refresh
end property


'Получить значение фильтра
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Filter
public property Get Filter() as string
    Filter = m_Filter
end property


'Разрушить иерархическую связку с родительскими объектами
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseParents()
private sub CloseParents()
  set m_Application = nothing
  set m_Parent = nothing
end sub


'Добавить строку в раздел (но не в базу данных)
'Parameters:
'[IN][OUT]   ID , тип параметра: string=&quot;&quot;  - ...
'Returns:
'  объект класса  TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as  TP_ZAY_MSG
' Set variable = me.Add(...параметры...)
Public function Add(optional ID as string=&quot;&quot;) as  TP_ZAY_MSG
 dim LID as  string
 dim o as  TP_ZAY_MSG
 if ID=&quot;&quot; then 
   LID = createguid2() 
 else 
   LID = left(ID,38) 
 endif  
 on error resume next  
 if mcol.count &gt; 0  then  
   if mcol.item(Lid) is nothing  then  
   goto addnew  
   else
     set Add = mcol.Item( LID)
     exit function
   end if
 end if
 addnew: 
  set o = new  TP_ZAY_MSG
  o.ID =LID
  o.RowRetrived = False
  Set o.Parent = Me
  Set o.Application = Me.Application
  me.application.AddToCash childPartName &amp; lid , o
  set add = o
  mcol.AddItem o,o.ID
  set  o = nothing
end function


'Получить строку раздела
'Parameters:
'[IN]   ID , тип параметра: variant  - ...
'Returns:
'  объект класса TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG
' Set variable = me.Item(...параметры...)
Public function Item(byval ID as variant) as TP_ZAY_MSG
Attribute Item.VB_MemberFlags = &quot;200&quot;
 on error resume next  
 dim o as TP_ZAY_MSG
 If Not mCol.Item(ID) Is Nothing Then
   Set o = mCol.Item(ID)
   set Item = o
   set  o = nothing
   exit function
 end if
end function


'Найти строку по идентификатору в дочерней иерархии
'Parameters:
'[IN]   StrID , тип параметра: string, 
'[IN]   InstID , тип параметра: string  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindObject(...параметры...)
public function FindObject(byval StrID as string, byval InstID as string) as object
 dim m_FindObject as object,  i as long
 if StrID = &quot;&quot; then exit function
 if InstID = &quot;&quot; then exit function
 If Not application.MTZSession.IsDescendant(StrID, ChildPartName) Then Exit Function
 if StrID = ChildPartName then 
   set m_FindObject = Item(Instid)
   if  not  m_FindObject is nothing then goto OK
 end if
 for i = 1 to Count
   set m_FindObject = Item(i).FindObject(StrID,InstID)
   if  not  m_FindObject is nothing then exit for
 next
 OK:
 set FindObject = m_findobject
 set m_FindObject = nothing
end function


'Оптимизировать использование памяти
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Compact()
public sub Compact()
 dim  i as long
 for i = 1 to Count
   Item(i).Compact
 next
end sub

'Задать поле по которому будем сортировать
'Parameters:
'[IN]   Name , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Sort = value
public property let Sort(byval Name as string)
 mcol.Sort name 
end property

'Получить значения поля - основы сортировки
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. Sort
public property get Sort() as string
 Sort = mcol.sortname 
end property


'Получить строку в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG
' Set variable = me.GetEQ(...параметры...)
Public function GetEQ(byval Value as variant) as TP_ZAY_MSG
   set GetEQ = mcol.getEQ(Value)
end function


'Получить строку в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG
' Set variable = me.GetLE(...параметры...)
Public function GetLE(byval Value as variant) as TP_ZAY_MSG
   set GetLE = mcol.getLE(Value)
end function


'Получить строку в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG
' Set variable = me.GetLT(...параметры...)
Public function GetLT(byval Value as variant) as TP_ZAY_MSG
   set GetLT = mcol.getLT(Value)
end function


'Получить строку в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG
' Set variable = me.GetGE(...параметры...)
Public function GetGE(byval Value as variant) as TP_ZAY_MSG
   set GetGE = mcol.getGE(Value)
end function


'Получить строку в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса TP_ZAY_MSG
'  ,или Nothing
'See Also:
'Example:
' dim variable as TP_ZAY_MSG
' Set variable = me.GetGT(...параметры...)
Public function GetGT(byval Value as variant) as TP_ZAY_MSG
   set GetGT = mcol.getGT(Value)
end function


'Получить номер строки в кот. поле сортировки равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetEQPos(...параметры...)
Public function GetEQPos(byval Value as variant) as  long
   GetEQPos = mcol.getEQpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLEPos(...параметры...)
Public function GetLEPos(byval Value as variant) as  long
   GetLEPos = mcol.getLEpos(Value)
end function


'Получить номер строки в кот. поле сортировки меньше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetLTPos(...параметры...)
Public function GetLTPos(byval Value as variant) as  long
   GetLTPos = mcol.getLTpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше или равно значению
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGEPos(...параметры...)
Public function GetGEPos(byval Value as variant) as  long
   GetGEPos = mcol.getGEpos(Value)
end function


'Получить номер строки в кот. поле сортировки больше значения
'Parameters:
'[IN]   Value , тип параметра: variant  - ...
'Returns:
'  объект класса  long
'  ,или Nothing
'See Also:
'Example:
' dim variable as  long
' Set variable = me.GetGTPos(...параметры...)
Public function GetGTPos(byval Value as variant) as  long
   GetGTPos = mcol.getGTpos(Value)
end function


'Деструктор
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Friend sub CloseClass()
 on error resume next  
 dim i as long  
 dim o as  TP_ZAY_MSG
    For i = 1 To mcol.Count
       Set o = mcol.Item(i)
        o.CloseClass
    Next
 if not Application is nothing then Application.Logger.Message &quot;TP_ZAY_MSG.CloseClass&quot;
 CloseParents
 set mcol = nothing
end sub


'Инициализация коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 set mcol = new SortableCollection
End Sub


'Количетсво строк в коллекции
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. Count
Public Property Get Count() As Long
    count = mCol.count
End Property


'Удалить строку из коллекции
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.Remove({параметры})
public Sub Remove(byval vntIndexKey As Variant)
    on error resume next 
    me.application.RemoveFromCash childPartName &amp; item(vntIndexKey).id 
    mCol.Remove vntIndexKey
End Sub


'Сохранить изменения в строке
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Update(...параметры...) 
Public Function Update(byval vntIndexKey As Variant) as boolean
 if not Item(vntIndexKey) is nothing then 
   Update = Item(vntIndexKey).Save 
 else
   Update = false
 end if
End Function


'Удалить строку
'Parameters:
'[IN]   vntIndexKey , тип параметра: Variant  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.Delete(...параметры...) 
Public Function Delete(byval vntIndexKey As Variant) as boolean
on error goto bye
Dim o As TP_ZAY_MSG
Set o = item(vntIndexKey)
If o Is Nothing Then Exit Function
If o.Delete Then
  Delete = True
  mcol.Remove vntIndexKey
End If
Exit Function
bye:
Err.Raise Err.Number, &quot;Delete&quot;, Err.Description
End Function


'Обновить
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Refresh()
Public Sub Refresh()
    On Error Resume Next
    Dim mcol2  As SortableCollection
    Set mcol2 = mcol
    Set mcol = Nothing
    Set mcol = New SortableCollection
    Dim rs As ADODB.recordset
    if application.WorkOffline then exit sub
    Dim o As TP_ZAY_MSG
    dim tmpParent as object
    dim tID as string
    dim SSID as string
    dim rtime as date
    rtime =Now
    rtime =application.MTZSession.GetServertime()
    if application.AutoLoadPart then
    set rs =application.MTZSession.GetRows( ChildPartName, Parent.id,,Filter)
    else
    set rs =application.MTZSession.GetIDs( ChildPartName, Parent.id,,Filter)
    end if
    If mcol2 Is Nothing Then Set mcol2 = New SortableCollection
    dim idx as long
    if not rs is nothing then ' wrong database structure
    while not rs.eof
      if application.AutoLoadPart then
        tID = rs!TP_ZAY_MSGID
      else
        tid=rs!id
      end if
      on error resume next
      SSid=rs!SecurityStyleID &amp; &quot;&quot; 
      If mcol2.Item(tID) Is Nothing Then
        Set o = Add(tID)
        if application.AutoLoadPart then
          o.unpack rs
          o.RowRetrived = True
          o.RetriveTime = rtime
        end if
      Else
        Set o = mcol2.Item(tID)
        If o.RowRetrived Then
          If o.RetriveTime &lt; rs!ChangeStamp Then
             if application.AutoLoadPart then
               o.CleanFields
               o.unpack rs
               o.RetriveTime = rtime
             else
               o.RowRetrived = False
             end if
          End If
        else
          if application.AutoLoadPart then
            o.CleanFields
            o.unpack rs
            o.RetriveTime = rtime
          end if
        End If
        mcol.AddItem o, tID
        mcol2.Remove tID
      End If
      o.SecureStyleID = SSID
    rs.MoveNext
    wend
    end if ' rs is nothing
    For idx = 1 To mcol2.Count
       Set o = mcol2.Item(idx)
       o.CloseClass
    Next
    Set mcol2 = Nothing
End Sub

'Сохранить данные в структуре XML
'Parameters:
'[IN][OUT]   ParentNode , тип параметра: IXMLDOMElement, 
'[IN][OUT]   Xdom , тип параметра: DomDocument  - ...
'See Also:
'Example:
'  call me.XMLSave({параметры})
Public Sub XMLSave(byref ParentNode as IXMLDOMElement, Xdom as DomDocument) 
  dim o as TP_ZAY_MSG
  dim i as long
  dim pnode as IXMLDOMElement
  set pnode = xdom.CreateElement(&quot;TP_ZAY_MSG_COL&quot;)
  pnode.setAttribute &quot;IsLocked&quot;, m_IsLocked
  dim node as IXMLDOMElement
  ParentNode.appendChild pnode
  for i=1 to count
    set o = item(i)
    set node = xdom.CreateElement(&quot;TP_ZAY_MSG&quot;)
    Pnode.appendChild node
    o.XmlSave node, xdom
  next
End sub


'Загрузить данные из XML
'Parameters:
'[IN][OUT]   NodeList , тип параметра: IXMLDOMnodeList, 
'[IN]   LoadMode , тип параметра: integer=0  - ...
'See Also:
'Example:
'  call me.XMLLoad({параметры})
Public Sub XMLLoad(byref NodeList as IXMLDOMnodeList, optional byval LoadMode as integer=0)
  on error resume next
  dim o as TP_ZAY_MSG
  dim node as IXMLDOMElement
  dim pnode as IXMLDOMElement
  NodeList.Reset
  set pnode = NodeList.NextNode
  m_IsLocked=pnode.Attributes.getNamedItem(&quot;IsLocked&quot;).nodeValue
  Set NodeList = pnode.selectNodes(&quot;TP_ZAY_MSG&quot;)
  dim bufcol as collection
  if loadmode =1  then
    set bufcol = new collection
  end if
  set node = NodeList.NextNode
  While not node is nothing
    ' append mode
    if loadmode =0  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
    end if
    ' replace mode
    if loadmode =1  then
      if item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue) is nothing  then
        Add(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      else
        Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue).xmlload node, loadmode
      end if
      bufcol.add Item(node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue),node.Attributes.getNamedItem(&quot;ID&quot;).nodeValue
    end if
    ' copy with new ID mode
    if loadmode =2  then
        Add().xmlload node, loadmode
    end if
    set node = NodeList.NextNode
  wend
    ' remove extra items from collection
  if loadmode =1  then
    dim i as long
    ' remove existing
    removeAgain:
    for i=1 to count
      if bufcol.item(item(i).id) is nothing then
        Delete item(i).id
        goto removeAgain
      end if
    next
    set bufcol = nothing
  end if
End sub

'может ли быть изменено
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChange
public property Get CanChange() as boolean
   if application.workoffline then
     CanChange =  CanChangeoffLine 
   else  
     CanChange =  canchangeonline
   end if
end property

'может ли быть изменено в режиме Offline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeOffline
public property Get CanChangeOffline() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeOffline
  end if
  if not test  then 
   test = (IsLocked = LockPermanent)
  end if
   CanChangeOffline = test
end property

'может ли быть изменено в режиме ONline
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. CanChangeONLine
public property Get CanChangeONLine() as boolean
  dim test as boolean
  if not parent is nothing then
   test = parent.CanChangeONLine
  end if
  if  not test then 
   test = (IsLocked &lt; ExternalLockSession)
  end if
   CanChangeOnline = test
end property

'Задать тип блокировки
'Parameters:
'[IN][OUT]  newIsLocked , тип параметра: LockStyle  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. IsLocked = value
friend property Let IsLocked(newIsLocked as LockStyle)
  m_IsLocked = newIsLocked
end property

'Текущий тип блокировки
'Parameters:
' параметров нет
'Returns:
'  объект класса LockStyle
'  ,или Nothing
'See Also:
'Example:
' dim variable as LockStyle
' Set variable = me. IsLocked
public property Get IsLocked() as LockStyle
  if m_IsLocked &lt;&gt; LockSession and m_IsLocked &lt;&gt; LockPermanent then CheckLock
  IsLocked = m_IsLocked
end property

'Проверить блокировку
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckLock()
private sub CheckLock()
static LastCheckTime as date
if application.WorkOffline then exit sub
If Now - LastCheckTime &lt; CDbl(CDate(&quot;00:00:10&quot;)) Then Exit Sub
On Error Resume Next
m_IsLocked = Application.MTZSession.IsLocked(&quot;INSTANCE&quot;, parent.ID)
LastCheckTime = now
end sub

'Заблокировать
'Parameters:
'[IN]   Permanent , тип параметра: boolean=false   - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me.LockResource(...параметры...) 
public function LockResource(optional byval Permanent as boolean=false ) as boolean
if application.WorkOffline then exit function
  dim OK 
ok = Application.MTZSession.LockResource(&quot;INSTANCE&quot;, parent.id, Permanent)
  if OK then  
    if Permanent then m_IsLocked = LockPermanent else m_IsLocked = LockSession
  else
    m_IsLocked = NoLock
  end if
bye:
end function

'Снять блокировку ресурса
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.UnLockResource() 
public function UnLockResource() as boolean
if application.WorkOffline then exit function
On Error GoTo bye
Application.MTZSession.UnlockResource &quot;INSTANCE&quot;, parent.id
m_IsLocked = NoLock
bye:
end function

'Возможно блокирование
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.CanLock() 
public function CanLock() as boolean
if application.WorkOffline then exit function
On Error Resume Next
CanLock = Application.MTZSession.CanLock(&quot;INSTANCE&quot;, parent.ID)
end function



'Настройка грида на вывод раздела
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object  - ...
'See Also:
'Example:
'  call me.PrepareGrid({параметры})
public sub PrepareGrid(YGrid as object)
YGrid.ItemCount = 0
YGrid.Groups.Clear 
YGrid.SortKeys.Clear
YGrid.Columns.Clear
  YGrid.Columns.Add(&quot;Дата сообщения&quot;, 0, 0, &quot;TheDate&quot;).SortType =4
  YGrid.Columns.Add(&quot;Пользователь&quot;, 0, 0, &quot;TheUser&quot;).SortType =1
  YGrid.Columns.Add(&quot;Сообщение&quot;, 0, 0, &quot;TheMessage&quot;).SortType =1
  YGrid.Columns.Add(&quot;Важное&quot;, 0, 0, &quot;IsUrgent&quot;).SortType =1
YGrid.ItemCount = count
end sub


'Чтение данных строки раздела в грид
'Parameters:
'[IN][OUT]  YGrid , тип параметра: object, 
'[IN]   RowIndex , тип параметра: Long, 
'[IN]   Bookmark , тип параметра: Variant, 
'[IN][OUT]    Values , тип параметра: Variant  - ...
'See Also:
'Example:
'  call me.LoadRow({параметры})
public sub LoadRow(YGrid as object, ByVal RowIndex As Long, ByVal Bookmark As Variant,  Values )
 dim obj as TP_ZAY_MSG
  If RowIndex &gt; 0 And RowIndex &lt;= Count Then
    'If not IsEmpty(BookMArk) then
    '  set obj = item(left(bookmark,38))
    'else
      set obj = item(rowindex)
    'end If
    if obj is nothing then exit sub
    on error resume next
    Values.Value(1) = Left(Replace(obj.TheDate, vbCrLf, &quot; &quot;), 255)
   if obj.TheUser is nothing then
    Values.Value(2) = &quot;Не задано&quot;
   else 
    Values.Value(2) = Left(Replace(obj.TheUser.brief, vbCrLf, &quot; &quot;), 255)
   end if 
    Values.Value(3) = Left(Replace(obj.TheMessage, vbCrLf, &quot; &quot;), 255)
   if obj.IsUrgent =-1 then
     Values.Value(4) = &quot;Да&quot;
   end if
   if obj.IsUrgent =0 then
     Values.Value(4) = &quot;Нет&quot;
   end if
   YGRID.RowBookmark(RowIndex) =  obj.id &amp; &quot;TP_ZAY_MSG&quot;
  End If 'RowIndex
end sub

'Массовое обновление измененных строк коллекции
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.BatchUpdate()
friend sub BatchUpdate()
 on error goto bye
If not Application.WorkOffline Then
 dim i as long
 again: 
 for i=1 to count 
    If item(i) Is Nothing Then Exit For
    If item(i).Deleted Then
      If Delete(i) Then GoTo again
    Else
      on error resume next
      item(i).BatchUpdate
      on error goto bye
    End If
 next
End If
bye:
End sub

'Загрузка данных из базы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.LoadAll()
friend sub LoadAll()
on error goto bye
If not Application.WorkOffline Then
 dim i as long
 Refresh
 for i=1 to count 
     item(i).LoadAll
 next
End If
bye:
End sub

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
