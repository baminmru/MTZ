<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Инсталляция"/><AttributeHolder Name="Name" Value="MTZ_InstallGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="' основной интерфейс компонента MTZ_InstallGUI
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Конструктор класса MTZ_Install
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Инсталляция&quot;
End Sub


'Деструктор класса
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Terminate()
Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub

'Очистка обратных ссылок
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub

'Поиск формы редактирования
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindForm(...параметры...)
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function

'Путь к текущей библиотеке
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.GUIPath() 
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function

'Количество открытых форм
'Parameters:
'[IN]   InstanceID , тип параметра: String  - ...
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me.FormCount(...параметры...) 
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function

'Очистить форму
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String, 
'[IN]   ModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.EraseForm({параметры})
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub

'Указатель модального режима работы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. IsModal
public property get IsModal() as boolean
 IsModal = mOpenModal
end property

'Показать форму редактирования документа
'Parameters:
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   optional OpenModal , тип параметра: boolean = false  - ...
'See Also:
'Example:
'  call me.Show({параметры})
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Инсталляция)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;MTZ_Install:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Инсталляция&quot; 
  end if
end if
if OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;MTZ_Install:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Инсталляция&quot; 
  end if
end if
end sub

'Покзать форму редактирования строки раздела. RowItem -  объект строка, уже должен быть создан
'Parameters:
'[IN]   Mode , тип параметра: String, 
'[IN][OUT]   RowItem , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.ShowAddForm(...параметры...) 
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;MTZ_INST_BUILD&quot; Then
    Set f = New frmMTZ_Inst_Build_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;MTZ_INST_BUILD_SEC&quot; Then
    Set f = New frmMTZ_Inst_Build_Sec_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;MTZ_INST_SECTION&quot; Then
    Set f = New frmMTZ_Inst_Section_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;MTZ_INST_SEC_FILES&quot; Then
    Set f = New frmMTZ_Inst_Sec_Files_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;MTZ_INST_COMMON&quot; Then
    Set f = New frmMTZ_Inst_Common_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="MTZ_Inst_Build" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPRODUCT_NAME"/><Properties Name="Caption" PropValue="PRODUCT_NAME:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPRODUCT_NAME"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="PRODUCT_NAME"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPRODUCT_VERSION"/><Properties Name="Caption" PropValue="PRODUCT_VERSION:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPRODUCT_VERSION"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="PRODUCT_VERSION"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPRODUCT_PUBLISHER"/><Properties Name="Caption" PropValue="PRODUCT_PUBLISHER:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPRODUCT_PUBLISHER"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="PRODUCT_PUBLISHER"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPRODUCT_WEB_SITE"/><Properties Name="Caption" PropValue="PRODUCT_WEB_SITE:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPRODUCT_WEB_SITE"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="PRODUCT_WEB_SITE"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLicensFilePath"/><Properties Name="Caption" PropValue="Файл с лицензионным соглашением:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtLicensFilePath"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="2048"/><Properties Name="ToolTipText" PropValue="Файл с лицензионным соглашением"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblMainFileRef"/><Properties Name="Caption" PropValue="Главный файл:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtMainFileRef"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Главный файл"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdMainFileRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Главный файл"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblInstallDir"/><Properties Name="Caption" PropValue="InstallDir:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtInstallDir"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1024"/><Properties Name="ToolTipText" PropValue="InstallDir"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblShortCutDir"/><Properties Name="Caption" PropValue="ShortCutDir:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtShortCutDir"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ShortCutDir"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtPRODUCT_NAME_Change()
  Changing

end sub
private sub txtPRODUCT_VERSION_Change()
  Changing

end sub
private sub txtPRODUCT_PUBLISHER_Change()
  Changing

end sub
private sub txtPRODUCT_WEB_SITE_Change()
  Changing

end sub
private sub txtLicensFilePath_Change()
  Changing

end sub
private sub txtMainFileRef_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdMainFileRef_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZ_Inst_Sec_Files&quot;, id, brief) Then
          txtMainFileRef.Tag = Left(id, 38)
          txtMainFileRef = brief
        End If
end sub
private sub cmdMainFileRef_MenuClick(ByVal sCaption As String)
          txtMainFileRef.Tag = &quot;&quot;
          txtMainFileRef = &quot;&quot;
End sub
private sub txtInstallDir_Change()
  Changing

end sub
private sub txtShortCutDir_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtPRODUCT_NAME.text)
if mIsOK then mIsOK =IsSet(txtPRODUCT_VERSION.text)
if mIsOK then mIsOK =IsSet(txtPRODUCT_PUBLISHER.text)
if mIsOK then mIsOK =IsSet(txtPRODUCT_WEB_SITE.text)
if mIsOK then mIsOK =IsSet(txtLicensFilePath.text)
if mIsOK then mIsOK =IsSet(txtInstallDir.text)
if mIsOK then mIsOK =IsSet(txtShortCutDir.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtPRODUCT_NAME = item.PRODUCT_NAME
  on error resume next
txtPRODUCT_VERSION = item.PRODUCT_VERSION
  on error resume next
txtPRODUCT_PUBLISHER = item.PRODUCT_PUBLISHER
  on error resume next
txtPRODUCT_WEB_SITE = item.PRODUCT_WEB_SITE
  on error resume next
txtLicensFilePath = item.LicensFilePath
If Not item.MainFileRef Is Nothing Then
  txtMainFileRef.Tag = item.MainFileRef.id
  txtMainFileRef = item.MainFileRef.brief
else
  txtMainFileRef.Tag = &quot;&quot; 
  txtMainFileRef = &quot;&quot; 
End If
 LoadBtnPictures cmdMainFileRef,cmdMainFileRef.tag
  cmdMainFileRef.RemoveAllMenu
  cmdMainFileRef.AddMenu &quot;Очистить&quot; 
  on error resume next
txtInstallDir = item.InstallDir
  on error resume next
txtShortCutDir = item.ShortCutDir
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.PRODUCT_NAME = txtPRODUCT_NAME
item.PRODUCT_VERSION = txtPRODUCT_VERSION
item.PRODUCT_PUBLISHER = txtPRODUCT_PUBLISHER
item.PRODUCT_WEB_SITE = txtPRODUCT_WEB_SITE
item.LicensFilePath = txtLicensFilePath
If txtMainFileRef.Tag &lt;&gt; &quot;&quot; Then
  Set item.MainFileRef = Item.Application.FindRowObject(&quot;MTZ_Inst_Sec_Files&quot;,txtMainFileRef.Tag)
Else
  Set item.MainFileRef = Nothing
End If
item.InstallDir = txtInstallDir
item.ShortCutDir = txtShortCutDir
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="MTZ_Inst_Build_Sec" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheSection"/><Properties Name="Caption" PropValue="Секция:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheSection"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Секция"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheSection"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Секция"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDescription"/><Properties Name="Caption" PropValue="Комментарий:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDescription"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Комментарий"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsRewriteSectionDesc"/><Properties Name="Caption" PropValue="Перезаписывать комментарий секции:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsRewriteSectionDesc"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Перезаписывать комментарий секции"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSEQ"/><Properties Name="Caption" PropValue="Порядок (от 1 до ...):"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSEQ"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Порядок (от 1 до ...)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheSection_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheSection_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZ_Inst_Section&quot;, id, brief) Then
          txtTheSection.Tag = Left(id, 38)
          txtTheSection = brief
        End If
end sub
private sub cmdTheSection_MenuClick(ByVal sCaption As String)
          txtTheSection.Tag = &quot;&quot;
          txtTheSection = &quot;&quot;
End sub
private sub txtTheDescription_Change()
  Changing

end sub
private sub cmbIsRewriteSectionDesc_Click()
  on error resume next
  Changing

end sub
private sub txtSEQ_Validate(cancel as boolean)
if txtSEQ.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtSEQ.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSEQ.SetFocus 
  elseif Val(txtSEQ.text) &lt;&gt;clng(Val(txtSEQ.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSEQ.SetFocus 
  end if
end if
end sub
Private Sub txtSEQ_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtSEQ_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtTheSection.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbIsRewriteSectionDesc.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(txtSEQ.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.TheSection Is Nothing Then
  txtTheSection.Tag = item.TheSection.id
  txtTheSection = item.TheSection.brief
else
  txtTheSection.Tag = &quot;&quot; 
  txtTheSection = &quot;&quot; 
End If
 LoadBtnPictures cmdTheSection,cmdTheSection.tag
  cmdTheSection.RemoveAllMenu
  cmdTheSection.AddMenu &quot;Очистить&quot; 
  on error resume next
txtTheDescription = item.TheDescription
cmbIsRewriteSectionDesc.Clear
cmbIsRewriteSectionDesc.additem &quot;Да&quot;
cmbIsRewriteSectionDesc.itemdata(cmbIsRewriteSectionDesc.newindex)= 1
cmbIsRewriteSectionDesc.additem &quot;Нет&quot;
cmbIsRewriteSectionDesc.itemdata(cmbIsRewriteSectionDesc.newindex)= 0
 For iii = 0 To cmbIsRewriteSectionDesc.ListCount-1
  If Item.IsRewriteSectionDesc = cmbIsRewriteSectionDesc.ItemData(iii) Then
   cmbIsRewriteSectionDesc.ListIndex = iii
   Exit For
  End If
 Next
txtSEQ = item.SEQ
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtTheSection.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheSection = Item.Application.FindRowObject(&quot;MTZ_Inst_Section&quot;,txtTheSection.Tag)
Else
  Set item.TheSection = Nothing
End If
item.TheDescription = txtTheDescription
 if cmbIsRewriteSectionDesc.listindex&gt;=0 then
   item.IsRewriteSectionDesc = cmbIsRewriteSectionDesc.itemdata(cmbIsRewriteSectionDesc.listindex)
 end if
item.SEQ = cdbl(txtSEQ)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="MTZ_Inst_Section" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheName"/><Properties Name="Caption" PropValue="Название (Eng):"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название (Eng)"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsVisible"/><Properties Name="Caption" PropValue="Видимая:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsVisible"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Видимая"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheDescription"/><Properties Name="Caption" PropValue="Комментарий (ToolTip):"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheDescription"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="2048"/><Properties Name="ToolTipText" PropValue="Комментарий (ToolTip)"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsNotDeletable"/><Properties Name="Caption" PropValue="Обязательная:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsNotDeletable"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательная"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheTargetPlatform"/><Properties Name="Caption" PropValue="Целевая платформа:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbTheTargetPlatform"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Целевая платформа"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCustomSection"/><Properties Name="Caption" PropValue="Custom Section:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCustomSection"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Custom Section"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCustomSectionInstall"/><Properties Name="Caption" PropValue="Custom Section Install:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCustomSectionInstall"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Custom Section Install"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCustomSectionInstall"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Custom Section Install"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCustomSectionUnInstall"/><Properties Name="Caption" PropValue="Custom Section UnInstall:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCustomSectionUnInstall"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Custom Section UnInstall"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCustomSectionUnInstall"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="5340"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Custom Section UnInstall"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheName_Change()
  Changing

end sub
private sub cmbIsVisible_Click()
  on error resume next
  Changing

end sub
private sub txtTheDescription_Change()
  Changing

end sub
private sub cmbIsNotDeletable_Click()
  on error resume next
  Changing

end sub
private sub cmbTheTargetPlatform_Click()
  on error resume next
  Changing

end sub
private sub cmbIsCustomSection_Click()
  on error resume next
  Changing

end sub
private sub txtCustomSectionInstall_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCustomSectionInstall_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZ_Inst_Common&quot;, id, brief) Then
          txtCustomSectionInstall.Tag = Left(id, 38)
          txtCustomSectionInstall = brief
        End If
end sub
private sub cmdCustomSectionInstall_MenuClick(ByVal sCaption As String)
          txtCustomSectionInstall.Tag = &quot;&quot;
          txtCustomSectionInstall = &quot;&quot;
End sub
private sub txtCustomSectionUnInstall_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCustomSectionUnInstall_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZ_Inst_Common&quot;, id, brief) Then
          txtCustomSectionUnInstall.Tag = Left(id, 38)
          txtCustomSectionUnInstall = brief
        End If
end sub
private sub cmdCustomSectionUnInstall_MenuClick(ByVal sCaption As String)
          txtCustomSectionUnInstall.Tag = &quot;&quot;
          txtCustomSectionUnInstall = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTheName.text)
if mIsOK then mIsOK =(cmbIsVisible.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtTheDescription.text)
if mIsOK then mIsOK =(cmbIsNotDeletable.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbTheTargetPlatform.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbIsCustomSection.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheName = item.TheName
cmbIsVisible.Clear
cmbIsVisible.additem &quot;Да&quot;
cmbIsVisible.itemdata(cmbIsVisible.newindex)= 1
cmbIsVisible.additem &quot;Нет&quot;
cmbIsVisible.itemdata(cmbIsVisible.newindex)= 0
 For iii = 0 To cmbIsVisible.ListCount-1
  If Item.IsVisible = cmbIsVisible.ItemData(iii) Then
   cmbIsVisible.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtTheDescription = item.TheDescription
cmbIsNotDeletable.Clear
cmbIsNotDeletable.additem &quot;Да&quot;
cmbIsNotDeletable.itemdata(cmbIsNotDeletable.newindex)= 1
cmbIsNotDeletable.additem &quot;Нет&quot;
cmbIsNotDeletable.itemdata(cmbIsNotDeletable.newindex)= 0
 For iii = 0 To cmbIsNotDeletable.ListCount-1
  If Item.IsNotDeletable = cmbIsNotDeletable.ItemData(iii) Then
   cmbIsNotDeletable.ListIndex = iii
   Exit For
  End If
 Next
cmbTheTargetPlatform.Clear
cmbTheTargetPlatform.additem &quot;JAVA&quot;
cmbTheTargetPlatform.itemdata(cmbTheTargetPlatform.newindex)= 2
cmbTheTargetPlatform.additem &quot;OTHER&quot;
cmbTheTargetPlatform.itemdata(cmbTheTargetPlatform.newindex)= 3
cmbTheTargetPlatform.additem &quot;DOTNET&quot;
cmbTheTargetPlatform.itemdata(cmbTheTargetPlatform.newindex)= 1
cmbTheTargetPlatform.additem &quot;VB6&quot;
cmbTheTargetPlatform.itemdata(cmbTheTargetPlatform.newindex)= 0
 For iii = 0 To cmbTheTargetPlatform.ListCount-1
  If Item.TheTargetPlatform = cmbTheTargetPlatform.ItemData(iii) Then
   cmbTheTargetPlatform.ListIndex = iii
   Exit For
  End If
 Next
cmbIsCustomSection.Clear
cmbIsCustomSection.additem &quot;Да&quot;
cmbIsCustomSection.itemdata(cmbIsCustomSection.newindex)= 1
cmbIsCustomSection.additem &quot;Нет&quot;
cmbIsCustomSection.itemdata(cmbIsCustomSection.newindex)= 0
 For iii = 0 To cmbIsCustomSection.ListCount-1
  If Item.IsCustomSection = cmbIsCustomSection.ItemData(iii) Then
   cmbIsCustomSection.ListIndex = iii
   Exit For
  End If
 Next
If Not item.CustomSectionInstall Is Nothing Then
  txtCustomSectionInstall.Tag = item.CustomSectionInstall.id
  txtCustomSectionInstall = item.CustomSectionInstall.brief
else
  txtCustomSectionInstall.Tag = &quot;&quot; 
  txtCustomSectionInstall = &quot;&quot; 
End If
 LoadBtnPictures cmdCustomSectionInstall,cmdCustomSectionInstall.tag
  cmdCustomSectionInstall.RemoveAllMenu
  cmdCustomSectionInstall.AddMenu &quot;Очистить&quot; 
If Not item.CustomSectionUnInstall Is Nothing Then
  txtCustomSectionUnInstall.Tag = item.CustomSectionUnInstall.id
  txtCustomSectionUnInstall = item.CustomSectionUnInstall.brief
else
  txtCustomSectionUnInstall.Tag = &quot;&quot; 
  txtCustomSectionUnInstall = &quot;&quot; 
End If
 LoadBtnPictures cmdCustomSectionUnInstall,cmdCustomSectionUnInstall.tag
  cmdCustomSectionUnInstall.RemoveAllMenu
  cmdCustomSectionUnInstall.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheName = txtTheName
 if cmbIsVisible.listindex&gt;=0 then
   item.IsVisible = cmbIsVisible.itemdata(cmbIsVisible.listindex)
 end if
item.TheDescription = txtTheDescription
 if cmbIsNotDeletable.listindex&gt;=0 then
   item.IsNotDeletable = cmbIsNotDeletable.itemdata(cmbIsNotDeletable.listindex)
 end if
 if cmbTheTargetPlatform.listindex&gt;=0 then
   item.TheTargetPlatform = cmbTheTargetPlatform.itemdata(cmbTheTargetPlatform.listindex)
 end if
 if cmbIsCustomSection.listindex&gt;=0 then
   item.IsCustomSection = cmbIsCustomSection.itemdata(cmbIsCustomSection.listindex)
 end if
If txtCustomSectionInstall.Tag &lt;&gt; &quot;&quot; Then
  Set item.CustomSectionInstall = Item.Application.FindRowObject(&quot;MTZ_Inst_Common&quot;,txtCustomSectionInstall.Tag)
Else
  Set item.CustomSectionInstall = Nothing
End If
If txtCustomSectionUnInstall.Tag &lt;&gt; &quot;&quot; Then
  Set item.CustomSectionUnInstall = Item.Application.FindRowObject(&quot;MTZ_Inst_Common&quot;,txtCustomSectionUnInstall.Tag)
Else
  Set item.CustomSectionUnInstall = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="MTZ_Inst_Sec_Files" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheSource"/><Properties Name="Caption" PropValue="Файл или каталог:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheSource"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1024"/><Properties Name="ToolTipText" PropValue="Файл или каталог"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCOM"/><Properties Name="Caption" PropValue="Является COM объектом:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCOM"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Является COM объектом"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblHaveToRun"/><Properties Name="Caption" PropValue="Обязательно запустить:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbHaveToRun"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Обязательно запустить"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCommanLineParams"/><Properties Name="Caption" PropValue="Ключи запуска:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCommanLineParams"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Ключи запуска"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSysstemObject"/><Properties Name="Caption" PropValue="Объект системы:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSysstemObject"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Объект системы"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSysstemObject"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Объект системы"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheApplication"/><Properties Name="Caption" PropValue="Приложение системы:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheApplication"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Приложение системы"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheApplication"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Приложение системы"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSubDir"/><Properties Name="Caption" PropValue="Подкаталог:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSubDir"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Подкаталог"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsShortcut"/><Properties Name="Caption" PropValue="Ярлык в меню:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsShortcut"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Ярлык в меню"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblShortcutName"/><Properties Name="Caption" PropValue="Имя ярлыка:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtShortcutName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Имя ярлыка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblShortCutInfo"/><Properties Name="Caption" PropValue="Комментярий ярлыка:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtShortCutInfo"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Комментярий ярлыка"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDefaultInterface"/><Properties Name="Caption" PropValue="Интерфейс по умолчанию:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDefaultInterface"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Интерфейс по умолчанию"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblHaveToRunDeinst"/><Properties Name="Caption" PropValue="Запустить при деинсталляции:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbHaveToRunDeinst"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Запустить при деинсталляции"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDeinstallComandParam"/><Properties Name="Caption" PropValue="Ключи деинсталляции:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDeinstallComandParam"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Ключи деинсталляции"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsCustomScript"/><Properties Name="Caption" PropValue="Пользовательский скрипт (см. поле Файл или каталог):"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsCustomScript"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Пользовательский скрипт (см. поле Файл или каталог)"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCustomScriptInstall"/><Properties Name="Caption" PropValue="Custom Script Install:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCustomScriptInstall"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Custom Script Install"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCustomScriptInstall"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Custom Script Install"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCustomScriptUnInstall"/><Properties Name="Caption" PropValue="Custom Script UnInstall:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtCustomScriptUnInstall"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Custom Script UnInstall"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdCustomScriptUnInstall"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="6000"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Custom Script UnInstall"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSEQ"/><Properties Name="Caption" PropValue="Порядок:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSEQ"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Порядок"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheSource_Change()
  Changing

end sub
private sub cmbIsCOM_Click()
  on error resume next
  Changing

end sub
private sub cmbHaveToRun_Click()
  on error resume next
  Changing

end sub
private sub txtCommanLineParams_Change()
  Changing

end sub
private sub txtSysstemObject_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSysstemObject_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;OBJECTTYPE&quot;, id, brief) Then
          txtSysstemObject.Tag = Left(id, 38)
          txtSysstemObject = brief
        End If
end sub
private sub cmdSysstemObject_MenuClick(ByVal sCaption As String)
          txtSysstemObject.Tag = &quot;&quot;
          txtSysstemObject = &quot;&quot;
End sub
private sub txtTheApplication_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheApplication_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZAPP&quot;, id, brief) Then
          txtTheApplication.Tag = Left(id, 38)
          txtTheApplication = brief
        End If
end sub
private sub cmdTheApplication_MenuClick(ByVal sCaption As String)
          txtTheApplication.Tag = &quot;&quot;
          txtTheApplication = &quot;&quot;
End sub
private sub txtSubDir_Change()
  Changing

end sub
private sub cmbIsShortcut_Click()
  on error resume next
  Changing

end sub
private sub txtShortcutName_Change()
  Changing

end sub
private sub txtShortCutInfo_Change()
  Changing

end sub
private sub txtDefaultInterface_Change()
  Changing

end sub
private sub cmbHaveToRunDeinst_Click()
  on error resume next
  Changing

end sub
private sub txtDeinstallComandParam_Change()
  Changing

end sub
private sub cmbIsCustomScript_Click()
  on error resume next
  Changing

end sub
private sub txtCustomScriptInstall_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCustomScriptInstall_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZ_Inst_Common&quot;, id, brief) Then
          txtCustomScriptInstall.Tag = Left(id, 38)
          txtCustomScriptInstall = brief
        End If
end sub
private sub cmdCustomScriptInstall_MenuClick(ByVal sCaption As String)
          txtCustomScriptInstall.Tag = &quot;&quot;
          txtCustomScriptInstall = &quot;&quot;
End sub
private sub txtCustomScriptUnInstall_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdCustomScriptUnInstall_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;MTZ_Inst_Common&quot;, id, brief) Then
          txtCustomScriptUnInstall.Tag = Left(id, 38)
          txtCustomScriptUnInstall = brief
        End If
end sub
private sub cmdCustomScriptUnInstall_MenuClick(ByVal sCaption As String)
          txtCustomScriptUnInstall.Tag = &quot;&quot;
          txtCustomScriptUnInstall = &quot;&quot;
End sub
private sub txtSEQ_Validate(cancel as boolean)
if txtSEQ.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtSEQ.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSEQ.SetFocus 
  elseif Val(txtSEQ.text) &lt;&gt;clng(Val(txtSEQ.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSEQ.SetFocus 
  end if
end if
end sub
Private Sub txtSEQ_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtSEQ_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbIsCOM.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbHaveToRun.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbHaveToRunDeinst.ListIndex &gt;=0)
if mIsOK then mIsOK =(cmbIsCustomScript.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(txtSEQ.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheSource = item.TheSource
cmbIsCOM.Clear
cmbIsCOM.additem &quot;Да&quot;
cmbIsCOM.itemdata(cmbIsCOM.newindex)= 1
cmbIsCOM.additem &quot;Нет&quot;
cmbIsCOM.itemdata(cmbIsCOM.newindex)= 0
 For iii = 0 To cmbIsCOM.ListCount-1
  If Item.IsCOM = cmbIsCOM.ItemData(iii) Then
   cmbIsCOM.ListIndex = iii
   Exit For
  End If
 Next
cmbHaveToRun.Clear
cmbHaveToRun.additem &quot;Да&quot;
cmbHaveToRun.itemdata(cmbHaveToRun.newindex)= 1
cmbHaveToRun.additem &quot;Нет&quot;
cmbHaveToRun.itemdata(cmbHaveToRun.newindex)= 0
 For iii = 0 To cmbHaveToRun.ListCount-1
  If Item.HaveToRun = cmbHaveToRun.ItemData(iii) Then
   cmbHaveToRun.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtCommanLineParams = item.CommanLineParams
If Not item.SysstemObject Is Nothing Then
  txtSysstemObject.Tag = item.SysstemObject.id
  txtSysstemObject = item.SysstemObject.brief
else
  txtSysstemObject.Tag = &quot;&quot; 
  txtSysstemObject = &quot;&quot; 
End If
 LoadBtnPictures cmdSysstemObject,cmdSysstemObject.tag
  cmdSysstemObject.RemoveAllMenu
  cmdSysstemObject.AddMenu &quot;Очистить&quot; 
If Not item.TheApplication Is Nothing Then
  txtTheApplication.Tag = item.TheApplication.id
  txtTheApplication = item.TheApplication.brief
else
  txtTheApplication.Tag = &quot;&quot; 
  txtTheApplication = &quot;&quot; 
End If
 LoadBtnPictures cmdTheApplication,cmdTheApplication.tag
  cmdTheApplication.RemoveAllMenu
  cmdTheApplication.AddMenu &quot;Очистить&quot; 
  on error resume next
txtSubDir = item.SubDir
cmbIsShortcut.Clear
cmbIsShortcut.additem &quot;Да&quot;
cmbIsShortcut.itemdata(cmbIsShortcut.newindex)= 1
cmbIsShortcut.additem &quot;Нет&quot;
cmbIsShortcut.itemdata(cmbIsShortcut.newindex)= 0
 For iii = 0 To cmbIsShortcut.ListCount-1
  If Item.IsShortcut = cmbIsShortcut.ItemData(iii) Then
   cmbIsShortcut.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtShortcutName = item.ShortcutName
  on error resume next
txtShortCutInfo = item.ShortCutInfo
  on error resume next
txtDefaultInterface = item.DefaultInterface
cmbHaveToRunDeinst.Clear
cmbHaveToRunDeinst.additem &quot;Да&quot;
cmbHaveToRunDeinst.itemdata(cmbHaveToRunDeinst.newindex)= 1
cmbHaveToRunDeinst.additem &quot;Нет&quot;
cmbHaveToRunDeinst.itemdata(cmbHaveToRunDeinst.newindex)= 0
 For iii = 0 To cmbHaveToRunDeinst.ListCount-1
  If Item.HaveToRunDeinst = cmbHaveToRunDeinst.ItemData(iii) Then
   cmbHaveToRunDeinst.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtDeinstallComandParam = item.DeinstallComandParam
cmbIsCustomScript.Clear
cmbIsCustomScript.additem &quot;Да&quot;
cmbIsCustomScript.itemdata(cmbIsCustomScript.newindex)= 1
cmbIsCustomScript.additem &quot;Нет&quot;
cmbIsCustomScript.itemdata(cmbIsCustomScript.newindex)= 0
 For iii = 0 To cmbIsCustomScript.ListCount-1
  If Item.IsCustomScript = cmbIsCustomScript.ItemData(iii) Then
   cmbIsCustomScript.ListIndex = iii
   Exit For
  End If
 Next
If Not item.CustomScriptInstall Is Nothing Then
  txtCustomScriptInstall.Tag = item.CustomScriptInstall.id
  txtCustomScriptInstall = item.CustomScriptInstall.brief
else
  txtCustomScriptInstall.Tag = &quot;&quot; 
  txtCustomScriptInstall = &quot;&quot; 
End If
 LoadBtnPictures cmdCustomScriptInstall,cmdCustomScriptInstall.tag
  cmdCustomScriptInstall.RemoveAllMenu
  cmdCustomScriptInstall.AddMenu &quot;Очистить&quot; 
If Not item.CustomScriptUnInstall Is Nothing Then
  txtCustomScriptUnInstall.Tag = item.CustomScriptUnInstall.id
  txtCustomScriptUnInstall = item.CustomScriptUnInstall.brief
else
  txtCustomScriptUnInstall.Tag = &quot;&quot; 
  txtCustomScriptUnInstall = &quot;&quot; 
End If
 LoadBtnPictures cmdCustomScriptUnInstall,cmdCustomScriptUnInstall.tag
  cmdCustomScriptUnInstall.RemoveAllMenu
  cmdCustomScriptUnInstall.AddMenu &quot;Очистить&quot; 
txtSEQ = item.SEQ
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheSource = txtTheSource
 if cmbIsCOM.listindex&gt;=0 then
   item.IsCOM = cmbIsCOM.itemdata(cmbIsCOM.listindex)
 end if
 if cmbHaveToRun.listindex&gt;=0 then
   item.HaveToRun = cmbHaveToRun.itemdata(cmbHaveToRun.listindex)
 end if
item.CommanLineParams = txtCommanLineParams
If txtSysstemObject.Tag &lt;&gt; &quot;&quot; Then
  Set item.SysstemObject = Item.Application.FindRowObject(&quot;OBJECTTYPE&quot;,txtSysstemObject.Tag)
Else
  Set item.SysstemObject = Nothing
End If
If txtTheApplication.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheApplication = Item.Application.FindRowObject(&quot;MTZAPP&quot;,txtTheApplication.Tag)
Else
  Set item.TheApplication = Nothing
End If
item.SubDir = txtSubDir
 if cmbIsShortcut.listindex&gt;=0 then
   item.IsShortcut = cmbIsShortcut.itemdata(cmbIsShortcut.listindex)
 end if
item.ShortcutName = txtShortcutName
item.ShortCutInfo = txtShortCutInfo
item.DefaultInterface = txtDefaultInterface
 if cmbHaveToRunDeinst.listindex&gt;=0 then
   item.HaveToRunDeinst = cmbHaveToRunDeinst.itemdata(cmbHaveToRunDeinst.listindex)
 end if
item.DeinstallComandParam = txtDeinstallComandParam
 if cmbIsCustomScript.listindex&gt;=0 then
   item.IsCustomScript = cmbIsCustomScript.itemdata(cmbIsCustomScript.listindex)
 end if
If txtCustomScriptInstall.Tag &lt;&gt; &quot;&quot; Then
  Set item.CustomScriptInstall = Item.Application.FindRowObject(&quot;MTZ_Inst_Common&quot;,txtCustomScriptInstall.Tag)
Else
  Set item.CustomScriptInstall = Nothing
End If
If txtCustomScriptUnInstall.Tag &lt;&gt; &quot;&quot; Then
  Set item.CustomScriptUnInstall = Item.Application.FindRowObject(&quot;MTZ_Inst_Common&quot;,txtCustomScriptUnInstall.Tag)
Else
  Set item.CustomScriptUnInstall = Nothing
End If
item.SEQ = cdbl(txtSEQ)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="MTZ_Inst_Common" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheInstallScript"/><Properties Name="Caption" PropValue="Секция инсталляции:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheInstallScript"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Секция инсталляции"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSEQ"/><Properties Name="Caption" PropValue="Порядок (сортировка):"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSEQ"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Порядок (сортировка)"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsDeinstallUSE"/><Properties Name="Caption" PropValue="Использовать при деинсталляции:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsDeinstallUSE"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Использовать при деинсталляции"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheName_Change()
  Changing

end sub
private sub txtTheInstallScript_Change()
  Changing

end sub
private sub txtSEQ_Validate(cancel as boolean)
if txtSEQ.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtSEQ.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSEQ.SetFocus 
  elseif Val(txtSEQ.text) &lt;&gt;clng(Val(txtSEQ.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSEQ.SetFocus 
  end if
end if
end sub
Private Sub txtSEQ_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtSEQ_Change()
  Changing

end sub
private sub cmbIsDeinstallUSE_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtTheInstallScript.text)
if mIsOK then mIsOK = IsSet(txtSEQ.text)
if mIsOK then mIsOK =(cmbIsDeinstallUSE.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheName = item.TheName
txtTheInstallScript = item.TheInstallScript
txtSEQ = item.SEQ
cmbIsDeinstallUSE.Clear
cmbIsDeinstallUSE.additem &quot;Да&quot;
cmbIsDeinstallUSE.itemdata(cmbIsDeinstallUSE.newindex)= 1
cmbIsDeinstallUSE.additem &quot;Нет&quot;
cmbIsDeinstallUSE.itemdata(cmbIsDeinstallUSE.newindex)= 0
 For iii = 0 To cmbIsDeinstallUSE.ListCount-1
  If Item.IsDeinstallUSE = cmbIsDeinstallUSE.ItemData(iii) Then
   cmbIsDeinstallUSE.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheName = txtTheName
item.TheInstallScript = txtTheInstallScript
item.SEQ = cdbl(txtSEQ)
 if cmbIsDeinstallUSE.listindex&gt;=0 then
   item.IsDeinstallUSE = cmbIsDeinstallUSE.itemdata(cmbIsDeinstallUSE.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmMTZ_Inst_Build_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="MTZ_InstallGUI.MTZ_Inst_Build"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Сборки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела MTZ_Inst_Build режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{9327B208-0AF1-4223-A646-133847EC4047}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{9327B208-0AF1-4223-A646-133847EC4047}&quot;
  Open s &amp; Me.name &amp; &quot;{9327B208-0AF1-4223-A646-133847EC4047}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmMTZ_Inst_Build_Sec_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="MTZ_InstallGUI.MTZ_Inst_Build_Sec"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Секции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела MTZ_Inst_Build_Sec режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{F63DB35A-0570-462E-A5D6-45115B484B5D}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{F63DB35A-0570-462E-A5D6-45115B484B5D}&quot;
  Open s &amp; Me.name &amp; &quot;{F63DB35A-0570-462E-A5D6-45115B484B5D}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmMTZ_Inst_Section_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="MTZ_InstallGUI.MTZ_Inst_Section"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Секции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела MTZ_Inst_Section режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{E32CB92B-464A-45AF-88AB-BC09D833C6EC}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{E32CB92B-464A-45AF-88AB-BC09D833C6EC}&quot;
  Open s &amp; Me.name &amp; &quot;{E32CB92B-464A-45AF-88AB-BC09D833C6EC}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmMTZ_Inst_Sec_Files_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="MTZ_InstallGUI.MTZ_Inst_Sec_Files"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Файлы секции"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела MTZ_Inst_Sec_Files режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2956E2B4-0FF0-41AE-A7DA-8ED03D26A1E8}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2956E2B4-0FF0-41AE-A7DA-8ED03D26A1E8}&quot;
  Open s &amp; Me.name &amp; &quot;{2956E2B4-0FF0-41AE-A7DA-8ED03D26A1E8}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmMTZ_Inst_Common_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="MTZ_InstallGUI.MTZ_Inst_Common"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Пользовательские скрипты"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела MTZ_Inst_Common режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7D2E6412-5853-4A83-B1E6-E4DD25CDFECA}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7D2E6412-5853-4A83-B1E6-E4DD25CDFECA}&quot;
  Open s &amp; Me.name &amp; &quot;{7D2E6412-5853-4A83-B1E6-E4DD25CDFECA}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnMTZ_Inst_Build_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlMTZ_Inst_Build" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlMTZ_Inst_Build"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridMTZ_Inst_Build" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridMTZ_Inst_Build"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdMTZ_Inst_BuildAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_BuildAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridMTZ_Inst_Build_Sec" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridMTZ_Inst_Build_Sec"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdMTZ_Inst_Build_SecAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Build_SecAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupMTZ_Inst_Build" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Сборки"/><Properties Name="Name" PropValue="mnuPopupMTZ_Inst_Build"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuMTZ_Inst_BuildAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildOpen"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildRef"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildS1"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuMTZ_Inst_BuildCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildCOPY"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildCUT"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildPASTE"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildCHANGE"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildCLEAN"/></ControlData></ControlData><ControlData Name="mnuMTZ_Inst_BuildPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildPrn"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildCfg"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildFind"/></ControlData><ControlData Name="mnuMTZ_Inst_BuildAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuMTZ_Inst_BuildAcc"/></ControlData></ControlData><ControlData Name="menuTimerMTZ_Inst_Build" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerMTZ_Inst_Build"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupMTZ_Inst_Build_Sec" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Секции"/><Properties Name="Name" PropValue="mnuPopupMTZ_Inst_Build_Sec"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuMTZ_Inst_Build_SecAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecOpen"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecRef"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecS1"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuMTZ_Inst_Build_SecCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecCOPY"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecCUT"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecPASTE"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecCHANGE"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecCLEAN"/></ControlData></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecPrn"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecCfg"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecFind"/></ControlData><ControlData Name="mnuMTZ_Inst_Build_SecAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Build_SecAcc"/></ControlData></ControlData><ControlData Name="menuTimerMTZ_Inst_Build_Sec" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerMTZ_Inst_Build_Sec"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndMTZ_Inst_Build as object
private menuActionMTZ_Inst_Build as string
private fndMTZ_Inst_Build_Sec as object
private menuActionMTZ_Inst_Build_Sec as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlMTZ_Inst_Build_PositionChanged()
  pnlMTZ_Inst_Build.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridMTZ_Inst_Build_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdMTZ_Inst_BuildCfg_Click
        End If
    End If
end sub

private sub gridMTZ_Inst_Build_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupMTZ_Inst_Build
End If
end sub
private sub mnuMTZ_Inst_BuildAdd_click()
   menuActionMTZ_Inst_Build =&quot;ADD&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildEdit_click()
   menuActionMTZ_Inst_Build =&quot;EDIT&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildDelete_click()
   menuActionMTZ_Inst_Build =&quot;DEL&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildOpen_click()
   menuActionMTZ_Inst_Build =&quot;RUN&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildRef_click()
   menuActionMTZ_Inst_Build =&quot;REF&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
  Private Sub mnuMTZ_Inst_BuildCOPY_Click()
    On Error Resume Next
    If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Build.Row &gt; 0 Then
     If gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuMTZ_Inst_BuildCUT_Click()
    On Error Resume Next
    If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Build.Row &gt; 0 Then
     If gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridMTZ_Inst_Build.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuMTZ_Inst_BuildCHANGE_Click()
  On Error Resume Next
  If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
  If gridMTZ_Inst_Build.Row &gt; 0 Then
   If gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Build.ItemCount = u.parent.Count
      gridMTZ_Inst_Build.RefreshRowIndex gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuMTZ_Inst_BuildCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuMTZ_Inst_BuildPrn_click()
   menuActionMTZ_Inst_Build =&quot;PRN&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildCfg_click()
   menuActionMTZ_Inst_Build =&quot;CFG&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildFind_click()
   menuActionMTZ_Inst_Build =&quot;FND&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub mnuMTZ_Inst_BuildAcc_click()
   menuActionMTZ_Inst_Build =&quot;ACC&quot;
   menuTimerMTZ_Inst_Build.enabled = true
end sub
private sub menuTimerMTZ_Inst_Build_timer()
   menuTimerMTZ_Inst_Build.enabled = false
   if menuActionMTZ_Inst_Build =&quot;ADD&quot; then cmdMTZ_Inst_BuildADD_CLick
   if menuActionMTZ_Inst_Build =&quot;EDIT&quot; then cmdMTZ_Inst_BuildEDIT_CLick
   if menuActionMTZ_Inst_Build =&quot;DEL&quot; then cmdMTZ_Inst_BuildDEL_CLick
   if menuActionMTZ_Inst_Build =&quot;RUN&quot; then cmdMTZ_Inst_BuildRUN_CLick
   if menuActionMTZ_Inst_Build =&quot;REF&quot; then cmdMTZ_Inst_BuildREF_CLick
   if menuActionMTZ_Inst_Build =&quot;PRN&quot; then cmdMTZ_Inst_BuildPRN_CLick
   if menuActionMTZ_Inst_Build =&quot;CFG&quot; then cmdMTZ_Inst_BuildCFG_CLick
   if menuActionMTZ_Inst_Build =&quot;FND&quot; then cmdMTZ_Inst_BuildFND_CLick
   if menuActionMTZ_Inst_Build =&quot;ACC&quot; then cmdMTZ_Inst_BuildACC_CLick
   menuActionMTZ_Inst_Build =&quot;&quot;
end sub
Private Sub cmdMTZ_Inst_BuildCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridMTZ_Inst_Build,&quot;gridMTZ_Inst_Build&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_BuildPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridMTZ_Inst_Build,&quot;Сборки&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_BuildRef_Click()
  on error resume next
  item.MTZ_Inst_Build.Refresh
  gridMTZ_Inst_Build.itemCount = item.MTZ_Inst_Build.count
  gridMTZ_Inst_Build.Refetch
  gridMTZ_Inst_Build.Refresh
End Sub
Private Sub cmdMTZ_Inst_BuildAcc_Click()
On Error Resume Next
If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Build.Row &gt; 0 Then
 If gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_BuildEdit_Click()
  on error resume next
If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Build.Row &gt; 0 then
 If gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmMTZ_Inst_Build_.Item = u
    again: frmMTZ_Inst_Build_.NotFirstTime = False
    frmMTZ_Inst_Build_.OnInit
    frmMTZ_Inst_Build_.Show vbModal
    If frmMTZ_Inst_Build_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridMTZ_Inst_Build.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_BuildDel_Click()
  on error resume next
  gridMTZ_Inst_Build.Delete
End Sub
Private Sub cmdMTZ_Inst_BuildAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.MTZ_Inst_Build.Add()

      Set frmMTZ_Inst_Build_.Item = u
      again: frmMTZ_Inst_Build_.NotFirstTime = False
      frmMTZ_Inst_Build_.OnInit
      frmMTZ_Inst_Build_.Show vbModal
      If frmMTZ_Inst_Build_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridMTZ_Inst_Build.ItemCount = Item.MTZ_Inst_Build.Count
        gridMTZ_Inst_Build.Refresh
        gridMTZ_Inst_Build.RefreshGroups
        gridMTZ_Inst_Build.Refreshsort
        gridMTZ_Inst_Build.MoveToBookmark u.ID &amp; &quot;MTZ_Inst_Build&quot;
      Else
        Item.MTZ_Inst_Build.Delete u.ID
        Item.MTZ_Inst_Build.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdMTZ_Inst_BuildFnd_Click()
  on error resume next
  fndMTZ_Inst_Build.ShowForm
End Sub
Private Sub cmdMTZ_Inst_BuildRun_Click()
  on error resume next
  gridMTZ_Inst_Build_DblClick
End Sub
Private Sub gridMTZ_Inst_Build_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.MTZ_Inst_Build.LoadRow gridMTZ_Inst_Build, RowIndex, Bookmark, Values
End Sub
Private Sub gridMTZ_Inst_Build_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridMTZ_Inst_Build_DblClick()
  cmdMTZ_Inst_BuildEdit_Click
End Sub
Private Sub gridMTZ_Inst_Build_KeyPress(KeyAscii As Integer)
  If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndMTZ_Inst_Build.FindOnPress KeyAscii
End Sub

Private Sub pnlMTZ_Inst_Build_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridMTZ_Inst_Build.Left = Left
  gridMTZ_Inst_Build.Top = Top + 25 * Screen.TwipsPerPixelY
  gridMTZ_Inst_Build.Width = Width
  gridMTZ_Inst_Build.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_BuildAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdMTZ_Inst_BuildAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuMTZ_Inst_BuildPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.MTZ_Inst_Build.Add()
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Build.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdMTZ_Inst_Build_SecCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridMTZ_Inst_Build_Sec,&quot;gridMTZ_Inst_Build_Sec&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_Build_SecPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridMTZ_Inst_Build_Sec,&quot;Секции&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_Build_SecAcc_Click()
On Error Resume Next
If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Build_Sec.Row &gt; 0 Then
 If gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Build_Sec.RowBookmark(gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_Build_SecFnd_Click()
  on error resume next
  fndMTZ_Inst_Build_Sec.ShowForm
End Sub
Private Sub cmdMTZ_Inst_Build_SecRun_Click()
  on error resume next
  gridMTZ_Inst_Build_Sec_DblClick
End Sub
Private Sub pnlMTZ_Inst_Build_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridMTZ_Inst_Build_Sec.Left = Left
  gridMTZ_Inst_Build_Sec.Top = Top + 25 * Screen.TwipsPerPixelY
  gridMTZ_Inst_Build_Sec.Width = Width
  gridMTZ_Inst_Build_Sec.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Build_SecAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdMTZ_Inst_Build_SecEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Build_SecAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdMTZ_Inst_Build_SecRef_Click()
  on error resume next
If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Build.Row &gt; 0 Then
 If gridMTZ_Inst_Build.RowIndex ( gridMTZ_Inst_Build.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.MTZ_Inst_Build_Sec.refresh
   gridMTZ_Inst_Build_Sec.itemcount=gu.MTZ_Inst_Build_Sec.count
   gridMTZ_Inst_Build_Sec.refetch
   gridMTZ_Inst_Build_Sec.refresh
 else
  gridMTZ_Inst_Build_Sec.columns.clear
  gridMTZ_Inst_Build_Sec.itemcount=0
 End If
else
 gridMTZ_Inst_Build_Sec.columns.clear
 gridMTZ_Inst_Build_Sec.itemcount=0
End If
End Sub
Private Sub cmdMTZ_Inst_Build_SecEdit_Click()
    If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridMTZ_Inst_Build_Sec.RowBookmark(gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmMTZ_Inst_Build_Sec_.Item = u
    again: frmMTZ_Inst_Build_Sec_.NotFirstTime = False
    frmMTZ_Inst_Build_Sec_.OnInit
    frmMTZ_Inst_Build_Sec_.Show vbModal
    If frmMTZ_Inst_Build_Sec_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridMTZ_Inst_Build_Sec.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdMTZ_Inst_Build_SecDel_Click()
  on error resume next
  gridMTZ_Inst_Build_Sec.Delete
End Sub
Private Sub cmdMTZ_Inst_Build_SecAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.MTZ_Inst_Build_Sec.Add()

      Set frmMTZ_Inst_Build_Sec_.Item = u
      again: frmMTZ_Inst_Build_Sec_.NotFirstTime = False
      frmMTZ_Inst_Build_Sec_.OnInit
      frmMTZ_Inst_Build_Sec_.Show vbModal
      If frmMTZ_Inst_Build_Sec_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridMTZ_Inst_Build_Sec.ItemCount = gu.MTZ_Inst_Build_Sec.Count
        gridMTZ_Inst_Build_Sec.Refresh
        gridMTZ_Inst_Build_Sec.RefreshGroups
        gridMTZ_Inst_Build_Sec.Refreshsort
        gridMTZ_Inst_Build_Sec.MoveToBookmark u.ID &amp; &quot;MTZ_Inst_Build_Sec&quot;
      Else
        gu.MTZ_Inst_Build_Sec.Delete u.ID
        gu.MTZ_Inst_Build_Sec.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridMTZ_Inst_Build_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridMTZ_Inst_Build.ItemCount = 0 Then 
  gridMTZ_Inst_Build_Sec.ItemCount=0
  Exit Sub
End If
If gridMTZ_Inst_Build.Row &gt; 0 Then
  If LastRow &lt;&gt; gridMTZ_Inst_Build.Row And LastRow &gt; 0 Then
    gridMTZ_Inst_Build.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridMTZ_Inst_Build.GetRowData(gridMTZ_Inst_Build.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridMTZ_Inst_Build.RowIndex ( gridMTZ_Inst_Build.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridMTZ_Inst_Build.Row or gridMTZ_Inst_Build_Sec.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.MTZ_Inst_Build_Sec.Preparegrid gridMTZ_Inst_Build_Sec
  gridMTZ_Inst_Build_Sec.ItemCount=0
    LoadGridLayout gridMTZ_Inst_Build_Sec
    Set fndMTZ_Inst_Build_Sec = Nothing
    Set fndMTZ_Inst_Build_Sec = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndMTZ_Inst_Build_Sec.Init gridMTZ_Inst_Build_Sec
  gridMTZ_Inst_Build_Sec.ItemCount=gu.MTZ_Inst_Build_Sec.Count
  End If
 End If
End If
End Sub
Private Sub gridMTZ_Inst_Build_Sec_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.MTZ_Inst_Build_Sec.LoadRow gridMTZ_Inst_Build_Sec, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridMTZ_Inst_Build_Sec_KeyPress(KeyAscii As Integer)
  If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndMTZ_Inst_Build_Sec.FindOnPress KeyAscii
End Sub

Private Sub gridMTZ_Inst_Build_Sec_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridMTZ_Inst_Build_Sec.RowBookmark(gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridMTZ_Inst_Build_Sec_DblClick()
    cmdMTZ_Inst_Build_SecEdit_click
End Sub
Private Sub gridMTZ_Inst_Build_Sec_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
 If gridMTZ_Inst_Build_Sec.Row &gt; 0 Then
   If LastRow &lt;&gt; gridMTZ_Inst_Build_Sec.Row And LastRow &gt; 0 Then
     gridMTZ_Inst_Build_Sec.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridMTZ_Inst_Build_Sec.GetRowData(gridMTZ_Inst_Build_Sec.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuMTZ_Inst_Build_SecPASTE_Click()
On Error Resume Next
    If gridMTZ_Inst_Build.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Build.RowBookmark(gridMTZ_Inst_Build.RowIndex(gridMTZ_Inst_Build.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.MTZ_Inst_Build_Sec.Add()
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Build_Sec.ItemCount = u.parent.Count
    ELSE
      GU.MTZ_Inst_Build_Sec.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridMTZ_Inst_Build_Sec_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdMTZ_Inst_Build_SecCfg_Click
        End If
    End If
end sub

private sub gridMTZ_Inst_Build_Sec_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupMTZ_Inst_Build_Sec
End If
end sub
private sub mnuMTZ_Inst_Build_SecAdd_click()
   menuActionMTZ_Inst_Build_Sec =&quot;ADD&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecEdit_click()
   menuActionMTZ_Inst_Build_Sec =&quot;EDIT&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecDelete_click()
   menuActionMTZ_Inst_Build_Sec =&quot;DEL&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecOpen_click()
   menuActionMTZ_Inst_Build_Sec =&quot;RUN&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecRef_click()
   menuActionMTZ_Inst_Build_Sec =&quot;REF&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
  Private Sub mnuMTZ_Inst_Build_SecCOPY_Click()
    On Error Resume Next
    If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Build_Sec.Row &gt; 0 Then
     If gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Build_Sec.RowBookmark(gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuMTZ_Inst_Build_SecCUT_Click()
    On Error Resume Next
    If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Build_Sec.Row &gt; 0 Then
     If gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Build_Sec.RowBookmark(gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridMTZ_Inst_Build_Sec.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuMTZ_Inst_Build_SecCHANGE_Click()
  On Error Resume Next
  If gridMTZ_Inst_Build_Sec.ItemCount = 0 Then Exit Sub
  If gridMTZ_Inst_Build_Sec.Row &gt; 0 Then
   If gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Build_Sec.RowBookmark(gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Build_Sec.ItemCount = u.parent.Count
      gridMTZ_Inst_Build_Sec.RefreshRowIndex gridMTZ_Inst_Build_Sec.RowIndex(gridMTZ_Inst_Build_Sec.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuMTZ_Inst_Build_SecCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuMTZ_Inst_Build_SecPrn_click()
   menuActionMTZ_Inst_Build_Sec =&quot;PRN&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecCfg_click()
   menuActionMTZ_Inst_Build_Sec =&quot;CFG&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecFind_click()
   menuActionMTZ_Inst_Build_Sec =&quot;FND&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub mnuMTZ_Inst_Build_SecAcc_click()
   menuActionMTZ_Inst_Build_Sec =&quot;ACC&quot;
   menuTimerMTZ_Inst_Build_Sec.enabled = true
end sub
private sub menuTimerMTZ_Inst_Build_Sec_timer()
   menuTimerMTZ_Inst_Build_Sec.enabled = false
   if menuActionMTZ_Inst_Build_Sec =&quot;ADD&quot; then cmdMTZ_Inst_Build_SecADD_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;EDIT&quot; then cmdMTZ_Inst_Build_SecEDIT_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;DEL&quot; then cmdMTZ_Inst_Build_SecDEL_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;RUN&quot; then cmdMTZ_Inst_Build_SecRUN_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;REF&quot; then cmdMTZ_Inst_Build_SecREF_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;PRN&quot; then cmdMTZ_Inst_Build_SecPRN_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;CFG&quot; then cmdMTZ_Inst_Build_SecCFG_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;FND&quot; then cmdMTZ_Inst_Build_SecFND_CLick
   if menuActionMTZ_Inst_Build_Sec =&quot;ACC&quot; then cmdMTZ_Inst_Build_SecACC_CLick
   menuActionMTZ_Inst_Build_Sec =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdMTZ_Inst_BuildAdd,cmdMTZ_Inst_BuildAdd.tag
  LoadBtnPictures cmdMTZ_Inst_BuildEdit,cmdMTZ_Inst_BuildEdit.tag
  LoadBtnPictures cmdMTZ_Inst_BuildDel,cmdMTZ_Inst_BuildDel.tag
  LoadBtnPictures cmdMTZ_Inst_BuildRef,cmdMTZ_Inst_BuildRef.tag
  LoadBtnPictures cmdMTZ_Inst_BuildPrn,cmdMTZ_Inst_BuildPrn.tag
  LoadBtnPictures cmdMTZ_Inst_BuildFnd,cmdMTZ_Inst_BuildFnd.tag
  LoadBtnPictures cmdMTZ_Inst_BuildRun,cmdMTZ_Inst_BuildRun.tag
  LoadBtnPictures cmdMTZ_Inst_BuildAcc,cmdMTZ_Inst_BuildAcc.tag
  LoadBtnPictures cmdMTZ_Inst_BuildCfg,cmdMTZ_Inst_BuildCfg.tag
  item.MTZ_Inst_Build.PrepareGrid gridMTZ_Inst_Build
  LoadGridLayout gridMTZ_Inst_Build
  Set fndMTZ_Inst_Build = Nothing
  On Error Resume Next
  Set fndMTZ_Inst_Build = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndMTZ_Inst_Build.Init gridMTZ_Inst_Build
  LoadBtnPictures cmdMTZ_Inst_Build_SecAdd,cmdMTZ_Inst_Build_SecAdd.tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecEdit,cmdMTZ_Inst_Build_SecEdit.tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecDel,cmdMTZ_Inst_Build_SecDel.tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecRef,cmdMTZ_Inst_Build_SecRef.tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecPrn,cmdMTZ_Inst_Build_SecPrn.tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecFnd,cmdMTZ_Inst_Build_SecFnd.Tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecCfg,cmdMTZ_Inst_Build_SecCfg.tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecRun,cmdMTZ_Inst_Build_SecRun.Tag
  LoadBtnPictures cmdMTZ_Inst_Build_SecAcc,cmdMTZ_Inst_Build_SecAcc.Tag
  gridMTZ_Inst_Build_Sec.Columns.Clear
  gridMTZ_Inst_Build_Sec.ItemCount=0
  cmdMTZ_Inst_Build_SecRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlMTZ_Inst_Build.RestorePosition
  gridMTZ_Inst_Build_RowColChange gridMTZ_Inst_Build.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlMTZ_Inst_Build.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndMTZ_Inst_Build = nothing
  set fndMTZ_Inst_Build_Sec = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnMTZ_Inst_Common_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlMTZ_Inst_Common" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlMTZ_Inst_Common"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridMTZ_Inst_Common" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridMTZ_Inst_Common"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdMTZ_Inst_CommonAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_CommonAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupMTZ_Inst_Common" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Пользовательские скрипты"/><Properties Name="Name" PropValue="mnuPopupMTZ_Inst_Common"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuMTZ_Inst_CommonAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonOpen"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonRef"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonS1"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuMTZ_Inst_CommonCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonCOPY"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonCUT"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonPASTE"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonCHANGE"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonCLEAN"/></ControlData></ControlData><ControlData Name="mnuMTZ_Inst_CommonPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonPrn"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonCfg"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonFind"/></ControlData><ControlData Name="mnuMTZ_Inst_CommonAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuMTZ_Inst_CommonAcc"/></ControlData></ControlData><ControlData Name="menuTimerMTZ_Inst_Common" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerMTZ_Inst_Common"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndMTZ_Inst_Common as object
private menuActionMTZ_Inst_Common as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdMTZ_Inst_CommonCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridMTZ_Inst_Common,&quot;gridMTZ_Inst_Common&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_CommonPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridMTZ_Inst_Common,&quot;Пользовательские скрипты&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_CommonRef_Click()
  on error resume next
  item.MTZ_Inst_Common.Refresh
  gridMTZ_Inst_Common.itemCount = item.MTZ_Inst_Common.count
  gridMTZ_Inst_Common.Refetch
  gridMTZ_Inst_Common.Refresh
End Sub
Private Sub cmdMTZ_Inst_CommonAcc_Click()
On Error Resume Next
If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Common.Row &gt; 0 Then
 If gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Common.RowBookmark(gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_CommonEdit_Click()
  on error resume next
If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Common.Row &gt; 0 then
 If gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Common.RowBookmark(gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmMTZ_Inst_Common_.Item = u
    again: frmMTZ_Inst_Common_.NotFirstTime = False
    frmMTZ_Inst_Common_.OnInit
    frmMTZ_Inst_Common_.Show vbModal
    If frmMTZ_Inst_Common_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridMTZ_Inst_Common.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_CommonDel_Click()
  on error resume next
  gridMTZ_Inst_Common.Delete
End Sub
Private Sub cmdMTZ_Inst_CommonAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.MTZ_Inst_Common.Add()

      Set frmMTZ_Inst_Common_.Item = u
      again: frmMTZ_Inst_Common_.NotFirstTime = False
      frmMTZ_Inst_Common_.OnInit
      frmMTZ_Inst_Common_.Show vbModal
      If frmMTZ_Inst_Common_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridMTZ_Inst_Common.ItemCount = Item.MTZ_Inst_Common.Count
        gridMTZ_Inst_Common.Refresh
        gridMTZ_Inst_Common.RefreshGroups
        gridMTZ_Inst_Common.Refreshsort
        gridMTZ_Inst_Common.MoveToBookmark u.ID &amp; &quot;MTZ_Inst_Common&quot;
      Else
        Item.MTZ_Inst_Common.Delete u.ID
        Item.MTZ_Inst_Common.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdMTZ_Inst_CommonFnd_Click()
  on error resume next
  fndMTZ_Inst_Common.ShowForm
End Sub
Private Sub cmdMTZ_Inst_CommonRun_Click()
  on error resume next
  gridMTZ_Inst_Common_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridMTZ_Inst_Common_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.MTZ_Inst_Common.LoadRow gridMTZ_Inst_Common, RowIndex, Bookmark, Values
End Sub
Private Sub gridMTZ_Inst_Common_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;MTZ_Inst_Common&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridMTZ_Inst_Common_DblClick()
  cmdMTZ_Inst_CommonEdit_Click
End Sub
Private Sub gridMTZ_Inst_Common_KeyPress(KeyAscii As Integer)
  If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndMTZ_Inst_Common.FindOnPress KeyAscii
End Sub

Private Sub gridMTZ_Inst_Common_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridMTZ_Inst_Common.Row And LastRow &gt; 0 Then
  gridMTZ_Inst_Common.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridMTZ_Inst_Common.GetRowData(gridMTZ_Inst_Common.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuMTZ_Inst_CommonPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.MTZ_Inst_Common.Add()
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Common.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridMTZ_Inst_Common_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdMTZ_Inst_CommonCfg_Click
        End If
    End If
end sub

private sub gridMTZ_Inst_Common_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupMTZ_Inst_Common
End If
end sub
private sub mnuMTZ_Inst_CommonAdd_click()
   menuActionMTZ_Inst_Common =&quot;ADD&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonEdit_click()
   menuActionMTZ_Inst_Common =&quot;EDIT&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonDelete_click()
   menuActionMTZ_Inst_Common =&quot;DEL&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonOpen_click()
   menuActionMTZ_Inst_Common =&quot;RUN&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonRef_click()
   menuActionMTZ_Inst_Common =&quot;REF&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
  Private Sub mnuMTZ_Inst_CommonCOPY_Click()
    On Error Resume Next
    If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Common.Row &gt; 0 Then
     If gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Common.RowBookmark(gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuMTZ_Inst_CommonCUT_Click()
    On Error Resume Next
    If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Common.Row &gt; 0 Then
     If gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Common.RowBookmark(gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridMTZ_Inst_Common.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuMTZ_Inst_CommonCHANGE_Click()
  On Error Resume Next
  If gridMTZ_Inst_Common.ItemCount = 0 Then Exit Sub
  If gridMTZ_Inst_Common.Row &gt; 0 Then
   If gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Common.RowBookmark(gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Common.ItemCount = u.parent.Count
      gridMTZ_Inst_Common.RefreshRowIndex gridMTZ_Inst_Common.RowIndex(gridMTZ_Inst_Common.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuMTZ_Inst_CommonCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuMTZ_Inst_CommonPrn_click()
   menuActionMTZ_Inst_Common =&quot;PRN&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonCfg_click()
   menuActionMTZ_Inst_Common =&quot;CFG&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonFind_click()
   menuActionMTZ_Inst_Common =&quot;FND&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub mnuMTZ_Inst_CommonAcc_click()
   menuActionMTZ_Inst_Common =&quot;ACC&quot;
   menuTimerMTZ_Inst_Common.enabled = true
end sub
private sub menuTimerMTZ_Inst_Common_timer()
   menuTimerMTZ_Inst_Common.enabled = false
   if menuActionMTZ_Inst_Common =&quot;ADD&quot; then cmdMTZ_Inst_CommonADD_CLick
   if menuActionMTZ_Inst_Common =&quot;EDIT&quot; then cmdMTZ_Inst_CommonEDIT_CLick
   if menuActionMTZ_Inst_Common =&quot;DEL&quot; then cmdMTZ_Inst_CommonDEL_CLick
   if menuActionMTZ_Inst_Common =&quot;RUN&quot; then cmdMTZ_Inst_CommonRUN_CLick
   if menuActionMTZ_Inst_Common =&quot;REF&quot; then cmdMTZ_Inst_CommonREF_CLick
   if menuActionMTZ_Inst_Common =&quot;PRN&quot; then cmdMTZ_Inst_CommonPRN_CLick
   if menuActionMTZ_Inst_Common =&quot;CFG&quot; then cmdMTZ_Inst_CommonCFG_CLick
   if menuActionMTZ_Inst_Common =&quot;FND&quot; then cmdMTZ_Inst_CommonFND_CLick
   if menuActionMTZ_Inst_Common =&quot;ACC&quot; then cmdMTZ_Inst_CommonACC_CLick
   menuActionMTZ_Inst_Common =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdMTZ_Inst_CommonAdd,cmdMTZ_Inst_CommonAdd.tag
  LoadBtnPictures cmdMTZ_Inst_CommonEdit,cmdMTZ_Inst_CommonEdit.tag
  LoadBtnPictures cmdMTZ_Inst_CommonDel,cmdMTZ_Inst_CommonDel.tag
  LoadBtnPictures cmdMTZ_Inst_CommonRef,cmdMTZ_Inst_CommonRef.tag
  LoadBtnPictures cmdMTZ_Inst_CommonPrn,cmdMTZ_Inst_CommonPrn.tag
  LoadBtnPictures cmdMTZ_Inst_CommonFnd,cmdMTZ_Inst_CommonFnd.tag
  LoadBtnPictures cmdMTZ_Inst_CommonRun,cmdMTZ_Inst_CommonRun.tag
  LoadBtnPictures cmdMTZ_Inst_CommonAcc,cmdMTZ_Inst_CommonAcc.tag
  LoadBtnPictures cmdMTZ_Inst_CommonCfg,cmdMTZ_Inst_CommonCfg.tag
  item.MTZ_Inst_Common.PrepareGrid gridMTZ_Inst_Common
  LoadGridLayout gridMTZ_Inst_Common
  Set fndMTZ_Inst_Common = Nothing
  On Error Resume Next
  Set fndMTZ_Inst_Common = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndMTZ_Inst_Common.Init gridMTZ_Inst_Common
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridMTZ_Inst_Common.Top = 40 * Screen.TwipsPerPixelX
      gridMTZ_Inst_Common.Left = 5 * Screen.TwipsPerPixelX
      gridMTZ_Inst_Common.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridMTZ_Inst_Common.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridMTZ_Inst_Common.Top = 40 * Screen.TwipsPerPixelX
      gridMTZ_Inst_Common.Left = 5 * Screen.TwipsPerPixelX
      gridMTZ_Inst_Common.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridMTZ_Inst_Common.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlMTZ_Inst_Common.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndMTZ_Inst_Common = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnMTZ_Inst_Section_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlMTZ_Inst_Section" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlMTZ_Inst_Section"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridMTZ_Inst_Section" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridMTZ_Inst_Section"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdMTZ_Inst_SectionAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_SectionAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridMTZ_Inst_Sec_Files" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridMTZ_Inst_Sec_Files"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdMTZ_Inst_Sec_FilesAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdMTZ_Inst_Sec_FilesAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupMTZ_Inst_Section" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Секции"/><Properties Name="Name" PropValue="mnuPopupMTZ_Inst_Section"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuMTZ_Inst_SectionAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionOpen"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionRef"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionS1"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuMTZ_Inst_SectionCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionCOPY"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionCUT"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionPASTE"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionCHANGE"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionCLEAN"/></ControlData></ControlData><ControlData Name="mnuMTZ_Inst_SectionPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionPrn"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionCfg"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionFind"/></ControlData><ControlData Name="mnuMTZ_Inst_SectionAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuMTZ_Inst_SectionAcc"/></ControlData></ControlData><ControlData Name="menuTimerMTZ_Inst_Section" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerMTZ_Inst_Section"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupMTZ_Inst_Sec_Files" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Файлы секции"/><Properties Name="Name" PropValue="mnuPopupMTZ_Inst_Sec_Files"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuMTZ_Inst_Sec_FilesAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesOpen"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesRef"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesS1"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuMTZ_Inst_Sec_FilesCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesCOPY"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesCUT"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesPASTE"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesCHANGE"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesCLEAN"/></ControlData></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesPrn"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesCfg"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesFind"/></ControlData><ControlData Name="mnuMTZ_Inst_Sec_FilesAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuMTZ_Inst_Sec_FilesAcc"/></ControlData></ControlData><ControlData Name="menuTimerMTZ_Inst_Sec_Files" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerMTZ_Inst_Sec_Files"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела 
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndMTZ_Inst_Section as object
private menuActionMTZ_Inst_Section as string
private fndMTZ_Inst_Sec_Files as object
private menuActionMTZ_Inst_Sec_Files as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlMTZ_Inst_Section_PositionChanged()
  pnlMTZ_Inst_Section.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridMTZ_Inst_Section_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdMTZ_Inst_SectionCfg_Click
        End If
    End If
end sub

private sub gridMTZ_Inst_Section_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupMTZ_Inst_Section
End If
end sub
private sub mnuMTZ_Inst_SectionAdd_click()
   menuActionMTZ_Inst_Section =&quot;ADD&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionEdit_click()
   menuActionMTZ_Inst_Section =&quot;EDIT&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionDelete_click()
   menuActionMTZ_Inst_Section =&quot;DEL&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionOpen_click()
   menuActionMTZ_Inst_Section =&quot;RUN&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionRef_click()
   menuActionMTZ_Inst_Section =&quot;REF&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
  Private Sub mnuMTZ_Inst_SectionCOPY_Click()
    On Error Resume Next
    If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Section.Row &gt; 0 Then
     If gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuMTZ_Inst_SectionCUT_Click()
    On Error Resume Next
    If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Section.Row &gt; 0 Then
     If gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridMTZ_Inst_Section.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuMTZ_Inst_SectionCHANGE_Click()
  On Error Resume Next
  If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
  If gridMTZ_Inst_Section.Row &gt; 0 Then
   If gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Section.ItemCount = u.parent.Count
      gridMTZ_Inst_Section.RefreshRowIndex gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuMTZ_Inst_SectionCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuMTZ_Inst_SectionPrn_click()
   menuActionMTZ_Inst_Section =&quot;PRN&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionCfg_click()
   menuActionMTZ_Inst_Section =&quot;CFG&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionFind_click()
   menuActionMTZ_Inst_Section =&quot;FND&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub mnuMTZ_Inst_SectionAcc_click()
   menuActionMTZ_Inst_Section =&quot;ACC&quot;
   menuTimerMTZ_Inst_Section.enabled = true
end sub
private sub menuTimerMTZ_Inst_Section_timer()
   menuTimerMTZ_Inst_Section.enabled = false
   if menuActionMTZ_Inst_Section =&quot;ADD&quot; then cmdMTZ_Inst_SectionADD_CLick
   if menuActionMTZ_Inst_Section =&quot;EDIT&quot; then cmdMTZ_Inst_SectionEDIT_CLick
   if menuActionMTZ_Inst_Section =&quot;DEL&quot; then cmdMTZ_Inst_SectionDEL_CLick
   if menuActionMTZ_Inst_Section =&quot;RUN&quot; then cmdMTZ_Inst_SectionRUN_CLick
   if menuActionMTZ_Inst_Section =&quot;REF&quot; then cmdMTZ_Inst_SectionREF_CLick
   if menuActionMTZ_Inst_Section =&quot;PRN&quot; then cmdMTZ_Inst_SectionPRN_CLick
   if menuActionMTZ_Inst_Section =&quot;CFG&quot; then cmdMTZ_Inst_SectionCFG_CLick
   if menuActionMTZ_Inst_Section =&quot;FND&quot; then cmdMTZ_Inst_SectionFND_CLick
   if menuActionMTZ_Inst_Section =&quot;ACC&quot; then cmdMTZ_Inst_SectionACC_CLick
   menuActionMTZ_Inst_Section =&quot;&quot;
end sub
Private Sub cmdMTZ_Inst_SectionCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridMTZ_Inst_Section,&quot;gridMTZ_Inst_Section&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_SectionPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridMTZ_Inst_Section,&quot;Секции&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_SectionRef_Click()
  on error resume next
  item.MTZ_Inst_Section.Refresh
  gridMTZ_Inst_Section.itemCount = item.MTZ_Inst_Section.count
  gridMTZ_Inst_Section.Refetch
  gridMTZ_Inst_Section.Refresh
End Sub
Private Sub cmdMTZ_Inst_SectionAcc_Click()
On Error Resume Next
If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Section.Row &gt; 0 Then
 If gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_SectionEdit_Click()
  on error resume next
If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Section.Row &gt; 0 then
 If gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmMTZ_Inst_Section_.Item = u
    again: frmMTZ_Inst_Section_.NotFirstTime = False
    frmMTZ_Inst_Section_.OnInit
    frmMTZ_Inst_Section_.Show vbModal
    If frmMTZ_Inst_Section_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridMTZ_Inst_Section.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_SectionDel_Click()
  on error resume next
  gridMTZ_Inst_Section.Delete
End Sub
Private Sub cmdMTZ_Inst_SectionAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.MTZ_Inst_Section.Add()

      Set frmMTZ_Inst_Section_.Item = u
      again: frmMTZ_Inst_Section_.NotFirstTime = False
      frmMTZ_Inst_Section_.OnInit
      frmMTZ_Inst_Section_.Show vbModal
      If frmMTZ_Inst_Section_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridMTZ_Inst_Section.ItemCount = Item.MTZ_Inst_Section.Count
        gridMTZ_Inst_Section.Refresh
        gridMTZ_Inst_Section.RefreshGroups
        gridMTZ_Inst_Section.Refreshsort
        gridMTZ_Inst_Section.MoveToBookmark u.ID &amp; &quot;MTZ_Inst_Section&quot;
      Else
        Item.MTZ_Inst_Section.Delete u.ID
        Item.MTZ_Inst_Section.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdMTZ_Inst_SectionFnd_Click()
  on error resume next
  fndMTZ_Inst_Section.ShowForm
End Sub
Private Sub cmdMTZ_Inst_SectionRun_Click()
  on error resume next
  gridMTZ_Inst_Section_DblClick
End Sub
Private Sub gridMTZ_Inst_Section_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.MTZ_Inst_Section.LoadRow gridMTZ_Inst_Section, RowIndex, Bookmark, Values
End Sub
Private Sub gridMTZ_Inst_Section_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridMTZ_Inst_Section_DblClick()
  cmdMTZ_Inst_SectionEdit_Click
End Sub
Private Sub gridMTZ_Inst_Section_KeyPress(KeyAscii As Integer)
  If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndMTZ_Inst_Section.FindOnPress KeyAscii
End Sub

Private Sub pnlMTZ_Inst_Section_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridMTZ_Inst_Section.Left = Left
  gridMTZ_Inst_Section.Top = Top + 25 * Screen.TwipsPerPixelY
  gridMTZ_Inst_Section.Width = Width
  gridMTZ_Inst_Section.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_SectionAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdMTZ_Inst_SectionAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuMTZ_Inst_SectionPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.MTZ_Inst_Section.Add()
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Section.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridMTZ_Inst_Sec_Files,&quot;gridMTZ_Inst_Sec_Files&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_Sec_FilesPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridMTZ_Inst_Sec_Files,&quot;Файлы секции&quot;
Set jset = Nothing
End Sub

Private Sub cmdMTZ_Inst_Sec_FilesAcc_Click()
On Error Resume Next
If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Sec_Files.Row &gt; 0 Then
 If gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Sec_Files.RowBookmark(gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesFnd_Click()
  on error resume next
  fndMTZ_Inst_Sec_Files.ShowForm
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesRun_Click()
  on error resume next
  gridMTZ_Inst_Sec_Files_DblClick
End Sub
Private Sub pnlMTZ_Inst_Section_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridMTZ_Inst_Sec_Files.Left = Left
  gridMTZ_Inst_Sec_Files.Top = Top + 25 * Screen.TwipsPerPixelY
  gridMTZ_Inst_Sec_Files.Width = Width
  gridMTZ_Inst_Sec_Files.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdMTZ_Inst_Sec_FilesAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdMTZ_Inst_Sec_FilesEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdMTZ_Inst_Sec_FilesAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesRef_Click()
  on error resume next
If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
If gridMTZ_Inst_Section.Row &gt; 0 Then
 If gridMTZ_Inst_Section.RowIndex ( gridMTZ_Inst_Section.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.MTZ_Inst_Sec_Files.refresh
   gridMTZ_Inst_Sec_Files.itemcount=gu.MTZ_Inst_Sec_Files.count
   gridMTZ_Inst_Sec_Files.refetch
   gridMTZ_Inst_Sec_Files.refresh
 else
  gridMTZ_Inst_Sec_Files.columns.clear
  gridMTZ_Inst_Sec_Files.itemcount=0
 End If
else
 gridMTZ_Inst_Sec_Files.columns.clear
 gridMTZ_Inst_Sec_Files.itemcount=0
End If
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesEdit_Click()
    If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridMTZ_Inst_Sec_Files.RowBookmark(gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmMTZ_Inst_Sec_Files_.Item = u
    again: frmMTZ_Inst_Sec_Files_.NotFirstTime = False
    frmMTZ_Inst_Sec_Files_.OnInit
    frmMTZ_Inst_Sec_Files_.Show vbModal
    If frmMTZ_Inst_Sec_Files_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridMTZ_Inst_Sec_Files.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesDel_Click()
  on error resume next
  gridMTZ_Inst_Sec_Files.Delete
End Sub
Private Sub cmdMTZ_Inst_Sec_FilesAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.MTZ_Inst_Sec_Files.Add()

      Set frmMTZ_Inst_Sec_Files_.Item = u
      again: frmMTZ_Inst_Sec_Files_.NotFirstTime = False
      frmMTZ_Inst_Sec_Files_.OnInit
      frmMTZ_Inst_Sec_Files_.Show vbModal
      If frmMTZ_Inst_Sec_Files_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridMTZ_Inst_Sec_Files.ItemCount = gu.MTZ_Inst_Sec_Files.Count
        gridMTZ_Inst_Sec_Files.Refresh
        gridMTZ_Inst_Sec_Files.RefreshGroups
        gridMTZ_Inst_Sec_Files.Refreshsort
        gridMTZ_Inst_Sec_Files.MoveToBookmark u.ID &amp; &quot;MTZ_Inst_Sec_Files&quot;
      Else
        gu.MTZ_Inst_Sec_Files.Delete u.ID
        gu.MTZ_Inst_Sec_Files.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridMTZ_Inst_Section_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridMTZ_Inst_Section.ItemCount = 0 Then 
  gridMTZ_Inst_Sec_Files.ItemCount=0
  Exit Sub
End If
If gridMTZ_Inst_Section.Row &gt; 0 Then
  If LastRow &lt;&gt; gridMTZ_Inst_Section.Row And LastRow &gt; 0 Then
    gridMTZ_Inst_Section.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridMTZ_Inst_Section.GetRowData(gridMTZ_Inst_Section.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridMTZ_Inst_Section.RowIndex ( gridMTZ_Inst_Section.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridMTZ_Inst_Section.Row or gridMTZ_Inst_Sec_Files.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.MTZ_Inst_Sec_Files.Preparegrid gridMTZ_Inst_Sec_Files
  gridMTZ_Inst_Sec_Files.ItemCount=0
    LoadGridLayout gridMTZ_Inst_Sec_Files
    Set fndMTZ_Inst_Sec_Files = Nothing
    Set fndMTZ_Inst_Sec_Files = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndMTZ_Inst_Sec_Files.Init gridMTZ_Inst_Sec_Files
  gridMTZ_Inst_Sec_Files.ItemCount=gu.MTZ_Inst_Sec_Files.Count
  End If
 End If
End If
End Sub
Private Sub gridMTZ_Inst_Sec_Files_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.MTZ_Inst_Sec_Files.LoadRow gridMTZ_Inst_Sec_Files, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridMTZ_Inst_Sec_Files_KeyPress(KeyAscii As Integer)
  If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndMTZ_Inst_Sec_Files.FindOnPress KeyAscii
End Sub

Private Sub gridMTZ_Inst_Sec_Files_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridMTZ_Inst_Sec_Files.RowBookmark(gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridMTZ_Inst_Sec_Files_DblClick()
    cmdMTZ_Inst_Sec_FilesEdit_click
End Sub
Private Sub gridMTZ_Inst_Sec_Files_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
 If gridMTZ_Inst_Sec_Files.Row &gt; 0 Then
   If LastRow &lt;&gt; gridMTZ_Inst_Sec_Files.Row And LastRow &gt; 0 Then
     gridMTZ_Inst_Sec_Files.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridMTZ_Inst_Sec_Files.GetRowData(gridMTZ_Inst_Sec_Files.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuMTZ_Inst_Sec_FilesPASTE_Click()
On Error Resume Next
    If gridMTZ_Inst_Section.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridMTZ_Inst_Section.RowBookmark(gridMTZ_Inst_Section.RowIndex(gridMTZ_Inst_Section.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.MTZ_Inst_Sec_Files.Add()
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Sec_Files.ItemCount = u.parent.Count
    ELSE
      GU.MTZ_Inst_Sec_Files.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridMTZ_Inst_Sec_Files_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdMTZ_Inst_Sec_FilesCfg_Click
        End If
    End If
end sub

private sub gridMTZ_Inst_Sec_Files_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupMTZ_Inst_Sec_Files
End If
end sub
private sub mnuMTZ_Inst_Sec_FilesAdd_click()
   menuActionMTZ_Inst_Sec_Files =&quot;ADD&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesEdit_click()
   menuActionMTZ_Inst_Sec_Files =&quot;EDIT&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesDelete_click()
   menuActionMTZ_Inst_Sec_Files =&quot;DEL&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesOpen_click()
   menuActionMTZ_Inst_Sec_Files =&quot;RUN&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesRef_click()
   menuActionMTZ_Inst_Sec_Files =&quot;REF&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
  Private Sub mnuMTZ_Inst_Sec_FilesCOPY_Click()
    On Error Resume Next
    If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Sec_Files.Row &gt; 0 Then
     If gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Sec_Files.RowBookmark(gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuMTZ_Inst_Sec_FilesCUT_Click()
    On Error Resume Next
    If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
    If gridMTZ_Inst_Sec_Files.Row &gt; 0 Then
     If gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridMTZ_Inst_Sec_Files.RowBookmark(gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridMTZ_Inst_Sec_Files.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuMTZ_Inst_Sec_FilesCHANGE_Click()
  On Error Resume Next
  If gridMTZ_Inst_Sec_Files.ItemCount = 0 Then Exit Sub
  If gridMTZ_Inst_Sec_Files.Row &gt; 0 Then
   If gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridMTZ_Inst_Sec_Files.RowBookmark(gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridMTZ_Inst_Sec_Files.ItemCount = u.parent.Count
      gridMTZ_Inst_Sec_Files.RefreshRowIndex gridMTZ_Inst_Sec_Files.RowIndex(gridMTZ_Inst_Sec_Files.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuMTZ_Inst_Sec_FilesCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuMTZ_Inst_Sec_FilesPrn_click()
   menuActionMTZ_Inst_Sec_Files =&quot;PRN&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesCfg_click()
   menuActionMTZ_Inst_Sec_Files =&quot;CFG&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesFind_click()
   menuActionMTZ_Inst_Sec_Files =&quot;FND&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub mnuMTZ_Inst_Sec_FilesAcc_click()
   menuActionMTZ_Inst_Sec_Files =&quot;ACC&quot;
   menuTimerMTZ_Inst_Sec_Files.enabled = true
end sub
private sub menuTimerMTZ_Inst_Sec_Files_timer()
   menuTimerMTZ_Inst_Sec_Files.enabled = false
   if menuActionMTZ_Inst_Sec_Files =&quot;ADD&quot; then cmdMTZ_Inst_Sec_FilesADD_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;EDIT&quot; then cmdMTZ_Inst_Sec_FilesEDIT_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;DEL&quot; then cmdMTZ_Inst_Sec_FilesDEL_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;RUN&quot; then cmdMTZ_Inst_Sec_FilesRUN_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;REF&quot; then cmdMTZ_Inst_Sec_FilesREF_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;PRN&quot; then cmdMTZ_Inst_Sec_FilesPRN_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;CFG&quot; then cmdMTZ_Inst_Sec_FilesCFG_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;FND&quot; then cmdMTZ_Inst_Sec_FilesFND_CLick
   if menuActionMTZ_Inst_Sec_Files =&quot;ACC&quot; then cmdMTZ_Inst_Sec_FilesACC_CLick
   menuActionMTZ_Inst_Sec_Files =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdMTZ_Inst_SectionAdd,cmdMTZ_Inst_SectionAdd.tag
  LoadBtnPictures cmdMTZ_Inst_SectionEdit,cmdMTZ_Inst_SectionEdit.tag
  LoadBtnPictures cmdMTZ_Inst_SectionDel,cmdMTZ_Inst_SectionDel.tag
  LoadBtnPictures cmdMTZ_Inst_SectionRef,cmdMTZ_Inst_SectionRef.tag
  LoadBtnPictures cmdMTZ_Inst_SectionPrn,cmdMTZ_Inst_SectionPrn.tag
  LoadBtnPictures cmdMTZ_Inst_SectionFnd,cmdMTZ_Inst_SectionFnd.tag
  LoadBtnPictures cmdMTZ_Inst_SectionRun,cmdMTZ_Inst_SectionRun.tag
  LoadBtnPictures cmdMTZ_Inst_SectionAcc,cmdMTZ_Inst_SectionAcc.tag
  LoadBtnPictures cmdMTZ_Inst_SectionCfg,cmdMTZ_Inst_SectionCfg.tag
  item.MTZ_Inst_Section.PrepareGrid gridMTZ_Inst_Section
  LoadGridLayout gridMTZ_Inst_Section
  Set fndMTZ_Inst_Section = Nothing
  On Error Resume Next
  Set fndMTZ_Inst_Section = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndMTZ_Inst_Section.Init gridMTZ_Inst_Section
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesAdd,cmdMTZ_Inst_Sec_FilesAdd.tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesEdit,cmdMTZ_Inst_Sec_FilesEdit.tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesDel,cmdMTZ_Inst_Sec_FilesDel.tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesRef,cmdMTZ_Inst_Sec_FilesRef.tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesPrn,cmdMTZ_Inst_Sec_FilesPrn.tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesFnd,cmdMTZ_Inst_Sec_FilesFnd.Tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesCfg,cmdMTZ_Inst_Sec_FilesCfg.tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesRun,cmdMTZ_Inst_Sec_FilesRun.Tag
  LoadBtnPictures cmdMTZ_Inst_Sec_FilesAcc,cmdMTZ_Inst_Sec_FilesAcc.Tag
  gridMTZ_Inst_Sec_Files.Columns.Clear
  gridMTZ_Inst_Sec_Files.ItemCount=0
  cmdMTZ_Inst_Sec_FilesRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlMTZ_Inst_Section.RestorePosition
  gridMTZ_Inst_Section_RowColChange gridMTZ_Inst_Section.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlMTZ_Inst_Section.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndMTZ_Inst_Section = nothing
  set fndMTZ_Inst_Sec_Files = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlMTZ_Inst_Build" ControlIndex="0" PROGID="MTZ_InstallGUI.vpnMTZ_Inst_Build_"><Properties Name="Name" PropValue="pnlMTZ_Inst_Build"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlMTZ_Inst_Common" ControlIndex="0" PROGID="MTZ_InstallGUI.vpnMTZ_Inst_Common_"><Properties Name="Name" PropValue="pnlMTZ_Inst_Common"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlMTZ_Inst_Section" ControlIndex="0" PROGID="MTZ_InstallGUI.vpnMTZ_Inst_Section_"><Properties Name="Name" PropValue="pnlMTZ_Inst_Section"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Инсталляция"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим 
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlMTZ_Inst_Build.IsOK
if IsItOk then IsItOk = pnlMTZ_Inst_Common.IsOK
if IsItOk then IsItOk = pnlMTZ_Inst_Section.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlMTZ_Inst_Section.Visible = False
  pnlMTZ_Inst_Common.Visible = False
  pnlMTZ_Inst_Build.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;MTZ_Inst_Build&quot;
     With pnlMTZ_Inst_Build
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlMTZ_Inst_Build.OnClick item,parentform
     End With
   Case &quot;MTZ_Inst_Common&quot;
     With pnlMTZ_Inst_Common
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlMTZ_Inst_Common.OnClick item,parentform
     End With
   Case &quot;MTZ_Inst_Section&quot;
     With pnlMTZ_Inst_Section
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlMTZ_Inst_Section.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Сборки&quot;
ts.Tabs.Item(1).key = &quot;MTZ_Inst_Build&quot;
pnlMTZ_Inst_Build.OnInit item, parentForm
call ts.Tabs.Add(, &quot;MTZ_Inst_Common&quot;, &quot;Пользовательские скрипты&quot;)
pnlMTZ_Inst_Common.OnInit item, parentForm
call ts.Tabs.Add(, &quot;MTZ_Inst_Section&quot;, &quot;Секции&quot;)
pnlMTZ_Inst_Section.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;MTZ_Install&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlMTZ_Inst_Build.CloseClass
 pnlMTZ_Inst_Common.CloseClass
 pnlMTZ_Inst_Section.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlMTZ_Inst_Build.OnSave
 pnlMTZ_Inst_Common.OnSave
 pnlMTZ_Inst_Section.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlMTZ_Inst_Build.IsChanged
m_IsChanged = m_IsChanged or pnlMTZ_Inst_Common.IsChanged
m_IsChanged = m_IsChanged or pnlMTZ_Inst_Section.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="MTZ_InstallGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Инсталляция"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим 
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;MTZ_Install&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;MTZ_Install&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;MTZ_Install&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="' модуль общих функций



"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Найти форму по имени
'Parameters:
'[IN]   Name , тип параметра: string, 
'[IN]   Mode , тип параметра: string =&quot;&quot;   - ...
'Returns:
'  объект класса form
'  ,или Nothing
'See Also:
'Example:
' dim variable as form
' Set variable = me.FormByName(...параметры...)
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;&quot; then

if Name=&quot;MTZ_Inst_Build&quot; then 
 set FormByName = new frmMTZ_Inst_Build_
 exit function
end if

if Name=&quot;MTZ_Inst_Build_Sec&quot; then 
 set FormByName = new frmMTZ_Inst_Build_Sec_
 exit function
end if

if Name=&quot;MTZ_Inst_Common&quot; then 
 set FormByName = new frmMTZ_Inst_Common_
 exit function
end if

if Name=&quot;MTZ_Inst_Section&quot; then 
 set FormByName = new frmMTZ_Inst_Section_
 exit function
end if

if Name=&quot;MTZ_Inst_Sec_Files&quot; then 
 set FormByName = new frmMTZ_Inst_Sec_Files_
 exit function
end if

end if
end function

'Скопировать объект в типизированный XML  буфер
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.SaveToBuffer({параметры})
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub


'Получить объект из типизированного XML  буфера
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.GetFromBuffer(...параметры...) 
Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
