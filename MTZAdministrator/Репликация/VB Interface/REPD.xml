<?xml version="1.0"?>
<root><AttributeHolder Name="Type" Value="ocx"/><AttributeHolder Name="Toolbox" Value="{E684D8A3-716C-4E59-AA94-7144C04B0074};{86CF1D34-0C5F-11D2-A9FC-0000F8754DA1};{EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B};{1801C003-859D-471D-BF31-D4428050324B};{F9043C88-F6F2-101A-A3C9-08002B2F49FB};{831FDD16-0C5C-11D2-A9FC-0000F8754DA1};{C932BA88-4374-101B-A56C-00AA003668DC}"/><AttributeHolder Name="References" Value="{2A75196C-D9EB-4129-B803-931327F72D5C};{45D6DB85-69D5-45C6-AD58-BB2DA56CCC79};{27532C15-381F-49B2-83D7-087D2BB897B8};{58DF4A4A-346E-4A52-82D1-1DC4A6CB4A60};{F5078F18-C551-11D3-89B9-0000F81FE221};{B33EE44C-4362-4227-932E-7BAD125CC18D}"/><AttributeHolder Name="ProjectName" Value="Данные репликации"/><AttributeHolder Name="Name" Value="REPDGUI"/><ModuleHolder ModuleName="GUI" File=""><AttributeHolder Name="Instancing" Value="multiuse"/><AttributeHolder Name="Type" Value="class"/><BlockHolder BlockName="'description" BlockCode="' основной интерфейс компонента REPDGUI
private mOpenModal as Boolean
Dim opf As OpenFormInfo
Dim openForms As Collection

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Конструктор класса REPD
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Initialize()
Private Sub Class_Initialize()
 Set openForms = New Collection
 App.Title = &quot;Данные репликации&quot;
End Sub


'Деструктор класса
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Class_Terminate()
Private Sub Class_Terminate()
  on error resume next
CloseClass
End Sub

'Очистка обратных ссылок
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
Public Sub CloseClass()
Dim f As OpenFormInfo
  on error resume next
For Each f In openForms
    Set f.Form.Host = Nothing
    Unload f.Form
    Set f.Form = Nothing
Next
Set openForms = Nothing
End Sub

'Поиск формы редактирования
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing 
'See Also:
'Example:
' dim variable as object
' Set variable = me.FindForm(...параметры...)
Private Function FindForm(ByVal InstanceID As String, ByVal mode As String) as object
  Dim f As OpenFormInfo
  For Each f In openForms
    If f.InstanceID = InstanceID And f.mode = mode and f.modal = false Then
      Set FindForm = f
      Exit Function
    End If
  Next
End Function

'Путь к текущей библиотеке
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
'  variable = me.GUIPath() 
Public function GUIPath() as string
    GUIPath=app.path &amp; &quot;\&quot; &amp; app.exename &amp; &quot;.ocx&quot; 
End function

'Количество открытых форм
'Parameters:
'[IN]   InstanceID , тип параметра: String  - ...
'Returns:
'  значение типа long
'See Also:
'Example:
' dim variable as long
' variable = me.FormCount(...параметры...) 
Public function FormCount(ByVal InstanceID As String) as long
    Dim f As OpenFormInfo
    Dim  cnt As Long
    cnt = 0
    For Each f In openForms
      If f.InstanceID = InstanceID Then
        cnt=cnt+1
      End If
    Next
    FormCount = cnt
End function

'Очистить форму
'Parameters:
'[IN]   InstanceID , тип параметра: String, 
'[IN]   mode , тип параметра: String, 
'[IN]   ModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.EraseForm({параметры})
Public Sub EraseForm(ByVal InstanceID As String, ByVal mode As String, byval ModalMode as boolean)
    on error resume next
    Dim f As OpenFormInfo
    Dim i As Long, cnt As Long
    i = 1
    cnt = FormCount(InstanceID)
    For Each f In openForms
      If f.InstanceID = InstanceID And f.mode = mode and f.modal=modalmode Then
        goto found
      End If
      i = i + 1
    Next
    exit sub
found:
    openForms.Remove i
    With f.Form
      If Not .item Is Nothing Then
         .item.Manager.FreeInstanceObject .item.ID
      End If
    end with
    Set f.Form.Host = Nothing
End Sub

'Указатель модального режима работы
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. IsModal
public property get IsModal() as boolean
 IsModal = mOpenModal
end property

'Показать форму редактирования документа
'Parameters:
'[IN]   mode , тип параметра: string, 
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   optional OpenModal , тип параметра: boolean = false  - ...
'See Also:
'Example:
'  call me.Show({параметры})
public sub Show(byval mode as string, ObjItem as object, optional OpenModal as boolean = false)
 dim f as form
 dim defaccess as boolean
 on error resume next
 mOpenModal = OpenModal
 App.Title = ObjItem.Brief &amp; &quot; (тип: Данные репликации)&quot; 
 defaccess = ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;OPEN&quot;) 
if not OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;REPD:&quot;)) then
   set opf = FindForm(objitem.id,mode)
   if opf is nothing then
     set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   end if
   set f = opf.Form
   f.init objItem, me,openmodal
   f.show
   f.windowState=0
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Данные репликации&quot; 
  end if
end if
if OpenModal then
  if defaccess or ( (not defaccess) and ObjItem.MTZSession.CheckRight(objItem.SecureStyleID,&quot;REPD:&quot;)) then
    set f = new frm_main
     Set opf = New OpenFormInfo
     Set opf.Form = f
     opf.InstanceID = ObjItem.ID
     opf.mode = mode
     opf.modal = openmodal
     openForms.Add opf
   f.init objItem, me,openmodal
     f.show vbmodal
     unload f
     set f  =nothing
  else
   MsgBox &quot;Доступ к документу запрещен&quot;,vbokonly+vbCritical ,&quot;Данные репликации&quot; 
  end if
end if
end sub

'Покзать форму редактирования строки раздела. RowItem -  объект строка, уже должен быть создан
'Parameters:
'[IN]   Mode , тип параметра: String, 
'[IN][OUT]   RowItem , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.ShowAddForm(...параметры...) 
Public Function ShowAddForm(ByVal Mode As String, RowItem As Object) As Boolean
 Dim f As Form
 Dim OK As Boolean
 On Error Resume Next
 Set f = Nothing
 Dim PartName As String
 PartName = TypeName(RowItem)

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;REPD_LOCKED&quot; Then
    Set f = New frmREPD_LOCKED_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;REPD_REQUESTQUERY&quot; Then
    Set f = New frmREPD_RequestQuery_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;REPD_RESQUERYRCV&quot; Then
    Set f = New frmREPD_ResQueryRcv_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If UCase(PartName) = &quot;REPD_PROV&quot; Then
    Set f = New frmREPD_PROV_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;REPD_SRV&quot; Then
    Set f = New frmREPD_SRV_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;REPD_SNDTO&quot; Then
    Set f = New frmREPD_SNDTO_
  End If

 If Mode = &quot;&quot; Then
  If UCase(PartName) = &quot;REPD_CONST&quot; Then
    Set f = New frmREPD_CONST_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;REPD_REPTYPE&quot; Then
    Set f = New frmREPD_REPTYPE_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
 End If
  If UCase(PartName) = &quot;REPD_SENDQ&quot; Then
    Set f = New frmREPD_SendQ_
  End If

 If Mode = &quot;&quot; Then
 End If
  If UCase(PartName) = &quot;REPD_RECVQ&quot; Then
    Set f = New frmREPD_RecvQ_
  End If

 If Mode = &quot;&quot; Then
 End If
 End If
  If f Is Nothing Then
    OK = False
  Else

    Set f.Item = RowItem
    f.OnInit
    f.Show vbModal
    Set f.Item = Nothing
    OK = f.OK
    Unload f
    Set f = Nothing
  End If
  ShowAddForm = OK
End Function


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_LOCKED" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLastTry"/><Properties Name="Caption" PropValue="Последняя разработка:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpLastTry"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Последняя разработка"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSourceFile"/><Properties Name="Caption" PropValue="Файл данных:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSourceFile"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="2048"/><Properties Name="ToolTipText" PropValue="Файл данных"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReplicaRowID"/><Properties Name="Caption" PropValue="Идентификатор строки реплики:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReplicaRowID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Идентификатор строки реплики"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFirstTry"/><Properties Name="Caption" PropValue="Первая обработка:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpFirstTry"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Первая обработка"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblStructType"/><Properties Name="Caption" PropValue="Тип строки:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtStructType"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Тип строки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblObjectType"/><Properties Name="Caption" PropValue="Тип объекта:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtObjectType"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Тип объекта"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThe_RowID"/><Properties Name="Caption" PropValue="Идетнификатор строки:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThe_RowID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Идетнификатор строки"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThe_InstanceID"/><Properties Name="Caption" PropValue="Объект:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThe_InstanceID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="Объект"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReplicaPackID"/><Properties Name="Caption" PropValue="ReplicaPackID:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReplicaPackID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="ReplicaPackID"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartCount"/><Properties Name="Caption" PropValue="PartCount:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartCount"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="PartCount"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartNumber"/><Properties Name="Caption" PropValue="PartNumber:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="PartNumber"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Очередь заблокированных объектов
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub dtpLastTry_Change()
  Changing

end sub
private sub txtSourceFile_Change()
  Changing

end sub
private sub txtReplicaRowID_Change()
  Changing

end sub
private sub dtpFirstTry_Change()
  Changing

end sub
private sub txtStructType_Change()
  Changing

end sub
private sub txtObjectType_Change()
  Changing

end sub
private sub txtThe_RowID_Change()
  Changing

end sub
private sub txtThe_InstanceID_Change()
  Changing

end sub
private sub txtReplicaPackID_Change()
  Changing

end sub
private sub txtPartCount_Validate(cancel as boolean)
if txtPartCount.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPartCount.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartCount.SetFocus 
  elseif Val(txtPartCount.text) &lt;&gt;clng(Val(txtPartCount.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartCount.SetFocus 
  end if
end if
end sub
Private Sub txtPartCount_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPartCount_Change()
  Changing

end sub
private sub txtPartNumber_Validate(cancel as boolean)
if txtPartNumber.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPartNumber.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartNumber.SetFocus 
  elseif Val(txtPartNumber.text) &lt;&gt;clng(Val(txtPartNumber.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartNumber.SetFocus 
  end if
end if
end sub
Private Sub txtPartNumber_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPartNumber_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpLastTry.value)
if mIsOK then mIsOK =IsSet(txtSourceFile.text)
if mIsOK then mIsOK =IsSet(txtReplicaRowID.text)
if mIsOK then mIsOK = IsSet(dtpFirstTry.value)
if mIsOK then mIsOK =IsSet(txtObjectType.text)
if mIsOK then mIsOK =IsSet(txtThe_InstanceID.text)
if mIsOK then mIsOK =IsSet(txtReplicaPackID.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

dtpLastTry = now
if item.LastTry &lt;&gt; 0 then
 dtpLastTry = item.LastTry
end if
  on error resume next
txtSourceFile = item.SourceFile
  on error resume next
txtReplicaRowID = item.ReplicaRowID
dtpFirstTry = now
if item.FirstTry &lt;&gt; 0 then
 dtpFirstTry = item.FirstTry
end if
  on error resume next
txtStructType = item.StructType
  on error resume next
txtObjectType = item.ObjectType
  on error resume next
txtThe_RowID = item.The_RowID
  on error resume next
txtThe_InstanceID = item.The_InstanceID
  on error resume next
txtReplicaPackID = item.ReplicaPackID
txtPartCount = item.PartCount
txtPartNumber = item.PartNumber
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

  if  isnull(dtpLastTry) then
    item.LastTry = 0
  else
    item.LastTry = dtpLastTry.value
  end if
item.SourceFile = txtSourceFile
item.ReplicaRowID = txtReplicaRowID
  if  isnull(dtpFirstTry) then
    item.FirstTry = 0
  else
    item.FirstTry = dtpFirstTry.value
  end if
item.StructType = txtStructType
item.ObjectType = txtObjectType
item.The_RowID = txtThe_RowID
item.The_InstanceID = txtThe_InstanceID
item.ReplicaPackID = txtReplicaPackID
item.PartCount = cdbl(txtPartCount)
item.PartNumber = cdbl(txtPartNumber)
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_RequestQuery" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheRowID"/><Properties Name="Caption" PropValue="TheRowID:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheRowID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="TheRowID"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReqPartName"/><Properties Name="Caption" PropValue="ReqPartName:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReqPartName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ReqPartName"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblObjectID"/><Properties Name="Caption" PropValue="ObjectID:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtObjectID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="ObjectID"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSourceSrv"/><Properties Name="Caption" PropValue="SourceSrv:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSourceSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="SourceSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSourceSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="SourceSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSendRecord"/><Properties Name="Caption" PropValue="SendRecord:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSendRecord"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="SendRecord"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSendRecord"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="SendRecord"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDestSrv"/><Properties Name="Caption" PropValue="DestSrv:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDestSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDestSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProvider"/><Properties Name="Caption" PropValue="Provider:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProvider"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProvider"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4635"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReqTypeName"/><Properties Name="Caption" PropValue="ReqTypeName:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReqTypeName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ReqTypeName"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Запрос данных на объект\ строку
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheRowID_Change()
  Changing

end sub
private sub txtReqPartName_Change()
  Changing

end sub
private sub txtObjectID_Change()
  Changing

end sub
private sub txtSourceSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSourceSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtSourceSrv.Tag = Left(id, 38)
          txtSourceSrv = brief
        End If
end sub
private sub cmdSourceSrv_MenuClick(ByVal sCaption As String)
          txtSourceSrv.Tag = &quot;&quot;
          txtSourceSrv = &quot;&quot;
End sub
private sub txtSendRecord_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSendRecord_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SendQ&quot;, id, brief) Then
          txtSendRecord.Tag = Left(id, 38)
          txtSendRecord = brief
        End If
end sub
private sub cmdSendRecord_MenuClick(ByVal sCaption As String)
          txtSendRecord.Tag = &quot;&quot;
          txtSendRecord = &quot;&quot;
End sub
private sub txtDestSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDestSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtDestSrv.Tag = Left(id, 38)
          txtDestSrv = brief
        End If
end sub
private sub cmdDestSrv_MenuClick(ByVal sCaption As String)
          txtDestSrv.Tag = &quot;&quot;
          txtDestSrv = &quot;&quot;
End sub
private sub txtProvider_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProvider_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_PROV&quot;, id, brief) Then
          txtProvider.Tag = Left(id, 38)
          txtProvider = brief
        End If
end sub
private sub cmdProvider_MenuClick(ByVal sCaption As String)
          txtProvider.Tag = &quot;&quot;
          txtProvider = &quot;&quot;
End sub
private sub txtReqTypeName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtSourceSrv.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtProvider.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheRowID = item.TheRowID
  on error resume next
txtReqPartName = item.ReqPartName
  on error resume next
txtObjectID = item.ObjectID
If Not item.SourceSrv Is Nothing Then
  txtSourceSrv.Tag = item.SourceSrv.id
  txtSourceSrv = item.SourceSrv.brief
else
  txtSourceSrv.Tag = &quot;&quot; 
  txtSourceSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdSourceSrv,cmdSourceSrv.tag
  cmdSourceSrv.RemoveAllMenu
  cmdSourceSrv.AddMenu &quot;Очистить&quot; 
If Not item.SendRecord Is Nothing Then
  txtSendRecord.Tag = item.SendRecord.id
  txtSendRecord = item.SendRecord.brief
else
  txtSendRecord.Tag = &quot;&quot; 
  txtSendRecord = &quot;&quot; 
End If
 LoadBtnPictures cmdSendRecord,cmdSendRecord.tag
  cmdSendRecord.RemoveAllMenu
  cmdSendRecord.AddMenu &quot;Очистить&quot; 
If Not item.DestSrv Is Nothing Then
  txtDestSrv.Tag = item.DestSrv.id
  txtDestSrv = item.DestSrv.brief
else
  txtDestSrv.Tag = &quot;&quot; 
  txtDestSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdDestSrv,cmdDestSrv.tag
  cmdDestSrv.RemoveAllMenu
  cmdDestSrv.AddMenu &quot;Очистить&quot; 
If Not item.Provider Is Nothing Then
  txtProvider.Tag = item.Provider.id
  txtProvider = item.Provider.brief
else
  txtProvider.Tag = &quot;&quot; 
  txtProvider = &quot;&quot; 
End If
 LoadBtnPictures cmdProvider,cmdProvider.tag
  cmdProvider.RemoveAllMenu
  cmdProvider.AddMenu &quot;Очистить&quot; 
  on error resume next
txtReqTypeName = item.ReqTypeName
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheRowID = txtTheRowID
item.ReqPartName = txtReqPartName
item.ObjectID = txtObjectID
If txtSourceSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.SourceSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtSourceSrv.Tag)
Else
  Set item.SourceSrv = Nothing
End If
If txtSendRecord.Tag &lt;&gt; &quot;&quot; Then
  Set item.SendRecord = Item.Application.FindRowObject(&quot;REPD_SendQ&quot;,txtSendRecord.Tag)
Else
  Set item.SendRecord = Nothing
End If
If txtDestSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.DestSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtDestSrv.Tag)
Else
  Set item.DestSrv = Nothing
End If
If txtProvider.Tag &lt;&gt; &quot;&quot; Then
  Set item.Provider = Item.Application.FindRowObject(&quot;REPD_PROV&quot;,txtProvider.Tag)
Else
  Set item.Provider = Nothing
End If
item.ReqTypeName = txtReqTypeName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_ResQueryRcv" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReceiveRec"/><Properties Name="Caption" PropValue="ReceiveRec:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReceiveRec"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="ReceiveRec"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdReceiveRec"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="ReceiveRec"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Результат запроса
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtReceiveRec_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdReceiveRec_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_RecvQ&quot;, id, brief) Then
          txtReceiveRec.Tag = Left(id, 38)
          txtReceiveRec = brief
        End If
end sub
private sub cmdReceiveRec_MenuClick(ByVal sCaption As String)
          txtReceiveRec.Tag = &quot;&quot;
          txtReceiveRec = &quot;&quot;
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtReceiveRec.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.ReceiveRec Is Nothing Then
  txtReceiveRec.Tag = item.ReceiveRec.id
  txtReceiveRec = item.ReceiveRec.brief
else
  txtReceiveRec.Tag = &quot;&quot; 
  txtReceiveRec = &quot;&quot; 
End If
 LoadBtnPictures cmdReceiveRec,cmdReceiveRec.tag
  cmdReceiveRec.RemoveAllMenu
  cmdReceiveRec.AddMenu &quot;Очистить&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtReceiveRec.Tag &lt;&gt; &quot;&quot; Then
  Set item.ReceiveRec = Item.Application.FindRowObject(&quot;REPD_RecvQ&quot;,txtReceiveRec.Tag)
Else
  Set item.ReceiveRec = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_PROV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAssemblyName"/><Properties Name="Caption" PropValue="AssemblyName:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtAssemblyName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="AssemblyName"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblClassName"/><Properties Name="Caption" PropValue="ClassName:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtClassName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="ClassName"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Name:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Name"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Провайдер репликациии
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtAssemblyName_Change()
  Changing

end sub
private sub txtClassName_Change()
  Changing

end sub
private sub txtName_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtAssemblyName.text)
if mIsOK then mIsOK =IsSet(txtClassName.text)
if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtAssemblyName = item.AssemblyName
  on error resume next
txtClassName = item.ClassName
  on error resume next
txtName = item.Name
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.AssemblyName = txtAssemblyName
item.ClassName = txtClassName
item.Name = txtName
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_SRV" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblObj3"/><Properties Name="Caption" PropValue="Obj3:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtObj3"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Obj3"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdObj3"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Obj3"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblname"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtname"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblObj2"/><Properties Name="Caption" PropValue="Obj2:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtObj2"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Obj2"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdObj2"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Obj2"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblObj1"/><Properties Name="Caption" PropValue="Obj1:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtObj1"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Obj1"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdObj1"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="2520"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Obj1"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Узлы репликации
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtObj3_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdObj3_CLick()
  on error resume next
     If txtObj3.Tag =&quot;&quot; then
       cmdObj3_MenuClick &quot;Выбрать&quot; 
     Else
       cmdObj3_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdObj3_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtObj3.Tag = &quot;&quot;
          txtObj3 = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtObj3.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtObj3.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtObj3.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtObj3.Tag = left(ID,38)
          txtObj3 = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtObj3.Tag = obj.ID
              txtObj3 = obj.brief
          else
              txtObj3.Tag = &quot;&quot;
              txtObj3 = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtname_Change()
  Changing

end sub
private sub txtObj2_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdObj2_CLick()
  on error resume next
     If txtObj2.Tag =&quot;&quot; then
       cmdObj2_MenuClick &quot;Выбрать&quot; 
     Else
       cmdObj2_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdObj2_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtObj2.Tag = &quot;&quot;
          txtObj2 = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtObj2.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtObj2.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtObj2.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtObj2.Tag = left(ID,38)
          txtObj2 = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtObj2.Tag = obj.ID
              txtObj2 = obj.brief
          else
              txtObj2.Tag = &quot;&quot;
              txtObj2 = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
private sub txtObj1_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdObj1_CLick()
  on error resume next
     If txtObj1.Tag =&quot;&quot; then
       cmdObj1_MenuClick &quot;Выбрать&quot; 
     Else
       cmdObj1_MenuClick &quot;Открыть&quot; 
     End If
end sub
private sub cmdObj1_MenuClick(ByVal sCaption As String)
  on error resume next
    dim inst as object
    dim obj as object
    dim Gobj as object
    Dim OK As boolean
    Dim id As string
    Dim brief As string
  if sCaption =&quot;Очистить&quot; then
          txtObj1.Tag = &quot;&quot;
          txtObj1 = &quot;&quot;
  end if
  if sCaption =&quot;Открыть&quot; then
    if txtObj1.tag =&quot;&quot; then exit sub
    set inst  = item.Application.Manager.GetInstanceObject(txtObj1.tag)
    if inst is nothing then exit sub
    set obj = item.Application.Manager.GetInstanceGUI(txtObj1.tag)
    obj.show &quot;&quot;, inst,false
    set obj =nothing
    set inst =nothing
  end if
  if sCaption =&quot;Выбрать&quot; then
        OK=Item.Application.Manager.GetObjectListDialogEx(id,brief,&quot;&quot;,&quot;&quot;)
        If OK Then
          txtObj1.Tag = left(ID,38)
          txtObj1 = brief
        End If
  end if
  if sCaption =&quot;Создать&quot; then
     on error resume next
        Set obj = Item.Application.Manager.GetNewObject()
        If not obj is nothing Then
          SET GOBJ = Item.Application.Manager.GetInstanceGUI(obj.id)
          GOBJ.Show &quot;&quot;,obj,false
          Set obj = Item.Application.Manager.GetInstanceObject(obj.id)
          If (Not Obj Is Nothing) Then
              txtObj1.Tag = obj.ID
              txtObj1 = obj.brief
          else
              txtObj1.Tag = &quot;&quot;
              txtObj1 = &quot;&quot;
          end if
          set obj = nothing
          set Gobj = nothing
        End If
  end if
End sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtname.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.Obj3 Is Nothing Then
  txtObj3.Tag = item.Obj3.id
  txtObj3 = item.Obj3.brief
else
  txtObj3.Tag = &quot;&quot; 
  txtObj3 = &quot;&quot; 
End If
 LoadBtnPictures cmdObj3,cmdObj3.tag
  cmdObj3.RemoveAllMenu
  cmdObj3.AddMenu &quot;Очистить&quot; 
  cmdObj3.AddMenu &quot;Создать&quot; 
  cmdObj3.AddMenu &quot;Выбрать&quot; 
  cmdObj3.AddMenu &quot;Открыть&quot; 
  on error resume next
txtname = item.name
If Not item.Obj2 Is Nothing Then
  txtObj2.Tag = item.Obj2.id
  txtObj2 = item.Obj2.brief
else
  txtObj2.Tag = &quot;&quot; 
  txtObj2 = &quot;&quot; 
End If
 LoadBtnPictures cmdObj2,cmdObj2.tag
  cmdObj2.RemoveAllMenu
  cmdObj2.AddMenu &quot;Очистить&quot; 
  cmdObj2.AddMenu &quot;Создать&quot; 
  cmdObj2.AddMenu &quot;Выбрать&quot; 
  cmdObj2.AddMenu &quot;Открыть&quot; 
If Not item.Obj1 Is Nothing Then
  txtObj1.Tag = item.Obj1.id
  txtObj1 = item.Obj1.brief
else
  txtObj1.Tag = &quot;&quot; 
  txtObj1 = &quot;&quot; 
End If
 LoadBtnPictures cmdObj1,cmdObj1.tag
  cmdObj1.RemoveAllMenu
  cmdObj1.AddMenu &quot;Очистить&quot; 
  cmdObj1.AddMenu &quot;Создать&quot; 
  cmdObj1.AddMenu &quot;Выбрать&quot; 
  cmdObj1.AddMenu &quot;Открыть&quot; 
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtObj3.Tag &lt;&gt; &quot;&quot; Then
  Set item.Obj3 = Item.Application.Manager.GetInstanceObject(txtObj3.Tag)
Else
  Set item.Obj3 = Nothing
End If
item.name = txtname
If txtObj2.Tag &lt;&gt; &quot;&quot; Then
  Set item.Obj2 = Item.Application.Manager.GetInstanceObject(txtObj2.Tag)
Else
  Set item.Obj2 = Nothing
End If
If txtObj1.Tag &lt;&gt; &quot;&quot; Then
  Set item.Obj1 = Item.Application.Manager.GetInstanceObject(txtObj1.Tag)
Else
  Set item.Obj1 = Nothing
End If
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_SNDTO" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDestSrv"/><Properties Name="Caption" PropValue="DestSrv:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDestSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDestSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLastScan"/><Properties Name="Caption" PropValue="Last scan:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpLastScan"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Last scan"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblConfig"/><Properties Name="Caption" PropValue="Config:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtConfig"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Config"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLastReceive"/><Properties Name="Caption" PropValue="Last Receive:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpLastReceive"/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Last Receive"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProvider"/><Properties Name="Caption" PropValue="Provider:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProvider"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProvider"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4125"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWork_Start"/><Properties Name="Caption" PropValue="Начало работы (время):"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpWork_Start"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Начало работы (время)"/><Properties Name="CustomFormat" PropValue="HH:mm:ss"/><Properties Name="Width" PropValue="1800"/><Properties Name="UpDown" PropValue="True"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblWork_End"/><Properties Name="Caption" PropValue="Окончание работы (время):"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpWork_End"/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Окончание работы (время)"/><Properties Name="CustomFormat" PropValue="HH:mm:ss"/><Properties Name="Width" PropValue="1800"/><Properties Name="UpDown" PropValue="True"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblThe_Interval"/><Properties Name="Caption" PropValue="Интервал:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtThe_Interval"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Интервал"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblIsActive"/><Properties Name="Caption" PropValue="Активен:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbIsActive"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Активен"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblLastApproveLog"/><Properties Name="Caption" PropValue="Последнее подтверждение (лог):"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpLastApproveLog"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Последнее подтверждение (лог)"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Получатели реплик
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtDestSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDestSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtDestSrv.Tag = Left(id, 38)
          txtDestSrv = brief
        End If
end sub
private sub cmdDestSrv_MenuClick(ByVal sCaption As String)
          txtDestSrv.Tag = &quot;&quot;
          txtDestSrv = &quot;&quot;
End sub
private sub dtpLastScan_Change()
  Changing

end sub
private sub txtConfig_Change()
  Changing

end sub
private sub dtpLastReceive_Change()
  Changing

end sub
private sub txtProvider_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProvider_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_PROV&quot;, id, brief) Then
          txtProvider.Tag = Left(id, 38)
          txtProvider = brief
        End If
end sub
private sub cmdProvider_MenuClick(ByVal sCaption As String)
          txtProvider.Tag = &quot;&quot;
          txtProvider = &quot;&quot;
End sub
private sub dtpWork_Start_Change()
  Changing

end sub
private sub dtpWork_End_Change()
  Changing

end sub
private sub txtThe_Interval_Validate(cancel as boolean)
if txtThe_Interval.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtThe_Interval.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtThe_Interval.SetFocus 
  elseif Val(txtThe_Interval.text) &lt;&gt;clng(Val(txtThe_Interval.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtThe_Interval.SetFocus 
  end if
end if
end sub
Private Sub txtThe_Interval_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtThe_Interval_Change()
  Changing

end sub
private sub cmbIsActive_Click()
  on error resume next
  Changing

end sub
private sub dtpLastApproveLog_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtDestSrv.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtProvider.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbIsActive.ListIndex &gt;=0)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.DestSrv Is Nothing Then
  txtDestSrv.Tag = item.DestSrv.id
  txtDestSrv = item.DestSrv.brief
else
  txtDestSrv.Tag = &quot;&quot; 
  txtDestSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdDestSrv,cmdDestSrv.tag
  cmdDestSrv.RemoveAllMenu
  cmdDestSrv.AddMenu &quot;Очистить&quot; 
dtpLastScan = now
if item.LastScan &lt;&gt; 0 then
 dtpLastScan = item.LastScan
else
 dtpLastScan.value = null
end if
txtConfig = item.Config
dtpLastReceive = now
if item.LastReceive &lt;&gt; 0 then
 dtpLastReceive = item.LastReceive
else
 dtpLastReceive.value = null
end if
If Not item.Provider Is Nothing Then
  txtProvider.Tag = item.Provider.id
  txtProvider = item.Provider.brief
else
  txtProvider.Tag = &quot;&quot; 
  txtProvider = &quot;&quot; 
End If
 LoadBtnPictures cmdProvider,cmdProvider.tag
  cmdProvider.RemoveAllMenu
  cmdProvider.AddMenu &quot;Очистить&quot; 
dtpWork_Start = time
if item.Work_Start &lt;&gt; 0 then
 dtpWork_Start = item.Work_Start
else
 dtpWork_Start.value = null
end if
dtpWork_End = time
if item.Work_End &lt;&gt; 0 then
 dtpWork_End = item.Work_End
else
 dtpWork_End.value = null
end if
txtThe_Interval = item.The_Interval
cmbIsActive.Clear
cmbIsActive.additem &quot;Да&quot;
cmbIsActive.itemdata(cmbIsActive.newindex)= -1
cmbIsActive.additem &quot;Нет&quot;
cmbIsActive.itemdata(cmbIsActive.newindex)= 0
 For iii = 0 To cmbIsActive.ListCount-1
  If Item.IsActive = cmbIsActive.ItemData(iii) Then
   cmbIsActive.ListIndex = iii
   Exit For
  End If
 Next
dtpLastApproveLog = now
if item.LastApproveLog &lt;&gt; 0 then
 dtpLastApproveLog = item.LastApproveLog
else
 dtpLastApproveLog.value = null
end if
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtDestSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.DestSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtDestSrv.Tag)
Else
  Set item.DestSrv = Nothing
End If
  if  isnull(dtpLastScan) then
    item.LastScan = 0
  else
    item.LastScan = dtpLastScan.value
  end if
item.Config = txtConfig
  if  isnull(dtpLastReceive) then
    item.LastReceive = 0
  else
    item.LastReceive = dtpLastReceive.value
  end if
If txtProvider.Tag &lt;&gt; &quot;&quot; Then
  Set item.Provider = Item.Application.FindRowObject(&quot;REPD_PROV&quot;,txtProvider.Tag)
Else
  Set item.Provider = Nothing
End If
  if  isnull(dtpWork_Start) then
    item.Work_Start = 0
  else
    item.Work_Start = dtpWork_Start.value
  end if
  if  isnull(dtpWork_End) then
    item.Work_End = 0
  else
    item.Work_End = dtpWork_End.value
  end if
item.The_Interval = cdbl(txtThe_Interval)
 if cmbIsActive.listindex&gt;=0 then
   item.IsActive = cmbIsActive.itemdata(cmbIsActive.listindex)
 end if
  if  isnull(dtpLastApproveLog) then
    item.LastApproveLog = 0
  else
    item.LastApproveLog = dtpLastApproveLog.value
  end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_CONST" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblName"/><Properties Name="Caption" PropValue="Название:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Название"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheValue"/><Properties Name="Caption" PropValue="Значение:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheValue"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="255"/><Properties Name="ToolTipText" PropValue="Значение"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела 
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtName_Change()
  Changing

end sub
private sub txtTheValue_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =IsSet(txtName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtName = item.Name
  on error resume next
txtTheValue = item.TheValue
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.Name = txtName
item.TheValue = txtTheValue
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_REPTYPE" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReplicaType"/><Properties Name="Caption" PropValue="Тип репликации:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbReplicaType"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Тип репликации"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheObjectType"/><Properties Name="Caption" PropValue="Тип объекта:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheObjectType"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Тип объекта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdTheObjectType"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1110"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Тип объекта"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblUseFilter"/><Properties Name="Caption" PropValue="Фильтровать по условию:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbUseFilter"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Фильтровать по условию"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblRepConditonQRY"/><Properties Name="Caption" PropValue="Условие репликации:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtRepConditonQRY"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Условие репликации"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Описание типа репликации документов для узла
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub cmbReplicaType_Click()
  on error resume next
  Changing

end sub
private sub txtTheObjectType_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdTheObjectType_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;OBJECTTYPE&quot;, id, brief) Then
          txtTheObjectType.Tag = Left(id, 38)
          txtTheObjectType = brief
        End If
end sub
private sub cmdTheObjectType_MenuClick(ByVal sCaption As String)
          txtTheObjectType.Tag = &quot;&quot;
          txtTheObjectType = &quot;&quot;
End sub
private sub cmbUseFilter_Click()
  on error resume next
  Changing

end sub
private sub txtRepConditonQRY_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK =(cmbReplicaType.ListIndex &gt;=0)
if mIsOK then mIsOK = txtTheObjectType.Tag&lt;&gt;&quot;&quot;
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

cmbReplicaType.Clear
cmbReplicaType.additem &quot;Весь документ&quot;
cmbReplicaType.itemdata(cmbReplicaType.newindex)= 0
cmbReplicaType.additem &quot;Локальный&quot;
cmbReplicaType.itemdata(cmbReplicaType.newindex)= 2
cmbReplicaType.additem &quot;Построчно&quot;
cmbReplicaType.itemdata(cmbReplicaType.newindex)= 1
 For iii = 0 To cmbReplicaType.ListCount-1
  If Item.ReplicaType = cmbReplicaType.ItemData(iii) Then
   cmbReplicaType.ListIndex = iii
   Exit For
  End If
 Next
If Not item.TheObjectType Is Nothing Then
  txtTheObjectType.Tag = item.TheObjectType.id
  txtTheObjectType = item.TheObjectType.brief
else
  txtTheObjectType.Tag = &quot;&quot; 
  txtTheObjectType = &quot;&quot; 
End If
 LoadBtnPictures cmdTheObjectType,cmdTheObjectType.tag
  cmdTheObjectType.RemoveAllMenu
  cmdTheObjectType.AddMenu &quot;Очистить&quot; 
cmbUseFilter.Clear
cmbUseFilter.additem &quot;Да&quot;
cmbUseFilter.itemdata(cmbUseFilter.newindex)= -1
cmbUseFilter.additem &quot;Нет&quot;
cmbUseFilter.itemdata(cmbUseFilter.newindex)= 0
 For iii = 0 To cmbUseFilter.ListCount-1
  If Item.UseFilter = cmbUseFilter.ItemData(iii) Then
   cmbUseFilter.ListIndex = iii
   Exit For
  End If
 Next
txtRepConditonQRY = item.RepConditonQRY
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

 if cmbReplicaType.listindex&gt;=0 then
   item.ReplicaType = cmbReplicaType.itemdata(cmbReplicaType.listindex)
 end if
If txtTheObjectType.Tag &lt;&gt; &quot;&quot; Then
  Set item.TheObjectType = Item.Application.FindRowObject(&quot;OBJECTTYPE&quot;,txtTheObjectType.Tag)
Else
  Set item.TheObjectType = Nothing
End If
 if cmbUseFilter.listindex&gt;=0 then
   item.UseFilter = cmbUseFilter.itemdata(cmbUseFilter.listindex)
 end if
item.RepConditonQRY = txtRepConditonQRY
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_SendQ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSourceSrv"/><Properties Name="Caption" PropValue="SourceSrv:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSourceSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="SourceSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSourceSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="405"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="SourceSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblConfig"/><Properties Name="Caption" PropValue="Config:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtConfig"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="1200"/><Properties Name="Width" PropValue="3000"/><Properties Name="Multiline" PropValue="True"/><Properties Name="Scrollbars" PropValue="2"/><Properties Name="ToolTipText" PropValue="Config"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSentDate"/><Properties Name="Caption" PropValue="SentDate:"/><Properties Name="Top" PropValue="2385"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpSentDate"/><Properties Name="Top" PropValue="2715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="SentDate"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDestSrv"/><Properties Name="Caption" PropValue="DestSrv:"/><Properties Name="Top" PropValue="3090"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDestSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3420"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDestSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3420"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProvider"/><Properties Name="Caption" PropValue="Provider:"/><Properties Name="Top" PropValue="3795"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProvider"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="4125"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProvider"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="4125"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAcknowelge"/><Properties Name="Caption" PropValue="Acknowelge:"/><Properties Name="Top" PropValue="4500"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAcknowelge"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4830"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Acknowelge"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSendSize"/><Properties Name="Caption" PropValue="SendSize:"/><Properties Name="Top" PropValue="5205"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSendSize"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5535"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="SendSize"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCheckDate"/><Properties Name="Caption" PropValue="CheckDate:"/><Properties Name="Top" PropValue="5910"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpCheckDate"/><Properties Name="Top" PropValue="6240"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="CheckDate"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReplicaPackID"/><Properties Name="Caption" PropValue="ReplicaPackID:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReplicaPackID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="ReplicaPackID"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFileName"/><Properties Name="Caption" PropValue="FileName:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFileName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1024"/><Properties Name="ToolTipText" PropValue="FileName"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartCount"/><Properties Name="Caption" PropValue="Количество частей:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartCount"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество частей"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartNumber"/><Properties Name="Caption" PropValue="Часть:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Часть"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSent"/><Properties Name="Caption" PropValue="Sent:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbSent"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Sent"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReplicatorPointer"/><Properties Name="Caption" PropValue="Указатель репликации:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpReplicatorPointer"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Указатель репликации"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Очередь отсылки
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtSourceSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSourceSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtSourceSrv.Tag = Left(id, 38)
          txtSourceSrv = brief
        End If
end sub
private sub cmdSourceSrv_MenuClick(ByVal sCaption As String)
          txtSourceSrv.Tag = &quot;&quot;
          txtSourceSrv = &quot;&quot;
End sub
private sub txtConfig_Change()
  Changing

end sub
private sub dtpSentDate_Change()
  Changing

end sub
private sub txtDestSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDestSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtDestSrv.Tag = Left(id, 38)
          txtDestSrv = brief
        End If
end sub
private sub cmdDestSrv_MenuClick(ByVal sCaption As String)
          txtDestSrv.Tag = &quot;&quot;
          txtDestSrv = &quot;&quot;
End sub
private sub txtProvider_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProvider_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_PROV&quot;, id, brief) Then
          txtProvider.Tag = Left(id, 38)
          txtProvider = brief
        End If
end sub
private sub cmdProvider_MenuClick(ByVal sCaption As String)
          txtProvider.Tag = &quot;&quot;
          txtProvider = &quot;&quot;
End sub
private sub cmbAcknowelge_Click()
  on error resume next
  Changing

end sub
private sub txtSendSize_Validate(cancel as boolean)
if txtSendSize.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtSendSize.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSendSize.SetFocus 
  elseif Val(txtSendSize.text) &lt;&gt;clng(Val(txtSendSize.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtSendSize.SetFocus 
  end if
end if
end sub
Private Sub txtSendSize_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtSendSize_Change()
  Changing

end sub
private sub dtpCheckDate_Change()
  Changing

end sub
private sub txtReplicaPackID_Change()
  Changing

end sub
private sub txtFileName_Change()
  Changing

end sub
private sub txtPartCount_Validate(cancel as boolean)
if txtPartCount.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPartCount.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartCount.SetFocus 
  elseif Val(txtPartCount.text) &lt;&gt;clng(Val(txtPartCount.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartCount.SetFocus 
  end if
end if
end sub
Private Sub txtPartCount_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPartCount_Change()
  Changing

end sub
private sub txtPartNumber_Validate(cancel as boolean)
if txtPartNumber.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPartNumber.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartNumber.SetFocus 
  elseif Val(txtPartNumber.text) &lt;&gt;clng(Val(txtPartNumber.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartNumber.SetFocus 
  end if
end if
end sub
Private Sub txtPartNumber_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPartNumber_Change()
  Changing

end sub
private sub cmbSent_Click()
  on error resume next
  Changing

end sub
private sub dtpReplicatorPointer_Change()
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = txtDestSrv.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtProvider.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbAcknowelge.ListIndex &gt;=0)
if mIsOK then mIsOK = IsSet(dtpCheckDate.value)
if mIsOK then mIsOK =IsSet(txtReplicaPackID.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

If Not item.SourceSrv Is Nothing Then
  txtSourceSrv.Tag = item.SourceSrv.id
  txtSourceSrv = item.SourceSrv.brief
else
  txtSourceSrv.Tag = &quot;&quot; 
  txtSourceSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdSourceSrv,cmdSourceSrv.tag
  cmdSourceSrv.RemoveAllMenu
  cmdSourceSrv.AddMenu &quot;Очистить&quot; 
txtConfig = item.Config
dtpSentDate = now
if item.SentDate &lt;&gt; 0 then
 dtpSentDate = item.SentDate
else
 dtpSentDate.value = null
end if
If Not item.DestSrv Is Nothing Then
  txtDestSrv.Tag = item.DestSrv.id
  txtDestSrv = item.DestSrv.brief
else
  txtDestSrv.Tag = &quot;&quot; 
  txtDestSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdDestSrv,cmdDestSrv.tag
  cmdDestSrv.RemoveAllMenu
  cmdDestSrv.AddMenu &quot;Очистить&quot; 
If Not item.Provider Is Nothing Then
  txtProvider.Tag = item.Provider.id
  txtProvider = item.Provider.brief
else
  txtProvider.Tag = &quot;&quot; 
  txtProvider = &quot;&quot; 
End If
 LoadBtnPictures cmdProvider,cmdProvider.tag
  cmdProvider.RemoveAllMenu
  cmdProvider.AddMenu &quot;Очистить&quot; 
cmbAcknowelge.Clear
cmbAcknowelge.additem &quot;Да&quot;
cmbAcknowelge.itemdata(cmbAcknowelge.newindex)= -1
cmbAcknowelge.additem &quot;Нет&quot;
cmbAcknowelge.itemdata(cmbAcknowelge.newindex)= 0
 For iii = 0 To cmbAcknowelge.ListCount-1
  If Item.Acknowelge = cmbAcknowelge.ItemData(iii) Then
   cmbAcknowelge.ListIndex = iii
   Exit For
  End If
 Next
txtSendSize = item.SendSize
dtpCheckDate = now
if item.CheckDate &lt;&gt; 0 then
 dtpCheckDate = item.CheckDate
end if
  on error resume next
txtReplicaPackID = item.ReplicaPackID
  on error resume next
txtFileName = item.FileName
txtPartCount = item.PartCount
txtPartNumber = item.PartNumber
cmbSent.Clear
cmbSent.additem &quot;Да&quot;
cmbSent.itemdata(cmbSent.newindex)= 1
cmbSent.additem &quot;Нет&quot;
cmbSent.itemdata(cmbSent.newindex)= 0
 For iii = 0 To cmbSent.ListCount-1
  If Item.Sent = cmbSent.ItemData(iii) Then
   cmbSent.ListIndex = iii
   Exit For
  End If
 Next
dtpReplicatorPointer = now
if item.ReplicatorPointer &lt;&gt; 0 then
 dtpReplicatorPointer = item.ReplicatorPointer
else
 dtpReplicatorPointer.value = null
end if
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

If txtSourceSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.SourceSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtSourceSrv.Tag)
Else
  Set item.SourceSrv = Nothing
End If
item.Config = txtConfig
  if  isnull(dtpSentDate) then
    item.SentDate = 0
  else
    item.SentDate = dtpSentDate.value
  end if
If txtDestSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.DestSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtDestSrv.Tag)
Else
  Set item.DestSrv = Nothing
End If
If txtProvider.Tag &lt;&gt; &quot;&quot; Then
  Set item.Provider = Item.Application.FindRowObject(&quot;REPD_PROV&quot;,txtProvider.Tag)
Else
  Set item.Provider = Nothing
End If
 if cmbAcknowelge.listindex&gt;=0 then
   item.Acknowelge = cmbAcknowelge.itemdata(cmbAcknowelge.listindex)
 end if
item.SendSize = cdbl(txtSendSize)
  if  isnull(dtpCheckDate) then
    item.CheckDate = 0
  else
    item.CheckDate = dtpCheckDate.value
  end if
item.ReplicaPackID = txtReplicaPackID
item.FileName = txtFileName
item.PartCount = cdbl(txtPartCount)
item.PartNumber = cdbl(txtPartNumber)
 if cmbSent.listindex&gt;=0 then
   item.Sent = cmbSent.itemdata(cmbSent.listindex)
 end if
  if  isnull(dtpReplicatorPointer) then
    item.ReplicatorPointer = 0
  else
    item.ReplicatorPointer = dtpReplicatorPointer.value
  end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="REPD_RecvQ" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="Panel" ControlIndex="0" PROGID="MTZ_PANEL.Scrolledwindow"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="1000"/><Properties Name="Width" PropValue="1000"/><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblTheRowID"/><Properties Name="Caption" PropValue="TheRowID:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtTheRowID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="TheRowID"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReceived"/><Properties Name="Caption" PropValue="Received:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MSComCtl2.DTPicker"><Properties Name="NAME" PropValue="dtpReceived"/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Format" PropValue="3"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ToolTipText" PropValue="Received"/><Properties Name="CustomFormat" PropValue="dd.MM.yyyy HH:mm:ss"/><Properties Name="Width" PropValue="2250"/><Properties Name="CheckBox" PropValue="False"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblProvider"/><Properties Name="Caption" PropValue="Provider:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtProvider"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdProvider"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="1815"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="Provider"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblRecvSize"/><Properties Name="Caption" PropValue="RecvSize:"/><Properties Name="Top" PropValue="2190"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtRecvSize"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="2520"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="RecvSize"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblSourceSrv"/><Properties Name="Caption" PropValue="SourceSrv:"/><Properties Name="Top" PropValue="2895"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtSourceSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3225"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="SourceSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdSourceSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3225"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="SourceSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblDestSrv"/><Properties Name="Caption" PropValue="DestSrv:"/><Properties Name="Top" PropValue="3600"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtDestSrv"/><Properties Name="Text" PropValue=""/><Properties Name="Locked" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Top" PropValue="3930"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="2550"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="NAME" PropValue="cmdDestSrv"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refopen.ico"/><Properties Name="Top" PropValue="3930"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Left" PropValue="2850"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="450"/><Properties Name="ToolTipText" PropValue="DestSrv"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblAcknowelge"/><Properties Name="Caption" PropValue="Acknowelge:"/><Properties Name="Top" PropValue="4305"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbAcknowelge"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="4635"/><Properties Name="Left" PropValue="300"/><Properties Name="ToolTipText" PropValue="Acknowelge"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblReplicaPackID"/><Properties Name="Caption" PropValue="ReplicaPackID:"/><Properties Name="Top" PropValue="5010"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtReplicaPackID"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="5340"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="0"/><Properties Name="ToolTipText" PropValue="ReplicaPackID"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartCount"/><Properties Name="Caption" PropValue="Количество частей:"/><Properties Name="Top" PropValue="5715"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartCount"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="6045"/><Properties Name="Left" PropValue="300"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Количество частей"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblPartNumber"/><Properties Name="Caption" PropValue="Часть:"/><Properties Name="Top" PropValue="75"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtPartNumber"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="405"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="1800"/><Properties Name="ToolTipText" PropValue="Часть"/><Properties Name="CausesValidation" PropValue="True"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/><Properties Name="MaxLength" PropValue="15"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblFileName"/><Properties Name="Caption" PropValue="FileName:"/><Properties Name="Top" PropValue="780"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="255"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.textbox"><Properties Name="NAME" PropValue="txtFileName"/><Properties Name="Text" PropValue=""/><Properties Name="Top" PropValue="1110"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="MaxLength" PropValue="1024"/><Properties Name="ToolTipText" PropValue="FileName"/><Properties Name="Locked" PropValue="False"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.Label"><Properties Name="BackStyle" PropValue="0"/><Properties Name="NAME" PropValue="lblCompleted"/><Properties Name="Caption" PropValue="Completed:"/><Properties Name="Top" PropValue="1485"/><Properties Name="Left" PropValue="3450"/><Properties Name="Height" PropValue="300"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/><Properties Name="ForeColor" PropValue="16711680"/></ControlData><ControlData Name="" ControlIndex="0" PROGID="VB.ComboBox"><Properties Name="NAME" PropValue="cmbCompleted"/><Properties Name="Style" PropValue="2"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Top" PropValue="1815"/><Properties Name="Left" PropValue="3450"/><Properties Name="ToolTipText" PropValue="Completed"/><Properties Name="Width" PropValue="3000"/><Properties Name="Enabled" PropValue="True"/></ControlData></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель редактирования раздела Очередь полученых реплик
   public Item as object
   private OnInit as boolean
   public event Changed()
   Private mIsChanged As Boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Функция поиска строки
'Parameters:
'[IN][OUT]  Runner , тип параметра: mtzmanager.main, 
'[IN]   TypeName , тип параметра: String, 
'[IN][OUT]   ID , тип параметра: string, 
'[IN][OUT]   Brief , тип параметра: string, 
'[IN][OUT]   Cancel , тип параметра: boolean  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.findObject(...параметры...) 
Private Function findObject(Runner as mtzmanager.main, byval TypeName As String, byref ID as string, byref Brief as string, byref Cancel as boolean) As Boolean
Dim objFinder As Object
Dim result As Boolean
result = False
On Error GoTo bye
Set objFinder = CreateObject(TypeName &amp; &quot;_FIND.Find&quot;)
result = objFinder.Run(Runner, ID, Brief,Cancel)
bye:
findObject = result
End Function

'Признак изменения строки
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
'  variable = me.IsChanged() 
Public Function IsChanged() As Boolean
  IsChanged = mIsChanged
End Function
private sub Usercontrol_resize()
  on error resume next
  panel.width = usercontrol.width
  panel.height = usercontrol.height
end sub

private sub txtTheRowID_Change()
  Changing

end sub
private sub dtpReceived_Change()
  Changing

end sub
private sub txtProvider_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdProvider_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_PROV&quot;, id, brief) Then
          txtProvider.Tag = Left(id, 38)
          txtProvider = brief
        End If
end sub
private sub cmdProvider_MenuClick(ByVal sCaption As String)
          txtProvider.Tag = &quot;&quot;
          txtProvider = &quot;&quot;
End sub
private sub txtRecvSize_Validate(cancel as boolean)
if txtRecvSize.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtRecvSize.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtRecvSize.SetFocus 
  elseif Val(txtRecvSize.text) &lt;&gt;clng(Val(txtRecvSize.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtRecvSize.SetFocus 
  end if
end if
end sub
Private Sub txtRecvSize_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtRecvSize_Change()
  Changing

end sub
private sub txtSourceSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdSourceSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtSourceSrv.Tag = Left(id, 38)
          txtSourceSrv = brief
        End If
end sub
private sub cmdSourceSrv_MenuClick(ByVal sCaption As String)
          txtSourceSrv.Tag = &quot;&quot;
          txtSourceSrv = &quot;&quot;
End sub
private sub txtDestSrv_Change()
  if  not (OnInit) then 
  Changing

  end if 
end sub
private sub cmdDestSrv_CLick()
  on error resume next
        Dim id As String, brief As String
        If item.Application.Manager.GetReferenceDialogEx2(&quot;REPD_SRV&quot;, id, brief) Then
          txtDestSrv.Tag = Left(id, 38)
          txtDestSrv = brief
        End If
end sub
private sub cmdDestSrv_MenuClick(ByVal sCaption As String)
          txtDestSrv.Tag = &quot;&quot;
          txtDestSrv = &quot;&quot;
End sub
private sub cmbAcknowelge_Click()
  on error resume next
  Changing

end sub
private sub txtReplicaPackID_Change()
  Changing

end sub
private sub txtPartCount_Validate(cancel as boolean)
if txtPartCount.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPartCount.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartCount.SetFocus 
  elseif Val(txtPartCount.text) &lt;&gt;clng(Val(txtPartCount.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartCount.SetFocus 
  end if
end if
end sub
Private Sub txtPartCount_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPartCount_Change()
  Changing

end sub
private sub txtPartNumber_Validate(cancel as boolean)
if txtPartNumber.text&lt;&gt;&quot;&quot; then 
 on error resume next 
  if not isnumeric(txtPartNumber.text) then 
     cancel=true 
     msgbox &quot;Ожидалось число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartNumber.SetFocus 
  elseif Val(txtPartNumber.text) &lt;&gt;clng(Val(txtPartNumber.text)) then 
     cancel=true 
     msgbox &quot;Ожидалось целое число&quot;,vbokonly+vbexclamation,&quot;Внимание&quot; 
     txtPartNumber.SetFocus 
  end if
end if
end sub
Private Sub txtPartNumber_KeyPess(KeyAscii As Integer)
Dim s As String
s = &quot;0123456789.,-&quot; &amp; Chr(8)
If InStr(s, Chr(KeyAscii)) &gt; 0 Then Exit Sub
KeyAscii = 0

End Sub
private sub txtPartNumber_Change()
  Changing

end sub
private sub txtFileName_Change()
  Changing

end sub
private sub cmbCompleted_Click()
  on error resume next
  Changing

end sub
Private Sub UserControl_Terminate()
  Set item = Nothing
End Sub

'Контроль правильности заполнения данных на панели редактирования
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsOK() 
public function IsOK() as boolean
  On error resume next
  dim mIsOK as boolean
  mIsOk = true

if mIsOK then mIsOK = IsSet(dtpReceived.value)
if mIsOK then mIsOK = txtProvider.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK = txtSourceSrv.Tag&lt;&gt;&quot;&quot;
if mIsOK then mIsOK =(cmbAcknowelge.ListIndex &gt;=0)
if mIsOK then mIsOK =IsSet(txtFileName.text)
  IsOk = mIsOk
end function
Private Function AddSQLRefIds(ByVal strTo As String, ByVal fldName As String, ByVal strFrom As String) As String
  Dim XMLDocFrom As New DOMDocument
  Dim XMLDocTo As New DOMDocument
  AddSQLRefIds = strTo
  On Error GoTo err
  Call XMLDocTo.loadXML(strTo)
  Call XMLDocFrom.loadXML(strFrom)
  Dim Node As MSXML2.IXMLDOMNode
  Dim ID As String
  For Each Node In XMLDocFrom.childNodes.item(0).childNodes
    If (Node.baseName = &quot;ID&quot;) Then
      ID = Node.Text
      Dim NodeTO As MSXML2.IXMLDOMNode
      Dim bAdded As Boolean
      bAdded = False
      For Each NodeTO In XMLDocTo.childNodes.item(0).childNodes
       If (NodeTO.baseName = fldName &amp; &quot;ID&quot;) Then
         NodeTO.Text = ID
         bAdded = True
         Exit For
       End If
      Next
      If (Not bAdded) Then
       Dim newNode As MSXML2.IXMLDOMNode
       Set newNode = XMLDocTo.createNode(MSXML2.NODE_ELEMENT, fldName &amp; &quot;ID&quot;, XMLDocTo.namespaceURI)
        newNode.Text = ID
       Call XMLDocTo.childNodes.item(0).appendChild(newNode)
      End If
      AddSQLRefIds = XMLDocTo.xml
      Exit For
    End If
  Next
err:
End Function

'Инициализация контролов панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.InitPanel()
public sub InitPanel()
OnInit = true
dim iii as long ' for combo only
if item.CanChange then
  panel.enabled = true
else
  panel.enabled = false
end if

  on error resume next
txtTheRowID = item.TheRowID
dtpReceived = now
if item.Received &lt;&gt; 0 then
 dtpReceived = item.Received
end if
If Not item.Provider Is Nothing Then
  txtProvider.Tag = item.Provider.id
  txtProvider = item.Provider.brief
else
  txtProvider.Tag = &quot;&quot; 
  txtProvider = &quot;&quot; 
End If
 LoadBtnPictures cmdProvider,cmdProvider.tag
  cmdProvider.RemoveAllMenu
  cmdProvider.AddMenu &quot;Очистить&quot; 
txtRecvSize = item.RecvSize
If Not item.SourceSrv Is Nothing Then
  txtSourceSrv.Tag = item.SourceSrv.id
  txtSourceSrv = item.SourceSrv.brief
else
  txtSourceSrv.Tag = &quot;&quot; 
  txtSourceSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdSourceSrv,cmdSourceSrv.tag
  cmdSourceSrv.RemoveAllMenu
  cmdSourceSrv.AddMenu &quot;Очистить&quot; 
If Not item.DestSrv Is Nothing Then
  txtDestSrv.Tag = item.DestSrv.id
  txtDestSrv = item.DestSrv.brief
else
  txtDestSrv.Tag = &quot;&quot; 
  txtDestSrv = &quot;&quot; 
End If
 LoadBtnPictures cmdDestSrv,cmdDestSrv.tag
  cmdDestSrv.RemoveAllMenu
  cmdDestSrv.AddMenu &quot;Очистить&quot; 
cmbAcknowelge.Clear
cmbAcknowelge.additem &quot;Да&quot;
cmbAcknowelge.itemdata(cmbAcknowelge.newindex)= -1
cmbAcknowelge.additem &quot;Нет&quot;
cmbAcknowelge.itemdata(cmbAcknowelge.newindex)= 0
 For iii = 0 To cmbAcknowelge.ListCount-1
  If Item.Acknowelge = cmbAcknowelge.ItemData(iii) Then
   cmbAcknowelge.ListIndex = iii
   Exit For
  End If
 Next
  on error resume next
txtReplicaPackID = item.ReplicaPackID
txtPartCount = item.PartCount
txtPartNumber = item.PartNumber
  on error resume next
txtFileName = item.FileName
cmbCompleted.Clear
cmbCompleted.additem &quot;Да&quot;
cmbCompleted.itemdata(cmbCompleted.newindex)= -1
cmbCompleted.additem &quot;Нет&quot;
cmbCompleted.itemdata(cmbCompleted.newindex)= 0
 For iii = 0 To cmbCompleted.ListCount-1
  If Item.Completed = cmbCompleted.ItemData(iii) Then
   cmbCompleted.ListIndex = iii
   Exit For
  End If
 Next
' Добавим значения ID ко всем SQLReference
OnInit = false
end sub
private sub Changing
if OnInit then exit sub

 mIsChanged=true 
 raiseevent Changed()
end sub

'Сохранение
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Save({параметры})
Public sub Save
if OnInit then exit sub

item.TheRowID = txtTheRowID
  if  isnull(dtpReceived) then
    item.Received = 0
  else
    item.Received = dtpReceived.value
  end if
If txtProvider.Tag &lt;&gt; &quot;&quot; Then
  Set item.Provider = Item.Application.FindRowObject(&quot;REPD_PROV&quot;,txtProvider.Tag)
Else
  Set item.Provider = Nothing
End If
item.RecvSize = cdbl(txtRecvSize)
If txtSourceSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.SourceSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtSourceSrv.Tag)
Else
  Set item.SourceSrv = Nothing
End If
If txtDestSrv.Tag &lt;&gt; &quot;&quot; Then
  Set item.DestSrv = Item.Application.FindRowObject(&quot;REPD_SRV&quot;,txtDestSrv.Tag)
Else
  Set item.DestSrv = Nothing
End If
 if cmbAcknowelge.listindex&gt;=0 then
   item.Acknowelge = cmbAcknowelge.itemdata(cmbAcknowelge.listindex)
 end if
item.ReplicaPackID = txtReplicaPackID
item.PartCount = cdbl(txtPartCount)
item.PartNumber = cdbl(txtPartNumber)
item.FileName = txtFileName
 if cmbCompleted.listindex&gt;=0 then
   item.Completed = cmbCompleted.itemdata(cmbCompleted.listindex)
 end if
 mIsChanged=false 
 raiseevent Changed()
end sub

'Подбор размера панели по размеру контролов
'Parameters:
'[IN][OUT]  x , тип параметра: Single, 
'[IN][OUT]   y , тип параметра: single  - ...
'See Also:
'Example:
'  call me.OptimalSize({параметры})
 Public sub OptimalSize(x As Single, y as single)
   Panel.OptimalSize x, y
   x=x + panel.left
   y=y + panel.top
 End sub
 
 
 Public Function OptimalY() As Single
   Dim x As Single, y As Single
   Panel.OptimalSize x, y
   OptimalY = y
 End Function

'Открытие окна настройки панели
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.Customize()
 Public sub Customize()
   Panel.Customize
 End sub

'Строка положения контролов на панели для сохранения позиций
'Parameters:
' параметров нет
'Returns:
'  значение типа string
'See Also:
'Example:
' dim variable as string
' variable = me. PanelCustomisationString
 Public property get PanelCustomisationString() as string
   PanelCustomisationString =Panel.PanelCustomisationString
 End property

'Восстановление  позиций контролов из строки
'Parameters:
'[IN][OUT]  s , тип параметра: string  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. PanelCustomisationString = value
 Public property Let PanelCustomisationString(s as string)
   Panel.PanelCustomisationString = s
 End property

'Разрешения изменений контролов
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
' variable = me. Enabled
 Public property get Enabled() as boolean
   Enabled =Panel.Enabled
 End property

'Запрет \ Разрешение изменений контролов
'Parameters:
'[IN]   v , тип параметра: boolean  - ...
'See Also:
'Example:
' dim value as Variant
' value = ...значение...
' me. Enabled = value
 Public property Let Enabled(byval v as boolean)
   Panel.Enabled = v
 End property

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_LOCKED_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_LOCKED"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Очередь заблокированных объектов"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Очередь заблокированных объектов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_LOCKED режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{3026F906-D98B-433B-9794-03AB59116AA3}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{3026F906-D98B-433B-9794-03AB59116AA3}&quot;
  Open s &amp; Me.name &amp; &quot;{3026F906-D98B-433B-9794-03AB59116AA3}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_RequestQuery_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_RequestQuery"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Запрос данных на объект\ строку"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Запрос данных на объект\ строку"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_RequestQuery режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{81CB5AA6-A770-4E89-9008-058A553CA9BB}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{81CB5AA6-A770-4E89-9008-058A553CA9BB}&quot;
  Open s &amp; Me.name &amp; &quot;{81CB5AA6-A770-4E89-9008-058A553CA9BB}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_ResQueryRcv_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_ResQueryRcv"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Результат запроса"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Результат запроса"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_ResQueryRcv режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{7574AE4A-CC55-46B9-966B-BBCF643C3E33}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{7574AE4A-CC55-46B9-966B-BBCF643C3E33}&quot;
  Open s &amp; Me.name &amp; &quot;{7574AE4A-CC55-46B9-966B-BBCF643C3E33}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_PROV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_PROV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Провайдер репликациии"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Провайдер репликациии"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_PROV режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{1C124AA7-0E62-4979-A4D9-309599F36F92}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{1C124AA7-0E62-4979-A4D9-309599F36F92}&quot;
  Open s &amp; Me.name &amp; &quot;{1C124AA7-0E62-4979-A4D9-309599F36F92}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_SRV_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_SRV"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Узлы репликации"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Узлы репликации"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_SRV режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{2D7B23D0-4190-4C92-9A6D-8C674009139B}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{2D7B23D0-4190-4C92-9A6D-8C674009139B}&quot;
  Open s &amp; Me.name &amp; &quot;{2D7B23D0-4190-4C92-9A6D-8C674009139B}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_SNDTO_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_SNDTO"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Получатели реплик"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Получатели реплик"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_SNDTO режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{BB93E780-757A-496D-BD42-C71A2D3AABB1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{BB93E780-757A-496D-BD42-C71A2D3AABB1}&quot;
  Open s &amp; Me.name &amp; &quot;{BB93E780-757A-496D-BD42-C71A2D3AABB1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_CONST_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_CONST"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue=""/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Константы к запросу"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_CONST режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{A3FA43E6-7EF1-4AF7-8AD3-B59C94DA2AC8}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{A3FA43E6-7EF1-4AF7-8AD3-B59C94DA2AC8}&quot;
  Open s &amp; Me.name &amp; &quot;{A3FA43E6-7EF1-4AF7-8AD3-B59C94DA2AC8}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_REPTYPE_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_REPTYPE"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Описание типа репликации документов для узла"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Тип репликации документов"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_REPTYPE режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{19311AF6-4792-4823-8D03-D3F8D270CCE1}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{19311AF6-4792-4823-8D03-D3F8D270CCE1}&quot;
  Open s &amp; Me.name &amp; &quot;{19311AF6-4792-4823-8D03-D3F8D270CCE1}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_SendQ_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_SendQ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Очередь отсылки"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Очередь отсылки"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_SendQ режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{CED139D2-243F-4B8E-9A8B-D1D185BB3D92}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{CED139D2-243F-4B8E-9A8B-D1D185BB3D92}&quot;
  Open s &amp; Me.name &amp; &quot;{CED139D2-243F-4B8E-9A8B-D1D185BB3D92}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frmREPD_RecvQ_" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="" ControlIndex="0" PROGID="REPDGUI.REPD_RecvQ"><Properties Name="Name" PropValue="Panel"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Height" PropValue="6000"/><Properties Name="Width" PropValue="9000"/></ControlData><ControlData Name="cmdOK" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdOK"/><Properties Name="Caption" PropValue="&amp;OK"/><Properties Name="Default" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="1275"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="825"/><Properties Name="ToolTipText" PropValue="Очередь полученых реплик"/><Properties Name="Visible" PropValue="True"/></ControlData><ControlData Name="cmdCancel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="NAME" PropValue="cmdCancel"/><Properties Name="Caption" PropValue="Отмена"/><Properties Name="Cancel" PropValue="True"/><Properties Name="CausesValidation" PropValue="False"/><Properties Name="Top" PropValue="6225"/><Properties Name="Left" PropValue="2250"/><Properties Name="Height" PropValue="345"/><Properties Name="Width" PropValue="975"/><Properties Name="Visible" PropValue="True"/></ControlData><PropertyData Name="Caption" PropValue="Очередь полученых реплик"/><PropertyData Name="BorderStyle" PropValue="5"/><PropertyData Name="Left" PropValue="0"/><PropertyData Name="Top" PropValue="0"/><PropertyData Name="StartupPosition" PropValue="1"/><PropertyData Name="Minbutton" PropValue="False"/><PropertyData Name="Height" PropValue="7200"/><PropertyData Name="Width" PropValue="9600"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Форма редактирования раздела REPD_RecvQ режим 
   public OK as boolean
   public item as object
   Public NotFirstTime As Boolean


"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
sub cmdCancel_Click()
OK=false
me.hide
end sub

sub cmdOK_Click()
 on error goto bye
 if panel.isOK then
   panel.save
   OK=true
   me.hide
 else
   MsgBox &quot;Не все обязательные поля заполнены&quot;,vbOKOnly + VBExclamation
 end if
bye:
end sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
sub form_Unload(Cancel As Integer)
      'SaveToSkin
End sub
sub form_resize()
 if me.windowstate =1 then exit sub
 on error resume next
 panel.top=0
 Panel.left=0
 cmdOK.left=0
 cmdCancel.left=cmdok.width + 5*screen.TwipsPerPixelY
 cmdOK.Top = Me.ScaleHeight - cmdOK.Height 
 cmdCancel.Top = Me.ScaleHeight - cmdCancel.Height
 Panel.Width = Me.ScaleWidth
 If (cmdOK.Visible) Then
    panel.Height = cmdOK.Top - 3 * Screen.TwipsPerPixelY
 Else
    panel.Height = Me.ScaleHeight - 3 * Screen.TwipsPerPixelY
 End If
end sub
sub form_load()
 dim x as single, y as single
 LoadFormSkin
 panel.optimalsize x,y
 Me.Move Me.Left, Me.Top, X + Me.panel.Left * 2 + 20 * Screen.TwipsPerPixelX, Me.panel.Top + Y + cmdOK.Height + 40 * Screen.TwipsPerPixelX
 
end sub
sub form_DblCLick()
 panel.customize
 SaveToSkin
end sub
sub panel_Changed()
 cmdOK.Enabled = true
end sub
sub form_Activate()
 if NotFirstTime then exit sub
 OnInit
 notFirsttime = true
end sub

'Инициализация формы
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnInit()
public sub OnInit()
 set Panel.item = item
 Panel.initPanel
 cmdOK.Enabled = false
end sub
private sub LoadFormSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;,App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; Me.name &amp; &quot;{84448952-8F07-48D3-9B95-D83D5ED2C0E2}&quot; For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  If buf &lt;&gt; &quot;&quot; Then panel.PanelCustomisationString = buf
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long
  ff = FreeFile
  kill s &amp; Me.name &amp; &quot;{84448952-8F07-48D3-9B95-D83D5ED2C0E2}&quot;
  Open s &amp; Me.name &amp; &quot;{84448952-8F07-48D3-9B95-D83D5ED2C0E2}&quot; For output As #ff
  print #ff, panel.PanelCustomisationString
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnREPD_SendQ_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlREPD_SendQ" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlREPD_SendQ"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridREPD_SendQ" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_SendQ"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdREPD_SendQAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SendQEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SendQDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SendQRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_SendQPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_SendQCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_SendQFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_SendQRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_SendQRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_SendQAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SendQAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupREPD_SendQ" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Очередь отсылки"/><Properties Name="Name" PropValue="mnuPopupREPD_SendQ"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_SendQAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_SendQAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_SendQEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_SendQEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_SendQDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_SendQDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_SendQOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_SendQOpen"/></ControlData><ControlData Name="mnuREPD_SendQRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_SendQRef"/></ControlData><ControlData Name="mnuREPD_SendQS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_SendQS1"/></ControlData><ControlData Name="mnuREPD_SendQBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_SendQBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_SendQCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_SendQCOPY"/></ControlData><ControlData Name="mnuREPD_SendQCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_SendQCUT"/></ControlData><ControlData Name="mnuREPD_SendQPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_SendQPASTE"/></ControlData><ControlData Name="mnuREPD_SendQCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_SendQCHANGE"/></ControlData><ControlData Name="mnuREPD_SendQCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_SendQCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_SendQPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_SendQPrn"/></ControlData><ControlData Name="mnuREPD_SendQCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_SendQCfg"/></ControlData><ControlData Name="mnuREPD_SendQFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_SendQFind"/></ControlData><ControlData Name="mnuREPD_SendQAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_SendQAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_SendQ" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_SendQ"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Очередь отсылки
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndREPD_SendQ as object
private menuActionREPD_SendQ as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdREPD_SendQCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_SendQ,&quot;gridREPD_SendQ&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_SendQPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_SendQ,&quot;Очередь отсылки&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_SendQRef_Click()
  on error resume next
  item.REPD_SendQ.Refresh
  gridREPD_SendQ.itemCount = item.REPD_SendQ.count
  gridREPD_SendQ.Refetch
  gridREPD_SendQ.Refresh
End Sub
Private Sub cmdREPD_SendQAcc_Click()
On Error Resume Next
If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
If gridREPD_SendQ.Row &gt; 0 Then
 If gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SendQ.RowBookmark(gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdREPD_SendQEdit_Click()
  on error resume next
If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
If gridREPD_SendQ.Row &gt; 0 then
 If gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SendQ.RowBookmark(gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmREPD_SendQ_.Item = u
    again: frmREPD_SendQ_.NotFirstTime = False
    frmREPD_SendQ_.OnInit
    frmREPD_SendQ_.Show vbModal
    If frmREPD_SendQ_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridREPD_SendQ.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdREPD_SendQDel_Click()
  on error resume next
  gridREPD_SendQ.Delete
End Sub
Private Sub cmdREPD_SendQAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.REPD_SendQ.Add()

      Set frmREPD_SendQ_.Item = u
      again: frmREPD_SendQ_.NotFirstTime = False
      frmREPD_SendQ_.OnInit
      frmREPD_SendQ_.Show vbModal
      If frmREPD_SendQ_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridREPD_SendQ.ItemCount = Item.REPD_SendQ.Count
        gridREPD_SendQ.Refresh
        gridREPD_SendQ.RefreshGroups
        gridREPD_SendQ.Refreshsort
        gridREPD_SendQ.MoveToBookmark u.ID &amp; &quot;REPD_SendQ&quot;
      Else
        Item.REPD_SendQ.Delete u.ID
        Item.REPD_SendQ.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdREPD_SendQFnd_Click()
  on error resume next
  fndREPD_SendQ.ShowForm
End Sub
Private Sub cmdREPD_SendQRun_Click()
  on error resume next
  gridREPD_SendQ_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridREPD_SendQ_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.REPD_SendQ.LoadRow gridREPD_SendQ, RowIndex, Bookmark, Values
End Sub
Private Sub gridREPD_SendQ_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;REPD_SendQ&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridREPD_SendQ_DblClick()
  cmdREPD_SendQEdit_Click
End Sub
Private Sub gridREPD_SendQ_KeyPress(KeyAscii As Integer)
  If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_SendQ.FindOnPress KeyAscii
End Sub

Private Sub gridREPD_SendQ_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridREPD_SendQ.Row And LastRow &gt; 0 Then
  gridREPD_SendQ.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridREPD_SendQ.GetRowData(gridREPD_SendQ.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuREPD_SendQPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.REPD_SendQ.Add()
    If GetFromBuffer(u) Then
      gridREPD_SendQ.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridREPD_SendQ_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdREPD_SendQCfg_Click
        End If
    End If
end sub

private sub gridREPD_SendQ_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupREPD_SendQ
End If
end sub
private sub mnuREPD_SendQAdd_click()
   menuActionREPD_SendQ =&quot;ADD&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQEdit_click()
   menuActionREPD_SendQ =&quot;EDIT&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQDelete_click()
   menuActionREPD_SendQ =&quot;DEL&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQOpen_click()
   menuActionREPD_SendQ =&quot;RUN&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQRef_click()
   menuActionREPD_SendQ =&quot;REF&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
  Private Sub mnuREPD_SendQCOPY_Click()
    On Error Resume Next
    If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
    If gridREPD_SendQ.Row &gt; 0 Then
     If gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_SendQ.RowBookmark(gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_SendQCUT_Click()
    On Error Resume Next
    If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
    If gridREPD_SendQ.Row &gt; 0 Then
     If gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_SendQ.RowBookmark(gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_SendQ.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuREPD_SendQCHANGE_Click()
  On Error Resume Next
  If gridREPD_SendQ.ItemCount = 0 Then Exit Sub
  If gridREPD_SendQ.Row &gt; 0 Then
   If gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SendQ.RowBookmark(gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_SendQ.ItemCount = u.parent.Count
      gridREPD_SendQ.RefreshRowIndex gridREPD_SendQ.RowIndex(gridREPD_SendQ.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_SendQCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_SendQPrn_click()
   menuActionREPD_SendQ =&quot;PRN&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQCfg_click()
   menuActionREPD_SendQ =&quot;CFG&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQFind_click()
   menuActionREPD_SendQ =&quot;FND&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub mnuREPD_SendQAcc_click()
   menuActionREPD_SendQ =&quot;ACC&quot;
   menuTimerREPD_SendQ.enabled = true
end sub
private sub menuTimerREPD_SendQ_timer()
   menuTimerREPD_SendQ.enabled = false
   if menuActionREPD_SendQ =&quot;ADD&quot; then cmdREPD_SendQADD_CLick
   if menuActionREPD_SendQ =&quot;EDIT&quot; then cmdREPD_SendQEDIT_CLick
   if menuActionREPD_SendQ =&quot;DEL&quot; then cmdREPD_SendQDEL_CLick
   if menuActionREPD_SendQ =&quot;RUN&quot; then cmdREPD_SendQRUN_CLick
   if menuActionREPD_SendQ =&quot;REF&quot; then cmdREPD_SendQREF_CLick
   if menuActionREPD_SendQ =&quot;PRN&quot; then cmdREPD_SendQPRN_CLick
   if menuActionREPD_SendQ =&quot;CFG&quot; then cmdREPD_SendQCFG_CLick
   if menuActionREPD_SendQ =&quot;FND&quot; then cmdREPD_SendQFND_CLick
   if menuActionREPD_SendQ =&quot;ACC&quot; then cmdREPD_SendQACC_CLick
   menuActionREPD_SendQ =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdREPD_SendQAdd,cmdREPD_SendQAdd.tag
  LoadBtnPictures cmdREPD_SendQEdit,cmdREPD_SendQEdit.tag
  LoadBtnPictures cmdREPD_SendQDel,cmdREPD_SendQDel.tag
  LoadBtnPictures cmdREPD_SendQRef,cmdREPD_SendQRef.tag
  LoadBtnPictures cmdREPD_SendQPrn,cmdREPD_SendQPrn.tag
  LoadBtnPictures cmdREPD_SendQFnd,cmdREPD_SendQFnd.tag
  LoadBtnPictures cmdREPD_SendQRun,cmdREPD_SendQRun.tag
  LoadBtnPictures cmdREPD_SendQAcc,cmdREPD_SendQAcc.tag
  LoadBtnPictures cmdREPD_SendQCfg,cmdREPD_SendQCfg.tag
  item.REPD_SendQ.PrepareGrid gridREPD_SendQ
  LoadGridLayout gridREPD_SendQ
  Set fndREPD_SendQ = Nothing
  On Error Resume Next
  Set fndREPD_SendQ = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndREPD_SendQ.Init gridREPD_SendQ
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridREPD_SendQ.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_SendQ.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_SendQ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_SendQ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridREPD_SendQ.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_SendQ.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_SendQ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_SendQ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlREPD_SendQ.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndREPD_SendQ = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnREPD_SRV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlREPD_SRV" ControlIndex="0" PROGID="MTZ_PANEL.VFrames"><Properties Name="Name" PropValue="pnlREPD_SRV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="treeREPD_SRV" ControlIndex="0" PROGID="mscomctllib.treeview"><Properties Name="Name" PropValue="treeREPD_SRV"/><Properties Name="LabelEdit" PropValue="1"/><Properties Name="LineStyle" PropValue="1"/><Properties Name="Sorted" PropValue="True"/><Properties Name="Indentation" PropValue="75"/><Properties Name="HideSelection" PropValue="False"/></ControlData><ControlData Name="gridREPD_SRV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_SRV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdTREPD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdTREPD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SRVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SRVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SRVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/></ControlData><ControlData Name="cmdREPD_SRVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_SRVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_SRVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_SRVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_SRVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_SRVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_SRVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_SRVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupREPD_SRV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Узлы репликации"/><Properties Name="Name" PropValue="mnuPopupREPD_SRV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_SRVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_SRVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_SRVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_SRVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_SRVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_SRVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_SRVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_SRVOpen"/></ControlData><ControlData Name="mnuREPD_SRVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_SRVRef"/></ControlData><ControlData Name="mnuREPD_SRVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_SRVS1"/></ControlData><ControlData Name="mnuREPD_SRVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_SRVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_SRVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_SRVCOPY"/></ControlData><ControlData Name="mnuREPD_SRVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_SRVCUT"/></ControlData><ControlData Name="mnuREPD_SRVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_SRVPASTE"/></ControlData><ControlData Name="mnuREPD_SRVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_SRVCHANGE"/></ControlData><ControlData Name="mnuREPD_SRVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_SRVCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_SRVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_SRVPrn"/></ControlData><ControlData Name="mnuREPD_SRVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_SRVCfg"/></ControlData><ControlData Name="mnuREPD_SRVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_SRVFind"/></ControlData><ControlData Name="mnuREPD_SRVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_SRVAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_SRV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_SRV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Узлы репликации
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndREPD_SRV as object
private menuActionREPD_SRV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlREPD_SRV_PositionChanged()
  pnlREPD_SRV.SavePosition
End Sub
Private Sub cmdREPD_SRVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_SRV,&quot;Узлы репликации&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_SRVFnd_Click()
  on error resume next
  fndREPD_SRV.ShowForm
End Sub
Private Sub cmdREPD_SRVRun_Click()
  on error resume next
  gridREPD_SRV_DblClick
End Sub
Private Sub pnlREPD_SRV_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  treeREPD_SRV.Left = Left
  treeREPD_SRV.Top = Top + 25 * Screen.TwipsPerPixelY
  treeREPD_SRV.Width = Width
  treeREPD_SRV.Height = Height-  25 * Screen.TwipsPerPixelY
End Sub
Private Sub pnlREPD_SRV_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridREPD_SRV.Left = Left
  gridREPD_SRV.Top = Top + 25 * Screen.TwipsPerPixelY
  gridREPD_SRV.Width = Width
  gridREPD_SRV.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdREPD_SRVAdd.Left = Left +5 *Screen.TwipsPerPixelX 
   cmdREPD_SRVEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdREPD_SRVDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdREPD_SRVRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdREPD_SRVPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdREPD_SRVCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdREPD_SRVFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdREPD_SRVRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdREPD_SRVAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
 private sub cmdREPD_SRVDel_Click()
  on error resume next
  gridREPD_SRV.Delete
End Sub


'Признак правильности заполнения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
 private sub cmdREPD_SRVEdit_Click()
on error resume next
If gridREPD_SRV.ItemCount = 0 Then Exit Sub
If gridREPD_SRV.Row &gt; 0 Then
 If gridREPD_SRV.RowIndex ( gridREPD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SRV.RowBookmark(gridREPD_SRV.RowIndex(gridREPD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
    if err.number &lt;&gt;0 then 
bye:
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridREPD_SRV.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

 private sub cmdREPD_SRVAdd_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treeREPD_SRV.SelectedItem Is Nothing Then Exit Sub
    If treeREPD_SRV.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treeREPD_SRV.SelectedItem.key, 39, 38)
      struct = treeREPD_SRV.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treeREPD_SRV.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treeREPD_SRV.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treeREPD_SRV.SelectedItem.Parent.key, 39, 38)
        struct = treeREPD_SRV.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treeREPD_SRV.SelectedItem.Tag).Add
      End If
      If treeREPD_SRV.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treeREPD_SRV.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treeREPD_SRV.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)




    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
      goto again
    end if 
      gridREPD_SRV.ItemCount = u.Parent.Count
        gridREPD_SRV.Refresh
        gridREPD_SRV.RefreshGroups
        gridREPD_SRV.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treeREPD_SRV.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treeREPD_SRV.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treeREPD_SRV.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treeREPD_SRV_Expand treeREPD_SRV.Nodes.Item(rnode.Key)
    Else
     u.Parent.Delete u.ID
     u.Parent.Remove u.ID
    End If
    Set frm = Nothing
End Sub

Private Sub cmdREPD_SRVCfg_Click()
  on error resume next
  Dim rnode As MSComctlLib.Node
  Set rnode = treeREPD_SRV.SelectedItem
  if rnode.tag = &quot;object&quot; then exit sub
  If rnode.Tag = &quot;Row&quot; Then
    Set rnode = rnode.parent
  End If
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_SRV,&quot;gridREPD_SRV&quot; &amp; rnode.tag 
Set jset = Nothing
End Sub


Private Sub treeREPD_SRV_Expand(ByVal Node As MSComctlLib.Node)
If Node.Child.Tag = &quot;ToDelete&quot; Then
 parentform.mousepointer = vbHourglass
 treeREPD_SRV.Nodes.Remove Node.Child.Index
 item.Expand treeREPD_SRV, Node.Key, &quot;&quot;
 parentform.mousepointer = vbNormal
End If
 set treeREPD_SRV.SelectedItem = Node
 treeREPD_SRV_NodeClick Node
End Sub

Private Sub treeREPD_SRV_Collapse(ByVal Node As MSComctlLib.Node)
 set treeREPD_SRV.SelectedItem = Node
 treeREPD_SRV_NodeClick Node
End Sub

Private Sub treeREPD_SRV_NodeClick(ByVal Node As MSComctlLib.Node)
  Dim p As Object, ID As String, struct As String
  If Node.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(Node.Key, 39, 38)
    struct = Node.parent.tag
    Set p = Item.FindRowObject(struct, ID)
    On Error Resume Next
      Item.itemcollection(p.parent.parent, TypeName(p)).preparegrid gridREPD_SRV
      LoadGridLayout gridREPD_SRV,gridREPD_SRV.name &amp; node.parent.tag
    Set fndREPD_SRV = Nothing
    Set fndREPD_SRV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndREPD_SRV.Init gridREPD_SRV
  ElseIf Node.Tag &lt;&gt; &quot;object&quot; Then
    If Node.Parent is nothing Then
      Item.itemcollection(item, Node.Tag).preparegrid gridREPD_SRV
      LoadGridLayout gridREPD_SRV,gridREPD_SRV.name &amp; node.tag
    else 
     If Node.Parent.Tag = &quot;Row&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       struct = Node.Parent.parent.tag
       Set p = Item.FindRowObject(struct, ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridREPD_SRV
       LoadGridLayout gridREPD_SRV,gridREPD_SRV.name &amp; node.tag
     End If
     If Node.Parent.Tag = &quot;object&quot; Then
       ID = Mid(Node.Parent.Key, 39, 38)
       Set p = Item.Manager.GetInstanceObject(ID)
       Item.itemcollection(p, Node.Tag).preparegrid gridREPD_SRV
       LoadGridLayout gridREPD_SRV,gridREPD_SRV.name &amp; Node.Tag
     End If
    End If
  End If
End Sub
Private Sub cmdTREPD_SRVRef_Click()
  on error resume next
  treeREPD_SRV.Nodes.Clear
  Item.FillTree treeREPD_SRV, &quot;&quot;, &quot;&quot;, &quot;REPD_SRV&quot;
  gridREPD_SRV.columns.clear
  gridREPD_SRV.itemcount=0
End Sub
Private Sub cmdREPD_SRVRef_Click()
  on error resume next
  treeREPD_SRV_NodeClick   treeREPD_SRV.SelectedItem 
End Sub
Private Sub cmdREPD_SRVAcc_Click()
on error resume next
If gridREPD_SRV.ItemCount = 0 Then Exit Sub
If gridREPD_SRV.Row &gt; 0 Then
 If gridREPD_SRV.RowIndex ( gridREPD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SRV.RowBookmark(gridREPD_SRV.RowIndex(gridREPD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    item.application.manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub gridREPD_SRV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As  GridEX20.JSRowData)
on error resume next
  Dim p As Object, ID As String, struct As String
  If treeREPD_SRV.SelectedItem Is Nothing Then Exit Sub
  If treeREPD_SRV.SelectedItem.Tag = &quot;Row&quot; Then
    On Error Resume Next
    ID = Mid(treeREPD_SRV.SelectedItem.Key, 39, 38)
    struct = treeREPD_SRV.SelectedItem.parent.Tag
    Set p = Item.FindRowObject(struct, ID)
      Item.itemcollection(p.parent.parent, TypeName(p)).LoadRow gridREPD_SRV, RowIndex, Bookmark, Values
    Set p = Nothing
  elseIf treeREPD_SRV.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
      If treeREPD_SRV.SelectedItem.Parent is nothing Then
          Item.itemcollection(item, treeREPD_SRV.SelectedItem.Tag).LoadRow gridREPD_SRV, RowIndex, Bookmark, Values
      else
        If treeREPD_SRV.SelectedItem.Parent.Tag = &quot;Row&quot; Then
          ID = Mid(treeREPD_SRV.SelectedItem.Parent.Key, 39, 38)
          struct = treeREPD_SRV.SelectedItem.parent.parent.tag
          Set p = Item.FindRowObject(struct, ID)
          Item.itemcollection(p, treeREPD_SRV.SelectedItem.Tag).LoadRow gridREPD_SRV, RowIndex, Bookmark, Values
        End If
        If treeREPD_SRV.SelectedItem.Parent.Tag = &quot;object&quot; Then
          ID = Mid(treeREPD_SRV.SelectedItem.Parent.Key, 39, 38)
          Set p = Item.Manager.GetInstanceObject(ID)
          Item.itemcollection(p, treeREPD_SRV.SelectedItem.Tag).LoadRow gridREPD_SRV, RowIndex, Bookmark, Values
        End If
    End If
  End If
End Sub
Private Sub gridREPD_SRV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridREPD_SRV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(Right(Bookmark,len(Bookmark)- 38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.Parent.Delete u.ID
    on error resume next
      Dim rnode As MSComctlLib.Node, tid as string
      Set rnode = treeREPD_SRV.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treeREPD_SRV.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treeREPD_SRV.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treeREPD_SRV_Expand treeREPD_SRV.Nodes.Item(rnode.Key)
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridREPD_SRV_DblClick()
on error resume next
If gridREPD_SRV.ItemCount = 0 Then Exit Sub
If gridREPD_SRV.Row &gt; 0 Then
 If gridREPD_SRV.RowIndex ( gridREPD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SRV.RowBookmark(gridREPD_SRV.RowIndex(gridREPD_SRV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Dim frm As Form
    Set frm = FormByName(TypeName(u),&quot;&quot;)
    Set frm.Item = u
    again: frm.NotFirstTime = False
    frm.OnInit
    frm.Show vbModal
    If frm.OK Then
    on error goto bye
    u.save
    u.Brief true
 bye:
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
on error resume next
      goto again
    end if 
on error resume next
    gridREPD_SRV.RefreshRowBookmark bm
    Else
     u.Refresh
    End If
    Set frm = Nothing
 End If
End If
End Sub

Private Sub gridREPD_SRV_KeyPress(KeyAscii As Integer)
  If gridREPD_SRV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_SRV.FindOnPress KeyAscii
End Sub

Private Sub gridREPD_SRV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridREPD_SRV.ItemCount = 0 Then Exit Sub
 If gridREPD_SRV.Row &gt; 0 Then
   If LastRow &lt;&gt; gridREPD_SRV.Row And LastRow &gt; 0 Then
     gridREPD_SRV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridREPD_SRV.GetRowData(gridREPD_SRV.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
private sub gridREPD_SRV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  PopupMenu mnuPopupREPD_SRV
End If
end sub
private sub mnuREPD_SRVAdd_click()
   menuActionREPD_SRV =&quot;ADD&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVEdit_click()
   menuActionREPD_SRV =&quot;EDIT&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVDelete_click()
   menuActionREPD_SRV =&quot;DEL&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVOpen_click()
   menuActionREPD_SRV =&quot;RUN&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVRef_click()
   menuActionREPD_SRV =&quot;REF&quot;
   menuTimerREPD_SRV.enabled = true
end sub
  Private Sub mnuREPD_SRVCOPY_Click()
    On Error Resume Next
    If gridREPD_SRV.ItemCount = 0 Then Exit Sub
    If gridREPD_SRV.Row &gt; 0 Then
     If gridREPD_SRV.RowIndex(gridREPD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_SRV.RowBookmark(gridREPD_SRV.RowIndex(gridREPD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_SRVCUT_Click()
    On Error Resume Next
    If gridREPD_SRV.ItemCount = 0 Then Exit Sub
    If gridREPD_SRV.Row &gt; 0 Then
     If gridREPD_SRV.RowIndex(gridREPD_SRV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_SRV.RowBookmark(gridREPD_SRV.RowIndex(gridREPD_SRV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_SRV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
 private sub mnuREPD_SRVPASTE_Click()
  on error resume next
Dim p As Object, ID As String, struct As String, u As Object
  If treeREPD_SRV.SelectedItem Is Nothing Then Exit Sub
    If treeREPD_SRV.SelectedItem.Tag = &quot;Row&quot; Then
      On Error Resume Next
      ID = Mid(treeREPD_SRV.SelectedItem.key, 39, 38)
      struct = treeREPD_SRV.SelectedItem.parent.tag
      Set p = Item.FindRowObject(struct, ID)
      If Item.itemcollection(p, TypeName(p)) Is Nothing Then
        Set u = p.Parent.Add
      Else
        Set u = Item.itemcollection(p, TypeName(p)).Add
      End If

      Set p = Nothing
    ElseIf treeREPD_SRV.SelectedItem.Tag &lt;&gt; &quot;object&quot; Then
        If treeREPD_SRV.SelectedItem.Parent.Tag = &quot;Row&quot; Then
        ID = Mid(treeREPD_SRV.SelectedItem.Parent.key, 39, 38)
        struct = treeREPD_SRV.SelectedItem.parent.parent.tag
        Set p = Item.FindRowObject(struct, ID)
        Set u = Item.itemcollection(p, treeREPD_SRV.SelectedItem.Tag).Add
      End If
      If treeREPD_SRV.SelectedItem.Parent.Tag = &quot;object&quot; Then
        ID = Mid(treeREPD_SRV.SelectedItem.Parent.key, 39, 38)
        Set p = Item.Manager.GetInstanceObject(ID)
        Set u = Item.itemcollection(p, treeREPD_SRV.SelectedItem.Tag).Add
      End If
    End If
    Set p = Nothing
    If u Is Nothing Then Exit Sub
    if getFrombuffer(u) then
      gridREPD_SRV.ItemCount = u.Parent.Count
      gridREPD_SRV.Refresh
      gridREPD_SRV.RefreshGroups
      gridREPD_SRV.RefreshSort
      Dim tid As String
      Dim key As String
      on error resume next
      Dim rnode As MSComctlLib.Node
      Set rnode = treeREPD_SRV.SelectedItem
      If rnode.Tag = &quot;Row&quot; Then
        Set rnode = rnode.parent
      End If
      While rnode.Children &gt; 0
         treeREPD_SRV.Nodes.Remove rnode.Child.Key
      Wend
      tid = CreateGUID2()
      treeREPD_SRV.Nodes.Add(rnode.Key, 4, tid, &quot;Expanding...&quot;).Tag = &quot;ToDelete&quot;
      treeREPD_SRV_Expand treeREPD_SRV.Nodes.Item(rnode.Key)
    Else
     u.Parent.Remove u.ID
    End If
End Sub

Private Sub mnuREPD_SRVCHANGE_Click()
  On Error Resume Next
  If gridREPD_SRV.ItemCount = 0 Then Exit Sub
  If gridREPD_SRV.Row &gt; 0 Then
   If gridREPD_SRV.RowIndex(gridREPD_SRV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_SRV.RowBookmark(gridREPD_SRV.RowIndex(gridREPD_SRV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_SRV.ItemCount = u.parent.Count
      gridREPD_SRV.RefreshRowIndex gridREPD_SRV.RowIndex(gridREPD_SRV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_SRVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_SRVPrn_click()
   menuActionREPD_SRV =&quot;PRN&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVCfg_click()
   menuActionREPD_SRV =&quot;CFG&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVFind_click()
   menuActionREPD_SRV =&quot;FND&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub mnuREPD_SRVAcc_click()
   menuActionREPD_SRV =&quot;ACC&quot;
   menuTimerREPD_SRV.enabled = true
end sub
private sub menuTimerREPD_SRV_timer()
   menuTimerREPD_SRV.enabled = false
   if menuActionREPD_SRV =&quot;ADD&quot; then cmdREPD_SRVADD_CLick
   if menuActionREPD_SRV =&quot;EDIT&quot; then cmdREPD_SRVEDIT_CLick
   if menuActionREPD_SRV =&quot;DEL&quot; then cmdREPD_SRVDEL_CLick
   if menuActionREPD_SRV =&quot;RUN&quot; then cmdREPD_SRVRUN_CLick
   if menuActionREPD_SRV =&quot;REF&quot; then cmdREPD_SRVREF_CLick
   if menuActionREPD_SRV =&quot;PRN&quot; then cmdREPD_SRVPRN_CLick
   if menuActionREPD_SRV =&quot;CFG&quot; then cmdREPD_SRVCFG_CLick
   if menuActionREPD_SRV =&quot;FND&quot; then cmdREPD_SRVFND_CLick
   if menuActionREPD_SRV =&quot;ACC&quot; then cmdREPD_SRVACC_CLick
   menuActionREPD_SRV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

item.FillTree treeREPD_SRV,&quot;&quot;,&quot;&quot;,&quot;REPD_SRV&quot;
  LoadBtnPictures cmdTREPD_SRVRef,cmdTREPD_SRVRef.Tag
  LoadBtnPictures cmdREPD_SRVRef,cmdREPD_SRVRef.Tag
  LoadBtnPictures cmdREPD_SRVAdd,cmdREPD_SRVAdd.Tag
  LoadBtnPictures cmdREPD_SRVEdit,cmdREPD_SRVEdit.Tag
  LoadBtnPictures cmdREPD_SRVDel,cmdREPD_SRVDel.Tag
  LoadBtnPictures cmdREPD_SRVPrn,cmdREPD_SRVPrn.Tag
  LoadBtnPictures cmdREPD_SRVFnd,cmdREPD_SRVFnd.Tag
  LoadBtnPictures cmdREPD_SRVCfg,cmdREPD_SRVCfg.Tag
  LoadBtnPictures cmdREPD_SRVRun,cmdREPD_SRVRun.Tag
  LoadBtnPictures cmdREPD_SRVAcc,cmdREPD_SRVAcc.Tag
  gridREPD_SRV.Columns.Clear
  gridREPD_SRV.ItemCount=0
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlREPD_SRV.RestorePosition
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlREPD_SRV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndREPD_SRV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnREPD_RecvQ_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlREPD_RecvQ" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlREPD_RecvQ"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridREPD_RecvQ" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_RecvQ"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdREPD_RecvQAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_RecvQEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_RecvQDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_RecvQRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_RecvQPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_RecvQCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_RecvQFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_RecvQRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_RecvQRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_RecvQAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RecvQAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupREPD_RecvQ" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Очередь полученых реплик"/><Properties Name="Name" PropValue="mnuPopupREPD_RecvQ"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_RecvQAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_RecvQAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_RecvQEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_RecvQEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_RecvQDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_RecvQDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_RecvQOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_RecvQOpen"/></ControlData><ControlData Name="mnuREPD_RecvQRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_RecvQRef"/></ControlData><ControlData Name="mnuREPD_RecvQS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_RecvQS1"/></ControlData><ControlData Name="mnuREPD_RecvQBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_RecvQBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_RecvQCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_RecvQCOPY"/></ControlData><ControlData Name="mnuREPD_RecvQCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_RecvQCUT"/></ControlData><ControlData Name="mnuREPD_RecvQPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_RecvQPASTE"/></ControlData><ControlData Name="mnuREPD_RecvQCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_RecvQCHANGE"/></ControlData><ControlData Name="mnuREPD_RecvQCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_RecvQCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_RecvQPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_RecvQPrn"/></ControlData><ControlData Name="mnuREPD_RecvQCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_RecvQCfg"/></ControlData><ControlData Name="mnuREPD_RecvQFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_RecvQFind"/></ControlData><ControlData Name="mnuREPD_RecvQAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_RecvQAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_RecvQ" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_RecvQ"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Очередь полученых реплик
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndREPD_RecvQ as object
private menuActionREPD_RecvQ as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdREPD_RecvQCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_RecvQ,&quot;gridREPD_RecvQ&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_RecvQPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_RecvQ,&quot;Очередь полученых реплик&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_RecvQRef_Click()
  on error resume next
  item.REPD_RecvQ.Refresh
  gridREPD_RecvQ.itemCount = item.REPD_RecvQ.count
  gridREPD_RecvQ.Refetch
  gridREPD_RecvQ.Refresh
End Sub
Private Sub cmdREPD_RecvQAcc_Click()
On Error Resume Next
If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
If gridREPD_RecvQ.Row &gt; 0 Then
 If gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_RecvQ.RowBookmark(gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdREPD_RecvQEdit_Click()
  on error resume next
If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
If gridREPD_RecvQ.Row &gt; 0 then
 If gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_RecvQ.RowBookmark(gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmREPD_RecvQ_.Item = u
    again: frmREPD_RecvQ_.NotFirstTime = False
    frmREPD_RecvQ_.OnInit
    frmREPD_RecvQ_.Show vbModal
    If frmREPD_RecvQ_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridREPD_RecvQ.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdREPD_RecvQDel_Click()
  on error resume next
  gridREPD_RecvQ.Delete
End Sub
Private Sub cmdREPD_RecvQAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.REPD_RecvQ.Add()

      Set frmREPD_RecvQ_.Item = u
      again: frmREPD_RecvQ_.NotFirstTime = False
      frmREPD_RecvQ_.OnInit
      frmREPD_RecvQ_.Show vbModal
      If frmREPD_RecvQ_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridREPD_RecvQ.ItemCount = Item.REPD_RecvQ.Count
        gridREPD_RecvQ.Refresh
        gridREPD_RecvQ.RefreshGroups
        gridREPD_RecvQ.Refreshsort
        gridREPD_RecvQ.MoveToBookmark u.ID &amp; &quot;REPD_RecvQ&quot;
      Else
        Item.REPD_RecvQ.Delete u.ID
        Item.REPD_RecvQ.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdREPD_RecvQFnd_Click()
  on error resume next
  fndREPD_RecvQ.ShowForm
End Sub
Private Sub cmdREPD_RecvQRun_Click()
  on error resume next
  gridREPD_RecvQ_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridREPD_RecvQ_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.REPD_RecvQ.LoadRow gridREPD_RecvQ, RowIndex, Bookmark, Values
End Sub
Private Sub gridREPD_RecvQ_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;REPD_RecvQ&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridREPD_RecvQ_DblClick()
  cmdREPD_RecvQEdit_Click
End Sub
Private Sub gridREPD_RecvQ_KeyPress(KeyAscii As Integer)
  If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_RecvQ.FindOnPress KeyAscii
End Sub

Private Sub gridREPD_RecvQ_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridREPD_RecvQ.Row And LastRow &gt; 0 Then
  gridREPD_RecvQ.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridREPD_RecvQ.GetRowData(gridREPD_RecvQ.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuREPD_RecvQPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.REPD_RecvQ.Add()
    If GetFromBuffer(u) Then
      gridREPD_RecvQ.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridREPD_RecvQ_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdREPD_RecvQCfg_Click
        End If
    End If
end sub

private sub gridREPD_RecvQ_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupREPD_RecvQ
End If
end sub
private sub mnuREPD_RecvQAdd_click()
   menuActionREPD_RecvQ =&quot;ADD&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQEdit_click()
   menuActionREPD_RecvQ =&quot;EDIT&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQDelete_click()
   menuActionREPD_RecvQ =&quot;DEL&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQOpen_click()
   menuActionREPD_RecvQ =&quot;RUN&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQRef_click()
   menuActionREPD_RecvQ =&quot;REF&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
  Private Sub mnuREPD_RecvQCOPY_Click()
    On Error Resume Next
    If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
    If gridREPD_RecvQ.Row &gt; 0 Then
     If gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_RecvQ.RowBookmark(gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_RecvQCUT_Click()
    On Error Resume Next
    If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
    If gridREPD_RecvQ.Row &gt; 0 Then
     If gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_RecvQ.RowBookmark(gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_RecvQ.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuREPD_RecvQCHANGE_Click()
  On Error Resume Next
  If gridREPD_RecvQ.ItemCount = 0 Then Exit Sub
  If gridREPD_RecvQ.Row &gt; 0 Then
   If gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_RecvQ.RowBookmark(gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_RecvQ.ItemCount = u.parent.Count
      gridREPD_RecvQ.RefreshRowIndex gridREPD_RecvQ.RowIndex(gridREPD_RecvQ.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_RecvQCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_RecvQPrn_click()
   menuActionREPD_RecvQ =&quot;PRN&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQCfg_click()
   menuActionREPD_RecvQ =&quot;CFG&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQFind_click()
   menuActionREPD_RecvQ =&quot;FND&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub mnuREPD_RecvQAcc_click()
   menuActionREPD_RecvQ =&quot;ACC&quot;
   menuTimerREPD_RecvQ.enabled = true
end sub
private sub menuTimerREPD_RecvQ_timer()
   menuTimerREPD_RecvQ.enabled = false
   if menuActionREPD_RecvQ =&quot;ADD&quot; then cmdREPD_RecvQADD_CLick
   if menuActionREPD_RecvQ =&quot;EDIT&quot; then cmdREPD_RecvQEDIT_CLick
   if menuActionREPD_RecvQ =&quot;DEL&quot; then cmdREPD_RecvQDEL_CLick
   if menuActionREPD_RecvQ =&quot;RUN&quot; then cmdREPD_RecvQRUN_CLick
   if menuActionREPD_RecvQ =&quot;REF&quot; then cmdREPD_RecvQREF_CLick
   if menuActionREPD_RecvQ =&quot;PRN&quot; then cmdREPD_RecvQPRN_CLick
   if menuActionREPD_RecvQ =&quot;CFG&quot; then cmdREPD_RecvQCFG_CLick
   if menuActionREPD_RecvQ =&quot;FND&quot; then cmdREPD_RecvQFND_CLick
   if menuActionREPD_RecvQ =&quot;ACC&quot; then cmdREPD_RecvQACC_CLick
   menuActionREPD_RecvQ =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdREPD_RecvQAdd,cmdREPD_RecvQAdd.tag
  LoadBtnPictures cmdREPD_RecvQEdit,cmdREPD_RecvQEdit.tag
  LoadBtnPictures cmdREPD_RecvQDel,cmdREPD_RecvQDel.tag
  LoadBtnPictures cmdREPD_RecvQRef,cmdREPD_RecvQRef.tag
  LoadBtnPictures cmdREPD_RecvQPrn,cmdREPD_RecvQPrn.tag
  LoadBtnPictures cmdREPD_RecvQFnd,cmdREPD_RecvQFnd.tag
  LoadBtnPictures cmdREPD_RecvQRun,cmdREPD_RecvQRun.tag
  LoadBtnPictures cmdREPD_RecvQAcc,cmdREPD_RecvQAcc.tag
  LoadBtnPictures cmdREPD_RecvQCfg,cmdREPD_RecvQCfg.tag
  item.REPD_RecvQ.PrepareGrid gridREPD_RecvQ
  LoadGridLayout gridREPD_RecvQ
  Set fndREPD_RecvQ = Nothing
  On Error Resume Next
  Set fndREPD_RecvQ = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndREPD_RecvQ.Init gridREPD_RecvQ
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridREPD_RecvQ.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_RecvQ.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_RecvQ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_RecvQ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridREPD_RecvQ.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_RecvQ.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_RecvQ.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_RecvQ.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlREPD_RecvQ.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndREPD_RecvQ = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnREPD_LOCKED_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlREPD_LOCKED" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlREPD_LOCKED"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridREPD_LOCKED" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_LOCKED"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdREPD_LOCKEDAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_LOCKEDEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_LOCKEDDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_LOCKEDRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_LOCKEDPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_LOCKEDCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_LOCKEDFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_LOCKEDRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_LOCKEDAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_LOCKEDAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupREPD_LOCKED" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Очередь заблокированных объектов"/><Properties Name="Name" PropValue="mnuPopupREPD_LOCKED"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_LOCKEDAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_LOCKEDEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_LOCKEDDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_LOCKEDOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDOpen"/></ControlData><ControlData Name="mnuREPD_LOCKEDRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDRef"/></ControlData><ControlData Name="mnuREPD_LOCKEDS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDS1"/></ControlData><ControlData Name="mnuREPD_LOCKEDBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_LOCKEDCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDCOPY"/></ControlData><ControlData Name="mnuREPD_LOCKEDCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDCUT"/></ControlData><ControlData Name="mnuREPD_LOCKEDPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDPASTE"/></ControlData><ControlData Name="mnuREPD_LOCKEDCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDCHANGE"/></ControlData><ControlData Name="mnuREPD_LOCKEDCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_LOCKEDPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDPrn"/></ControlData><ControlData Name="mnuREPD_LOCKEDCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDCfg"/></ControlData><ControlData Name="mnuREPD_LOCKEDFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDFind"/></ControlData><ControlData Name="mnuREPD_LOCKEDAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_LOCKEDAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_LOCKED" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_LOCKED"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Очередь заблокированных объектов
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndREPD_LOCKED as object
private menuActionREPD_LOCKED as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdREPD_LOCKEDCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_LOCKED,&quot;gridREPD_LOCKED&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_LOCKEDPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_LOCKED,&quot;Очередь заблокированных объектов&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_LOCKEDRef_Click()
  on error resume next
  item.REPD_LOCKED.Refresh
  gridREPD_LOCKED.itemCount = item.REPD_LOCKED.count
  gridREPD_LOCKED.Refetch
  gridREPD_LOCKED.Refresh
End Sub
Private Sub cmdREPD_LOCKEDAcc_Click()
On Error Resume Next
If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
If gridREPD_LOCKED.Row &gt; 0 Then
 If gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_LOCKED.RowBookmark(gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdREPD_LOCKEDEdit_Click()
  on error resume next
If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
If gridREPD_LOCKED.Row &gt; 0 then
 If gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_LOCKED.RowBookmark(gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmREPD_LOCKED_.Item = u
    again: frmREPD_LOCKED_.NotFirstTime = False
    frmREPD_LOCKED_.OnInit
    frmREPD_LOCKED_.Show vbModal
    If frmREPD_LOCKED_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridREPD_LOCKED.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdREPD_LOCKEDDel_Click()
  on error resume next
  gridREPD_LOCKED.Delete
End Sub
Private Sub cmdREPD_LOCKEDAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.REPD_LOCKED.Add()

      Set frmREPD_LOCKED_.Item = u
      again: frmREPD_LOCKED_.NotFirstTime = False
      frmREPD_LOCKED_.OnInit
      frmREPD_LOCKED_.Show vbModal
      If frmREPD_LOCKED_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridREPD_LOCKED.ItemCount = Item.REPD_LOCKED.Count
        gridREPD_LOCKED.Refresh
        gridREPD_LOCKED.RefreshGroups
        gridREPD_LOCKED.Refreshsort
        gridREPD_LOCKED.MoveToBookmark u.ID &amp; &quot;REPD_LOCKED&quot;
      Else
        Item.REPD_LOCKED.Delete u.ID
        Item.REPD_LOCKED.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdREPD_LOCKEDFnd_Click()
  on error resume next
  fndREPD_LOCKED.ShowForm
End Sub
Private Sub cmdREPD_LOCKEDRun_Click()
  on error resume next
  gridREPD_LOCKED_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridREPD_LOCKED_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.REPD_LOCKED.LoadRow gridREPD_LOCKED, RowIndex, Bookmark, Values
End Sub
Private Sub gridREPD_LOCKED_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;REPD_LOCKED&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridREPD_LOCKED_DblClick()
  cmdREPD_LOCKEDEdit_Click
End Sub
Private Sub gridREPD_LOCKED_KeyPress(KeyAscii As Integer)
  If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_LOCKED.FindOnPress KeyAscii
End Sub

Private Sub gridREPD_LOCKED_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridREPD_LOCKED.Row And LastRow &gt; 0 Then
  gridREPD_LOCKED.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridREPD_LOCKED.GetRowData(gridREPD_LOCKED.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuREPD_LOCKEDPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.REPD_LOCKED.Add()
    If GetFromBuffer(u) Then
      gridREPD_LOCKED.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridREPD_LOCKED_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdREPD_LOCKEDCfg_Click
        End If
    End If
end sub

private sub gridREPD_LOCKED_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupREPD_LOCKED
End If
end sub
private sub mnuREPD_LOCKEDAdd_click()
   menuActionREPD_LOCKED =&quot;ADD&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDEdit_click()
   menuActionREPD_LOCKED =&quot;EDIT&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDDelete_click()
   menuActionREPD_LOCKED =&quot;DEL&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDOpen_click()
   menuActionREPD_LOCKED =&quot;RUN&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDRef_click()
   menuActionREPD_LOCKED =&quot;REF&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
  Private Sub mnuREPD_LOCKEDCOPY_Click()
    On Error Resume Next
    If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
    If gridREPD_LOCKED.Row &gt; 0 Then
     If gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_LOCKED.RowBookmark(gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_LOCKEDCUT_Click()
    On Error Resume Next
    If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
    If gridREPD_LOCKED.Row &gt; 0 Then
     If gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_LOCKED.RowBookmark(gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_LOCKED.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuREPD_LOCKEDCHANGE_Click()
  On Error Resume Next
  If gridREPD_LOCKED.ItemCount = 0 Then Exit Sub
  If gridREPD_LOCKED.Row &gt; 0 Then
   If gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_LOCKED.RowBookmark(gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_LOCKED.ItemCount = u.parent.Count
      gridREPD_LOCKED.RefreshRowIndex gridREPD_LOCKED.RowIndex(gridREPD_LOCKED.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_LOCKEDCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_LOCKEDPrn_click()
   menuActionREPD_LOCKED =&quot;PRN&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDCfg_click()
   menuActionREPD_LOCKED =&quot;CFG&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDFind_click()
   menuActionREPD_LOCKED =&quot;FND&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub mnuREPD_LOCKEDAcc_click()
   menuActionREPD_LOCKED =&quot;ACC&quot;
   menuTimerREPD_LOCKED.enabled = true
end sub
private sub menuTimerREPD_LOCKED_timer()
   menuTimerREPD_LOCKED.enabled = false
   if menuActionREPD_LOCKED =&quot;ADD&quot; then cmdREPD_LOCKEDADD_CLick
   if menuActionREPD_LOCKED =&quot;EDIT&quot; then cmdREPD_LOCKEDEDIT_CLick
   if menuActionREPD_LOCKED =&quot;DEL&quot; then cmdREPD_LOCKEDDEL_CLick
   if menuActionREPD_LOCKED =&quot;RUN&quot; then cmdREPD_LOCKEDRUN_CLick
   if menuActionREPD_LOCKED =&quot;REF&quot; then cmdREPD_LOCKEDREF_CLick
   if menuActionREPD_LOCKED =&quot;PRN&quot; then cmdREPD_LOCKEDPRN_CLick
   if menuActionREPD_LOCKED =&quot;CFG&quot; then cmdREPD_LOCKEDCFG_CLick
   if menuActionREPD_LOCKED =&quot;FND&quot; then cmdREPD_LOCKEDFND_CLick
   if menuActionREPD_LOCKED =&quot;ACC&quot; then cmdREPD_LOCKEDACC_CLick
   menuActionREPD_LOCKED =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdREPD_LOCKEDAdd,cmdREPD_LOCKEDAdd.tag
  LoadBtnPictures cmdREPD_LOCKEDEdit,cmdREPD_LOCKEDEdit.tag
  LoadBtnPictures cmdREPD_LOCKEDDel,cmdREPD_LOCKEDDel.tag
  LoadBtnPictures cmdREPD_LOCKEDRef,cmdREPD_LOCKEDRef.tag
  LoadBtnPictures cmdREPD_LOCKEDPrn,cmdREPD_LOCKEDPrn.tag
  LoadBtnPictures cmdREPD_LOCKEDFnd,cmdREPD_LOCKEDFnd.tag
  LoadBtnPictures cmdREPD_LOCKEDRun,cmdREPD_LOCKEDRun.tag
  LoadBtnPictures cmdREPD_LOCKEDAcc,cmdREPD_LOCKEDAcc.tag
  LoadBtnPictures cmdREPD_LOCKEDCfg,cmdREPD_LOCKEDCfg.tag
  item.REPD_LOCKED.PrepareGrid gridREPD_LOCKED
  LoadGridLayout gridREPD_LOCKED
  Set fndREPD_LOCKED = Nothing
  On Error Resume Next
  Set fndREPD_LOCKED = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndREPD_LOCKED.Init gridREPD_LOCKED
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridREPD_LOCKED.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_LOCKED.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_LOCKED.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_LOCKED.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridREPD_LOCKED.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_LOCKED.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_LOCKED.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_LOCKED.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlREPD_LOCKED.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndREPD_LOCKED = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnREPD_PROV_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlREPD_PROV" ControlIndex="0" PROGID="VB.Frame"><Properties Name="Name" PropValue="pnlREPD_PROV"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><Properties Name="BorderStyle" PropValue="0"/><ControlData Name="gridREPD_PROV" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_PROV"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdREPD_PROVAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_PROVEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_PROVDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_PROVRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_PROVPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_PROVCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_PROVFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_PROVRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_PROVRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_PROVAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_PROVAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupREPD_PROV" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Провайдер репликациии"/><Properties Name="Name" PropValue="mnuPopupREPD_PROV"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_PROVAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_PROVAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_PROVEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_PROVEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_PROVDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_PROVDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_PROVOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_PROVOpen"/></ControlData><ControlData Name="mnuREPD_PROVRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_PROVRef"/></ControlData><ControlData Name="mnuREPD_PROVS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_PROVS1"/></ControlData><ControlData Name="mnuREPD_PROVBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_PROVBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_PROVCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_PROVCOPY"/></ControlData><ControlData Name="mnuREPD_PROVCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_PROVCUT"/></ControlData><ControlData Name="mnuREPD_PROVPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_PROVPASTE"/></ControlData><ControlData Name="mnuREPD_PROVCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_PROVCHANGE"/></ControlData><ControlData Name="mnuREPD_PROVCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_PROVCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_PROVPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_PROVPrn"/></ControlData><ControlData Name="mnuREPD_PROVCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_PROVCfg"/></ControlData><ControlData Name="mnuREPD_PROVFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_PROVFind"/></ControlData><ControlData Name="mnuREPD_PROVAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_PROVAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_PROV" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_PROV"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Провайдер репликациии
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndREPD_PROV as object
private menuActionREPD_PROV as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub cmdREPD_PROVCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_PROV,&quot;gridREPD_PROV&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_PROVPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_PROV,&quot;Провайдер репликациии&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_PROVRef_Click()
  on error resume next
  item.REPD_PROV.Refresh
  gridREPD_PROV.itemCount = item.REPD_PROV.count
  gridREPD_PROV.Refetch
  gridREPD_PROV.Refresh
End Sub
Private Sub cmdREPD_PROVAcc_Click()
On Error Resume Next
If gridREPD_PROV.ItemCount = 0 Then Exit Sub
If gridREPD_PROV.Row &gt; 0 Then
 If gridREPD_PROV.RowIndex(gridREPD_PROV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_PROV.RowBookmark(gridREPD_PROV.RowIndex(gridREPD_PROV.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdREPD_PROVEdit_Click()
  on error resume next
If gridREPD_PROV.ItemCount = 0 Then Exit Sub
If gridREPD_PROV.Row &gt; 0 then
 If gridREPD_PROV.RowIndex(gridREPD_PROV.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_PROV.RowBookmark(gridREPD_PROV.RowIndex(gridREPD_PROV.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmREPD_PROV_.Item = u
    again: frmREPD_PROV_.NotFirstTime = False
    frmREPD_PROV_.OnInit
    frmREPD_PROV_.Show vbModal
    If frmREPD_PROV_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridREPD_PROV.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdREPD_PROVDel_Click()
  on error resume next
  gridREPD_PROV.Delete
End Sub
Private Sub cmdREPD_PROVAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.REPD_PROV.Add()

      Set frmREPD_PROV_.Item = u
      again: frmREPD_PROV_.NotFirstTime = False
      frmREPD_PROV_.OnInit
      frmREPD_PROV_.Show vbModal
      If frmREPD_PROV_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridREPD_PROV.ItemCount = Item.REPD_PROV.Count
        gridREPD_PROV.Refresh
        gridREPD_PROV.RefreshGroups
        gridREPD_PROV.Refreshsort
        gridREPD_PROV.MoveToBookmark u.ID &amp; &quot;REPD_PROV&quot;
      Else
        Item.REPD_PROV.Delete u.ID
        Item.REPD_PROV.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdREPD_PROVFnd_Click()
  on error resume next
  fndREPD_PROV.ShowForm
End Sub
Private Sub cmdREPD_PROVRun_Click()
  on error resume next
  gridREPD_PROV_DblClick
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridREPD_PROV_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.REPD_PROV.LoadRow gridREPD_PROV, RowIndex, Bookmark, Values
End Sub
Private Sub gridREPD_PROV_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridREPD_PROV.ItemCount = 0 Then Exit Sub
  Dim u As Object
  Set u = Item.FindRowObject(&quot;REPD_PROV&quot;, Left(Bookmark, 38))
  If Not u Is Nothing Then
    on error resume next
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub

Private Sub gridREPD_PROV_DblClick()
  cmdREPD_PROVEdit_Click
End Sub
Private Sub gridREPD_PROV_KeyPress(KeyAscii As Integer)
  If gridREPD_PROV.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_PROV.FindOnPress KeyAscii
End Sub

Private Sub gridREPD_PROV_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If LastRow &lt;&gt; gridREPD_PROV.Row And LastRow &gt; 0 Then
  gridREPD_PROV.GetRowData(LastRow).RowStyle = &quot;Default&quot;
  gridREPD_PROV.GetRowData(gridREPD_PROV.Row).RowStyle = &quot;SelectedRow&quot;
End If
End Sub
Private Sub mnuREPD_PROVPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.REPD_PROV.Add()
    If GetFromBuffer(u) Then
      gridREPD_PROV.ItemCount = u.parent.Count
    End If
End Sub
'Hidden GRID Setup...
private sub gridREPD_PROV_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdREPD_PROVCfg_Click
        End If
    End If
end sub

private sub gridREPD_PROV_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupREPD_PROV
End If
end sub
private sub mnuREPD_PROVAdd_click()
   menuActionREPD_PROV =&quot;ADD&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVEdit_click()
   menuActionREPD_PROV =&quot;EDIT&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVDelete_click()
   menuActionREPD_PROV =&quot;DEL&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVOpen_click()
   menuActionREPD_PROV =&quot;RUN&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVRef_click()
   menuActionREPD_PROV =&quot;REF&quot;
   menuTimerREPD_PROV.enabled = true
end sub
  Private Sub mnuREPD_PROVCOPY_Click()
    On Error Resume Next
    If gridREPD_PROV.ItemCount = 0 Then Exit Sub
    If gridREPD_PROV.Row &gt; 0 Then
     If gridREPD_PROV.RowIndex(gridREPD_PROV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_PROV.RowBookmark(gridREPD_PROV.RowIndex(gridREPD_PROV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_PROVCUT_Click()
    On Error Resume Next
    If gridREPD_PROV.ItemCount = 0 Then Exit Sub
    If gridREPD_PROV.Row &gt; 0 Then
     If gridREPD_PROV.RowIndex(gridREPD_PROV.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_PROV.RowBookmark(gridREPD_PROV.RowIndex(gridREPD_PROV.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_PROV.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuREPD_PROVCHANGE_Click()
  On Error Resume Next
  If gridREPD_PROV.ItemCount = 0 Then Exit Sub
  If gridREPD_PROV.Row &gt; 0 Then
   If gridREPD_PROV.RowIndex(gridREPD_PROV.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_PROV.RowBookmark(gridREPD_PROV.RowIndex(gridREPD_PROV.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_PROV.ItemCount = u.parent.Count
      gridREPD_PROV.RefreshRowIndex gridREPD_PROV.RowIndex(gridREPD_PROV.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_PROVCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_PROVPrn_click()
   menuActionREPD_PROV =&quot;PRN&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVCfg_click()
   menuActionREPD_PROV =&quot;CFG&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVFind_click()
   menuActionREPD_PROV =&quot;FND&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub mnuREPD_PROVAcc_click()
   menuActionREPD_PROV =&quot;ACC&quot;
   menuTimerREPD_PROV.enabled = true
end sub
private sub menuTimerREPD_PROV_timer()
   menuTimerREPD_PROV.enabled = false
   if menuActionREPD_PROV =&quot;ADD&quot; then cmdREPD_PROVADD_CLick
   if menuActionREPD_PROV =&quot;EDIT&quot; then cmdREPD_PROVEDIT_CLick
   if menuActionREPD_PROV =&quot;DEL&quot; then cmdREPD_PROVDEL_CLick
   if menuActionREPD_PROV =&quot;RUN&quot; then cmdREPD_PROVRUN_CLick
   if menuActionREPD_PROV =&quot;REF&quot; then cmdREPD_PROVREF_CLick
   if menuActionREPD_PROV =&quot;PRN&quot; then cmdREPD_PROVPRN_CLick
   if menuActionREPD_PROV =&quot;CFG&quot; then cmdREPD_PROVCFG_CLick
   if menuActionREPD_PROV =&quot;FND&quot; then cmdREPD_PROVFND_CLick
   if menuActionREPD_PROV =&quot;ACC&quot; then cmdREPD_PROVACC_CLick
   menuActionREPD_PROV =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdREPD_PROVAdd,cmdREPD_PROVAdd.tag
  LoadBtnPictures cmdREPD_PROVEdit,cmdREPD_PROVEdit.tag
  LoadBtnPictures cmdREPD_PROVDel,cmdREPD_PROVDel.tag
  LoadBtnPictures cmdREPD_PROVRef,cmdREPD_PROVRef.tag
  LoadBtnPictures cmdREPD_PROVPrn,cmdREPD_PROVPrn.tag
  LoadBtnPictures cmdREPD_PROVFnd,cmdREPD_PROVFnd.tag
  LoadBtnPictures cmdREPD_PROVRun,cmdREPD_PROVRun.tag
  LoadBtnPictures cmdREPD_PROVAcc,cmdREPD_PROVAcc.tag
  LoadBtnPictures cmdREPD_PROVCfg,cmdREPD_PROVCfg.tag
  item.REPD_PROV.PrepareGrid gridREPD_PROV
  LoadGridLayout gridREPD_PROV
  Set fndREPD_PROV = Nothing
  On Error Resume Next
  Set fndREPD_PROV = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndREPD_PROV.Init gridREPD_PROV
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

      gridREPD_PROV.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_PROV.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_PROV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_PROV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
      gridREPD_PROV.Top = 40 * Screen.TwipsPerPixelX
      gridREPD_PROV.Left = 5 * Screen.TwipsPerPixelX
      gridREPD_PROV.Width = usercontrol.Width - 10 * Screen.TwipsPerPixelX
      gridREPD_PROV.Height = usercontrol.Height - 45 * Screen.TwipsPerPixelY
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlREPD_PROV.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndREPD_PROV = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="vpnREPD_RequestQuery_" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="pnlREPD_RequestQuery" ControlIndex="0" PROGID="MTZ_PANEL.HFrames"><Properties Name="Name" PropValue="pnlREPD_RequestQuery"/><Properties Name="visible" PropValue="True"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="9000"/><Properties Name="Height" PropValue="6000"/><ControlData Name="gridREPD_RequestQuery" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_RequestQuery"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdREPD_RequestQueryAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_RequestQueryEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_RequestQueryDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_RequestQueryRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_RequestQueryPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_RequestQueryCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_RequestQueryFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_RequestQueryRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_RequestQueryAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_RequestQueryAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData><ControlData Name="gridREPD_ResQueryRcv" ControlIndex="0" PROGID="GridEx20.GridEX"><Properties Name="Name" PropValue="gridREPD_ResQueryRcv"/><Properties Name="DataMode" PropValue="99"/><Properties Name="AllowEdit" PropValue="False"/><Properties Name="AllowAddNew" PropValue="False"/><Properties Name="AllowDelete" PropValue="True"/><Properties Name="ColumnAutoResize" PropValue="False"/><Properties Name="AutomaticSort" PropValue="True"/><Properties Name="RecordNavigator" PropValue="False"/><Properties Name="SelectionStyle" PropValue="1"/><Properties Name="HideSelection" PropValue="2"/><Properties Name="TabKeyBehavior" PropValue="1"/><Properties Name="RecordNavigatorString" PropValue="Запись:|из"/><Properties Name="GroupByBoxInfoText" PropValue="Группировка"/><Properties Name="ItemCount" PropValue="0"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvAdd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvAdd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="NEW.ico"/><Properties Name="ToolTipText" PropValue="Добавить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="75"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvEdit" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvEdit"/><Properties Name="Tag" PropValue="PROP.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Свойства"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="450"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvDel" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvDel"/><Properties Name="Tag" PropValue="DELETE.ico"/><Properties Name="Caption" PropValue=""/><Properties Name="ToolTipText" PropValue="Удалить"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="825"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvRef" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvRef"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="Refresh.ico"/><Properties Name="ToolTipText" PropValue="Обновить"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1200"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvPrn" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvPrn"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="PrintPreview.ico"/><Properties Name="ToolTipText" PropValue="Печать"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1575"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvCfg" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvCfg"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="config.ico"/><Properties Name="ToolTipText" PropValue="Настройка внешнего вида"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="1950"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvFnd" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvFnd"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="find.ico"/><Properties Name="ToolTipText" PropValue="Поиск"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2325"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvRun" ControlIndex="0" PROGID="MTZ_PANEL.DropButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvRun"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="run.ico"/><Properties Name="ToolTipText" PropValue="Открыть"/><Properties Name="Style" PropValue="1"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="2700"/></ControlData><ControlData Name="cmdREPD_ResQueryRcvAcc" ControlIndex="0" PROGID="VB.CommandButton"><Properties Name="Name" PropValue="cmdREPD_ResQueryRcvAcc"/><Properties Name="Caption" PropValue=""/><Properties Name="Tag" PropValue="security.ico"/><Properties Name="ToolTipText" PropValue="Стиль защиты"/><Properties Name="Style" PropValue="1"/><Properties Name="UseMaskColor" PropValue="True"/><Properties Name="Height" PropValue="330"/><Properties Name="Width" PropValue="330"/><Properties Name="Top" PropValue="30"/><Properties Name="Left" PropValue="3075"/></ControlData></ControlData><ControlData Name="mnuPopupREPD_RequestQuery" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Запрос данных на объект\ строку"/><Properties Name="Name" PropValue="mnuPopupREPD_RequestQuery"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_RequestQueryAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_RequestQueryEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_RequestQueryDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_RequestQueryOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryOpen"/></ControlData><ControlData Name="mnuREPD_RequestQueryRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryRef"/></ControlData><ControlData Name="mnuREPD_RequestQueryS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryS1"/></ControlData><ControlData Name="mnuREPD_RequestQueryBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_RequestQueryCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryCOPY"/></ControlData><ControlData Name="mnuREPD_RequestQueryCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryCUT"/></ControlData><ControlData Name="mnuREPD_RequestQueryPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryPASTE"/></ControlData><ControlData Name="mnuREPD_RequestQueryCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryCHANGE"/></ControlData><ControlData Name="mnuREPD_RequestQueryCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_RequestQueryPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryPrn"/></ControlData><ControlData Name="mnuREPD_RequestQueryCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryCfg"/></ControlData><ControlData Name="mnuREPD_RequestQueryFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryFind"/></ControlData><ControlData Name="mnuREPD_RequestQueryAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_RequestQueryAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_RequestQuery" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_RequestQuery"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData><ControlData Name="mnuPopupREPD_ResQueryRcv" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Меню для Результат запроса"/><Properties Name="Name" PropValue="mnuPopupREPD_ResQueryRcv"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuREPD_ResQueryRcvAdd" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Создать"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvAdd"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvEdit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Свойства"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvEdit"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvDelete"/><Properties Name="Enabled" PropValue="True"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvOpen" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Открыть"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvOpen"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvRef" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Обновить"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvRef"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvS1" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="-"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvS1"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvBuffer" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Буфер"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvBuffer"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Enabled" PropValue="True"/><ControlData Name="mnuREPD_ResQueryRcvCOPY" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Копировать"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvCOPY"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvCUT" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вырезать"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvCUT"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvPASTE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Вставить"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvPASTE"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvCHANGE" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заменить"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvCHANGE"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvCLEAN" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Очистить"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvCLEAN"/></ControlData></ControlData><ControlData Name="mnuREPD_ResQueryRcvPrn" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Печать"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvPrn"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvCfg" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настроить"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvCfg"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvFind" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Поиск"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvFind"/></ControlData><ControlData Name="mnuREPD_ResQueryRcvAcc" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuREPD_ResQueryRcvAcc"/></ControlData></ControlData><ControlData Name="menuTimerREPD_ResQueryRcv" ControlIndex="0" PROGID="VB.Timer"><Properties Name="Name" PropValue="menuTimerREPD_ResQueryRcv"/><Properties Name="Enabled" PropValue="False"/><Properties Name="Interval" PropValue="1"/></ControlData></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="'панель для работы со строками раздела Запрос данных на объект\ строку
public Item as object
public ParentForm as Object
public ModalMode as boolean
private fndREPD_RequestQuery as object
private menuActionREPD_RequestQuery as string
private fndREPD_ResQueryRcv as object
private menuActionREPD_ResQueryRcv as string

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
Private Sub pnlREPD_RequestQuery_PositionChanged()
  pnlREPD_RequestQuery.SavePosition
End Sub
'Hidden GRID Setup...
private sub gridREPD_RequestQuery_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdREPD_RequestQueryCfg_Click
        End If
    End If
end sub

private sub gridREPD_RequestQuery_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupREPD_RequestQuery
End If
end sub
private sub mnuREPD_RequestQueryAdd_click()
   menuActionREPD_RequestQuery =&quot;ADD&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryEdit_click()
   menuActionREPD_RequestQuery =&quot;EDIT&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryDelete_click()
   menuActionREPD_RequestQuery =&quot;DEL&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryOpen_click()
   menuActionREPD_RequestQuery =&quot;RUN&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryRef_click()
   menuActionREPD_RequestQuery =&quot;REF&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
  Private Sub mnuREPD_RequestQueryCOPY_Click()
    On Error Resume Next
    If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
    If gridREPD_RequestQuery.Row &gt; 0 Then
     If gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_RequestQueryCUT_Click()
    On Error Resume Next
    If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
    If gridREPD_RequestQuery.Row &gt; 0 Then
     If gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_RequestQuery.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuREPD_RequestQueryCHANGE_Click()
  On Error Resume Next
  If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
  If gridREPD_RequestQuery.Row &gt; 0 Then
   If gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_RequestQuery.ItemCount = u.parent.Count
      gridREPD_RequestQuery.RefreshRowIndex gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_RequestQueryCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_RequestQueryPrn_click()
   menuActionREPD_RequestQuery =&quot;PRN&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryCfg_click()
   menuActionREPD_RequestQuery =&quot;CFG&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryFind_click()
   menuActionREPD_RequestQuery =&quot;FND&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub mnuREPD_RequestQueryAcc_click()
   menuActionREPD_RequestQuery =&quot;ACC&quot;
   menuTimerREPD_RequestQuery.enabled = true
end sub
private sub menuTimerREPD_RequestQuery_timer()
   menuTimerREPD_RequestQuery.enabled = false
   if menuActionREPD_RequestQuery =&quot;ADD&quot; then cmdREPD_RequestQueryADD_CLick
   if menuActionREPD_RequestQuery =&quot;EDIT&quot; then cmdREPD_RequestQueryEDIT_CLick
   if menuActionREPD_RequestQuery =&quot;DEL&quot; then cmdREPD_RequestQueryDEL_CLick
   if menuActionREPD_RequestQuery =&quot;RUN&quot; then cmdREPD_RequestQueryRUN_CLick
   if menuActionREPD_RequestQuery =&quot;REF&quot; then cmdREPD_RequestQueryREF_CLick
   if menuActionREPD_RequestQuery =&quot;PRN&quot; then cmdREPD_RequestQueryPRN_CLick
   if menuActionREPD_RequestQuery =&quot;CFG&quot; then cmdREPD_RequestQueryCFG_CLick
   if menuActionREPD_RequestQuery =&quot;FND&quot; then cmdREPD_RequestQueryFND_CLick
   if menuActionREPD_RequestQuery =&quot;ACC&quot; then cmdREPD_RequestQueryACC_CLick
   menuActionREPD_RequestQuery =&quot;&quot;
end sub
Private Sub cmdREPD_RequestQueryCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_RequestQuery,&quot;gridREPD_RequestQuery&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_RequestQueryPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_RequestQuery,&quot;Запрос данных на объект\ строку&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_RequestQueryRef_Click()
  on error resume next
  item.REPD_RequestQuery.Refresh
  gridREPD_RequestQuery.itemCount = item.REPD_RequestQuery.count
  gridREPD_RequestQuery.Refetch
  gridREPD_RequestQuery.Refresh
End Sub
Private Sub cmdREPD_RequestQueryAcc_Click()
On Error Resume Next
If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
If gridREPD_RequestQuery.Row &gt; 0 Then
 If gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdREPD_RequestQueryEdit_Click()
  on error resume next
If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
If gridREPD_RequestQuery.Row &gt; 0 then
 If gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row ) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set u = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set frmREPD_RequestQuery_.Item = u
    again: frmREPD_RequestQuery_.NotFirstTime = False
    frmREPD_RequestQuery_.OnInit
    frmREPD_RequestQuery_.Show vbModal
    If frmREPD_RequestQuery_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridREPD_RequestQuery.RefreshRowBookmark bm
    else
     u.refresh
    End If
 End If
End If
End Sub
Private Sub cmdREPD_RequestQueryDel_Click()
  on error resume next
  gridREPD_RequestQuery.Delete
End Sub
Private Sub cmdREPD_RequestQueryAdd_Click()
  on error resume next
      Dim u As Object
      Set u = Item.REPD_RequestQuery.Add()

      Set frmREPD_RequestQuery_.Item = u
      again: frmREPD_RequestQuery_.NotFirstTime = False
      frmREPD_RequestQuery_.OnInit
      frmREPD_RequestQuery_.Show vbModal
      If frmREPD_RequestQuery_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridREPD_RequestQuery.ItemCount = Item.REPD_RequestQuery.Count
        gridREPD_RequestQuery.Refresh
        gridREPD_RequestQuery.RefreshGroups
        gridREPD_RequestQuery.Refreshsort
        gridREPD_RequestQuery.MoveToBookmark u.ID &amp; &quot;REPD_RequestQuery&quot;
      Else
        Item.REPD_RequestQuery.Delete u.ID
        Item.REPD_RequestQuery.Remove u.ID
      End If
      Exit Sub
bye:
   MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
End Sub
Private Sub cmdREPD_RequestQueryFnd_Click()
  on error resume next
  fndREPD_RequestQuery.ShowForm
End Sub
Private Sub cmdREPD_RequestQueryRun_Click()
  on error resume next
  gridREPD_RequestQuery_DblClick
End Sub
Private Sub gridREPD_RequestQuery_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
Item.REPD_RequestQuery.LoadRow gridREPD_RequestQuery, RowIndex, Bookmark, Values
End Sub
Private Sub gridREPD_RequestQuery_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As GridEX20.JSRetBoolean)
  If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
  Dim u As Object
  on error resume next
  Set u = Item.FindRowObject(Right(Bookmark, len(Bookmark)-38), Left(Bookmark, 38))
  If Not u Is Nothing Then
    If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbcrlf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
      u.parent.Delete u.id
    Else
      Cancel = True
    End If
  End If
exit sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Public Function IsOK() as BooLEAN
        IsOK=TRUE
End Function
Private Sub gridREPD_RequestQuery_DblClick()
  cmdREPD_RequestQueryEdit_Click
End Sub
Private Sub gridREPD_RequestQuery_KeyPress(KeyAscii As Integer)
  If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_RequestQuery.FindOnPress KeyAscii
End Sub

Private Sub pnlREPD_RequestQuery_MasterResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
  on error resume next
  gridREPD_RequestQuery.Left = Left
  gridREPD_RequestQuery.Top = Top + 25 * Screen.TwipsPerPixelY
  gridREPD_RequestQuery.Width = Width
  gridREPD_RequestQuery.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdREPD_RequestQueryAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_RequestQueryAdd.Left = Left +5 * Screen.TwipsPerPixelX
   cmdREPD_RequestQueryEdit.Left = Left +30* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdREPD_RequestQueryAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub mnuREPD_RequestQueryPASTE_Click()
On Error Resume Next
    Dim u As Object
    Set u = item.REPD_RequestQuery.Add()
    If GetFromBuffer(u) Then
      gridREPD_RequestQuery.ItemCount = u.parent.Count
    End If
End Sub
Private Sub cmdREPD_ResQueryRcvCfg_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.ShowSumary gridREPD_ResQueryRcv,&quot;gridREPD_ResQueryRcv&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_ResQueryRcvPrn_Click()
  on error resume next
Dim jset As object 'MTZ_JSetup.Customizer
Set jset = CreateObject(&quot;MTZ_JSetup.Customizer&quot;)
jset.Preview gridREPD_ResQueryRcv,&quot;Результат запроса&quot;
Set jset = Nothing
End Sub

Private Sub cmdREPD_ResQueryRcvAcc_Click()
On Error Resume Next
If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
If gridREPD_ResQueryRcv.Row &gt; 0 Then
 If gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_ResQueryRcv.RowBookmark(gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row))
    Set u = Item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    Item.Application.Manager.ShowSecurityDialog u
 End If
End If
End Sub
Private Sub cmdREPD_ResQueryRcvFnd_Click()
  on error resume next
  fndREPD_ResQueryRcv.ShowForm
End Sub
Private Sub cmdREPD_ResQueryRcvRun_Click()
  on error resume next
  gridREPD_ResQueryRcv_DblClick
End Sub
Private Sub pnlREPD_RequestQuery_SlaveResize(ByVal Top As Single, ByVal Left As Single, ByVal Width As Single, ByVal Height As Single)
   on error resume next
  gridREPD_ResQueryRcv.Left = Left
  gridREPD_ResQueryRcv.Top = Top + 25 * Screen.TwipsPerPixelY
  gridREPD_ResQueryRcv.Width = Width
  gridREPD_ResQueryRcv.Height = Height-  25 * Screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvAdd.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvEdit.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvDel.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvRef.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvPrn.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvCfg.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvFnd.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvRun.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvAcc.top=top+ 2 * screen.TwipsPerPixelY
   cmdREPD_ResQueryRcvAdd.Left = Left +5 * Screen.TwipsPerPixelX 
   cmdREPD_ResQueryRcvEdit.Left =Left +30* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvDel.Left = Left+55* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvRef.Left = Left+80* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvPrn.Left = Left+105* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvCfg.Left = Left+130* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvFnd.Left = Left+155* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvRun.Left = Left+180* Screen.TwipsPerPixelX
   cmdREPD_ResQueryRcvAcc.Left = Left+205* Screen.TwipsPerPixelX
End Sub
Private Sub cmdREPD_ResQueryRcvRef_Click()
  on error resume next
If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
If gridREPD_RequestQuery.Row &gt; 0 Then
 If gridREPD_RequestQuery.RowIndex ( gridREPD_RequestQuery.Row) &gt; 0 Then
    Dim gu As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.REPD_ResQueryRcv.refresh
   gridREPD_ResQueryRcv.itemcount=gu.REPD_ResQueryRcv.count
   gridREPD_ResQueryRcv.refetch
   gridREPD_ResQueryRcv.refresh
 else
  gridREPD_ResQueryRcv.columns.clear
  gridREPD_ResQueryRcv.itemcount=0
 End If
else
 gridREPD_ResQueryRcv.columns.clear
 gridREPD_ResQueryRcv.itemcount=0
End If
End Sub
Private Sub cmdREPD_ResQueryRcvEdit_Click()
    If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridREPD_ResQueryRcv.RowBookmark(gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row))
    Set u = Item.FindRowObject(Right(bm2, len(bm2)-38), Left(bm2, 38))
    Set frmREPD_ResQueryRcv_.Item = u
    again: frmREPD_ResQueryRcv_.NotFirstTime = False
    frmREPD_ResQueryRcv_.OnInit
    frmREPD_ResQueryRcv_.Show vbModal
    If frmREPD_ResQueryRcv_.OK Then
    on error resume next
    err.clear
    u.save
    if err.number &lt;&gt;0 then 
      msgbox err.description,vbokonly+vbExclamation,&quot;Изменение&quot;
      goto again
    end if 
    gridREPD_ResQueryRcv.RefreshRowBookmark bm2
    Else
        u.Refresh
    End If
    Set u = Nothing
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Изменение&quot;
End Sub
Private Sub cmdREPD_ResQueryRcvDel_Click()
  on error resume next
  gridREPD_ResQueryRcv.Delete
End Sub
Private Sub cmdREPD_ResQueryRcvAdd_Click()
  on error resume next
    Dim gu As Object
    Dim u As Object
If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    Set u = gu.REPD_ResQueryRcv.Add()

      Set frmREPD_ResQueryRcv_.Item = u
      again: frmREPD_ResQueryRcv_.NotFirstTime = False
      frmREPD_ResQueryRcv_.OnInit
      frmREPD_ResQueryRcv_.Show vbModal
      If frmREPD_ResQueryRcv_.OK Then
        err.clear
        u.save
        if err.number &lt;&gt;0 then 
          msgbox err.description,vbokonly+vbExclamation,&quot;Создание&quot;
          goto again
        end if 
        gridREPD_ResQueryRcv.ItemCount = gu.REPD_ResQueryRcv.Count
        gridREPD_ResQueryRcv.Refresh
        gridREPD_ResQueryRcv.RefreshGroups
        gridREPD_ResQueryRcv.Refreshsort
        gridREPD_ResQueryRcv.MoveToBookmark u.ID &amp; &quot;REPD_ResQueryRcv&quot;
      Else
        gu.REPD_ResQueryRcv.Delete u.ID
        gu.REPD_ResQueryRcv.Remove u.ID
      End If
Exit Sub
bye:
MsgBox Err.Description,vbokonly+vbExclamation,&quot;Создание&quot;
  Set gu = Nothing
End Sub
Private Sub gridREPD_RequestQuery_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
If gridREPD_RequestQuery.ItemCount = 0 Then 
  gridREPD_ResQueryRcv.ItemCount=0
  Exit Sub
End If
If gridREPD_RequestQuery.Row &gt; 0 Then
  If LastRow &lt;&gt; gridREPD_RequestQuery.Row And LastRow &gt; 0 Then
    gridREPD_RequestQuery.GetRowData(LastRow).RowStyle = &quot;Default&quot;
    gridREPD_RequestQuery.GetRowData(gridREPD_RequestQuery.Row).RowStyle = &quot;SelectedRow&quot;
  End If
 If gridREPD_RequestQuery.RowIndex ( gridREPD_RequestQuery.Row) &gt; 0 Then
  If LastRow &lt;&gt; gridREPD_RequestQuery.Row or gridREPD_ResQueryRcv.columns.count=0 Then
    Dim gu As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)-38), Left(bm, 38))
    gu.REPD_ResQueryRcv.Preparegrid gridREPD_ResQueryRcv
  gridREPD_ResQueryRcv.ItemCount=0
    LoadGridLayout gridREPD_ResQueryRcv
    Set fndREPD_ResQueryRcv = Nothing
    Set fndREPD_ResQueryRcv = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
    fndREPD_ResQueryRcv.Init gridREPD_ResQueryRcv
  gridREPD_ResQueryRcv.ItemCount=gu.REPD_ResQueryRcv.Count
  End If
 End If
End If
End Sub
Private Sub gridREPD_ResQueryRcv_UnboundReadData(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Values As GridEX20.JSRowData)
on error resume next
    If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
    If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    gu.REPD_ResQueryRcv.LoadRow gridREPD_ResQueryRcv, RowIndex, Bookmark, Values
    Set gu = Nothing
End Sub
Private Sub gridREPD_ResQueryRcv_KeyPress(KeyAscii As Integer)
  If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
  On Error Resume Next
  fndREPD_ResQueryRcv.FindOnPress KeyAscii
End Sub

Private Sub gridREPD_ResQueryRcv_BeforeDeleteEX(ByVal RowIndex As Long, ByVal Bookmark As Variant, ByVal Cancel As  GridEX20.JSRetBoolean)
    If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
    Dim u As Object
    Dim  bm2
    bm2 = gridREPD_ResQueryRcv.RowBookmark(gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row))
    Set u = Item.FindRowObject(Right(bm2,len(bm2)- 38), Left(bm2, 38))
    If Not u Is Nothing Then
      on error resume next
      If MsgBox(&quot;Удалить элемент&quot; &amp; vbCrLf &amp; u.Brief &amp; vbCrLf &amp; &quot;?&quot;, vbYesNo + vbQuestion, &quot;Внимание&quot;) = vbYes Then
      on error goto bye
        u.Parent.Delete u.ID
      Else
        Cancel = True
      End If
    End If

    Set u = Nothing
Exit Sub
bye:
   Cancel = True
   MsgBox Err.Description, vbOKOnly + vbExclamation, &quot;Удаление&quot;
End Sub
Private Sub gridREPD_ResQueryRcv_DblClick()
    cmdREPD_ResQueryRcvEdit_click
End Sub
Private Sub gridREPD_ResQueryRcv_RowColChange(ByVal LastRow As Long, ByVal LastCol As Integer)
 ON ERROR RESUME NEXT
 If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
 If gridREPD_ResQueryRcv.Row &gt; 0 Then
   If LastRow &lt;&gt; gridREPD_ResQueryRcv.Row And LastRow &gt; 0 Then
     gridREPD_ResQueryRcv.GetRowData(LastRow).RowStyle = &quot;Default&quot;
     gridREPD_ResQueryRcv.GetRowData(gridREPD_ResQueryRcv.Row).RowStyle = &quot;SelectedRow&quot;
   End If
 End If
End sub
Private Sub mnuREPD_ResQueryRcvPASTE_Click()
On Error Resume Next
    If gridREPD_RequestQuery.ItemCount = 0 Then Exit Sub
    Dim gu As Object
    Dim bm
    bm = gridREPD_RequestQuery.RowBookmark(gridREPD_RequestQuery.RowIndex(gridREPD_RequestQuery.Row))
    Set gu = Item.FindRowObject(Right(bm, len(bm)- 38), Left(bm, 38))
    Dim u As Object
    Set u = GU.REPD_ResQueryRcv.Add()
    If GetFromBuffer(u) Then
      gridREPD_ResQueryRcv.ItemCount = u.parent.Count
    ELSE
      GU.REPD_ResQueryRcv.REFRESH
    End If
    Set gu = Nothing
End Sub
'Hidden GRID Setup...
private sub gridREPD_ResQueryRcv_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim ShiftDown, AltDown, CtrlDown
    ShiftDown = (Shift And vbShiftMask) &gt; 0
    AltDown = (Shift And vbAltMask) &gt; 0
    CtrlDown = (Shift And vbCtrlMask) &gt; 0
    If KeyCode = vbKeyF4 Then
        If ShiftDown And CtrlDown And AltDown Then
            cmdREPD_ResQueryRcvCfg_Click
        End If
    End If
end sub

private sub gridREPD_ResQueryRcv_MouseDown(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
  on error resume next
  PopupMenu mnuPopupREPD_ResQueryRcv
End If
end sub
private sub mnuREPD_ResQueryRcvAdd_click()
   menuActionREPD_ResQueryRcv =&quot;ADD&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvEdit_click()
   menuActionREPD_ResQueryRcv =&quot;EDIT&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvDelete_click()
   menuActionREPD_ResQueryRcv =&quot;DEL&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvOpen_click()
   menuActionREPD_ResQueryRcv =&quot;RUN&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvRef_click()
   menuActionREPD_ResQueryRcv =&quot;REF&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
  Private Sub mnuREPD_ResQueryRcvCOPY_Click()
    On Error Resume Next
    If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
    If gridREPD_ResQueryRcv.Row &gt; 0 Then
     If gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_ResQueryRcv.RowBookmark(gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
      End If
    End If
  End Sub
  Private Sub mnuREPD_ResQueryRcvCUT_Click()
    On Error Resume Next
    If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
    If gridREPD_ResQueryRcv.Row &gt; 0 Then
     If gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row) &gt; 0 Then
        Dim u As Object
        Dim bm
        bm = gridREPD_ResQueryRcv.RowBookmark(gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row))
        Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
        SaveToBuffer u
        SET BM = u.parent
        u.parent.Delete u.ID
        gridREPD_ResQueryRcv.ITEMCOUNT = BM.COUNT
      End If
    End If
  End Sub
Private Sub mnuREPD_ResQueryRcvCHANGE_Click()
  On Error Resume Next
  If gridREPD_ResQueryRcv.ItemCount = 0 Then Exit Sub
  If gridREPD_ResQueryRcv.Row &gt; 0 Then
   If gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row) &gt; 0 Then
    Dim u As Object
    Dim bm
    bm = gridREPD_ResQueryRcv.RowBookmark(gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row))
    Set u = item.FindRowObject(Right(bm, Len(bm) - 38), Left(bm, 38))
    If GetFromBuffer(u) Then
      gridREPD_ResQueryRcv.ItemCount = u.parent.Count
      gridREPD_ResQueryRcv.RefreshRowIndex gridREPD_ResQueryRcv.RowIndex(gridREPD_ResQueryRcv.Row)
    End If
   End If
  End If
End Sub
  Private Sub mnuREPD_ResQueryRcvCLEAN_Click()
    item.Manager.ClearBuffer &quot; &amp; p.name &amp; &quot;
  End Sub
private sub mnuREPD_ResQueryRcvPrn_click()
   menuActionREPD_ResQueryRcv =&quot;PRN&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvCfg_click()
   menuActionREPD_ResQueryRcv =&quot;CFG&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvFind_click()
   menuActionREPD_ResQueryRcv =&quot;FND&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub mnuREPD_ResQueryRcvAcc_click()
   menuActionREPD_ResQueryRcv =&quot;ACC&quot;
   menuTimerREPD_ResQueryRcv.enabled = true
end sub
private sub menuTimerREPD_ResQueryRcv_timer()
   menuTimerREPD_ResQueryRcv.enabled = false
   if menuActionREPD_ResQueryRcv =&quot;ADD&quot; then cmdREPD_ResQueryRcvADD_CLick
   if menuActionREPD_ResQueryRcv =&quot;EDIT&quot; then cmdREPD_ResQueryRcvEDIT_CLick
   if menuActionREPD_ResQueryRcv =&quot;DEL&quot; then cmdREPD_ResQueryRcvDEL_CLick
   if menuActionREPD_ResQueryRcv =&quot;RUN&quot; then cmdREPD_ResQueryRcvRUN_CLick
   if menuActionREPD_ResQueryRcv =&quot;REF&quot; then cmdREPD_ResQueryRcvREF_CLick
   if menuActionREPD_ResQueryRcv =&quot;PRN&quot; then cmdREPD_ResQueryRcvPRN_CLick
   if menuActionREPD_ResQueryRcv =&quot;CFG&quot; then cmdREPD_ResQueryRcvCFG_CLick
   if menuActionREPD_ResQueryRcv =&quot;FND&quot; then cmdREPD_ResQueryRcvFND_CLick
   if menuActionREPD_ResQueryRcv =&quot;ACC&quot; then cmdREPD_ResQueryRcvACC_CLick
   menuActionREPD_ResQueryRcv =&quot;&quot;
end sub

'Функция инициализации панели данными
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnInit({параметры})
public sub OnInit(aItem as object, optional pForm as object = nothing)
 on error resume next
 set Item =aItem
 set ParentForm = pForm

  LoadBtnPictures cmdREPD_RequestQueryAdd,cmdREPD_RequestQueryAdd.tag
  LoadBtnPictures cmdREPD_RequestQueryEdit,cmdREPD_RequestQueryEdit.tag
  LoadBtnPictures cmdREPD_RequestQueryDel,cmdREPD_RequestQueryDel.tag
  LoadBtnPictures cmdREPD_RequestQueryRef,cmdREPD_RequestQueryRef.tag
  LoadBtnPictures cmdREPD_RequestQueryPrn,cmdREPD_RequestQueryPrn.tag
  LoadBtnPictures cmdREPD_RequestQueryFnd,cmdREPD_RequestQueryFnd.tag
  LoadBtnPictures cmdREPD_RequestQueryRun,cmdREPD_RequestQueryRun.tag
  LoadBtnPictures cmdREPD_RequestQueryAcc,cmdREPD_RequestQueryAcc.tag
  LoadBtnPictures cmdREPD_RequestQueryCfg,cmdREPD_RequestQueryCfg.tag
  item.REPD_RequestQuery.PrepareGrid gridREPD_RequestQuery
  LoadGridLayout gridREPD_RequestQuery
  Set fndREPD_RequestQuery = Nothing
  On Error Resume Next
  Set fndREPD_RequestQuery = CreateObject(&quot;MTZ_JSetup.GridFinder&quot;)
  fndREPD_RequestQuery.Init gridREPD_RequestQuery
  LoadBtnPictures cmdREPD_ResQueryRcvAdd,cmdREPD_ResQueryRcvAdd.tag
  LoadBtnPictures cmdREPD_ResQueryRcvEdit,cmdREPD_ResQueryRcvEdit.tag
  LoadBtnPictures cmdREPD_ResQueryRcvDel,cmdREPD_ResQueryRcvDel.tag
  LoadBtnPictures cmdREPD_ResQueryRcvRef,cmdREPD_ResQueryRcvRef.tag
  LoadBtnPictures cmdREPD_ResQueryRcvPrn,cmdREPD_ResQueryRcvPrn.tag
  LoadBtnPictures cmdREPD_ResQueryRcvFnd,cmdREPD_ResQueryRcvFnd.Tag
  LoadBtnPictures cmdREPD_ResQueryRcvCfg,cmdREPD_ResQueryRcvCfg.tag
  LoadBtnPictures cmdREPD_ResQueryRcvRun,cmdREPD_ResQueryRcvRun.Tag
  LoadBtnPictures cmdREPD_ResQueryRcvAcc,cmdREPD_ResQueryRcvAcc.Tag
  gridREPD_ResQueryRcv.Columns.Clear
  gridREPD_ResQueryRcv.ItemCount=0
  cmdREPD_ResQueryRcvRef_Click
end sub

'Действие при активизации таба
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnTabClick()
private sub OnTabClick()

pnlREPD_RequestQuery.RestorePosition
  gridREPD_RequestQuery_RowColChange gridREPD_RequestQuery.Row,-1
end sub

'Действие при активизации панели
'Parameters:
'[IN][OUT]  aItem , тип параметра: object, 
'[IN][OUT]   optional pForm , тип параметра: object = nothing  - ...
'See Also:
'Example:
'  call me.OnClick({параметры})
public sub OnClick(aItem as object, optional pForm as object = nothing)
  on error resume next
  set Item =aItem
  set ParentForm = pForm
  OnTabClick
end sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
  
end sub

'Признак изменения
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
  
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
  On Error Resume Next
  pnlREPD_RequestQuery.Move 0, 0, UserControl.Width, UserControl.Height
  OnTabClick
end sub

'Освобождение ресурсов
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CloseClass()
public sub CloseClass()
  On Error Resume Next
  set parentForm = nothing
  set item = nothing
  set fndREPD_RequestQuery = nothing
  set fndREPD_ResQueryRcv = nothing
end sub
private sub UserControl_Terminate()
  On Error Resume Next
  CloseClass
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="ctl_main" File=""><AttributeHolder Name="Type" Value="control"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="controlset"/><FormData Name=""><ControlData Name="mnuCtl" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="mnuCtl"/><Properties Name="Name" PropValue="mnuCtl"/><Properties Name="Visible" PropValue="False"/><ControlData Name="mnuSetup" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Настройка"/><Properties Name="Name" PropValue="mnuSetup"/><Properties Name="Enabled" PropValue="True"/><Properties Name="Visible" PropValue="True"/></ControlData></ControlData><ControlData Name="ts" ControlIndex="0" PROGID="mscomctllib.tabstrip"><Properties Name="Name" PropValue="ts"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlREPD_SendQ" ControlIndex="0" PROGID="REPDGUI.vpnREPD_SendQ_"><Properties Name="Name" PropValue="pnlREPD_SendQ"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlREPD_SRV" ControlIndex="0" PROGID="REPDGUI.vpnREPD_SRV_"><Properties Name="Name" PropValue="pnlREPD_SRV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="3000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlREPD_RecvQ" ControlIndex="0" PROGID="REPDGUI.vpnREPD_RecvQ_"><Properties Name="Name" PropValue="pnlREPD_RecvQ"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="4500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlREPD_LOCKED" ControlIndex="0" PROGID="REPDGUI.vpnREPD_LOCKED_"><Properties Name="Name" PropValue="pnlREPD_LOCKED"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="6000"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlREPD_PROV" ControlIndex="0" PROGID="REPDGUI.vpnREPD_PROV_"><Properties Name="Name" PropValue="pnlREPD_PROV"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><ControlData Name="pnlREPD_RequestQuery" ControlIndex="0" PROGID="REPDGUI.vpnREPD_RequestQuery_"><Properties Name="Name" PropValue="pnlREPD_RequestQuery"/><Properties Name="visible" PropValue="False"/><Properties Name="Top" PropValue="1500"/><Properties Name="Left" PropValue="1500"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Данные репликации"/><PropertyData Name="ShowInTaskBar" PropValue="False"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главный контрольный элемент для редактирования документа режим 
public Item as object
public Host as GUI
public ModalMode as boolean
public ParentForm as object
Private TSCustom As MTZ_CUSTOMTAB.TabStripCustomizer

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Получить нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedWidth
Public Property Get PrefferedWidth() As Long
    PrefferedWidth = 0
End Property


'Задать нужную ширину контрола
'Parameters:
' параметров нет
'Returns:
'  значение типа Long
'See Also:
'Example:
' dim variable as Long
' variable = me. PrefferedHeight
Public Property Get PrefferedHeight() As Long
    PrefferedHeight = 0
End Property

Private Sub mnuSetup_Click()
TSCustom.Setup ts
End Sub
Private Sub ts_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
  If Button = 2 And Shift = 0 Then
    PopupMenu mnuCtl
  End If
End Sub

'Все панели заполнены правильно
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as BooLEAN
'  variable = me.IsOK() 
Public Function IsOK() as BooLEAN
DIm IsItOk as Boolean
IsItOk=True
on error resume next
if IsItOk then IsItOk = pnlREPD_SendQ.IsOK
if IsItOk then IsItOk = pnlREPD_SRV.IsOK
if IsItOk then IsItOk = pnlREPD_RecvQ.IsOK
if IsItOk then IsItOk = pnlREPD_LOCKED.IsOK
if IsItOk then IsItOk = pnlREPD_PROV.IsOK
if IsItOk then IsItOk = pnlREPD_RequestQuery.IsOK
IsOK= IsItOk
End Function
private sub ts_click()
  on error resume next
  pnlREPD_RequestQuery.Visible = False
  pnlREPD_PROV.Visible = False
  pnlREPD_LOCKED.Visible = False
  pnlREPD_RecvQ.Visible = False
  pnlREPD_SRV.Visible = False
  pnlREPD_SendQ.Visible = False

   Select Case ts.SelectedItem.Key
   Case &quot;REPD_SendQ&quot;
     With pnlREPD_SendQ
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlREPD_SendQ.OnClick item,parentform
     End With
   Case &quot;REPD_SRV&quot;
     With pnlREPD_SRV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlREPD_SRV.OnClick item,parentform
     End With
   Case &quot;REPD_RecvQ&quot;
     With pnlREPD_RecvQ
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlREPD_RecvQ.OnClick item,parentform
     End With
   Case &quot;REPD_LOCKED&quot;
     With pnlREPD_LOCKED
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlREPD_LOCKED.OnClick item,parentform
     End With
   Case &quot;REPD_PROV&quot;
     With pnlREPD_PROV
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlREPD_PROV.OnClick item,parentform
     End With
   Case &quot;REPD_RequestQuery&quot;
     With pnlREPD_RequestQuery
     .Top = ts.ClientTop
     .Left = ts.ClientLeft
     .Width = ts.ClientWidth
     .Height = ts.ClientHeight
     .Visible = True
     .ZOrder 0
     pnlREPD_RequestQuery.OnClick item,parentform
     End With
     End select
end sub

'Инициализация контрола
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean , 
'[IN][OUT]   aParentForm , тип параметра: object  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean , aParentForm as object)
  on error resume next
 set Item = objItem
 set Host = myHost
 set ParentForm = aParentForm
 ModalMode = aModalMode
  Dim ff As Long, buf As String

ts.Tabs.Item(1).Caption = &quot;Очередь отсылки&quot;
ts.Tabs.Item(1).key = &quot;REPD_SendQ&quot;
pnlREPD_SendQ.OnInit item, parentForm
call ts.Tabs.Add(, &quot;REPD_SRV&quot;, &quot;Узлы репликации&quot;)
pnlREPD_SRV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;REPD_RecvQ&quot;, &quot;Очередь полученых реплик&quot;)
pnlREPD_RecvQ.OnInit item, parentForm
call ts.Tabs.Add(, &quot;REPD_LOCKED&quot;, &quot;Очередь заблокированных объектов&quot;)
pnlREPD_LOCKED.OnInit item, parentForm
call ts.Tabs.Add(, &quot;REPD_PROV&quot;, &quot;Провайдер репликациии&quot;)
pnlREPD_PROV.OnInit item, parentForm
call ts.Tabs.Add(, &quot;REPD_RequestQuery&quot;, &quot;Запрос данных на объект\ строку&quot;)
pnlREPD_RequestQuery.OnInit item, parentForm
  Set TSCustom = New MTZ_CUSTOMTAB.TabStripCustomizer
  TSCustom.Init ts, &quot;REPD&quot;, &quot;ctl_main&quot;
  TSCustom.SetupFromRegistry ts
 ts_click
end sub
Private Sub UserControl_Terminate()
  on error resume next
  set item=nothing
  Set Host = Nothing
  Set ParentForm = Nothing
  Set TSCustom = Nothing
 pnlREPD_SendQ.CloseClass
 pnlREPD_SRV.CloseClass
 pnlREPD_RecvQ.CloseClass
 pnlREPD_LOCKED.CloseClass
 pnlREPD_PROV.CloseClass
 pnlREPD_RequestQuery.CloseClass
End Sub

'Действие при сохранении
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.OnSave()
public sub OnSave()
 pnlREPD_SendQ.OnSave
 pnlREPD_SRV.OnSave
 pnlREPD_RecvQ.OnSave
 pnlREPD_LOCKED.OnSave
 pnlREPD_PROV.OnSave
 pnlREPD_RequestQuery.OnSave
end sub

'Был ли изменен после открытия
'Parameters:
' параметров нет
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as boolean
'  variable = me.IsChanged() 
public function IsChanged() as boolean
  dim m_IsChanged as boolean
  on error resume next
m_IsChanged = m_IsChanged or pnlREPD_SendQ.IsChanged
m_IsChanged = m_IsChanged or pnlREPD_SRV.IsChanged
m_IsChanged = m_IsChanged or pnlREPD_RecvQ.IsChanged
m_IsChanged = m_IsChanged or pnlREPD_LOCKED.IsChanged
m_IsChanged = m_IsChanged or pnlREPD_PROV.IsChanged
m_IsChanged = m_IsChanged or pnlREPD_RequestQuery.IsChanged
  IsChanged = m_IsChanged
end function
private sub UserControl_Resize()
 on error resume next
ts.Top = 0
ts.Left = 0
ts.Width = usercontrol.Width
ts.Height = usercontrol.Height
ts_Click
end sub

'переместить клиента в каталоге
'{5CB1388C-1623-4B36-A775-00B70BEE27AF}
private sub Run_VBMoveVRC ( VRCATFolder as variant , optional RowItem as object )
On error resume next

'do nothing
end sub



'Так же проверяет Square &gt;0
'{53371FFA-B514-447A-A1F9-26EE4FD409C9}
private sub Run_VBUpdateObjNamePEO ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
RowItem.Application.Name=name
RowItem.Application.Save

end sub



'Передать права объекту контактное лицо от объекта клиент
'{79DED4FD-045C-45F8-AC79-2E5A3D956D97}
private sub Run_VBMigrateRight ( optional RowItem as object )
On error resume next

'Migrate security
On Error GoTo bye
  If RowItem.Person Is Nothing Then Exit Sub

  RowItem.Person.Secure Item.SecureStyleID
  RowItem.Person.propagate
bye:
  Exit Sub
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Проверка наличия коллекции характеристик
'{79E6BDEB-91D5-4B2E-81F7-3E091FB65E3A}
private sub Run_VBCheckDescrs ( DesPartName as variant , optional RowItem as object )
On error resume next

    On Error Resume Next

    Dim part_col As Variant
    Dim part_item As Object
    Set part_col = CallByName(RowItem.Parent.Parent, DesPartName, VbGet, False)
    Set part_item = part_col.Item(1)
    If RowItem.Parent.Count = 1 Then
        If part_item.HasDescrs = -1 Then
            part_item.HasDescrs = 0
        Else
            part_item.HasDescrs = -1
        End If
    End If
    part_item.Save

end sub



'Применить стиль защиты для объекта Предназначен для каталога клиентов
'{31EC6CF7-8DBD-4EFE-BF12-4D168F653D34}
private sub Run_VBApplySecurity ( optional RowItem as object )
On error resume next

'Apply security
On Error GoTo bye
  If RowItem.Client Is Nothing Then Exit Sub
  If RowItem.Parent.Parent.AccessLevel Is Nothing Then Exit Sub
  RowItem.Client.Secure RowItem.Parent.Parent.AccessLevel.id
  RowItem.Client.propagate
  Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Усановка стиля защиты&quot;
end sub



'Создание отчета из разных карточек
'{5B8FB7B9-D8B1-4CA0-90AF-55F83D1A6E5D}
private sub Run_VBMakeReport ( ReportType as variant , optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 'ID = CreateGUID2
 'Call RowItem.Application.Manager.NewInstance(ID, &quot;VRRPT&quot;, &quot;Отчет &quot; &amp; Date)
 'Set RowItem.Report = RowItem.Application.Manager.GetInstanceObject(ID)
 If RowItem.Report.VRRPT_MAIN.Count = 0 Then
  Set Obj = RowItem.Report.VRRPT_MAIN.Add
 Else
  Set Obj = RowItem.Report.VRRPT_MAIN.Item(1)
 End If
 
 Set Obj.Author = RowItem.Application.FindRowObject(&quot;Users&quot;, Item.Application.MTZSession.GetSessionUserID())
 Obj.TheDate = Date
 
 If ReportType = &quot;CLNT&quot; Then
   Set Obj.Client = RowItem.Application
 End If
 If ReportType = &quot;PRJ&quot; Then
   Set Obj.Project = RowItem.Application
 End If
 If ReportType = &quot;CONT&quot; Then
   Set Obj.Contract = RowItem.Application
 End If
 If ReportType = &quot;PERS&quot; Then
   Set Obj.Person = RowItem.Application
 End If
 
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание отчета&quot;
end sub



'
'{AA4085E6-745B-4A37-8EC4-65D99A653966}
private sub Run_VBRemoveSymmetricObjRef ( ForwardFieldName as variant ,ObjTypeName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String

    On Error Resume Next
'     On Error GoTo bye

    Dim Obj As Object
    Dim part_col As Variant
    Dim part_item As Object
    Set Obj = CallByName(RowItem, ForwardFieldName, VbGet)
    Set part_col = CallByName(Obj, SymmetricPartName, VbGet, False)
    part_col.Filter = SymmetricFieldName + &quot;='&quot; + RowItem.Application.ID + &quot;'&quot;
'    RowItem.Parent.Remove RowItem.ID
    Set part_item = part_col.Item(1)
    part_col.Delete part_item.ID
    Exit Sub
bye:
Resume

end sub



'Создать новую оплату из клиента
'{42A1A436-8AA2-4F1F-999B-6680DFF514DE}
private sub Run_VBNewPayIn ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKP&quot;, &quot;Платеж &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKP_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKP_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKP_DEF.Item(1)
 End If
 
 Set Obj.FromClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'Для раздела, в котором есть поле - ссылка, создает/выбирает объект без открытия окна редактирования ссылки
'{A2EEE876-54D8-4AED-B124-775F5DA2D911}
private sub Run_VBAddObjByRef ( ObjTypeName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,SymmetricFieldName as variant , optional RowItem as object )
On error resume next

    Dim OK As Boolean
    Dim ID As String
    Dim brief As String
    Dim Mode As String
    Dim ResObject as Object
    On Error Resume Next
    Mode = Mid(TypeName(Me), InStr(TypeName(Me), &quot;_&quot;) + 1)
    
'     On Error GoTo bye
    If Len(Mode) = 0 Then
        OK = Item.Application.Manager.GetObjectListDialogEx(ID, brief, &quot;&quot;, ObjTypeName)
    Else
        ID = CreateGUID2
        If Len(ObjTypeName) = 0 Then
            Dim newObj As Object
            Set newObj = Item.Application.Manager.GetNewObject
            If Not (newObj Is Nothing) Then
                OK = True
                ID = newObj.ID
            End If
        Else
            OK = Item.Application.Manager.NewInstance(ID, ObjTypeName, &quot;&quot;)
        End If
        Dim ref As Object, objGui As Object
        Set ref = Item.Application.Manager.GetInstanceObject(ID)
        If Not ref Is Nothing Then
          Set objGui = Item.Application.Manager.GetInstanceGUI(ID)
          If objGui Is Nothing Then Set ref = Nothing: Exit Sub
          objGui.Show &quot;&quot;, ref, False
          Set objGui = Nothing
        Else
          OK = False
        End If
    End If
    Dim Obj As Object
    Set Obj = Item.Application.Manager.GetInstanceObject(ID)
    If Obj Is Nothing Then
        OK = False
    End If
    If OK Then
	Dim Coll as New Collection
        Dim part_col As Variant
        Dim part_item As Object
        CallByName RowItem, ForwardFieldName, VbSet, Obj
        Coll.Add TypeName(RowItem)+ &quot;:&quot; + RowItem.ID
        RowItem.Save
        If Len(SymmetricPartName) &gt; 0 And Len(SymmetricFieldName) &gt; 0 Then
          Set part_col = CallByName(Obj, SymmetricPartName, VbGet, True)
          Set part_item = part_col.Add
          CallByName part_item, SymmetricFieldName, VbSet, RowItem.Application
          part_item.Save
          Coll.Add SymmetricPartName + &quot;:&quot; + part_item.ID
        End If
        Call Item.Application.Manager.AddCustomObjects(Coll, Obj.ID)
    Else
        RowItem.Parent.Remove RowItem.ID
    End If
    Exit Sub
bye:
Resume
end sub



'
'{5B376AF5-339B-4365-BA80-785E28BCF4DA}
private sub Run_VBUpdateSymmetricObjRef ( SymmetricFieldName as variant ,ForwardFieldName as variant ,SymmetricPartName as variant ,ObjTypeName as variant , optional RowItem as object )
On error resume next

 
end sub



'Создать новый платеж из клиента
'{2BB30818-90ED-4627-8ABB-85B3FBA46750}
private sub Run_VBNewPayOut ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKO&quot;, &quot;Оплата &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKO_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKO_DEF.Item(1)
 End If
 
 Set Obj.ToClient = RowItem.Application
 Obj.PLPDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Платежа&quot;
end sub



'открытие карточки по идентификатору
'{94E8F6DB-106A-44DC-9483-86C801798FF0}
private sub Run_VBOpenRef ( StartMode as variant ,ID as variant , optional RowItem as object )
On error resume next

on error resume next
If ID &lt;&gt; &quot;&quot; Then
    Dim Obj As Object
    Set Obj = item.Manager.GetInstanceObject(ID)
    If Not Obj Is Nothing Then
      Dim objGui As Object
      Set objGui =  item.Manager.GetInstanceGUI(Obj.ID)
      If objGui Is Nothing Then Exit Sub

       If StartMode = &quot;AUTO&quot; Then
        StartMode = &quot;&quot;
        dim i as long
        For i = 100 To 0 Step -10
          If Obj.MTZSession.CheckRight(Obj.SecureStyleid, Obj.TypeName &amp; &quot;:&quot; &amp; &quot;M&quot; &amp; i) Then
            StartMode = &quot;M&quot; &amp; i
            Exit For
          End If
        Next
       End If
      
      objGui.Show StartMode &amp; &quot;&quot;, Obj
      Set objGui = Nothing
    End If
  End If
  
end sub



'
'{069956DC-3305-45EF-9331-91CE323B5942}
private sub Run_WFDefName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Description
parentform.caption = item.name
Item.Save
end sub



'
'{D8914FB4-6B5D-491A-A72F-985617727583}
private sub Run_WFFuncName ( optional RowItem as object )
On error resume next

on error resume next
Item.Name = RowItem.Name
ParentForm.Caption = item.Name
Item.Save
end sub



'Обновление Имени объекта
'{61393545-ABF7-46F7-82F3-9B7E610DD9C0}
private sub Run_VBUpdateObjName ( Name as variant , optional RowItem as object )
On error resume next

On error resume next
RowItem.Application.Name=name
RowItem.Application.Save
end sub



'Метод создает новый элемент в иерархии Имущественных Комплексов (приложение RealEstate) при создании нового элемента к нему линкуется объект ИК, форма которого и вызывается на редактирование
'{477B8D25-4FF7-491A-A0B0-D3437EC16957}
private sub Run_MakeNewFolderEC ( FolderID as variant , optional RowItem as object )
On error resume next

On Error GoTo bye
 Dim ID As String
 Dim Obj As Object ' EstComplex.Application ' Object
 Dim GObj As Object
 Dim fold As Object 'EstCatalog.Application ' Object
 
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;EstComplex&quot;, RowItem.TheName &amp; &quot; &quot; &amp; Date)
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 If Obj.EC_Def.Count = 0 Then
    With Obj.EC_Def.Add
        .TheName = RowItem.TheName
    End With
 Else
    Obj.EC_Def.Item(1).TheName = RowItem.TheName
 End If
 Obj.Save
 Set RowItem.LinkedEC = Obj
 RowItem.Save
 Set GObj = RowItem.Application.Manager.GetInstanceGUI(Obj.ID)
 GObj.Show &quot;&quot;, Obj, True 'False
 Set Obj = RowItem.Application.Manager.GetInstanceObject(ID)
 RowItem.TheName = Obj.EC_Def.Item(1).TheName
 RowItem.Save
 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание ИК&quot;

end sub



'Изменить название объекта
'{4FB59D1A-0123-47D3-9F4F-E12085C5D074}
private sub Run_VBUpdateItemName ( Name as variant , optional RowItem as object )
On error resume next

on error resume next
item.name = Name
' может не быть формы, если используем просто ActiveX
ParentForm.Caption = item.Name
item.Save
end sub



'Создать заявку из клиента
'{49EA5CBF-93CF-41A8-B1F1-E37FE4D59EA5}
private sub Run_VBNewZayavka ( optional RowItem as object )
On error resume next

On error goto bye
Dim ID As String
 Dim Obj As Object
 ID = CreateGUID2
 Call RowItem.Application.Manager.NewInstance(ID, &quot;PEKZ&quot;, &quot;Заявка &quot; &amp; Date)
 Set RowItem.TheDocument = RowItem.Application.Manager.GetInstanceObject(ID)

 If RowItem.TheDocument.PEKO_DEF.Count = 0 Then
  Set Obj = RowItem.TheDocument.PEKz_DEF.Add
 Else
  Set Obj = RowItem.TheDocument.PEKZ_DEF.Item(1)
 End If
 
 Set Obj.ClientFrom = RowItem.Application
 Obj.QueryDate = Date
 Obj.Save
 RowItem.Save

 Exit Sub
bye:
  MsgBox Err.Description, vbOKOnly + vbCritical, &quot;Создание Заявки&quot;
end sub



'Создание номенклатуры по шаблону
'{B91ABF3A-31F8-4A82-8D41-EF463DBA32D0}
private sub Run_SSCreateNomen ( Name as variant , optional RowItem as object )
On error resume next

'pointCreateLine
end sub



'Количество пунктов меню состояний (строк в комбобоксе)
'Parameters:
' параметров нет
'Returns:
'  значение типа Integer
'See Also:
'Example:
' dim variable as Integer
'  variable = me.StatusMenuCount() 
Public Function StatusMenuCount() As Integer
  StatusMenuCount = 0
End Function

'Заполнить меню состояний
'Parameters:
' параметров нет
'Returns:
'  объект класса Object)
'  ,или Nothing
'See Also:
'Example:
' dim variable as Object)
' Set variable = me.SetupStatusMenu()
Public Function SetupStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    i = 0
End function  

'Отметить текущее состояние и разрешить переходные состояния
'Parameters:
' параметров нет
'See Also:
'Example:
'  call me.CheckStatusMenu()
Public sub CheckStatusMenu(m() As Object)
    Dim i As Long
    On Error Resume Next
    For i = 1 To StatusMenuCount
        m(i).Checked = False
        m(i).Enabled = False
        If Not Item Is Nothing Then
          If m(i).Tag = Item.Statusid Then
            m(i).Checked = True
          End If
        End If
    Next
    If Not Item Is Nothing Then
   End If
End sub  

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="frm_main" File=""><AttributeHolder Name="Type" Value="form"/><BlockHolder BlockName="'form" BlockCode=""><AttributeHolder Name="Type" Value="form"/><FormData Name=""><ControlData Name="mnuFile" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Файл"/><Properties Name="Name" PropValue="mnuFile"/><ControlData Name="mnuSaveAsXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Сохранить в формате XML"/><Properties Name="Name" PropValue="mnuSaveAsXML"/></ControlData><ControlData Name="mnuLoadFromXML" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Загрузить из XML"/><Properties Name="Name" PropValue="mnuLoadFromXML"/></ControlData><ControlData Name="mnuSecure" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Стиль защиты"/><Properties Name="Name" PropValue="mnuSecure"/></ControlData><ControlData Name="mnuLock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Заблокировать"/><Properties Name="Name" PropValue="mnuLock"/></ControlData><ControlData Name="mnuUnlock" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Разблокировать"/><Properties Name="Name" PropValue="mnuUnlock"/></ControlData><ControlData Name="mnuRename" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Переименовать"/><Properties Name="Name" PropValue="mnuRename"/></ControlData><ControlData Name="mnuDelete" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Удалить"/><Properties Name="Name" PropValue="mnuDelete"/></ControlData><ControlData Name="mnuExit" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Выход"/><Properties Name="Name" PropValue="mnuExit"/></ControlData></ControlData><ControlData Name="mnuStatus" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="Состояния"/><Properties Name="Name" PropValue="mnuStatus"/><ControlData Name="mnuState" ControlIndex="0" PROGID="VB.Menu"><Properties Name="Caption" PropValue="..."/><Properties Name="Name" PropValue="mnuState"/><Properties Name="Index" PropValue="1"/></ControlData></ControlData><ControlData Name="ctl" ControlIndex="0" PROGID="REPDGUI.ctl_main"><Properties Name="Name" PropValue="ctl"/><Properties Name="Top" PropValue="0"/><Properties Name="Left" PropValue="0"/><Properties Name="Width" PropValue="1500"/><Properties Name="Height" PropValue="1500"/></ControlData><PropertyData Name="tag" PropValue="Card.ICO"/><PropertyData Name="caption" PropValue="Данные репликации"/><PropertyData Name="ShowInTaskBar" PropValue="True"/></FormData></BlockHolder><BlockHolder BlockName="'description" BlockCode="' Главная форма редактирования режим 
public Item as object
public Host as GUI
public ModalMode as boolean

"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="
private sub mnuSaveAsXML_Click()
  on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLSAVE&quot;) Then
   Item.LockResource True
   Item.LoadAll
   Item.WorkOffline = True
   Dim xdom As MSXML2.DOMDocument
   Set xdom = New MSXML2.DOMDocument
   xdom.loadXML &quot;&lt;root&gt;&lt;/root&gt;&quot;
   Item.XMLSave xdom.lastChild, xdom
   xdom.Save App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
   Item.WorkOffline = False
 end if
end sub
private sub mnuSecure_Click()
  on error resume next
  Item.Application.Manager.ShowSecurityDialog item
end sub
private sub mnuUnlock_Click()
  on error resume next
  if Item.IsLocked then 
    Item.UnlockResource
  else
  msgbox &quot;Объект не заблокирован&quot;,vbInformation 
  end if
end sub
private sub mnuLock_Click()
  on error resume next
    Item.LockResource true
end sub
private sub mnuRename_Click()
  on error resume next
  dim n as string
  n=inputbox(&quot;Новое название&quot;,&quot;Переименовать&quot;,item.name)
  if n &lt;&gt;&quot;&quot; and n &lt;&gt;item.name then
    Item.name = n
    Item.Save
    me.caption = item.name
  end if
end sub
private sub mnuExit_Click()
  on error resume next
  unload me
end sub
private sub mnuDelete_Click()
  on error goto bye
  If MsgBox(&quot;Удалить документ?&quot;, vbQuestion + vbYesNo) = vbYes Then
    Item.UnlockResource
    Item.WorkOffline = false
    Item.Manager.DeleteInstance Item.id 
    item.Manager.FreeInstanceObject item.ID
    unload me
  end if
  exit sub
bye:
   MsgBox err.description, vbCritical,&quot;Ошибка при удалении&quot; 
end sub
private sub mnuLoadFromXML_Click()
 on error resume next
 If item.application.MTZSession.CheckRight(item.SecureStyleID, &quot;XMLLOAD&quot;) Then
  Dim xdom As MSXML2.DOMDocument
  Set xdom = New MSXML2.DOMDocument
  xdom.load App.Path &amp; &quot;\&quot; &amp; Item.ID &amp; &quot;.xml&quot;
  Item.XMLLoad xdom.lastChild, 1
  Item.WorkOffline = False
  Item.BatchUpdate
  Set xdom = Nothing
 end if
end sub
private function ParentForm() as form
  set parentForm =me
end function

'Инициализация формы
'Parameters:
'[IN][OUT]   ObjItem , тип параметра: object, 
'[IN][OUT]   MyHost , тип параметра: GUI, 
'[IN][OUT]  aModalMode , тип параметра: boolean  - ...
'See Also:
'Example:
'  call me.Init({параметры})
public sub Init( ObjItem as object, MyHost as GUI,aModalMode as boolean)
 set Item = objItem
 set Host = myHost
 ModalMode = aModalMode
 ctl.Init ObjItem,MyHost,aModalMode,me
 CheckStatus
end sub
Private Sub CheckStatus()
 If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    For i = 1 To ctl.StatusMenuCount
      Set mm(i) = mnuState(i)
    Next
    ctl.CheckStatusMenu mm
  End If
End Sub
Private Sub Form_Activate()
 CheckStatus
end sub
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
  on error resume next
  'SaveToSkin
end sub
Private Sub Form_Load()
  on error resume next
  me.caption = Item.brief
  Dim ff As Long, buf As String
  LoadFromSkin 
  ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
  If ctl.StatusMenuCount &gt; 0 Then
    Dim i As Long
    Dim mm() As Object
    ReDim mm(1 To ctl.StatusMenuCount)
    Set mm(1) = mnuState(1)
    For i = 2 To ctl.StatusMenuCount
     Load mnuState(i)
     Set mm(i) = mnuState(i)
    Next
    ctl.SetupStatusMenu mm
    CheckStatus
  Else
    mnuStatus.Visible = False
  End If
End Sub
Private Sub mnuState_Click(Index As Integer)
  On Error Resume Next
  If BeforeChangeStatus(item, mnuState(Index).Tag) Then
    Item.Statusid = mnuState(Index).Tag
    CheckStatus
  End If
end sub

'Отработка логики контроля изменения состояния
'Parameters:
'[IN][OUT]  item , тип параметра: Object, 
'[IN][OUT]   NewStatus , тип параметра: String  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.BeforeChangeStatus(...параметры...) 
Public Function BeforeChangeStatus(item As Object, NewStatus As String) As Boolean
  Dim logic As Object
  Dim result As Boolean
  result = True
  On Error Resume Next
  Dim MyUser As Object
  Set MyUser = item.FindRowObject(&quot;Users&quot;, item.mtzSession.GetSessionUserID())
  Set logic = CreateObject(item.TypeName &amp; &quot;BST.BEFORESTATUS&quot;)
  If Not logic Is Nothing Then
    result = logic.Check(item, NewStatus, MyUser, item.TypeName)
    Set logic = Nothing
  End If
  BeforeChangeStatus = result
End Function
Private Sub Form_Unload(Cancel As Integer)
  If Not Host Is Nothing Then
    If Not Item Is Nothing Then
      If Not ctl Is Nothing Then
On Error GoTo bye
        If ctl.IsChanged Then
            'If MsgBox(&quot;Закрыть без сохранения?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                If Not CheckIsOk(Item) Then
                    If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                        On Error Resume Next
                        Item.Manager.DeleteInstance Item.ID
                        Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                        Set Item = Nothing
                        Exit Sub
                    End If
                End If
            'Else
            '    Cancel = -1
            '    Exit Sub
            'End If
        Else
            If CheckIsNew(Item) Then
              On Error Resume Next
              Item.Manager.DeleteInstance Item.ID
              Host.EraseForm Item.ID, &quot;&quot;,ModalMode
              Set Item = Nothing
              Exit Sub
            End If

            If Not CheckIsOk(Item) Then
                If MsgBox(&quot;Поля не заполнены. Удалить документ?&quot;, vbCritical + vbYesNo, Me.Caption) = vbYes Then
                    On Error Resume Next
                    Item.Manager.DeleteInstance Item.ID
                    Host.EraseForm Item.ID,&quot;&quot;,ModalMode
                    Set Item = Nothing
                    Exit Sub
                End If
            End If
        End If
On Error Resume Next
      End If
      Host.EraseForm Item.ID, &quot;&quot;,ModalMode
    End If
  End If
  'SaveToSkin
  Exit Sub
bye:
  If MsgBox(&quot;Ошибка при закрытии:&quot; &amp; vbCrLf &amp; Err.Description, vbCritical + vbYesNo, &quot;Закрыть окно?&quot;) = vbNo Then
    Cancel = -1
  End If


End Sub

'Проверка наличия данных в объекте
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsOk(...параметры...) 
' Set variable = me.CheckIsOk(...параметры...)
Public Function CheckIsOk(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName,PartType from part, objecttype where part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;' and part.parentrowid is null&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        If rs!PartType = 0 Then
          Set p_col = CallByName(o, PartName, VbGet, False)
          Set p = p_col.Item(1)
          Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'&quot;)
          While Not rsf.EOF
              FieldName = rsf!fname &amp; &quot;&quot;
              On Error Resume Next
              Set val = CallByName(p, FieldName, VbGet)
              If Err.Number &lt;&gt; 0 Then
                  Err.Clear
                  numres = CallByName(p, FieldName, VbGet)
                  If Err.Number &lt;&gt; 0 Then
                      Err.Clear
                      strval = CallByName(p, FieldName, VbGet)
                      If Len(strval) &gt; 0 Then
                          CheckIsOk = True
                      End If
                  Else
                      If numres &lt;&gt; 0 Then
                          CheckIsOk = True
                      End If
                  End If
              Else
                  If Not (val Is Nothing) Then
                      CheckIsOk = True
                  End If
              End If
              rsf.MoveNext
          Wend
        ElseIf rs!PartType &lt;&gt; 3 and rs!PartType &lt;&gt; 4  Then
          On Error Resume next
          Set p_col = CallByName(o, PartName, VbGet, False)
          if (Not p_col is nothing) then
            If p_col.Count &gt; 0 Then
              CheckIsOk = True
            End If
          End If
        End If
        rs.MoveNext
    Wend
End Function



'Проверка на новый документ
'Parameters:
'[IN][OUT]  o , тип параметра: Object  - ...
'Returns:
'  объект любого класса Visual Basic
'  ,или Nothing
'  ,или значение любого скалярного типа 
'See Also:
'Example:
' dim variable as Variant
' variable = me.CheckIsNew(...параметры...) 
' Set variable = me.CheckIsNew(...параметры...)
Public Function CheckIsNew(o As Object)
    'get plain part
    Dim res As Boolean
    Dim p_col As Object
    Dim p As Object
    Dim rs As ADODB.Recordset
    Dim rsf As ADODB.Recordset
    Dim rsfcheck As ADODB.Recordset
    Dim val As Object
    Dim strval As String
    Dim numres As Double

    res = False
    CheckIsNew = True
    Set rs = o.MTZSession.GetData(&quot;select part.name as pName from part, objecttype where part.parentrowid is null and  part.parentstructrowid=objecttype.objecttypeid and objecttype.Name='&quot; &amp; o.TypeName &amp; &quot;'&quot;) ' and part.Parttype=0&quot;)

    While Not rs.EOF
        Dim PartName As String
        Dim FieldName As String
        PartName = rs!pName &amp; &quot;&quot;
        on error resume next
        Set rsf = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;'&quot;)
        on error goto 0
        If Not rsf Is Nothing Then
          If Not rsf.EOF Then
            If rsf!cnt &gt; 0 Then
              Set rsf = o.Application.MTZSession.GetData(&quot;select field.name as fName from field, part where field.parentstructrowId=part.partid and part.name='&quot; &amp; PartName &amp; &quot;'  and  IsAutoNumber=0&quot;) 'AllowNull=-1 and
              while not rsf.eof
                On error resume next 
                Err.Clear 
                Set rsfcheck = o.Application.MTZSession.GetData(&quot;select Count(*) cnt from &quot; &amp; PartName &amp; &quot; where instanceid='&quot; &amp; o.ID &amp; &quot;' and &quot; &amp; rsf!fname &amp; &quot; is not null&quot;)
                if  (Err.Number = 0) then 
                  If Not rsfcheck Is Nothing Then
                    If Not rsfcheck.EOF Then
                      If rsfcheck!cnt &gt; 0 Then
                        CheckIsNew = False
                       End If
                    End If
                  End If
                Else 
                  Err.Clear
                End If
                On Error Goto 0
                rsf.movenext
              Wend
            End If
          End If
        End If
        Set rsf = Nothing
        rs.MoveNext
    Wend
    Set rs = Nothing
End Function
private sub Form_Resize()
 if me.windowstate =1 then exit sub
 on error resume next
 ctl.Move 0,0,Me.ScaleWidth,Me.ScaleHeight
end sub
private sub LoadFromSkin()
  on error resume next
  Dim s As String, arr() as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Dim ff As Long, buf As String
  ff = FreeFile
  Open s &amp; &quot;MainForm&quot; &amp; &quot;REPD&quot;  For Input As #ff
  buf = Input(LOF(ff), ff)
  Close #ff
  arr = split(buf, vbcrlf)
  Dim arr2() As String, i as long
For i = 0 To UBound(arr)
  arr2 = Split(arr(i), &quot;:&quot;)
  Select Case arr2(0)
  case &quot;FormTag&quot;
    Tag = arr2(1)
  Case &quot;FormTop&quot;
    Top = arr2(1)
  Case &quot;FormLeft&quot;
    left = arr2(1)
  Case &quot;FormWidth&quot;
    Width = arr2(1)
  Case &quot;FormHeight&quot;
    Height = arr2(1)
  Case Else
    Controls(arr2(0)).tag = Val(arr2(1))
  End Select
Next
  s = &quot;&quot; 
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, App.Path &amp; &quot;\IMAGES\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;IMAGEPATH&quot;, s
  set icon = LoadPicture(s &amp; Me.tag)
end sub

private sub SaveToSkin
  on error resume next
  Dim s As String, buf as string
  s = GetSetting(&quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, App.Path &amp; &quot;\LAYOUTS\&quot;)
  SaveSetting &quot;MTZ&quot;, &quot;CONFIG&quot;, &quot;LAYOUTS&quot;, s
  Me.WindowState =0 
  Dim ff As Long
  ff = FreeFile
  kill s &amp; &quot;MainForm&quot; &amp; &quot;REPD&quot;
  Open s &amp; &quot;MainForm&quot; &amp; &quot;REPD&quot;  For output As #ff
  buf =  &quot;FormTag:&quot; &amp; Me.Tag 
  buf = buf &amp; vbcrlf &amp; &quot;FormTop:&quot; &amp; Me.Top 
  buf = buf &amp; vbCrLf &amp; &quot;FormLeft:&quot; &amp; Me.Left
  buf = buf &amp; vbCrLf &amp; &quot;FormWidth:&quot; &amp; Me.Width
  buf = buf &amp; vbCrLf &amp; &quot;FormHeight:&quot; &amp; Me.Height
  print #ff, buf
  Close #ff
end sub


"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder><ModuleHolder ModuleName="Util" File=""><AttributeHolder Name="Instancing" Value="private"/><AttributeHolder Name="Type" Value="module"/><BlockHolder BlockName="'description" BlockCode="' модуль общих функций



"><AttributeHolder Name="Type" Value="description"/><FormData Name=""/></BlockHolder><BlockHolder BlockName="'codebody" BlockCode="

'Найти форму по имени
'Parameters:
'[IN]   Name , тип параметра: string, 
'[IN]   Mode , тип параметра: string =&quot;&quot;   - ...
'Returns:
'  объект класса form
'  ,или Nothing
'See Also:
'Example:
' dim variable as form
' Set variable = me.FormByName(...параметры...)
public function FormByName( byval Name as string, optional byval Mode as string =&quot;&quot; ) as form
if Mode=&quot;&quot; then

if Name=&quot;REPD_SendQ&quot; then 
 set FormByName = new frmREPD_SendQ_
 exit function
end if

if Name=&quot;REPD_SRV&quot; then 
 set FormByName = new frmREPD_SRV_
 exit function
end if

if Name=&quot;REPD_SNDTO&quot; then 
 set FormByName = new frmREPD_SNDTO_
 exit function
end if

if Name=&quot;REPD_CONST&quot; then 
 set FormByName = new frmREPD_CONST_
 exit function
end if

if Name=&quot;REPD_REPTYPE&quot; then 
 set FormByName = new frmREPD_REPTYPE_
 exit function
end if

if Name=&quot;REPD_RecvQ&quot; then 
 set FormByName = new frmREPD_RecvQ_
 exit function
end if

if Name=&quot;REPD_LOCKED&quot; then 
 set FormByName = new frmREPD_LOCKED_
 exit function
end if

if Name=&quot;REPD_PROV&quot; then 
 set FormByName = new frmREPD_PROV_
 exit function
end if

if Name=&quot;REPD_RequestQuery&quot; then 
 set FormByName = new frmREPD_RequestQuery_
 exit function
end if

if Name=&quot;REPD_ResQueryRcv&quot; then 
 set FormByName = new frmREPD_ResQueryRcv_
 exit function
end if

end if
end function

'Скопировать объект в типизированный XML  буфер
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'See Also:
'Example:
'  call me.SaveToBuffer({параметры})
Public Sub SaveToBuffer(u As Object)
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      xdom.loadXML &quot;&lt;I&gt;&lt;/I&gt;&quot;
      u.XMLSave xdom.lastChild, xdom
      u.Application.Manager.SetBuffer u.PartName, xdom.xml
      Set xdom = Nothing
End Sub


'Получить объект из типизированного XML  буфера
'Parameters:
'[IN][OUT]  u , тип параметра: Object  - ...
'Returns:
' Boolean, семантика результата:
'   true  -
'   false -
'See Also:
'Example:
' dim variable as Boolean
' variable = me.GetFromBuffer(...параметры...) 
Public Function GetFromBuffer(u As Object) As Boolean
      On Error GoTo bye
      Dim xdom As MSXML2.DOMDocument
      Set xdom = New MSXML2.DOMDocument
      GetFromBuffer = False
      If u.Application.Manager.GetBuffer(u.PartName) &lt;&gt; &quot;&quot; Then
        xdom.loadXML u.Application.Manager.GetBuffer(u.PartName)
        u.XMLLoad xdom.lastChild, 2
        U.BatchUpdate
        GetFromBuffer = True
      Else
        MsgBox &quot;Буфер данных для этого раздела пуст&quot;, vbInformation
      End If
    Exit Function
bye:
    MsgBox Err.Description, vbCritical
End Function

"><AttributeHolder Name="Type" Value="code"/><FormData Name=""/></BlockHolder></ModuleHolder></root>
